{"version":3,"sources":["../node_modules/component-emitter/index.js","../node_modules/engine.io-parser/lib/browser.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/socket.io-client/node_modules/debug/src/browser.js","../node_modules/parseqs/index.js","../node_modules/component-inherit/index.js","../node_modules/engine.io-client/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/index.js","../node_modules/buffer/index.js","../node_modules/engine.io-client/lib/xmlhttprequest.js","../node_modules/engine.io-client/lib/transport.js","../node_modules/parseuri/index.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/socket.io-parser/node_modules/isarray/index.js","../node_modules/socket.io-parser/is-buffer.js","../node_modules/socket.io-client/lib/manager.js","../node_modules/engine.io-client/lib/transports/index.js","../node_modules/engine.io-client/lib/transports/polling.js","../node_modules/has-binary2/index.js","../node_modules/yeast/index.js","../node_modules/indexof/index.js","../node_modules/socket.io-client/lib/socket.js","../node_modules/socket.io-client/lib/on.js","../node_modules/component-bind/index.js","../node_modules/peerjs/dist/peerjs.min.js","../node_modules/paper/dist/paper-core.js","../node_modules/socket.io-client/lib/index.js","../node_modules/socket.io-client/lib/url.js","../node_modules/socket.io-client/node_modules/debug/src/common.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/socket.io-client/node_modules/ms/index.js","../node_modules/socket.io-parser/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/node_modules/debug/src/debug.js","../node_modules/ms/index.js","../node_modules/socket.io-parser/binary.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/engine.io-client/lib/index.js","../node_modules/engine.io-client/lib/socket.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/lib/transports/polling-xhr.js","../node_modules/engine.io-parser/lib/keys.js","../node_modules/has-binary2/node_modules/isarray/index.js","../node_modules/arraybuffer.slice/index.js","../node_modules/after/index.js","../node_modules/engine.io-parser/lib/utf8.js","../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../node_modules/blob/index.js","../node_modules/engine.io-client/node_modules/debug/src/common.js","../node_modules/engine.io-client/node_modules/ms/index.js","../node_modules/engine.io-client/lib/transports/polling-jsonp.js","../node_modules/engine.io-client/lib/transports/websocket.js","../node_modules/to-array/index.js","../node_modules/backo2/index.js"],"names":["Emitter","obj","key","prototype","mixin","module","exports","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","slice","call","len","listeners","hasListeners","base64encoder","keys","__webpack_require__","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","navigator","test","userAgent","isPhantomJS","dontSendBlobs","protocol","packets","open","close","ping","pong","message","upgrade","noop","packetslist","err","type","data","Blob","map","ary","each","done","result","Array","next","eachWithIndex","el","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","e","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","n","l","chr","encodedPackets","totalLength","reduce","acc","p","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","parseInt","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","total","_defineProperty","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","d","__webpack_exports__","_toConsumableArray","arr","isArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","TypeError","_nonIterableSpread","process","log","_console","console","formatArgs","useColors","namespace","humanize","diff","c","color","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","load","r","getItem","NODE_ENV","PUBLIC_URL","DEBUG","window","__nwjs","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","RegExp","$1","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","str","hasOwnProperty","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","a","b","constructor","debug","binary","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","id","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","Error","parse","tryParse","isPayloadValid","decodeString","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","global","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","array","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","isBuffer","checked","copy","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","hasCORS","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","self","parser","Transport","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","withCredentials","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","isReactNative","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","send","onOpen","onData","onPacket","re","parts","exec","uri","host","authority","ipv6uri","arrayWithoutHoles","iterableToArray","nonIterableSpread","withNativeBuffer","withNativeArrayBuffer","eio","Socket","bind","Backoff","has","Manager","nsps","subs","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","jitter","timeout","connecting","lastPing","packetBuffer","_parser","encoder","decoder","autoConnect","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","connect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","options","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","location","isSSL","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","name","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","withNativeBlob","withNativeFile","File","prev","alphabet","seed","num","now","decoded","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","ev","compress","pop","onpacket","sameNamespace","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","parcelRequire","t","o","f","resolve","cache","Module","isParcelRequire","bundle","modules","parent","register","EgBh","require","useBlobBuilder","useArrayBufferView","binaryFeatures","BlobBuilder","_pieces","_parts","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","flush","getBuffer","u","getBlob","BufferBuilder","kdPp","unpack","dataBuffer","dataView","bufferBuilder","unpack_uint8","unpack_raw","unpack_string","unpack_array","unpack_map","unpack_float","unpack_double","unpack_uint16","unpack_uint32","unpack_uint64","unpack_int8","unpack_int16","unpack_int32","unpack_int64","pack_string","pack_integer","pack_double","pack_array","pack_bin","startsWith","pack_object","toBinaryPack","pack_uint8","pack_uint16","pack_uint32","pack_int8","pack_int16","pack_int32","pack_int64","pack_uint64","LN2","./bufferbuilder","iSxC","extractVersion","wrapPeerConnectionEvent","RTCPeerConnection","_eventMap","get","disableLog","disableWarnings","deprecated","warn","detectBrowser","browser","version","mozGetUserMedia","webkitGetUserMedia","isSecureContext","webkitRTCPeerConnection","RTCIceGatherer","mediaDevices","supportsUnifiedPlan","RTCRtpTransceiver","compactObject","s","assign","walkStats","filterStats","Map","trackIdentifier","trackId","endsWith","s6SN","shimGetUserMedia","mandatory","optional","ideal","exact","toUpperCase","advanced","audio","video","facingMode","getSupportedConstraints","enumerateDevices","then","kind","find","some","label","deviceId","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","constraint","constraintName","getUserMedia","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","Promise","reject","__esModule","default","WeakMap","../utils.js","VHa8","shimGetDisplayMedia","getDisplayMedia","width","height","frameRate","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","uI5X","shimMediaStream","MediaStream","webkitMediaStream","shimOnTrack","transceiver","receiver","_ontrack","setRemoteDescription","_ontrackpoly","stream","getReceivers","track","Event","streams","dispatchEvent","shimGetSendersWithDtmf","_t","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","addTrack","removeTrack","addStream","removeStream","RTCRtpSender","shimGetStats","getStats","_arguments","timestamp","localcandidate","remotecandidate","names","stat","shimSenderReceiverGetStats","RTCRtpReceiver","srcElement","MediaStreamTrack","shimAddTrackRemoveTrackWithNative","shimAddTrackRemoveTrack","getLocalStreams","_reverseStreams","_streams","signalingState","setLocalDescription","sdp","RTCSessionDescription","shimPeerConnection","RTCIceCandidate","addIceCandidate","candidate","fixNegotiationNeeded","_shimmedLocalStreams","./getusermedia","./getdisplaymedia","NZ1C","filterIceServers","urls","url","../utils","YHvh","generateIdentifier","random","localCName","splitLines","splitSections","getDescription","getMediaSections","matchPrefix","parseCandidate","foundation","component","priority","ip","address","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","parseIceOptions","parseRtpMap","payloadType","clockRate","channels","numChannels","writeRtpMap","preferredPayloadType","parseExtmap","direction","writeExtmap","preferredId","parseFmtp","writeFmtp","parameters","parseRtcpFb","parameter","writeRtcpFb","rtcpFeedback","parseSsrcMedia","ssrc","attribute","parseSsrcGroup","semantics","ssrcs","getMid","parseFingerprint","algorithm","getDtlsParameters","role","fingerprints","writeDtlsParameters","getIceParameters","password","writeIceParameters","parseRtpParameters","codecs","headerExtensions","fecMechanisms","rtcp","writeRtpDescription","maxptime","parseRtpEncodingParameters","apt","codecPayloadType","rtx","fec","mechanism","maxBitrate","parseRtcpParameters","cname","reducedSize","compound","mux","parseMsid","parseSctpDescription","parseMLine","fmt","maxMessageSize","writeSctpDescription","generateSessionId","writeSessionBoilerplate","writeMediaSection","iceGatherer","getLocalParameters","dtlsTransport","mid","rtpSender","rtpReceiver","sendEncodingParameters","getDirection","getKind","isRejected","parseOLine","username","sessionId","sessionVersion","netType","addressType","isValidSDP","NJ2u","_initialTrackId","_a","offer","answer","getRemoteCandidates","addRemoteCandidate","NotSupportedError","InvalidAccessError","OperationError","MediaStreamTrackEvent","_dispatchEvent","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","iceServers","_iceGatherers","iceCandidatePoolSize","gatherPolicy","_config","transceivers","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","getConfiguration","getRemoteStreams","_createTransceiver","iceTransport","localCapabilities","remoteCapabilities","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","clone","enabled","_createIceGatherer","bufferedCandidateEvents","bufferCandidates","state","_gather","onlocalcandidate","sdpMid","sdpMLineIndex","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","_disposeIceAndDtlsTransports","_transceive","encodings","rtcpParameters","receive","rejected","h","_updateSignalingState","g","S","T","E","C","P","w","R","_","k","D","I","L","M","O","G","setTransport","setRemoteCandidates","getCapabilities","N","A","new","closed","checking","completed","failed","createOffer","offerToReceiveAudio","offerToReceiveVideo","getLocalCandidates","createAnswer","all","inboundrtp","outboundrtp","candidatepair","YdKx","catch","P3bV","XRic","RTCDtmfSender","RTCDTMFSender","shimReplaceTrack","replaceTrack","setTrack","./filtericeservers","rtcpeerconnection-shim","GzSv","getSettings","applyConstraints","UuGU","mediaSource","Fzdr","RTCTrackEvent","mozRTCPeerConnection","_arguments2","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","addTransceiver","setParametersPromises","sendEncodings","rid","parseFloat","scaleResolutionDownBy","maxFramerate","sender","getParameters","setParameters","shimCreateOffer","finally","shimCreateAnswer","t1lL","shimLocalStreamsAPI","_localStreams","shimRemoteStreamsAPI","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","shimConstraints","shimRTCIceServerUrls","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","getTransceivers","setDirection","GOQK","shimRTCIceCandidate","shimMaxMessageSize","_sctp","_this$getConfiguratio","sdpSemantics","POSITIVE_INFINITY","shimSendThrowTypeError","createDataChannel","channel","sctp","shimConnectionState","_onconnectionstatechange","_connectionstatechangepoly","_lastConnectionState","removeAllowExtmapMixed","./utils","KtlG","adapterFactory","shimChrome","shimFirefox","shimEdge","shimSafari","browserDetails","commonShim","browserShim","./chrome/chrome_shim","./edge/edge_shim","./firefox/firefox_shim","./safari/safari_shim","./common_shim","tI1X","./adapter_factory.js","sXtV","__importDefault","webRTCAdapter","webrtc-adapter","I31f","Supports","isIOS","platform","supportedBrowsers","minFirefoxVersion","minChromeVersion","minSafariVersion","isWebRTCSupported","isBrowserSupported","getBrowser","getVersion","isUnifiedPlanSupported","./adapter","BHXf","__importStar","credential","util","CLOUD_HOST","CLOUD_PORT","chunkedBrowsers","Chrome","chrome","chunkedMTU","defaultConfig","browserVersion","supports","webRTC","audioVideo","binaryBlob","reliable","ordered","_dataCount","validateId","chunk","ceil","__peerData","blobToArrayBuffer","binaryStringToArrayBuffer","randomToken","isSecure","peerjs-js-binarypack","./supports","JJlS","context","_events","_eventsCount","create","eventNames","listenerCount","addListener","prefixed","EventEmitter","WOs9","__read","return","__spread","Disabled","Errors","Warnings","All","LogLevel","_logLevel","_print","setLogFunction","ZRYf","Open","Stream","Data","Close","IceStateChanged","ConnectionEventType","Media","ConnectionType","Connection","Call","Disconnected","PeerEventType","BrowserIncompatible","InvalidID","InvalidKey","Network","PeerUnavailable","SslUnavailable","ServerError","SocketError","SocketClosed","UnavailableID","WebRTC","PeerErrorType","Binary","BinaryUTF8","SerializationType","Message","SocketEventType","Heartbeat","Candidate","Offer","Answer","IdTaken","Leave","Expire","ServerMessageType","wJlv","__extends","_e","setPrototypeOf","__values","pingInterval","_disconnected","_messagesQueue","_baseUrl","_id","_socket","WebSocket","onmessage","_cleanup","_sendQueuedMessages","_scheduleHeartbeat","_wsPingTimer","_sendHeartbeat","_wsOpen","eventemitter3","./logger","./enums","HCdX","__assign","__awaiter","throw","__generator","trys","ops","connection","startConnection","_startPeerConnection","peerConnection","_stream","_addTracksToConnection","originator","initialize","_makeOffer","handleSDP","provider","config","_setupListeners","peer","connectionId","getConnection","_addStreamToMediaConnection","dataChannel","constraints","sdpTransform","metadata","serialization","emitError","_makeAnswer","handleCandidate","Negotiator","./util","tQFK","_t2","_open","BaseConnection","dbHP","_e2","_localStream","ID_PREFIX","_negotiator","_remoteStream","handleMessage","_payload","_getMessages","_removeConnection","MediaConnection","./negotiator","./baseconnection","GGp6","_e3","fileReader","_queue","_processing","doNextTask","queue","enque","processing","abort","EncodingQueue","GBTQ","_e4","_buffer","_bufferSize","_buffering","_chunkedData","_encodingQueue","_bufferedSend","_dc","_configureDataChannel","_handleDataMessage","_handleChunk","count","_sendChunks","_trySend","bufferedAmount","MAX_BUFFERED_AMOUNT","_tryBuffer","DataConnection","./encodingQueue","in7L","_options","_buildUrl","getTime","retrieveId","fetch","status","text","listAllPeers","API","Hxpd","_e5","_lastServerId","_destroyed","_connections","_lostMessages","DEFAULT_KEY","token","logFunction","logLevel","_api","_createServerConnection","_delayedAbort","_initialize","_abort","_handleMessage","_cleanupPeer","delete","_addConnection","_storeMessage","destroyed","_e6","Peer","./socket","./mediaconnection","./dataconnection","./api","iTK6","peerjs","./peer","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","Base","hidden","_slice","describe","define","_each","_inject","dest","beans","preserve","beansNames","field","bean","isFunc","base","isPlainObject","part","inject","statics","extend","ctor","proto","pick","begin","_class","_name","Formatter","instance","number","getClassName","importJSON","exportJSON","serialize","props","exclude","_prioritize","obj1","obj2","amount","peek","__index","readIndex","_readIndex","readNull","filtered","__filtered","remain","readList","entry","readNamed","getNamed","hasValue","getSource","__unfiltered","readSupported","__source","hasNamed","prioritize","processed","handleKey","isPlainValue","asString","compact","dictionary","isRoot","formatter","precision","definitions","references","item","ref","_serialize","_compactSerialize","deserialize","_data","_setDictionary","_isRoot","isFirst","hasDictionary","isDictionary","useTarget","Item","Layer","insert","items","itemsLength","startLength","remove","_index","removed","capitalize","camelize","hyphenate","func","_eventTypes","handlers","install","uninstall","handler","setTarget","currentTarget","responds","attach","detach","fire","_installEvents","PaperScope","paper","settings","applyMatrix","insertItems","handleSize","hitTolerance","project","projects","tools","_scopes","support","ctx","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","user","os","v1","v2","rv","versionNumber","trident","jsdom","webkit","atom","getView","_view","getPaper","execute","scope","setup","element","Project","createCanvas","getCanvas","activate","clear","handleAttribute","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","CollisionDetection","findItemBoundsCollisions","items1","items2","tolerance","getBounds","bounds","rect","left","top","right","bottom","bounds1","bounds2","findBoundsCollisions","findCurveBoundsCollisions","curves1","curves2","bothAxis","curves","hor","ver","boundsA","boundsB","sweepVertical","onlySweepAxisCollisions","allBounds","lengthA","lengthAll","binarySearch","indices","coord","pri0","pri1","sec0","sec1","allIndicesByPri0","sort","i1","i2","activeIndicesByPri1","allCollisions","curIndex","curBounds","origIndex","isCurrentA","isCurrentB","curCollisions","pruneCount","activeIndex","curSec1","curSec0","activeBounds","isActiveA","isActiveB","collisions","multiplier","round","val1","val2","separator","point","rectangle","Numerical","abscissas","weights","abs","sqrt","log2","LOG2E","clamp","getDiscriminant","ad","bd","cd","q","getNormalizationFactor","norm","EPSILON","MACHINE_EPSILON","CURVETIME_EPSILON","GEOMETRIC_EPSILON","TRIGONOMETRIC_EPSILON","KAPPA","isZero","isMachineZero","integrate","B","sum","Ax","findRoot","df","fx","dx","nx","solveQuadratic","roots","x1","x2","Q","boundless","minB","maxB","solveCubic","b1","c2","qd","evaluate","x0","tmp","td","rd","UID","_pools","pool","Point","arg0","arg1","reading","hasY","_set","setAngle","angle","getLength","setLength","_angle","cos","sin","scale","getAngle","getAngleInRadians","PI","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","div","NaN","dot","acos","atan2","getQuadrant","getDirectedAngle","cross","getDistance","normalize","current","rotate","center","subtract","transform","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","_Rectangle","contains","isClose","isCollinear","isColinear","isOrthogonal","_isNaN","isInQuadrant","point1","point2","y1","y2","op","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","isSelected","_selection","_getSelection","setSelected","selected","_changeSelection","Size","hasHeight","_isNaN2","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","to","frm","rt","getPoint","_dontLink","setPoint","getSize","_fw","_fh","setSize","sx","_sx","sy","_sy","getLeft","setLeft","getTop","setTop","getRight","setRight","getBottom","setBottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","epsilon","intersect","unite","include","expand","xFirst","LinkedRectangle","internal","Matrix","ok","_b","_c","_d","_tx","_ty","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","a1","c1","d1","a2","b2","d2","tx2","ty2","prepend","tx1","ty1","appended","prepended","invert","det","inverted","concatenate","preConcatenate","chain","_shiftless","_orNullIfIdentity","isInvertible","isSingular","_transformCoordinates","_transformCorners","coords","_transformBounds","inverseTransform","_inverseTransform","decompose","degrees","asin","translation","getTranslation","rotation","scaling","skewing","getScaling","getRotation","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","line","isInfinite","getSide","getSignedDistance","p1x","p1y","v1x","v1y","p2x","p2y","v2x","v2y","dy","u1","u2","px","py","vx","vy","ccw","_children","_namedChildren","_activeLayer","_currentStyle","Style","View","_selectionItems","_selectionCount","_updateVersion","_needsUpdate","_requested","_autoUpdate","requestUpdate","changes","_changes","changesById","_changesById","children","getCurrentStyle","setCurrentStyle","getIndex","getOptions","getLayers","getActiveLayer","getSymbolDefinitions","getItems","class","SymbolItem","definition","_definition","getSymbols","getSelectedItems","selectionItems","selection","isInserted","_updateSelection","selectAll","setFullySelected","deselectAll","addLayer","layer","insertLayer","_remove","_setProject","setName","_insertItem","_created","NO_INSERT","insertChild","_getItems","removeOn","sets","_removeSets","mousedrag","other","draw","pixelRatio","param","viewMatrix","matrices","updateMatrix","restore","strokeWidth","_drawSelection","_serializeFields","_canApplyMatrix","_canScaleStroke","_pivot","_visible","_blendMode","_opacity","_locked","_guide","_clipMask","_selectBounds","_selectChildren","pivot","visible","blendMode","opacity","locked","guide","clipMask","_countItemEvent","onFrame","_animateItem","onLoad","_itemHandlers","hasProps","_matrix","_parent","_style","fields","fontSize","Group","_defaults","symbol","_symbol","cacheParent","_project","_bounds","_position","_decomposed","_globalMatrix","_clearBoundsCache","getId","getName","_removeNamed","_getOwner","namedChildren","getStyle","setStyle","getSelection","setSelection","flag","isFullySelected","isClipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","position","_getPositionFromBounds","setPosition","getPivot","setPivot","getStrokeBounds","stroke","getHandleBounds","handle","getInternalBounds","hasMatrix","_boundsOptions","getStrokeScaling","cacheItem","_getCachedBounds","setBounds","_backup","_getBounds","_updateBoundsCache","_getBoundsCacheKey","noInternal","cacheKey","cached","nonscaling","hasStroke","_getStrokeMatrix","_item","getViewMatrix","_boundsCache","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","parents","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","setParent","addChild","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","deep","copyAttributes","copyContent","insertAbove","orig","excludeMatrix","rasterize","resolution","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","raster","Raster","canvas","setCanvas","_contains","_asPathItem","Path","Rectangle","getIntersections","hitTest","_hitTest","HitResult","hitTestAll","hitTestChildren","_exclude","child","_hitTestChildren","parentViewMatrix","guides","tolerancePadding","_tolerancePadding","_getStrokePadding","checkSelf","hit","checkPoint","pt","checkPosition","checkCenter","checkBounds","points","_hitTestSelf","hasFill","matches","matchObject","firstOnly","overlapping","inside","recursive","childMatrix","insertChildren","inserted","notifySelf","_insertAt","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","addTo","copyTo","namedArray","notifyParent","_dispose","replaceWith","reverseChildren","reverse","numChildren","isEditable","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","transformMatrix","fillColor","getFillColor","strokeColor","getStrokeColor","_transformContent","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","fillStyle","toCanvasStyle","strokeStyle","lineWidth","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","blur","getShadowBlur","getShadowOffset","shadowColor","getShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","mainCtx","itemOffset","prevOffset","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","strokeMatrix","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","getFillRule","_isUpdated","updateVersion","CompoundPath","updated","itemSelected","boundsSelected","positionSelected","_drawSelected","getSelectedColor","half","beginPath","arc","deltas","delta","moveTo","lineTo","closePath","fillRect","hash","tween","easing","Tween","_handleFrame","time","running","tweenTo","tweenFrom","_clipItem","_getClipItem","isClipped","setClipped","clipped","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","toShape","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","bezierCurveTo","getCornerCenter","halfSize","corner","quadrant","isOnEllipseStroke","padding","vector","hitStroke","hitFill","strokeRadius","strokePadding","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","_smoothing","image","getElementById","getContent","naturalHeight","setImage","setSource","_loaded","_image","_canvas","_setImage","copyCanvas","drawImage","_crossOrigin","getElement","getLoaded","getPpi","getImage","DomEvent","complete","naturalWidth","_context","_change","setContext","toDataURL","Image","getCrossOrigin","setCrossOrigin","getSmoothing","setSmoothing","smoothing","getSubCanvas","getSubRaster","getAverageColor","PathItem","_sampleContext","clearRect","sampleSize","pixels","getImageData","alpha","Color","getPixel","setPixel","components","_convert","_alpha","imageData","createImageData","putImageData","setImageData","DomElement","setPrefixed","setDefinition","SymbolDefinition","getDefinition","getSymbol","setSymbol","dontCenter","_dontCenter","place","values","segments","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","_point","hasHandles","_handleIn","_handleOut","_path","curve","_curves","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","isSmooth","clearHandles","oldSelection","getPath","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","getNext","smooth","_first","_last","factor","getPrevious","p0","p1","p2","d1_a","d1_2a","d2_a","d2_2a","isLast","reversed","removeSegment","segment","interpolate","handleIn1","handleIn2","handleOut2","handleOut1","change","Curve","arg6","arg7","seg1","seg2","handle1","handle2","segment1","segment2","_segment2","getPoint1","getHandle1","getHandle2","getPoint2","_length","classify","setPoint1","setPoint2","setHandle1","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","divideAt","divideAtTime","getTimeAt","_setHandles","subdivide","setHandles","splitAt","splitAtTime","getLocationAtTime","isTime","straight","h1","h2","y0","x3","y3","x4","y4","x5","y5","x6","y6","x7","y7","x8","y8","x9","y9","getMonoCurves","o0","o1","o2","o3","isStraight","v0","v3","getTimeOf","p3","getNearestTime","minDist","minT","refine","dist","step","flip","isFlatEnough","flatness","ux","uy","_addBounds","minPad","maxPad","s1","s2","isLinear","third","hasLength","isHorizontal","getTangentAtTime","isVertical","getLocationAt","_isTime","getParameterAt","getTimesWithTangent","tangent","getOffsetAtTime","getLocationOf","getOffsetOf","loc","getOffset","getParameterOf","getNearestLocation","getNearestPoint","methods","_evaluateMethods","getLengthIntegrand","ax","bx","ay","by","getIterations","normalized","d3","t1","t2","hasRoots","t1Ok","t2Ok","f1","f2","ds","forward","rangeLength","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","getPeaks","addLocation","locations","overlap","excludeStart","excludeEnd","loc1","loc2","_intersection","clipConvexHull","hullTop","hullBottom","dMin","dMax","clipConvexHullPart","threshold","qx","qy","getCurveLineIntersections","getCurveIntersections","overlaps","getOverlaps","straight1","straight2","before","addCurveIntersections","recursion","calls","tMin","tMax","uMin","uMax","tMinClip","tMaxClip","q0x","q0y","q3x","q3y","dp0","dp1","dp2","dp3","hull","dq0","dq1","dq2","dq3","dist1","dist2","distRatio","getConvexHull","tMinNew","tMaxNew","uDiff","getSelfIntersection","info","getSquaredLineLength","straightBoth","l1","l2","matrix1","matrix2","_returnFirst","length1","length2","values1","values2","boundsCollisions","index1","curve1","collisions1","index2","curve2","den","times","t0","_overlap","_distance","_setCurve","_time","getPointAtTime","_next","_previous","_version","_curve","_segment","_setSegment","getSegment","trySegment","_offset","_curveOffset","getParameter","getCurveOffset","getIntersection","getLastSegment","_ignoreOther","isTouching","inter","isCrossing","t1Inside","t2Inside","c4","c3","offsets","addOffsets","isInRange","getPointAt","v4","a3","a4","hasOverlap","merge","search","path1","path2","expanded","pathData","first","isClockwise","setClockwise","clockwise","setPathData","previous","control","relative","getCoord","command","lower","move","cubicCurveTo","quadraticCurveTo","arcTo","winding","_getWinding","onPath","windingL","windingR","getCrossings","minLoc","isPath","itemsFrom","itemsTo","setClosed","paths1","paths2","matched","boundsOverlaps","findBoundsOverlaps","pathBoundsOverlaps","setSegments","_segmentSelection","_area","getSegments","fullySelected","last","_add","getFirstSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","addSegment","skipLine","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newSelection","last1","last2","first2","first1","simplify","flatten","PathFlattener","PathFitter","fit","_default","loop","asymmetric","paddingLeft","paddingRight","knots","n_1","rf","hx","hy","topCenter","seg3","seg4","isArc","pt1","pt2","shape","pos2","end2","pos1","end1","start2","cap","numSegments","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","isJoin","_addBevelJoin","_addSquareCap","getOffsetsWithTangent","curveStart","curveTimes","drawSegments","drawSegment","dashLength","flattener","drawPart","pX","pY","miniSize","miniHalf","drawHandle","hX","hY","drawHandles","getCurrentSegment","moveBy","curveTo","through","extent","middle","large","rxSq","rySq","xSq","ySq","throughSide","centerSide","inc","z","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","method","prevCoords","processSegment","joinBounds","addPoint","addRound","addJoin","addCap","phi","isArea","normal1","getNormalAtTime","normal2","normal","joinPadding","joinRadius","SQRT2","paddingX","paddingY","xn","xx","yn","yx","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tl","tr","getTopRight","br","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","paths","getCurrentPath","check","operators","1","2","-1","getPaths","preparePath","resolveCrossings","reorient","createResult","filterIntersection","traceBoolean","operation","trace","splitBoolean","_path1","_path2","operator","crossings","divideLocations","collectPaths","_overlapsOnly","curvesValues","curveCollisions","curveCollisionsMap","propagateWinding","_winding","tracePaths","reorientPaths","added","addPath","linkIntersections","clearCurveHandles","lookup","container","sorted","entry1","containerWinding","getInteriorPoint","entry2","clearLater","renormalizeLocs","prevCurve","prevTime","clearCurves","clearLookup","origTime","newCurve","getWinding","dontFlip","vPrev","vClose","curvesList","ia","pv","pa","po","qualityEpsilon","paL","paR","pathWindingL","pathWindingR","onAnyPath","quality","addWinding","a0","windingPrev","a3Prev","handleCurve","monoCurves","curveLength","operand","SQRT1_2","wind","pathWinding","starts","isValid","_visited","isStart","visitPath","getCrossingSegments","collectStarts","collect","nextInter","_prev","inter1","inter2","over1","over2","branch","visited","valid","finished","branches","hasOverlaps","hasCrossings","intersections","nonZero","intercepts","mv","mo0","mo3","maxRecursion","ignoreStraight","minSpan","addCurve","computeParts","halves","tMid","_get","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","tanCenter","X","b0","b3","alpha1","alpha2","detC0C1","detC0X","c0","segLength","eps","degree","maxDist","TextItem","content","_content","_lines","setContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","font","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","colorCtx","gray","rgb","hsb","hsl","gradient","componentParsers","namedColors","transparent","hsbIndices","converters","rgb-hsb","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","t3","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","_components","Gradient","_removeOwner","_addOwner","_properties","argType","converted","isHSL","unit","turn","grad","fromCSS","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","canvasGradient","_stops","origin","destination","highlight","inverse","_radial","createRadialGradient","createLinearGradient","addColorStop","_color","_types","_setOwner","components1","components2","setStops","setRadial","_owners","getStops","GradientStop","getRadial","stops1","stops2","rampPoint","setColor","setOffset","getRampPoint","setRampPoint","getColor","itemDefaults","fillRule","strokeScaling","shadowOffset","selectedColor","groupDefaults","fontFamily","fontWeight","textDefaults","_values","isColor","isPoint","applyToChildren","old","_dontMerge","childValue","Font","WindingRule","isStyle","style1","style2","secondary","defaults2","value1","value2","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","passive","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","getRelatedTarget","relatedTarget","toElement","requestAnimationFrame","nativeRequest","requested","handleCallbacks","functions","setInterval","getCanvasSize","setAttribute","_viewEvents","userDrag","userSelect","touchCallout","contentZooming","tapHighlightColor","_windowEvents","resize","setViewSize","Stats","_stats","stats","domElement","appendChild","_element","_pixelRatio","devicePixelRatio","_setElementSize","_viewSize","_views","_viewsById","_focused","_frameItems","_frameItemCount","_itemEvents","native","virtual","node","_animate","play","_count","getAutoUpdate","setAutoUpdate","autoUpdate","update","animate","_handleFrameItems","getPixelRatio","getViewSize","isVisible","parentNode","temp","createElement","removeChild","getZoom","setZoom","zoom","scrollBy","projectToView","viewToProject","getEventPoint","CanvasView","prevFocus","tempFocus","mousedown","mousemove","mouseup","dragging","mouseDown","pointerEnabled","msPointerEnabled","viewEvents","docEvents","mouseout","nodeName","handleMouseMove","scroll","updateFocus","_handleMouseEvent","downPoint","lastPoint","downItem","overItem","dragItem","clickItem","clickTime","dblClick","called","prevented","fallbacks","doubleclick","wasInView","itemEventsMap","click","mouseenter","mouseleave","itemEvents","hitItems","nativeMove","tool","inView","hitItem","mouse","emitMouseEvent","drag","emitMouseEvents","down","up","cancelable","preventDefault","_handleKeyEvent","character","keyEvent","KeyEvent","sign","_resetState","prevPoint","stopItem","mouseEvent","stopped","MouseEvent","fallback","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","prevFont","measureText","stopPropagation","getTimeStamp","timeStamp","getModifiers","Key","modifiers","metaFixMap","downKey","keyLookup","\t"," ","\b","","Spacebar","Del","Win","Esc","charLookup","tab","space","enter","keyMap","charMap","alt","meta","capsLock","option","mac","getKey","keyIdentifier","keyCode","keydown","altKey","metaKey","ctrlKey","keypress","charCode","keyup","isDown","ToolEvent","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","setCount","_moveCount","_downCount","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","maxDistance","getFixedDistance","setFixedDistance","distance","easings","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","isFunction","_then","_startTime","_keys","_parsedKeys","_parseKeys","_from","_getState","_to","progress","getValue","__add","__subtract","__multiply","_setProperty","onUpdate","startTime","_getProperty","resolved","_resolveValue","_calculate","PaperScript","calculateBinary","Http","request","xhr","async","mimeType","overrideMimeType","responseText","canvases","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","average","negation","mode","srcContext","dstContext","srcCanvas","dstData","SvgElement","svg","xmlns","xlink","attributeNamespace","href","xmlns:xlink","attributes","setAttributeNS","tag","createElementNS","getAttributeNS","SvgStyles","true","false","property","toSVG","fromSVG","exportFilter","getTransform","coordinates","attrs","trans","exportGroup","childNode","_exportSVG","clip-path","exportShape","exporters","embedImages","matchShapes","definitionItem","viewBox","overflow","textContent","applyStyle","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","exportGradient","visibility","svgs","__id","typeId","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","exportSVG","rootSize","allowNull","allowPercent","defaultValue","defaultX","defaultY","convertValue","importGroup","nodes","childNodes","isClip","isDefs","currentStyle","applyAttributes","querySelectorAll","importNode","importPoly","importGradient","scaleToBounds","_scaleToBounds","importers","#document","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","switch","applyTransform","transforms","applyOpacity","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-color","stop-opacity","percent","styles","group","tagName","isElement","nextSibling","importer","onImport","expandShapes","_importSVG","DOMParser","parseFromString","reader","readAsText","importSVG","PlacedSymbol","managers","forceNew","multiplex","parseuri","env","selectColor","createDebug","_len","_key","curr","ms","coerce","format","init","instances","delimiter","newDebug","toNamespace","regexp","stack","disable","skips","enable","plural","msAbs","isPlural","long","fmtLong","fmtShort","Function","local","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","product","upgrades","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","EIO","transport","requestTimeout","protocols","onDrain","probe","onTransportOpen","upgradeLosesBinary","upgrading","freezeTransport","onTransportClose","onupgrade","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","Request","req","sendXhr","pollXhr","setDisableHeaderCheck","setRequestHeader","hasXDR","onreadystatechange","contentType","getResponseHeader","requestsCount","requests","onSuccess","fromError","response","attachEvent","unloadHandler","terminationEvent","arraybuffer","abv","ii","err_cb","bail","proxy","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","counter","checkScalarValue","createByte","encodeCodePoint","readContinuationByte","continuationByte","decodeSymbol","byte1","byteString","ucs2encode","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","mapArrayBufferViews","BlobBuilderConstructor","BlobConstructor","JSONPPolling","rNewline","rEscapedNewline","glob","___eio","script","form","iframe","insertAt","getElementsByTagName","head","iframeId","className","initIframe","action","submit","BrowserWebSocket","NodeWebSocket","MozWebSocket","WebSocketImpl","WS","usingBrowserWebSocket","headers","ws","addEventListeners","rand","deviation"],"mappings":"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","file":"static/js/5.af995db1.chunk.js","sourcesContent":["/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/**\n * Module dependencies.\n */\nvar keys = require('./keys');\n\nvar hasBinary = require('has-binary2');\n\nvar sliceBuffer = require('arraybuffer.slice');\n\nvar after = require('after');\n\nvar utf8 = require('./utf8');\n\nvar base64encoder;\n\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\n\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\n\nvar dontSendBlobs = isAndroid || isPhantomJS;\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n  open: 0 // non-ws\n  ,\n  close: 1 // non-ws\n  ,\n  ping: 2,\n  pong: 3,\n  message: 4,\n  upgrade: 5,\n  noop: 6\n};\nvar packetslist = keys(packets);\n/**\n * Premade error packet.\n */\n\nvar err = {\n  type: 'error',\n  data: 'parser error'\n};\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  } // might be an object with { base64: true, data: dataAsBase64String }\n\n\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  } // Sending data as a utf-8 string\n\n\n  var encoded = packets[packet.type]; // data fragment is optional\n\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), {\n      strict: false\n    }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n/**\n * Encode packet helpers for binary types\n */\n\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n  resultBuffer[0] = packets[packet.type];\n\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i + 1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    exports.encodePacket({\n      type: packet.type,\n      data: fr.result\n    }, supportsBinary, true, callback);\n  };\n\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n  return callback(blob);\n}\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\n\nexports.encodeBase64Packet = function (packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n\n    fr.onload = function () {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n\n  message += btoa(b64data);\n  return callback(message);\n};\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  } // String data\n\n\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n\n      if (data === false) {\n        return err;\n      }\n    }\n\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return {\n        type: packetslist[type],\n        data: data.substring(1)\n      };\n    } else {\n      return {\n        type: packetslist[type]\n      };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n\n  return {\n    type: packetslist[type],\n    data: rest\n  };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, {\n      strict: false\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return data;\n}\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\n\nexports.decodeBase64Packet = function (msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n\n  if (!base64encoder) {\n    return {\n      type: type,\n      data: {\n        base64: true,\n        data: msg.substr(1)\n      }\n    };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return {\n    type: type,\n    data: data\n  };\n};\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function (message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(results.join(''));\n  });\n};\n/**\n * Async array map using after\n */\n\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function eachWithIndex(i, el, cb) {\n    each(el, function (error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '',\n      n,\n      msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || length != (n = Number(length))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    } // advance cursor\n\n\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n};\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\n\nexports.encodePayloadAsArrayBuffer = function (packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function (err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function (acc, p) {\n      var len;\n\n      if (typeof p === 'string') {\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n    var resultArray = new Uint8Array(totalLength);\n    var bufferIndex = 0;\n    encodedPackets.forEach(function (p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n\n      if (isString) {\n        var view = new Uint8Array(p.length);\n\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n\n        ab = view.buffer;\n      }\n\n      if (isString) {\n        // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else {\n        // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n\n      resultArray[bufferIndex++] = 255;\n      var view = new Uint8Array(ab);\n\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n    return callback(resultArray.buffer);\n  });\n};\n/**\n * Encode as Blob\n */\n\n\nexports.encodePayloadAsBlob = function (packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(new Blob(results));\n  });\n};\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1;; i++) {\n      if (tailArray[i] === 255) break; // 310 = char length of Number.MAX_VALUE\n\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function (buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return typeof console === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\n\n\nexports.decode = function (qs) {\n  var qry = {};\n  var pairs = qs.split('&');\n\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n\n  return qry;\n};","module.exports = function (a, b) {\n  var fn = function fn() {};\n\n  fn.prototype = b.prototype;\n  a.prototype = new fn();\n  a.prototype.constructor = a;\n};","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return typeof console === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};","/**\n * Module dependencies.\n */\nvar debug = require('debug')('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar binary = require('./binary');\n\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = 4;\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function (obj, callback) {\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\n\nfunction encodeAsString(obj) {\n  // first is type\n  var str = '' + obj.type; // attachments if we have them\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  } // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n\n\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  } // immediately followed by the id\n\n\n  if (null != obj.id) {\n    str += obj.id;\n  } // json data\n\n\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\n\nfunction encodeAsBinary(obj, callback) {\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n    buffers.unshift(pack); // add packet info to beginning of data list\n\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n/**\n * Mix in `Emitter` with Decoder.\n */\n\n\nEmitter(Decoder.prototype);\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function (obj) {\n  var packet;\n\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) {\n      // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow\n\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else {\n      // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) {\n    // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n\n      if (packet) {\n        // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\n\nfunction decodeString(str) {\n  var i = 0; // look up type\n\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  } // look up attachments if type binary\n\n\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n\n    p.attachments = Number(buf);\n  } // look up namespace (if any)\n\n\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  } // look up id\n\n\n  var next = str.charAt(i + 1);\n\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n\n    p.id = Number(p.id);\n  } // look up json data\n\n\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\n\nDecoder.prototype.destroy = function () {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\n\nBinaryReconstructor.prototype.takeBinaryData = function (binData) {\n  this.buffers.push(binData);\n\n  if (this.buffers.length === this.reconPack.attachments) {\n    // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n\n  return null;\n};\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\n\nBinaryReconstructor.prototype.finishedReconstruction = function () {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain; // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n  var xscheme = opts.xscheme; // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n\n  var enablesXDR = opts.enablesXDR; // XMLHttpRequest can be disabled on IE\n\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\n\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) {}\n  }\n};","/**\n * Module dependencies.\n */\nvar parser = require('engine.io-parser');\n\nvar Emitter = require('component-emitter');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Transport;\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport(opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode; // results of ReactNative environment detection\n\n  this.isReactNative = opts.isReactNative; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Transport.prototype);\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n/**\n * Opens the transport.\n *\n * @api public\n */\n\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n/**\n * Closes the transport.\n *\n * @api private\n */\n\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n/**\n * Called upon open\n *\n * @api private\n */\n\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n/**\n * Called with a decoded packet.\n */\n\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon close.\n *\n * @api private\n */\n\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nvar parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\nmodule.exports = function parseuri(str) {\n  var src = str,\n      b = str.indexOf('['),\n      e = str.indexOf(']');\n\n  if (b != -1 && e != -1) {\n    str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n  }\n\n  var m = re.exec(str || ''),\n      uri = {},\n      i = 14;\n\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n\n  if (b != -1 && e != -1) {\n    uri.source = src;\n    uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n    uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n    uri.ipv6uri = true;\n  }\n\n  return uri;\n};","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","module.exports = isBuf;\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function isView(obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n};\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\n\nfunction isBuf(obj) {\n  return withNativeBuffer && Buffer.isBuffer(obj) || withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj));\n}","/**\n * Module dependencies.\n */\nvar eio = require('engine.io-client');\n\nvar Socket = require('./socket');\n\nvar Emitter = require('component-emitter');\n\nvar parser = require('socket.io-parser');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:manager');\n\nvar indexOf = require('indexof');\n\nvar Backoff = require('backo2');\n/**\n * IE6+ hasOwnProperty\n */\n\n\nvar has = Object.prototype.hasOwnProperty;\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n\n  var _parser = opts.parser || parser;\n\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n};\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Manager.prototype);\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\n\nManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false; // emit `open`\n\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  }); // emit `connect_error`\n\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  }); // emit `connect_timeout`\n\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout); // set timer\n\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n  return this;\n};\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\n\nManager.prototype.onopen = function () {\n  debug('open'); // clear old subs\n\n  this.cleanup(); // mark as open\n\n  this.readyState = 'open';\n  this.emit('open'); // add new subs\n\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n/**\n * Called with data.\n *\n * @api private\n */\n\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n  this.close();\n};\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else {\n    // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n  var subsLength = this.subs.length;\n\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n  this.decoder.destroy();\n};\n/**\n * Close the current socket.\n *\n * @api private\n */\n\n\nManager.prototype.close = Manager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts); // check again for the case socket closed in above events\n\n      if (self.skipReconnect) return;\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};","/**\n * Module dependencies\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar XHR = require('./polling-xhr');\n\nvar JSONP = require('./polling-jsonp');\n\nvar websocket = require('./websocket');\n/**\n * Export transports.\n */\n\n\nexports.polling = polling;\nexports.websocket = websocket;\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parseqs = require('parseqs');\n\nvar parser = require('engine.io-parser');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:polling');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Polling;\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\n\nfunction Polling(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(Polling, Transport);\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n  this.readyState = 'pausing';\n\n  function pause() {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n\n  var callback = function callback(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    } // if its a close packet, we close the ongoing requests\n\n\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    } // otherwise bypass onData and handle the message\n\n\n    self.onPacket(packet);\n  }; // decode payload\n\n\n  parser.decodePayload(data, this.socket.binaryType, callback); // if an event did not trigger closing\n\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close() {\n    debug('writing close packet');\n    self.write([{\n      type: 'close'\n    }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  var callbackfn = function callbackfn() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = ''; // cache busting is forced\n\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // avoid port if default for schema\n\n  if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // prepend ? to query\n\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};","/* global Blob File */\n\n/*\n * Module requirements.\n */\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj) || typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n    return true;\n  } // see: https://github.com/Automattic/has-binary/pull/4\n\n\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n    length = 64,\n    map = {},\n    seed = 0,\n    i = 0,\n    prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\n\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\n\n\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\n\n\nfunction yeast() {\n  var now = encode(+new Date());\n  if (now !== prev) return seed = 0, prev = now;\n  return now + '.' + encode(seed++);\n} //\n// Map each character to its index.\n//\n\n\nfor (; i < length; i++) {\n  map[alphabet[i]] = i;\n} //\n// Expose the `yeast`, `encode` and `decode` functions.\n//\n\n\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;","var indexOf = [].indexOf;\n\nmodule.exports = function (arr, obj) {\n  if (indexOf) return arr.indexOf(obj);\n\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n\n  return -1;\n};","/**\n * Module dependencies.\n */\nvar parser = require('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar toArray = require('to-array');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:socket');\n\nvar parseqs = require('parseqs');\n\nvar hasBin = require('has-binary2');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Socket;\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n\n  if (this.io.autoConnect) this.open();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Socket.prototype);\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n  var io = this.io;\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n};\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\n\nSocket.prototype.open = Socket.prototype.connect = function () {\n  if (this.connected) return this;\n  this.subEvents();\n  this.io.open(); // ensure open\n\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress; // event ack callback\n\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting'); // write connect packet if necessary\n\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({\n        type: parser.CONNECT,\n        query: query\n      });\n    } else {\n      this.packet({\n        type: parser.CONNECT\n      });\n    }\n  }\n};\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n\n  this.sendBuffer = [];\n};\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.close = Socket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({\n      type: parser.DISCONNECT\n    });\n  } // remove socket from pool\n\n\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};","/**\n * Module exports.\n */\nmodule.exports = on;\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function destroy() {\n      obj.removeListener(ev, fn);\n    }\n  };\n}","/**\n * Slice reference.\n */\nvar slice = [].slice;\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function (obj, fn) {\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function () {\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  };\n};","parcelRequire = function (e, r, t, n) {\n  var i,\n      o = \"function\" == typeof parcelRequire && parcelRequire,\n      u = \"function\" == typeof require && require;\n\n  function f(t, n) {\n    if (!r[t]) {\n      if (!e[t]) {\n        var i = \"function\" == typeof parcelRequire && parcelRequire;\n        if (!n && i) return i(t, !0);\n        if (o) return o(t, !0);\n        if (u && \"string\" == typeof t) return u(t);\n        var c = new Error(\"Cannot find module '\" + t + \"'\");\n        throw c.code = \"MODULE_NOT_FOUND\", c;\n      }\n\n      p.resolve = function (r) {\n        return e[t][1][r] || r;\n      }, p.cache = {};\n      var l = r[t] = new f.Module(t);\n      e[t][0].call(l.exports, p, l, l.exports, this);\n    }\n\n    return r[t].exports;\n\n    function p(e) {\n      return f(p.resolve(e));\n    }\n  }\n\n  f.isParcelRequire = !0, f.Module = function (e) {\n    this.id = e, this.bundle = f, this.exports = {};\n  }, f.modules = e, f.cache = r, f.parent = o, f.register = function (r, t) {\n    e[r] = [function (e, r) {\n      r.exports = t;\n    }, {}];\n  };\n\n  for (var c = 0; c < t.length; c++) {\n    try {\n      f(t[c]);\n    } catch (e) {\n      i || (i = e);\n    }\n  }\n\n  if (t.length) {\n    var l = f(t[t.length - 1]);\n    \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = l : \"function\" == typeof define && define.amd ? define(function () {\n      return l;\n    }) : n && (this[n] = l);\n  }\n\n  if (parcelRequire = f, i) throw i;\n  return f;\n}({\n  \"EgBh\": [function (require, module, exports) {\n    var e = {};\n    e.useBlobBuilder = function () {\n      try {\n        return new Blob([]), !1;\n      } catch (e) {\n        return !0;\n      }\n    }(), e.useArrayBufferView = !e.useBlobBuilder && function () {\n      try {\n        return 0 === new Blob([new Uint8Array([])]).size;\n      } catch (e) {\n        return !0;\n      }\n    }(), module.exports.binaryFeatures = e;\n    var r = module.exports.BlobBuilder;\n\n    function t() {\n      this._pieces = [], this._parts = [];\n    }\n\n    \"undefined\" != typeof window && (r = module.exports.BlobBuilder = window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder), t.prototype.append = function (e) {\n      \"number\" == typeof e ? this._pieces.push(e) : (this.flush(), this._parts.push(e));\n    }, t.prototype.flush = function () {\n      if (this._pieces.length > 0) {\n        var r = new Uint8Array(this._pieces);\n        e.useArrayBufferView || (r = r.buffer), this._parts.push(r), this._pieces = [];\n      }\n    }, t.prototype.getBuffer = function () {\n      if (this.flush(), e.useBlobBuilder) {\n        for (var t = new r(), i = 0, u = this._parts.length; i < u; i++) {\n          t.append(this._parts[i]);\n        }\n\n        return t.getBlob();\n      }\n\n      return new Blob(this._parts);\n    }, module.exports.BufferBuilder = t;\n  }, {}],\n  \"kdPp\": [function (require, module, exports) {\n    var t = require(\"./bufferbuilder\").BufferBuilder,\n        e = require(\"./bufferbuilder\").binaryFeatures,\n        i = {\n      unpack: function unpack(t) {\n        return new r(t).unpack();\n      },\n      pack: function pack(t) {\n        var e = new n();\n        return e.pack(t), e.getBuffer();\n      }\n    };\n\n    function r(t) {\n      this.index = 0, this.dataBuffer = t, this.dataView = new Uint8Array(this.dataBuffer), this.length = this.dataBuffer.byteLength;\n    }\n\n    function n() {\n      this.bufferBuilder = new t();\n    }\n\n    function u(t) {\n      var e = t.charCodeAt(0);\n      return e <= 2047 ? \"00\" : e <= 65535 ? \"000\" : e <= 2097151 ? \"0000\" : e <= 67108863 ? \"00000\" : \"000000\";\n    }\n\n    function a(t) {\n      return t.length > 600 ? new Blob([t]).size : t.replace(/[^\\u0000-\\u007F]/g, u).length;\n    }\n\n    module.exports = i, r.prototype.unpack = function () {\n      var t,\n          e = this.unpack_uint8();\n      if (e < 128) return e;\n      if ((224 ^ e) < 32) return (224 ^ e) - 32;\n      if ((t = 160 ^ e) <= 15) return this.unpack_raw(t);\n      if ((t = 176 ^ e) <= 15) return this.unpack_string(t);\n      if ((t = 144 ^ e) <= 15) return this.unpack_array(t);\n      if ((t = 128 ^ e) <= 15) return this.unpack_map(t);\n\n      switch (e) {\n        case 192:\n          return null;\n\n        case 193:\n          return;\n\n        case 194:\n          return !1;\n\n        case 195:\n          return !0;\n\n        case 202:\n          return this.unpack_float();\n\n        case 203:\n          return this.unpack_double();\n\n        case 204:\n          return this.unpack_uint8();\n\n        case 205:\n          return this.unpack_uint16();\n\n        case 206:\n          return this.unpack_uint32();\n\n        case 207:\n          return this.unpack_uint64();\n\n        case 208:\n          return this.unpack_int8();\n\n        case 209:\n          return this.unpack_int16();\n\n        case 210:\n          return this.unpack_int32();\n\n        case 211:\n          return this.unpack_int64();\n\n        case 212:\n        case 213:\n        case 214:\n        case 215:\n          return;\n\n        case 216:\n          return t = this.unpack_uint16(), this.unpack_string(t);\n\n        case 217:\n          return t = this.unpack_uint32(), this.unpack_string(t);\n\n        case 218:\n          return t = this.unpack_uint16(), this.unpack_raw(t);\n\n        case 219:\n          return t = this.unpack_uint32(), this.unpack_raw(t);\n\n        case 220:\n          return t = this.unpack_uint16(), this.unpack_array(t);\n\n        case 221:\n          return t = this.unpack_uint32(), this.unpack_array(t);\n\n        case 222:\n          return t = this.unpack_uint16(), this.unpack_map(t);\n\n        case 223:\n          return t = this.unpack_uint32(), this.unpack_map(t);\n      }\n    }, r.prototype.unpack_uint8 = function () {\n      var t = 255 & this.dataView[this.index];\n      return this.index++, t;\n    }, r.prototype.unpack_uint16 = function () {\n      var t = this.read(2),\n          e = 256 * (255 & t[0]) + (255 & t[1]);\n      return this.index += 2, e;\n    }, r.prototype.unpack_uint32 = function () {\n      var t = this.read(4),\n          e = 256 * (256 * (256 * t[0] + t[1]) + t[2]) + t[3];\n      return this.index += 4, e;\n    }, r.prototype.unpack_uint64 = function () {\n      var t = this.read(8),\n          e = 256 * (256 * (256 * (256 * (256 * (256 * (256 * t[0] + t[1]) + t[2]) + t[3]) + t[4]) + t[5]) + t[6]) + t[7];\n      return this.index += 8, e;\n    }, r.prototype.unpack_int8 = function () {\n      var t = this.unpack_uint8();\n      return t < 128 ? t : t - 256;\n    }, r.prototype.unpack_int16 = function () {\n      var t = this.unpack_uint16();\n      return t < 32768 ? t : t - 65536;\n    }, r.prototype.unpack_int32 = function () {\n      var t = this.unpack_uint32();\n      return t < Math.pow(2, 31) ? t : t - Math.pow(2, 32);\n    }, r.prototype.unpack_int64 = function () {\n      var t = this.unpack_uint64();\n      return t < Math.pow(2, 63) ? t : t - Math.pow(2, 64);\n    }, r.prototype.unpack_raw = function (t) {\n      if (this.length < this.index + t) throw new Error(\"BinaryPackFailure: index is out of range \" + this.index + \" \" + t + \" \" + this.length);\n      var e = this.dataBuffer.slice(this.index, this.index + t);\n      return this.index += t, e;\n    }, r.prototype.unpack_string = function (t) {\n      for (var e, i, r = this.read(t), n = 0, u = \"\"; n < t;) {\n        (e = r[n]) < 128 ? (u += String.fromCharCode(e), n++) : (192 ^ e) < 32 ? (i = (192 ^ e) << 6 | 63 & r[n + 1], u += String.fromCharCode(i), n += 2) : (i = (15 & e) << 12 | (63 & r[n + 1]) << 6 | 63 & r[n + 2], u += String.fromCharCode(i), n += 3);\n      }\n\n      return this.index += t, u;\n    }, r.prototype.unpack_array = function (t) {\n      for (var e = new Array(t), i = 0; i < t; i++) {\n        e[i] = this.unpack();\n      }\n\n      return e;\n    }, r.prototype.unpack_map = function (t) {\n      for (var e = {}, i = 0; i < t; i++) {\n        var r = this.unpack(),\n            n = this.unpack();\n        e[r] = n;\n      }\n\n      return e;\n    }, r.prototype.unpack_float = function () {\n      var t = this.unpack_uint32(),\n          e = (t >> 23 & 255) - 127;\n      return (0 === t >> 31 ? 1 : -1) * (8388607 & t | 8388608) * Math.pow(2, e - 23);\n    }, r.prototype.unpack_double = function () {\n      var t = this.unpack_uint32(),\n          e = this.unpack_uint32(),\n          i = (t >> 20 & 2047) - 1023;\n      return (0 === t >> 31 ? 1 : -1) * ((1048575 & t | 1048576) * Math.pow(2, i - 20) + e * Math.pow(2, i - 52));\n    }, r.prototype.read = function (t) {\n      var e = this.index;\n      if (e + t <= this.length) return this.dataView.subarray(e, e + t);\n      throw new Error(\"BinaryPackFailure: read index out of range\");\n    }, n.prototype.getBuffer = function () {\n      return this.bufferBuilder.getBuffer();\n    }, n.prototype.pack = function (t) {\n      var i = typeof t;\n      if (\"string\" === i) this.pack_string(t);else if (\"number\" === i) Math.floor(t) === t ? this.pack_integer(t) : this.pack_double(t);else if (\"boolean\" === i) !0 === t ? this.bufferBuilder.append(195) : !1 === t && this.bufferBuilder.append(194);else if (\"undefined\" === i) this.bufferBuilder.append(192);else {\n        if (\"object\" !== i) throw new Error('Type \"' + i + '\" not yet supported');\n        if (null === t) this.bufferBuilder.append(192);else {\n          var r = t.constructor;\n          if (r == Array) this.pack_array(t);else if (r == Blob || r == File || t instanceof Blob || t instanceof File) this.pack_bin(t);else if (r == ArrayBuffer) e.useArrayBufferView ? this.pack_bin(new Uint8Array(t)) : this.pack_bin(t);else if (\"BYTES_PER_ELEMENT\" in t) e.useArrayBufferView ? this.pack_bin(new Uint8Array(t.buffer)) : this.pack_bin(t.buffer);else if (r == Object || r.toString().startsWith(\"class\")) this.pack_object(t);else if (r == Date) this.pack_string(t.toString());else {\n            if (\"function\" != typeof t.toBinaryPack) throw new Error('Type \"' + r.toString() + '\" not yet supported');\n            this.bufferBuilder.append(t.toBinaryPack());\n          }\n        }\n      }\n      this.bufferBuilder.flush();\n    }, n.prototype.pack_bin = function (t) {\n      var e = t.length || t.byteLength || t.size;\n      if (e <= 15) this.pack_uint8(160 + e);else if (e <= 65535) this.bufferBuilder.append(218), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(219), this.pack_uint32(e);\n      }\n      this.bufferBuilder.append(t);\n    }, n.prototype.pack_string = function (t) {\n      var e = a(t);\n      if (e <= 15) this.pack_uint8(176 + e);else if (e <= 65535) this.bufferBuilder.append(216), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(217), this.pack_uint32(e);\n      }\n      this.bufferBuilder.append(t);\n    }, n.prototype.pack_array = function (t) {\n      var e = t.length;\n      if (e <= 15) this.pack_uint8(144 + e);else if (e <= 65535) this.bufferBuilder.append(220), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(221), this.pack_uint32(e);\n      }\n\n      for (var i = 0; i < e; i++) {\n        this.pack(t[i]);\n      }\n    }, n.prototype.pack_integer = function (t) {\n      if (t >= -32 && t <= 127) this.bufferBuilder.append(255 & t);else if (t >= 0 && t <= 255) this.bufferBuilder.append(204), this.pack_uint8(t);else if (t >= -128 && t <= 127) this.bufferBuilder.append(208), this.pack_int8(t);else if (t >= 0 && t <= 65535) this.bufferBuilder.append(205), this.pack_uint16(t);else if (t >= -32768 && t <= 32767) this.bufferBuilder.append(209), this.pack_int16(t);else if (t >= 0 && t <= 4294967295) this.bufferBuilder.append(206), this.pack_uint32(t);else if (t >= -2147483648 && t <= 2147483647) this.bufferBuilder.append(210), this.pack_int32(t);else if (t >= -0x8000000000000000 && t <= 0x8000000000000000) this.bufferBuilder.append(211), this.pack_int64(t);else {\n        if (!(t >= 0 && t <= 0x10000000000000000)) throw new Error(\"Invalid integer\");\n        this.bufferBuilder.append(207), this.pack_uint64(t);\n      }\n    }, n.prototype.pack_double = function (t) {\n      var e = 0;\n      t < 0 && (e = 1, t = -t);\n      var i = Math.floor(Math.log(t) / Math.LN2),\n          r = t / Math.pow(2, i) - 1,\n          n = Math.floor(r * Math.pow(2, 52)),\n          u = Math.pow(2, 32),\n          a = e << 31 | i + 1023 << 20 | n / u & 1048575,\n          p = n % u;\n      this.bufferBuilder.append(203), this.pack_int32(a), this.pack_int32(p);\n    }, n.prototype.pack_object = function (t) {\n      var e = Object.keys(t).length;\n      if (e <= 15) this.pack_uint8(128 + e);else if (e <= 65535) this.bufferBuilder.append(222), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(223), this.pack_uint32(e);\n      }\n\n      for (var i in t) {\n        t.hasOwnProperty(i) && (this.pack(i), this.pack(t[i]));\n      }\n    }, n.prototype.pack_uint8 = function (t) {\n      this.bufferBuilder.append(t);\n    }, n.prototype.pack_uint16 = function (t) {\n      this.bufferBuilder.append(t >> 8), this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_uint32 = function (t) {\n      var e = 4294967295 & t;\n      this.bufferBuilder.append((4278190080 & e) >>> 24), this.bufferBuilder.append((16711680 & e) >>> 16), this.bufferBuilder.append((65280 & e) >>> 8), this.bufferBuilder.append(255 & e);\n    }, n.prototype.pack_uint64 = function (t) {\n      var e = t / Math.pow(2, 32),\n          i = t % Math.pow(2, 32);\n      this.bufferBuilder.append((4278190080 & e) >>> 24), this.bufferBuilder.append((16711680 & e) >>> 16), this.bufferBuilder.append((65280 & e) >>> 8), this.bufferBuilder.append(255 & e), this.bufferBuilder.append((4278190080 & i) >>> 24), this.bufferBuilder.append((16711680 & i) >>> 16), this.bufferBuilder.append((65280 & i) >>> 8), this.bufferBuilder.append(255 & i);\n    }, n.prototype.pack_int8 = function (t) {\n      this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_int16 = function (t) {\n      this.bufferBuilder.append((65280 & t) >> 8), this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_int32 = function (t) {\n      this.bufferBuilder.append(t >>> 24 & 255), this.bufferBuilder.append((16711680 & t) >>> 16), this.bufferBuilder.append((65280 & t) >>> 8), this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_int64 = function (t) {\n      var e = Math.floor(t / Math.pow(2, 32)),\n          i = t % Math.pow(2, 32);\n      this.bufferBuilder.append((4278190080 & e) >>> 24), this.bufferBuilder.append((16711680 & e) >>> 16), this.bufferBuilder.append((65280 & e) >>> 8), this.bufferBuilder.append(255 & e), this.bufferBuilder.append((4278190080 & i) >>> 24), this.bufferBuilder.append((16711680 & i) >>> 16), this.bufferBuilder.append((65280 & i) >>> 8), this.bufferBuilder.append(255 & i);\n    };\n  }, {\n    \"./bufferbuilder\": \"EgBh\"\n  }],\n  \"iSxC\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e, t, n) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = n, e;\n    }\n\n    function t(e) {\n      return (t = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.extractVersion = o, exports.wrapPeerConnectionEvent = i, exports.disableLog = s, exports.disableWarnings = a, exports.log = u, exports.deprecated = c, exports.detectBrowser = p, exports.compactObject = d, exports.walkStats = l, exports.filterStats = b;\n    var n = !0,\n        r = !0;\n\n    function o(e, t, n) {\n      var r = e.match(t);\n      return r && r.length >= n && parseInt(r[n], 10);\n    }\n\n    function i(e, t, n) {\n      if (e.RTCPeerConnection) {\n        var r = e.RTCPeerConnection.prototype,\n            o = r.addEventListener;\n\n        r.addEventListener = function (e, r) {\n          if (e !== t) return o.apply(this, arguments);\n\n          var i = function i(e) {\n            var t = n(e);\n            t && r(t);\n          };\n\n          return this._eventMap = this._eventMap || {}, this._eventMap[r] = i, o.apply(this, [e, i]);\n        };\n\n        var i = r.removeEventListener;\n        r.removeEventListener = function (e, n) {\n          if (e !== t || !this._eventMap || !this._eventMap[n]) return i.apply(this, arguments);\n          var r = this._eventMap[n];\n          return delete this._eventMap[n], i.apply(this, [e, r]);\n        }, Object.defineProperty(r, \"on\" + t, {\n          get: function get() {\n            return this[\"_on\" + t];\n          },\n          set: function set(e) {\n            this[\"_on\" + t] && (this.removeEventListener(t, this[\"_on\" + t]), delete this[\"_on\" + t]), e && this.addEventListener(t, this[\"_on\" + t] = e);\n          },\n          enumerable: !0,\n          configurable: !0\n        });\n      }\n    }\n\n    function s(e) {\n      return \"boolean\" != typeof e ? new Error(\"Argument type: \" + t(e) + \". Please use a boolean.\") : (n = e, e ? \"adapter.js logging disabled\" : \"adapter.js logging enabled\");\n    }\n\n    function a(e) {\n      return \"boolean\" != typeof e ? new Error(\"Argument type: \" + t(e) + \". Please use a boolean.\") : (r = !e, \"adapter.js deprecation warnings \" + (e ? \"disabled\" : \"enabled\"));\n    }\n\n    function u() {\n      if (\"object\" === (\"undefined\" == typeof window ? \"undefined\" : t(window))) {\n        if (n) return;\n        \"undefined\" != typeof console && \"function\" == typeof console.log && console.log.apply(console, arguments);\n      }\n    }\n\n    function c(e, t) {\n      r && console.warn(e + \" is deprecated, please use \" + t + \" instead.\");\n    }\n\n    function p(e) {\n      var t = e.navigator,\n          n = {\n        browser: null,\n        version: null\n      };\n      if (void 0 === e || !e.navigator) return n.browser = \"Not a browser.\", n;\n      if (t.mozGetUserMedia) n.browser = \"firefox\", n.version = o(t.userAgent, /Firefox\\/(\\d+)\\./, 1);else if (t.webkitGetUserMedia || !1 === e.isSecureContext && e.webkitRTCPeerConnection && !e.RTCIceGatherer) n.browser = \"chrome\", n.version = o(t.userAgent, /Chrom(e|ium)\\/(\\d+)\\./, 2);else if (t.mediaDevices && t.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) n.browser = \"edge\", n.version = o(t.userAgent, /Edge\\/(\\d+).(\\d+)$/, 2);else {\n        if (!e.RTCPeerConnection || !t.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) return n.browser = \"Not a supported browser.\", n;\n        n.browser = \"safari\", n.version = o(t.userAgent, /AppleWebKit\\/(\\d+)\\./, 1), n.supportsUnifiedPlan = e.RTCRtpTransceiver && \"currentDirection\" in e.RTCRtpTransceiver.prototype;\n      }\n      return n;\n    }\n\n    function f(e) {\n      return \"[object Object]\" === Object.prototype.toString.call(e);\n    }\n\n    function d(t) {\n      return f(t) ? Object.keys(t).reduce(function (n, r) {\n        var o = f(t[r]),\n            i = o ? d(t[r]) : t[r],\n            s = o && !Object.keys(i).length;\n        return void 0 === i || s ? n : Object.assign(n, e({}, r, i));\n      }, {}) : t;\n    }\n\n    function l(e, t, n) {\n      t && !n.has(t.id) && (n.set(t.id, t), Object.keys(t).forEach(function (r) {\n        r.endsWith(\"Id\") ? l(e, e.get(t[r]), n) : r.endsWith(\"Ids\") && t[r].forEach(function (t) {\n          l(e, e.get(t), n);\n        });\n      }));\n    }\n\n    function b(e, t, n) {\n      var r = n ? \"outbound-rtp\" : \"inbound-rtp\",\n          o = new Map();\n      if (null === t) return o;\n      var i = [];\n      return e.forEach(function (e) {\n        \"track\" === e.type && e.trackIdentifier === t.id && i.push(e);\n      }), i.forEach(function (t) {\n        e.forEach(function (n) {\n          n.type === r && n.trackId === t.id && l(e, n, o);\n        });\n      }), o;\n    }\n  }, {}],\n  \"s6SN\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetUserMedia = i;\n    var e = t(require(\"../utils.js\"));\n\n    function r() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return r = function r() {\n        return e;\n      }, e;\n    }\n\n    function t(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = r();\n      if (t && t.has(e)) return t.get(e);\n      var o = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(o, i, a) : o[i] = e[i];\n        }\n      }\n\n      return o.default = e, t && t.set(e, o), o;\n    }\n\n    function o(e) {\n      return (o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    var n = e.log;\n\n    function i(r) {\n      var t = r && r.navigator;\n\n      if (t.mediaDevices) {\n        var i = e.detectBrowser(r),\n            a = function a(e) {\n          if (\"object\" !== o(e) || e.mandatory || e.optional) return e;\n          var r = {};\n          return Object.keys(e).forEach(function (t) {\n            if (\"require\" !== t && \"advanced\" !== t && \"mediaSource\" !== t) {\n              var n = \"object\" === o(e[t]) ? e[t] : {\n                ideal: e[t]\n              };\n              void 0 !== n.exact && \"number\" == typeof n.exact && (n.min = n.max = n.exact);\n\n              var i = function i(e, r) {\n                return e ? e + r.charAt(0).toUpperCase() + r.slice(1) : \"deviceId\" === r ? \"sourceId\" : r;\n              };\n\n              if (void 0 !== n.ideal) {\n                r.optional = r.optional || [];\n                var a = {};\n                \"number\" == typeof n.ideal ? (a[i(\"min\", t)] = n.ideal, r.optional.push(a), (a = {})[i(\"max\", t)] = n.ideal, r.optional.push(a)) : (a[i(\"\", t)] = n.ideal, r.optional.push(a));\n              }\n\n              void 0 !== n.exact && \"number\" != typeof n.exact ? (r.mandatory = r.mandatory || {}, r.mandatory[i(\"\", t)] = n.exact) : [\"min\", \"max\"].forEach(function (e) {\n                void 0 !== n[e] && (r.mandatory = r.mandatory || {}, r.mandatory[i(e, t)] = n[e]);\n              });\n            }\n          }), e.advanced && (r.optional = (r.optional || []).concat(e.advanced)), r;\n        },\n            c = function c(e, r) {\n          if (i.version >= 61) return r(e);\n\n          if ((e = JSON.parse(JSON.stringify(e))) && \"object\" === o(e.audio)) {\n            var c = function c(e, r, t) {\n              r in e && !(t in e) && (e[t] = e[r], delete e[r]);\n            };\n\n            c((e = JSON.parse(JSON.stringify(e))).audio, \"autoGainControl\", \"googAutoGainControl\"), c(e.audio, \"noiseSuppression\", \"googNoiseSuppression\"), e.audio = a(e.audio);\n          }\n\n          if (e && \"object\" === o(e.video)) {\n            var d = e.video.facingMode;\n            d = d && (\"object\" === o(d) ? d : {\n              ideal: d\n            });\n            var u,\n                s = i.version < 66;\n            if (d && (\"user\" === d.exact || \"environment\" === d.exact || \"user\" === d.ideal || \"environment\" === d.ideal) && (!t.mediaDevices.getSupportedConstraints || !t.mediaDevices.getSupportedConstraints().facingMode || s)) if (delete e.video.facingMode, \"environment\" === d.exact || \"environment\" === d.ideal ? u = [\"back\", \"rear\"] : \"user\" !== d.exact && \"user\" !== d.ideal || (u = [\"front\"]), u) return t.mediaDevices.enumerateDevices().then(function (t) {\n              var o = (t = t.filter(function (e) {\n                return \"videoinput\" === e.kind;\n              })).find(function (e) {\n                return u.some(function (r) {\n                  return e.label.toLowerCase().includes(r);\n                });\n              });\n              return !o && t.length && u.includes(\"back\") && (o = t[t.length - 1]), o && (e.video.deviceId = d.exact ? {\n                exact: o.deviceId\n              } : {\n                ideal: o.deviceId\n              }), e.video = a(e.video), n(\"chrome: \" + JSON.stringify(e)), r(e);\n            });\n            e.video = a(e.video);\n          }\n\n          return n(\"chrome: \" + JSON.stringify(e)), r(e);\n        },\n            d = function d(e) {\n          return i.version >= 64 ? e : {\n            name: {\n              PermissionDeniedError: \"NotAllowedError\",\n              PermissionDismissedError: \"NotAllowedError\",\n              InvalidStateError: \"NotAllowedError\",\n              DevicesNotFoundError: \"NotFoundError\",\n              ConstraintNotSatisfiedError: \"OverconstrainedError\",\n              TrackStartError: \"NotReadableError\",\n              MediaDeviceFailedDueToShutdown: \"NotAllowedError\",\n              MediaDeviceKillSwitchOn: \"NotAllowedError\",\n              TabCaptureError: \"AbortError\",\n              ScreenCaptureError: \"AbortError\",\n              DeviceCaptureError: \"AbortError\"\n            }[e.name] || e.name,\n            message: e.message,\n            constraint: e.constraint || e.constraintName,\n            toString: function toString() {\n              return this.name + (this.message && \": \") + this.message;\n            }\n          };\n        };\n\n        if (t.getUserMedia = function (e, r, o) {\n          c(e, function (e) {\n            t.webkitGetUserMedia(e, r, function (e) {\n              o && o(d(e));\n            });\n          });\n        }.bind(t), t.mediaDevices.getUserMedia) {\n          var u = t.mediaDevices.getUserMedia.bind(t.mediaDevices);\n\n          t.mediaDevices.getUserMedia = function (e) {\n            return c(e, function (e) {\n              return u(e).then(function (r) {\n                if (e.audio && !r.getAudioTracks().length || e.video && !r.getVideoTracks().length) throw r.getTracks().forEach(function (e) {\n                  e.stop();\n                }), new DOMException(\"\", \"NotFoundError\");\n                return r;\n              }, function (e) {\n                return Promise.reject(d(e));\n              });\n            });\n          };\n        }\n      }\n    }\n  }, {\n    \"../utils.js\": \"iSxC\"\n  }],\n  \"VHa8\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e, i) {\n      e.navigator.mediaDevices && \"getDisplayMedia\" in e.navigator.mediaDevices || e.navigator.mediaDevices && (\"function\" == typeof i ? e.navigator.mediaDevices.getDisplayMedia = function (a) {\n        return i(a).then(function (i) {\n          var t = a.video && a.video.width,\n              o = a.video && a.video.height,\n              d = a.video && a.video.frameRate;\n          return a.video = {\n            mandatory: {\n              chromeMediaSource: \"desktop\",\n              chromeMediaSourceId: i,\n              maxFrameRate: d || 3\n            }\n          }, t && (a.video.mandatory.maxWidth = t), o && (a.video.mandatory.maxHeight = o), e.navigator.mediaDevices.getUserMedia(a);\n        });\n      } : console.error(\"shimGetDisplayMedia: getSourceId argument is not a function\"));\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetDisplayMedia = e;\n  }, {}],\n  \"uI5X\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimMediaStream = a, exports.shimOnTrack = c, exports.shimGetSendersWithDtmf = p, exports.shimGetStats = d, exports.shimSenderReceiverGetStats = h, exports.shimAddTrackRemoveTrackWithNative = f, exports.shimAddTrackRemoveTrack = m, exports.shimPeerConnection = u, exports.fixNegotiationNeeded = l, Object.defineProperty(exports, \"shimGetUserMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return t.shimGetUserMedia;\n      }\n    }), Object.defineProperty(exports, \"shimGetDisplayMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return r.shimGetDisplayMedia;\n      }\n    });\n\n    var e = i(require(\"../utils.js\")),\n        t = require(\"./getusermedia\"),\n        r = require(\"./getdisplaymedia\");\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function i(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = n();\n      if (t && t.has(e)) return t.get(e);\n      var r = {},\n          i = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var o in e) {\n        if (Object.prototype.hasOwnProperty.call(e, o)) {\n          var s = i ? Object.getOwnPropertyDescriptor(e, o) : null;\n          s && (s.get || s.set) ? Object.defineProperty(r, o, s) : r[o] = e[o];\n        }\n      }\n\n      return r.default = e, t && t.set(e, r), r;\n    }\n\n    function o(e, t, r) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: r,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = r, e;\n    }\n\n    function s(e) {\n      return (s = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function a(e) {\n      e.MediaStream = e.MediaStream || e.webkitMediaStream;\n    }\n\n    function c(t) {\n      if (\"object\" !== s(t) || !t.RTCPeerConnection || \"ontrack\" in t.RTCPeerConnection.prototype) e.wrapPeerConnectionEvent(t, \"track\", function (e) {\n        return e.transceiver || Object.defineProperty(e, \"transceiver\", {\n          value: {\n            receiver: e.receiver\n          }\n        }), e;\n      });else {\n        Object.defineProperty(t.RTCPeerConnection.prototype, \"ontrack\", {\n          get: function get() {\n            return this._ontrack;\n          },\n          set: function set(e) {\n            this._ontrack && this.removeEventListener(\"track\", this._ontrack), this.addEventListener(\"track\", this._ontrack = e);\n          },\n          enumerable: !0,\n          configurable: !0\n        });\n        var r = t.RTCPeerConnection.prototype.setRemoteDescription;\n\n        t.RTCPeerConnection.prototype.setRemoteDescription = function () {\n          var e = this;\n          return this._ontrackpoly || (this._ontrackpoly = function (r) {\n            r.stream.addEventListener(\"addtrack\", function (n) {\n              var i;\n              i = t.RTCPeerConnection.prototype.getReceivers ? e.getReceivers().find(function (e) {\n                return e.track && e.track.id === n.track.id;\n              }) : {\n                track: n.track\n              };\n              var o = new Event(\"track\");\n              o.track = n.track, o.receiver = i, o.transceiver = {\n                receiver: i\n              }, o.streams = [r.stream], e.dispatchEvent(o);\n            }), r.stream.getTracks().forEach(function (n) {\n              var i;\n              i = t.RTCPeerConnection.prototype.getReceivers ? e.getReceivers().find(function (e) {\n                return e.track && e.track.id === n.id;\n              }) : {\n                track: n\n              };\n              var o = new Event(\"track\");\n              o.track = n, o.receiver = i, o.transceiver = {\n                receiver: i\n              }, o.streams = [r.stream], e.dispatchEvent(o);\n            });\n          }, this.addEventListener(\"addstream\", this._ontrackpoly)), r.apply(this, arguments);\n        };\n      }\n    }\n\n    function p(e) {\n      if (\"object\" === s(e) && e.RTCPeerConnection && !(\"getSenders\" in e.RTCPeerConnection.prototype) && \"createDTMFSender\" in e.RTCPeerConnection.prototype) {\n        var t = function t(e, _t) {\n          return {\n            track: _t,\n\n            get dtmf() {\n              return void 0 === this._dtmf && (\"audio\" === _t.kind ? this._dtmf = e.createDTMFSender(_t) : this._dtmf = null), this._dtmf;\n            },\n\n            _pc: e\n          };\n        };\n\n        if (!e.RTCPeerConnection.prototype.getSenders) {\n          e.RTCPeerConnection.prototype.getSenders = function () {\n            return this._senders = this._senders || [], this._senders.slice();\n          };\n\n          var r = e.RTCPeerConnection.prototype.addTrack;\n\n          e.RTCPeerConnection.prototype.addTrack = function (e, n) {\n            var i = r.apply(this, arguments);\n            return i || (i = t(this, e), this._senders.push(i)), i;\n          };\n\n          var n = e.RTCPeerConnection.prototype.removeTrack;\n\n          e.RTCPeerConnection.prototype.removeTrack = function (e) {\n            n.apply(this, arguments);\n\n            var t = this._senders.indexOf(e);\n\n            -1 !== t && this._senders.splice(t, 1);\n          };\n        }\n\n        var i = e.RTCPeerConnection.prototype.addStream;\n\n        e.RTCPeerConnection.prototype.addStream = function (e) {\n          var r = this;\n          this._senders = this._senders || [], i.apply(this, [e]), e.getTracks().forEach(function (e) {\n            r._senders.push(t(r, e));\n          });\n        };\n\n        var o = e.RTCPeerConnection.prototype.removeStream;\n\n        e.RTCPeerConnection.prototype.removeStream = function (e) {\n          var t = this;\n          this._senders = this._senders || [], o.apply(this, [e]), e.getTracks().forEach(function (e) {\n            var r = t._senders.find(function (t) {\n              return t.track === e;\n            });\n\n            r && t._senders.splice(t._senders.indexOf(r), 1);\n          });\n        };\n      } else if (\"object\" === s(e) && e.RTCPeerConnection && \"getSenders\" in e.RTCPeerConnection.prototype && \"createDTMFSender\" in e.RTCPeerConnection.prototype && e.RTCRtpSender && !(\"dtmf\" in e.RTCRtpSender.prototype)) {\n        var a = e.RTCPeerConnection.prototype.getSenders;\n        e.RTCPeerConnection.prototype.getSenders = function () {\n          var e = this,\n              t = a.apply(this, []);\n          return t.forEach(function (t) {\n            return t._pc = e;\n          }), t;\n        }, Object.defineProperty(e.RTCRtpSender.prototype, \"dtmf\", {\n          get: function get() {\n            return void 0 === this._dtmf && (\"audio\" === this.track.kind ? this._dtmf = this._pc.createDTMFSender(this.track) : this._dtmf = null), this._dtmf;\n          }\n        });\n      }\n    }\n\n    function d(e) {\n      if (e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.getStats;\n\n        e.RTCPeerConnection.prototype.getStats = function () {\n          var e = this,\n              _arguments = Array.prototype.slice.call(arguments),\n              r = _arguments[0],\n              n = _arguments[1],\n              i = _arguments[2];\n\n          if (arguments.length > 0 && \"function\" == typeof r) return t.apply(this, arguments);\n          if (0 === t.length && (0 === arguments.length || \"function\" != typeof r)) return t.apply(this, []);\n\n          var o = function o(e) {\n            var t = {};\n            return e.result().forEach(function (e) {\n              var r = {\n                id: e.id,\n                timestamp: e.timestamp,\n                type: {\n                  localcandidate: \"local-candidate\",\n                  remotecandidate: \"remote-candidate\"\n                }[e.type] || e.type\n              };\n              e.names().forEach(function (t) {\n                r[t] = e.stat(t);\n              }), t[r.id] = r;\n            }), t;\n          },\n              s = function s(e) {\n            return new Map(Object.keys(e).map(function (t) {\n              return [t, e[t]];\n            }));\n          };\n\n          if (arguments.length >= 2) {\n            return t.apply(this, [function (e) {\n              n(s(o(e)));\n            }, r]);\n          }\n\n          return new Promise(function (r, n) {\n            t.apply(e, [function (e) {\n              r(s(o(e)));\n            }, n]);\n          }).then(n, i);\n        };\n      }\n    }\n\n    function h(t) {\n      if (\"object\" === s(t) && t.RTCPeerConnection && t.RTCRtpSender && t.RTCRtpReceiver) {\n        if (!(\"getStats\" in t.RTCRtpSender.prototype)) {\n          var r = t.RTCPeerConnection.prototype.getSenders;\n          r && (t.RTCPeerConnection.prototype.getSenders = function () {\n            var e = this,\n                t = r.apply(this, []);\n            return t.forEach(function (t) {\n              return t._pc = e;\n            }), t;\n          });\n          var n = t.RTCPeerConnection.prototype.addTrack;\n          n && (t.RTCPeerConnection.prototype.addTrack = function () {\n            var e = n.apply(this, arguments);\n            return e._pc = this, e;\n          }), t.RTCRtpSender.prototype.getStats = function () {\n            var t = this;\n            return this._pc.getStats().then(function (r) {\n              return e.filterStats(r, t.track, !0);\n            });\n          };\n        }\n\n        if (!(\"getStats\" in t.RTCRtpReceiver.prototype)) {\n          var i = t.RTCPeerConnection.prototype.getReceivers;\n          i && (t.RTCPeerConnection.prototype.getReceivers = function () {\n            var e = this,\n                t = i.apply(this, []);\n            return t.forEach(function (t) {\n              return t._pc = e;\n            }), t;\n          }), e.wrapPeerConnectionEvent(t, \"track\", function (e) {\n            return e.receiver._pc = e.srcElement, e;\n          }), t.RTCRtpReceiver.prototype.getStats = function () {\n            var t = this;\n            return this._pc.getStats().then(function (r) {\n              return e.filterStats(r, t.track, !1);\n            });\n          };\n        }\n\n        if (\"getStats\" in t.RTCRtpSender.prototype && \"getStats\" in t.RTCRtpReceiver.prototype) {\n          var o = t.RTCPeerConnection.prototype.getStats;\n\n          t.RTCPeerConnection.prototype.getStats = function () {\n            if (arguments.length > 0 && arguments[0] instanceof t.MediaStreamTrack) {\n              var e,\n                  r,\n                  n,\n                  i = arguments[0];\n              return this.getSenders().forEach(function (t) {\n                t.track === i && (e ? n = !0 : e = t);\n              }), this.getReceivers().forEach(function (e) {\n                return e.track === i && (r ? n = !0 : r = e), e.track === i;\n              }), n || e && r ? Promise.reject(new DOMException(\"There are more than one sender or receiver for the track.\", \"InvalidAccessError\")) : e ? e.getStats() : r ? r.getStats() : Promise.reject(new DOMException(\"There is no sender or receiver for the track.\", \"InvalidAccessError\"));\n            }\n\n            return o.apply(this, arguments);\n          };\n        }\n      }\n    }\n\n    function f(e) {\n      e.RTCPeerConnection.prototype.getLocalStreams = function () {\n        var e = this;\n        return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, Object.keys(this._shimmedLocalStreams).map(function (t) {\n          return e._shimmedLocalStreams[t][0];\n        });\n      };\n\n      var t = e.RTCPeerConnection.prototype.addTrack;\n\n      e.RTCPeerConnection.prototype.addTrack = function (e, r) {\n        if (!r) return t.apply(this, arguments);\n        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n        var n = t.apply(this, arguments);\n        return this._shimmedLocalStreams[r.id] ? -1 === this._shimmedLocalStreams[r.id].indexOf(n) && this._shimmedLocalStreams[r.id].push(n) : this._shimmedLocalStreams[r.id] = [r, n], n;\n      };\n\n      var r = e.RTCPeerConnection.prototype.addStream;\n\n      e.RTCPeerConnection.prototype.addStream = function (e) {\n        var t = this;\n        this._shimmedLocalStreams = this._shimmedLocalStreams || {}, e.getTracks().forEach(function (e) {\n          if (t.getSenders().find(function (t) {\n            return t.track === e;\n          })) throw new DOMException(\"Track already exists.\", \"InvalidAccessError\");\n        });\n        var n = this.getSenders();\n        r.apply(this, arguments);\n        var i = this.getSenders().filter(function (e) {\n          return -1 === n.indexOf(e);\n        });\n        this._shimmedLocalStreams[e.id] = [e].concat(i);\n      };\n\n      var n = e.RTCPeerConnection.prototype.removeStream;\n\n      e.RTCPeerConnection.prototype.removeStream = function (e) {\n        return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, delete this._shimmedLocalStreams[e.id], n.apply(this, arguments);\n      };\n\n      var i = e.RTCPeerConnection.prototype.removeTrack;\n\n      e.RTCPeerConnection.prototype.removeTrack = function (e) {\n        var t = this;\n        return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, e && Object.keys(this._shimmedLocalStreams).forEach(function (r) {\n          var n = t._shimmedLocalStreams[r].indexOf(e);\n\n          -1 !== n && t._shimmedLocalStreams[r].splice(n, 1), 1 === t._shimmedLocalStreams[r].length && delete t._shimmedLocalStreams[r];\n        }), i.apply(this, arguments);\n      };\n    }\n\n    function m(t) {\n      if (t.RTCPeerConnection) {\n        var r = e.detectBrowser(t);\n        if (t.RTCPeerConnection.prototype.addTrack && r.version >= 65) return f(t);\n        var n = t.RTCPeerConnection.prototype.getLocalStreams;\n\n        t.RTCPeerConnection.prototype.getLocalStreams = function () {\n          var e = this,\n              t = n.apply(this);\n          return this._reverseStreams = this._reverseStreams || {}, t.map(function (t) {\n            return e._reverseStreams[t.id];\n          });\n        };\n\n        var i = t.RTCPeerConnection.prototype.addStream;\n\n        t.RTCPeerConnection.prototype.addStream = function (e) {\n          var r = this;\n\n          if (this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}, e.getTracks().forEach(function (e) {\n            if (r.getSenders().find(function (t) {\n              return t.track === e;\n            })) throw new DOMException(\"Track already exists.\", \"InvalidAccessError\");\n          }), !this._reverseStreams[e.id]) {\n            var n = new t.MediaStream(e.getTracks());\n            this._streams[e.id] = n, this._reverseStreams[n.id] = e, e = n;\n          }\n\n          i.apply(this, [e]);\n        };\n\n        var s = t.RTCPeerConnection.prototype.removeStream;\n        t.RTCPeerConnection.prototype.removeStream = function (e) {\n          this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}, s.apply(this, [this._streams[e.id] || e]), delete this._reverseStreams[this._streams[e.id] ? this._streams[e.id].id : e.id], delete this._streams[e.id];\n        }, t.RTCPeerConnection.prototype.addTrack = function (e, r) {\n          var n = this;\n          if (\"closed\" === this.signalingState) throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\", \"InvalidStateError\");\n          var i = [].slice.call(arguments, 1);\n          if (1 !== i.length || !i[0].getTracks().find(function (t) {\n            return t === e;\n          })) throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\", \"NotSupportedError\");\n          if (this.getSenders().find(function (t) {\n            return t.track === e;\n          })) throw new DOMException(\"Track already exists.\", \"InvalidAccessError\");\n          this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {};\n          var o = this._streams[r.id];\n          if (o) o.addTrack(e), Promise.resolve().then(function () {\n            n.dispatchEvent(new Event(\"negotiationneeded\"));\n          });else {\n            var s = new t.MediaStream([e]);\n            this._streams[r.id] = s, this._reverseStreams[s.id] = r, this.addStream(s);\n          }\n          return this.getSenders().find(function (t) {\n            return t.track === e;\n          });\n        }, [\"createOffer\", \"createAnswer\"].forEach(function (e) {\n          var r = t.RTCPeerConnection.prototype[e],\n              n = o({}, e, function () {\n            var e = this,\n                t = arguments;\n            return arguments.length && \"function\" == typeof arguments[0] ? r.apply(this, [function (r) {\n              var n = p(e, r);\n              t[0].apply(null, [n]);\n            }, function (e) {\n              t[1] && t[1].apply(null, e);\n            }, arguments[2]]) : r.apply(this, arguments).then(function (t) {\n              return p(e, t);\n            });\n          });\n          t.RTCPeerConnection.prototype[e] = n[e];\n        });\n        var a = t.RTCPeerConnection.prototype.setLocalDescription;\n\n        t.RTCPeerConnection.prototype.setLocalDescription = function () {\n          return arguments.length && arguments[0].type ? (arguments[0] = (e = this, t = arguments[0], r = t.sdp, Object.keys(e._reverseStreams || []).forEach(function (t) {\n            var n = e._reverseStreams[t],\n                i = e._streams[n.id];\n            r = r.replace(new RegExp(n.id, \"g\"), i.id);\n          }), new RTCSessionDescription({\n            type: t.type,\n            sdp: r\n          })), a.apply(this, arguments)) : a.apply(this, arguments);\n          var e, t, r;\n        };\n\n        var c = Object.getOwnPropertyDescriptor(t.RTCPeerConnection.prototype, \"localDescription\");\n        Object.defineProperty(t.RTCPeerConnection.prototype, \"localDescription\", {\n          get: function get() {\n            var e = c.get.apply(this);\n            return \"\" === e.type ? e : p(this, e);\n          }\n        }), t.RTCPeerConnection.prototype.removeTrack = function (e) {\n          var t,\n              r = this;\n          if (\"closed\" === this.signalingState) throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\", \"InvalidStateError\");\n          if (!e._pc) throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\", \"TypeError\");\n          if (!(e._pc === this)) throw new DOMException(\"Sender was not created by this connection.\", \"InvalidAccessError\");\n          this._streams = this._streams || {}, Object.keys(this._streams).forEach(function (n) {\n            r._streams[n].getTracks().find(function (t) {\n              return e.track === t;\n            }) && (t = r._streams[n]);\n          }), t && (1 === t.getTracks().length ? this.removeStream(this._reverseStreams[t.id]) : t.removeTrack(e.track), this.dispatchEvent(new Event(\"negotiationneeded\")));\n        };\n      }\n\n      function p(e, t) {\n        var r = t.sdp;\n        return Object.keys(e._reverseStreams || []).forEach(function (t) {\n          var n = e._reverseStreams[t],\n              i = e._streams[n.id];\n          r = r.replace(new RegExp(i.id, \"g\"), n.id);\n        }), new RTCSessionDescription({\n          type: t.type,\n          sdp: r\n        });\n      }\n    }\n\n    function u(t) {\n      var r = e.detectBrowser(t);\n\n      if (!t.RTCPeerConnection && t.webkitRTCPeerConnection && (t.RTCPeerConnection = t.webkitRTCPeerConnection), t.RTCPeerConnection) {\n        r.version < 53 && [\"setLocalDescription\", \"setRemoteDescription\", \"addIceCandidate\"].forEach(function (e) {\n          var r = t.RTCPeerConnection.prototype[e],\n              n = o({}, e, function () {\n            return arguments[0] = new (\"addIceCandidate\" === e ? t.RTCIceCandidate : t.RTCSessionDescription)(arguments[0]), r.apply(this, arguments);\n          });\n          t.RTCPeerConnection.prototype[e] = n[e];\n        });\n        var n = t.RTCPeerConnection.prototype.addIceCandidate;\n\n        t.RTCPeerConnection.prototype.addIceCandidate = function () {\n          return arguments[0] ? r.version < 78 && arguments[0] && \"\" === arguments[0].candidate ? Promise.resolve() : n.apply(this, arguments) : (arguments[1] && arguments[1].apply(null), Promise.resolve());\n        };\n      }\n    }\n\n    function l(t) {\n      e.wrapPeerConnectionEvent(t, \"negotiationneeded\", function (e) {\n        if (\"stable\" === e.target.signalingState) return e;\n      });\n    }\n  }, {\n    \"../utils.js\": \"iSxC\",\n    \"./getusermedia\": \"s6SN\",\n    \"./getdisplaymedia\": \"VHa8\"\n  }],\n  \"NZ1C\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.filterIceServers = n;\n    var r = t(require(\"../utils\"));\n\n    function e() {\n      if (\"function\" != typeof WeakMap) return null;\n      var r = new WeakMap();\n      return e = function e() {\n        return r;\n      }, r;\n    }\n\n    function t(r) {\n      if (r && r.__esModule) return r;\n      if (null === r || \"object\" != typeof r && \"function\" != typeof r) return {\n        default: r\n      };\n      var t = e();\n      if (t && t.has(r)) return t.get(r);\n      var n = {},\n          u = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in r) {\n        if (Object.prototype.hasOwnProperty.call(r, i)) {\n          var f = u ? Object.getOwnPropertyDescriptor(r, i) : null;\n          f && (f.get || f.set) ? Object.defineProperty(n, i, f) : n[i] = r[i];\n        }\n      }\n\n      return n.default = r, t && t.set(r, n), n;\n    }\n\n    function n(e, t) {\n      var n = !1;\n      return (e = JSON.parse(JSON.stringify(e))).filter(function (e) {\n        if (e && (e.urls || e.url)) {\n          var t = e.urls || e.url;\n          e.url && !e.urls && r.deprecated(\"RTCIceServer.url\", \"RTCIceServer.urls\");\n          var u = \"string\" == typeof t;\n          return u && (t = [t]), t = t.filter(function (r) {\n            if (0 === r.indexOf(\"stun:\")) return !1;\n            var e = r.startsWith(\"turn\") && !r.startsWith(\"turn:[\") && r.includes(\"transport=udp\");\n            return e && !n ? (n = !0, !0) : e && !n;\n          }), delete e.url, e.urls = u ? t[0] : t, !!t.length;\n        }\n      });\n    }\n  }, {\n    \"../utils\": \"iSxC\"\n  }],\n  \"YHvh\": [function (require, module, exports) {\n    \"use strict\";\n\n    var r = {\n      generateIdentifier: function generateIdentifier() {\n        return Math.random().toString(36).substr(2, 10);\n      }\n    };\n    r.localCName = r.generateIdentifier(), r.splitLines = function (r) {\n      return r.trim().split(\"\\n\").map(function (r) {\n        return r.trim();\n      });\n    }, r.splitSections = function (r) {\n      return r.split(\"\\nm=\").map(function (r, e) {\n        return (e > 0 ? \"m=\" + r : r).trim() + \"\\r\\n\";\n      });\n    }, r.getDescription = function (e) {\n      var t = r.splitSections(e);\n      return t && t[0];\n    }, r.getMediaSections = function (e) {\n      var t = r.splitSections(e);\n      return t.shift(), t;\n    }, r.matchPrefix = function (e, t) {\n      return r.splitLines(e).filter(function (r) {\n        return 0 === r.indexOf(t);\n      });\n    }, r.parseCandidate = function (r) {\n      for (var e, t = {\n        foundation: (e = 0 === r.indexOf(\"a=candidate:\") ? r.substring(12).split(\" \") : r.substring(10).split(\" \"))[0],\n        component: parseInt(e[1], 10),\n        protocol: e[2].toLowerCase(),\n        priority: parseInt(e[3], 10),\n        ip: e[4],\n        address: e[4],\n        port: parseInt(e[5], 10),\n        type: e[7]\n      }, n = 8; n < e.length; n += 2) {\n        switch (e[n]) {\n          case \"raddr\":\n            t.relatedAddress = e[n + 1];\n            break;\n\n          case \"rport\":\n            t.relatedPort = parseInt(e[n + 1], 10);\n            break;\n\n          case \"tcptype\":\n            t.tcpType = e[n + 1];\n            break;\n\n          case \"ufrag\":\n            t.ufrag = e[n + 1], t.usernameFragment = e[n + 1];\n            break;\n\n          default:\n            t[e[n]] = e[n + 1];\n        }\n      }\n\n      return t;\n    }, r.writeCandidate = function (r) {\n      var e = [];\n      e.push(r.foundation), e.push(r.component), e.push(r.protocol.toUpperCase()), e.push(r.priority), e.push(r.address || r.ip), e.push(r.port);\n      var t = r.type;\n      return e.push(\"typ\"), e.push(t), \"host\" !== t && r.relatedAddress && r.relatedPort && (e.push(\"raddr\"), e.push(r.relatedAddress), e.push(\"rport\"), e.push(r.relatedPort)), r.tcpType && \"tcp\" === r.protocol.toLowerCase() && (e.push(\"tcptype\"), e.push(r.tcpType)), (r.usernameFragment || r.ufrag) && (e.push(\"ufrag\"), e.push(r.usernameFragment || r.ufrag)), \"candidate:\" + e.join(\" \");\n    }, r.parseIceOptions = function (r) {\n      return r.substr(14).split(\" \");\n    }, r.parseRtpMap = function (r) {\n      var e = r.substr(9).split(\" \"),\n          t = {\n        payloadType: parseInt(e.shift(), 10)\n      };\n      return e = e[0].split(\"/\"), t.name = e[0], t.clockRate = parseInt(e[1], 10), t.channels = 3 === e.length ? parseInt(e[2], 10) : 1, t.numChannels = t.channels, t;\n    }, r.writeRtpMap = function (r) {\n      var e = r.payloadType;\n      void 0 !== r.preferredPayloadType && (e = r.preferredPayloadType);\n      var t = r.channels || r.numChannels || 1;\n      return \"a=rtpmap:\" + e + \" \" + r.name + \"/\" + r.clockRate + (1 !== t ? \"/\" + t : \"\") + \"\\r\\n\";\n    }, r.parseExtmap = function (r) {\n      var e = r.substr(9).split(\" \");\n      return {\n        id: parseInt(e[0], 10),\n        direction: e[0].indexOf(\"/\") > 0 ? e[0].split(\"/\")[1] : \"sendrecv\",\n        uri: e[1]\n      };\n    }, r.writeExtmap = function (r) {\n      return \"a=extmap:\" + (r.id || r.preferredId) + (r.direction && \"sendrecv\" !== r.direction ? \"/\" + r.direction : \"\") + \" \" + r.uri + \"\\r\\n\";\n    }, r.parseFmtp = function (r) {\n      for (var e, t = {}, n = r.substr(r.indexOf(\" \") + 1).split(\";\"), a = 0; a < n.length; a++) {\n        t[(e = n[a].trim().split(\"=\"))[0].trim()] = e[1];\n      }\n\n      return t;\n    }, r.writeFmtp = function (r) {\n      var e = \"\",\n          t = r.payloadType;\n\n      if (void 0 !== r.preferredPayloadType && (t = r.preferredPayloadType), r.parameters && Object.keys(r.parameters).length) {\n        var n = [];\n        Object.keys(r.parameters).forEach(function (e) {\n          r.parameters[e] ? n.push(e + \"=\" + r.parameters[e]) : n.push(e);\n        }), e += \"a=fmtp:\" + t + \" \" + n.join(\";\") + \"\\r\\n\";\n      }\n\n      return e;\n    }, r.parseRtcpFb = function (r) {\n      var e = r.substr(r.indexOf(\" \") + 1).split(\" \");\n      return {\n        type: e.shift(),\n        parameter: e.join(\" \")\n      };\n    }, r.writeRtcpFb = function (r) {\n      var e = \"\",\n          t = r.payloadType;\n      return void 0 !== r.preferredPayloadType && (t = r.preferredPayloadType), r.rtcpFeedback && r.rtcpFeedback.length && r.rtcpFeedback.forEach(function (r) {\n        e += \"a=rtcp-fb:\" + t + \" \" + r.type + (r.parameter && r.parameter.length ? \" \" + r.parameter : \"\") + \"\\r\\n\";\n      }), e;\n    }, r.parseSsrcMedia = function (r) {\n      var e = r.indexOf(\" \"),\n          t = {\n        ssrc: parseInt(r.substr(7, e - 7), 10)\n      },\n          n = r.indexOf(\":\", e);\n      return n > -1 ? (t.attribute = r.substr(e + 1, n - e - 1), t.value = r.substr(n + 1)) : t.attribute = r.substr(e + 1), t;\n    }, r.parseSsrcGroup = function (r) {\n      var e = r.substr(13).split(\" \");\n      return {\n        semantics: e.shift(),\n        ssrcs: e.map(function (r) {\n          return parseInt(r, 10);\n        })\n      };\n    }, r.getMid = function (e) {\n      var t = r.matchPrefix(e, \"a=mid:\")[0];\n      if (t) return t.substr(6);\n    }, r.parseFingerprint = function (r) {\n      var e = r.substr(14).split(\" \");\n      return {\n        algorithm: e[0].toLowerCase(),\n        value: e[1]\n      };\n    }, r.getDtlsParameters = function (e, t) {\n      return {\n        role: \"auto\",\n        fingerprints: r.matchPrefix(e + t, \"a=fingerprint:\").map(r.parseFingerprint)\n      };\n    }, r.writeDtlsParameters = function (r, e) {\n      var t = \"a=setup:\" + e + \"\\r\\n\";\n      return r.fingerprints.forEach(function (r) {\n        t += \"a=fingerprint:\" + r.algorithm + \" \" + r.value + \"\\r\\n\";\n      }), t;\n    }, r.getIceParameters = function (e, t) {\n      var n = r.splitLines(e);\n      return {\n        usernameFragment: (n = n.concat(r.splitLines(t))).filter(function (r) {\n          return 0 === r.indexOf(\"a=ice-ufrag:\");\n        })[0].substr(12),\n        password: n.filter(function (r) {\n          return 0 === r.indexOf(\"a=ice-pwd:\");\n        })[0].substr(10)\n      };\n    }, r.writeIceParameters = function (r) {\n      return \"a=ice-ufrag:\" + r.usernameFragment + \"\\r\\na=ice-pwd:\" + r.password + \"\\r\\n\";\n    }, r.parseRtpParameters = function (e) {\n      for (var t = {\n        codecs: [],\n        headerExtensions: [],\n        fecMechanisms: [],\n        rtcp: []\n      }, n = r.splitLines(e)[0].split(\" \"), a = 3; a < n.length; a++) {\n        var s = n[a],\n            i = r.matchPrefix(e, \"a=rtpmap:\" + s + \" \")[0];\n\n        if (i) {\n          var p = r.parseRtpMap(i),\n              c = r.matchPrefix(e, \"a=fmtp:\" + s + \" \");\n\n          switch (p.parameters = c.length ? r.parseFmtp(c[0]) : {}, p.rtcpFeedback = r.matchPrefix(e, \"a=rtcp-fb:\" + s + \" \").map(r.parseRtcpFb), t.codecs.push(p), p.name.toUpperCase()) {\n            case \"RED\":\n            case \"ULPFEC\":\n              t.fecMechanisms.push(p.name.toUpperCase());\n          }\n        }\n      }\n\n      return r.matchPrefix(e, \"a=extmap:\").forEach(function (e) {\n        t.headerExtensions.push(r.parseExtmap(e));\n      }), t;\n    }, r.writeRtpDescription = function (e, t) {\n      var n = \"\";\n      n += \"m=\" + e + \" \", n += t.codecs.length > 0 ? \"9\" : \"0\", n += \" UDP/TLS/RTP/SAVPF \", n += t.codecs.map(function (r) {\n        return void 0 !== r.preferredPayloadType ? r.preferredPayloadType : r.payloadType;\n      }).join(\" \") + \"\\r\\n\", n += \"c=IN IP4 0.0.0.0\\r\\n\", n += \"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\", t.codecs.forEach(function (e) {\n        n += r.writeRtpMap(e), n += r.writeFmtp(e), n += r.writeRtcpFb(e);\n      });\n      var a = 0;\n      return t.codecs.forEach(function (r) {\n        r.maxptime > a && (a = r.maxptime);\n      }), a > 0 && (n += \"a=maxptime:\" + a + \"\\r\\n\"), n += \"a=rtcp-mux\\r\\n\", t.headerExtensions && t.headerExtensions.forEach(function (e) {\n        n += r.writeExtmap(e);\n      }), n;\n    }, r.parseRtpEncodingParameters = function (e) {\n      var t,\n          n = [],\n          a = r.parseRtpParameters(e),\n          s = -1 !== a.fecMechanisms.indexOf(\"RED\"),\n          i = -1 !== a.fecMechanisms.indexOf(\"ULPFEC\"),\n          p = r.matchPrefix(e, \"a=ssrc:\").map(function (e) {\n        return r.parseSsrcMedia(e);\n      }).filter(function (r) {\n        return \"cname\" === r.attribute;\n      }),\n          c = p.length > 0 && p[0].ssrc,\n          o = r.matchPrefix(e, \"a=ssrc-group:FID\").map(function (r) {\n        return r.substr(17).split(\" \").map(function (r) {\n          return parseInt(r, 10);\n        });\n      });\n      o.length > 0 && o[0].length > 1 && o[0][0] === c && (t = o[0][1]), a.codecs.forEach(function (r) {\n        if (\"RTX\" === r.name.toUpperCase() && r.parameters.apt) {\n          var e = {\n            ssrc: c,\n            codecPayloadType: parseInt(r.parameters.apt, 10)\n          };\n          c && t && (e.rtx = {\n            ssrc: t\n          }), n.push(e), s && ((e = JSON.parse(JSON.stringify(e))).fec = {\n            ssrc: c,\n            mechanism: i ? \"red+ulpfec\" : \"red\"\n          }, n.push(e));\n        }\n      }), 0 === n.length && c && n.push({\n        ssrc: c\n      });\n      var u = r.matchPrefix(e, \"b=\");\n      return u.length && (u = 0 === u[0].indexOf(\"b=TIAS:\") ? parseInt(u[0].substr(7), 10) : 0 === u[0].indexOf(\"b=AS:\") ? 1e3 * parseInt(u[0].substr(5), 10) * .95 - 16e3 : void 0, n.forEach(function (r) {\n        r.maxBitrate = u;\n      })), n;\n    }, r.parseRtcpParameters = function (e) {\n      var t = {},\n          n = r.matchPrefix(e, \"a=ssrc:\").map(function (e) {\n        return r.parseSsrcMedia(e);\n      }).filter(function (r) {\n        return \"cname\" === r.attribute;\n      })[0];\n      n && (t.cname = n.value, t.ssrc = n.ssrc);\n      var a = r.matchPrefix(e, \"a=rtcp-rsize\");\n      t.reducedSize = a.length > 0, t.compound = 0 === a.length;\n      var s = r.matchPrefix(e, \"a=rtcp-mux\");\n      return t.mux = s.length > 0, t;\n    }, r.parseMsid = function (e) {\n      var t,\n          n = r.matchPrefix(e, \"a=msid:\");\n      if (1 === n.length) return {\n        stream: (t = n[0].substr(7).split(\" \"))[0],\n        track: t[1]\n      };\n      var a = r.matchPrefix(e, \"a=ssrc:\").map(function (e) {\n        return r.parseSsrcMedia(e);\n      }).filter(function (r) {\n        return \"msid\" === r.attribute;\n      });\n      return a.length > 0 ? {\n        stream: (t = a[0].value.split(\" \"))[0],\n        track: t[1]\n      } : void 0;\n    }, r.parseSctpDescription = function (e) {\n      var t,\n          n = r.parseMLine(e),\n          a = r.matchPrefix(e, \"a=max-message-size:\");\n      a.length > 0 && (t = parseInt(a[0].substr(19), 10)), isNaN(t) && (t = 65536);\n      var s = r.matchPrefix(e, \"a=sctp-port:\");\n      if (s.length > 0) return {\n        port: parseInt(s[0].substr(12), 10),\n        protocol: n.fmt,\n        maxMessageSize: t\n      };\n\n      if (r.matchPrefix(e, \"a=sctpmap:\").length > 0) {\n        var i = r.matchPrefix(e, \"a=sctpmap:\")[0].substr(10).split(\" \");\n        return {\n          port: parseInt(i[0], 10),\n          protocol: i[1],\n          maxMessageSize: t\n        };\n      }\n    }, r.writeSctpDescription = function (r, e) {\n      var t = [];\n      return t = \"DTLS/SCTP\" !== r.protocol ? [\"m=\" + r.kind + \" 9 \" + r.protocol + \" \" + e.protocol + \"\\r\\n\", \"c=IN IP4 0.0.0.0\\r\\n\", \"a=sctp-port:\" + e.port + \"\\r\\n\"] : [\"m=\" + r.kind + \" 9 \" + r.protocol + \" \" + e.port + \"\\r\\n\", \"c=IN IP4 0.0.0.0\\r\\n\", \"a=sctpmap:\" + e.port + \" \" + e.protocol + \" 65535\\r\\n\"], void 0 !== e.maxMessageSize && t.push(\"a=max-message-size:\" + e.maxMessageSize + \"\\r\\n\"), t.join(\"\");\n    }, r.generateSessionId = function () {\n      return Math.random().toString().substr(2, 21);\n    }, r.writeSessionBoilerplate = function (e, t, n) {\n      var a = void 0 !== t ? t : 2;\n      return \"v=0\\r\\no=\" + (n || \"thisisadapterortc\") + \" \" + (e || r.generateSessionId()) + \" \" + a + \" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\";\n    }, r.writeMediaSection = function (e, t, n, a) {\n      var s = r.writeRtpDescription(e.kind, t);\n\n      if (s += r.writeIceParameters(e.iceGatherer.getLocalParameters()), s += r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), \"offer\" === n ? \"actpass\" : \"active\"), s += \"a=mid:\" + e.mid + \"\\r\\n\", e.direction ? s += \"a=\" + e.direction + \"\\r\\n\" : e.rtpSender && e.rtpReceiver ? s += \"a=sendrecv\\r\\n\" : e.rtpSender ? s += \"a=sendonly\\r\\n\" : e.rtpReceiver ? s += \"a=recvonly\\r\\n\" : s += \"a=inactive\\r\\n\", e.rtpSender) {\n        var i = \"msid:\" + a.id + \" \" + e.rtpSender.track.id + \"\\r\\n\";\n        s += \"a=\" + i, s += \"a=ssrc:\" + e.sendEncodingParameters[0].ssrc + \" \" + i, e.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + e.sendEncodingParameters[0].rtx.ssrc + \" \" + i, s += \"a=ssrc-group:FID \" + e.sendEncodingParameters[0].ssrc + \" \" + e.sendEncodingParameters[0].rtx.ssrc + \"\\r\\n\");\n      }\n\n      return s += \"a=ssrc:\" + e.sendEncodingParameters[0].ssrc + \" cname:\" + r.localCName + \"\\r\\n\", e.rtpSender && e.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + e.sendEncodingParameters[0].rtx.ssrc + \" cname:\" + r.localCName + \"\\r\\n\"), s;\n    }, r.getDirection = function (e, t) {\n      for (var n = r.splitLines(e), a = 0; a < n.length; a++) {\n        switch (n[a]) {\n          case \"a=sendrecv\":\n          case \"a=sendonly\":\n          case \"a=recvonly\":\n          case \"a=inactive\":\n            return n[a].substr(2);\n        }\n      }\n\n      return t ? r.getDirection(t) : \"sendrecv\";\n    }, r.getKind = function (e) {\n      return r.splitLines(e)[0].split(\" \")[0].substr(2);\n    }, r.isRejected = function (r) {\n      return \"0\" === r.split(\" \", 2)[1];\n    }, r.parseMLine = function (e) {\n      var t = r.splitLines(e)[0].substr(2).split(\" \");\n      return {\n        kind: t[0],\n        port: parseInt(t[1], 10),\n        protocol: t[2],\n        fmt: t.slice(3).join(\" \")\n      };\n    }, r.parseOLine = function (e) {\n      var t = r.matchPrefix(e, \"o=\")[0].substr(2).split(\" \");\n      return {\n        username: t[0],\n        sessionId: t[1],\n        sessionVersion: parseInt(t[2], 10),\n        netType: t[3],\n        addressType: t[4],\n        address: t[5]\n      };\n    }, r.isValidSDP = function (e) {\n      if (\"string\" != typeof e || 0 === e.length) return !1;\n\n      for (var t = r.splitLines(e), n = 0; n < t.length; n++) {\n        if (t[n].length < 2 || \"=\" !== t[n].charAt(1)) return !1;\n      }\n\n      return !0;\n    }, \"object\" == typeof module && (module.exports = r);\n  }, {}],\n  \"NJ2u\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = require(\"sdp\");\n\n    function t(e) {\n      return {\n        inboundrtp: \"inbound-rtp\",\n        outboundrtp: \"outbound-rtp\",\n        candidatepair: \"candidate-pair\",\n        localcandidate: \"local-candidate\",\n        remotecandidate: \"remote-candidate\"\n      }[e.type] || e.type;\n    }\n\n    function r(t, r, n, a, i) {\n      var s = e.writeRtpDescription(t.kind, r);\n\n      if (s += e.writeIceParameters(t.iceGatherer.getLocalParameters()), s += e.writeDtlsParameters(t.dtlsTransport.getLocalParameters(), \"offer\" === n ? \"actpass\" : i || \"active\"), s += \"a=mid:\" + t.mid + \"\\r\\n\", t.rtpSender && t.rtpReceiver ? s += \"a=sendrecv\\r\\n\" : t.rtpSender ? s += \"a=sendonly\\r\\n\" : t.rtpReceiver ? s += \"a=recvonly\\r\\n\" : s += \"a=inactive\\r\\n\", t.rtpSender) {\n        var o = t.rtpSender._initialTrackId || t.rtpSender.track.id;\n        t.rtpSender._initialTrackId = o;\n        var c = \"msid:\" + (a ? a.id : \"-\") + \" \" + o + \"\\r\\n\";\n        s += \"a=\" + c, s += \"a=ssrc:\" + t.sendEncodingParameters[0].ssrc + \" \" + c, t.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + t.sendEncodingParameters[0].rtx.ssrc + \" \" + c, s += \"a=ssrc-group:FID \" + t.sendEncodingParameters[0].ssrc + \" \" + t.sendEncodingParameters[0].rtx.ssrc + \"\\r\\n\");\n      }\n\n      return s += \"a=ssrc:\" + t.sendEncodingParameters[0].ssrc + \" cname:\" + e.localCName + \"\\r\\n\", t.rtpSender && t.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + t.sendEncodingParameters[0].rtx.ssrc + \" cname:\" + e.localCName + \"\\r\\n\"), s;\n    }\n\n    function n(e, t) {\n      var r = !1;\n      return (e = JSON.parse(JSON.stringify(e))).filter(function (e) {\n        if (e && (e.urls || e.url)) {\n          var n = e.urls || e.url;\n          e.url && !e.urls && console.warn(\"RTCIceServer.url is deprecated! Use urls instead.\");\n          var a = \"string\" == typeof n;\n          return a && (n = [n]), n = n.filter(function (e) {\n            return 0 === e.indexOf(\"turn:\") && -1 !== e.indexOf(\"transport=udp\") && -1 === e.indexOf(\"turn:[\") && !r ? (r = !0, !0) : 0 === e.indexOf(\"stun:\") && t >= 14393 && -1 === e.indexOf(\"?transport=udp\");\n          }), delete e.url, e.urls = a ? n[0] : n, !!n.length;\n        }\n      });\n    }\n\n    function a(e, t) {\n      var r = {\n        codecs: [],\n        headerExtensions: [],\n        fecMechanisms: []\n      },\n          n = function n(e, t) {\n        e = parseInt(e, 10);\n\n        for (var r = 0; r < t.length; r++) {\n          if (t[r].payloadType === e || t[r].preferredPayloadType === e) return t[r];\n        }\n      },\n          a = function a(e, t, r, _a) {\n        var i = n(e.parameters.apt, r),\n            s = n(t.parameters.apt, _a);\n        return i && s && i.name.toLowerCase() === s.name.toLowerCase();\n      };\n\n      return e.codecs.forEach(function (n) {\n        for (var i = 0; i < t.codecs.length; i++) {\n          var s = t.codecs[i];\n\n          if (n.name.toLowerCase() === s.name.toLowerCase() && n.clockRate === s.clockRate) {\n            if (\"rtx\" === n.name.toLowerCase() && n.parameters && s.parameters.apt && !a(n, s, e.codecs, t.codecs)) continue;\n            (s = JSON.parse(JSON.stringify(s))).numChannels = Math.min(n.numChannels, s.numChannels), r.codecs.push(s), s.rtcpFeedback = s.rtcpFeedback.filter(function (e) {\n              for (var t = 0; t < n.rtcpFeedback.length; t++) {\n                if (n.rtcpFeedback[t].type === e.type && n.rtcpFeedback[t].parameter === e.parameter) return !0;\n              }\n\n              return !1;\n            });\n            break;\n          }\n        }\n      }), e.headerExtensions.forEach(function (e) {\n        for (var n = 0; n < t.headerExtensions.length; n++) {\n          var a = t.headerExtensions[n];\n\n          if (e.uri === a.uri) {\n            r.headerExtensions.push(a);\n            break;\n          }\n        }\n      }), r;\n    }\n\n    function i(e, t, r) {\n      return -1 !== {\n        offer: {\n          setLocalDescription: [\"stable\", \"have-local-offer\"],\n          setRemoteDescription: [\"stable\", \"have-remote-offer\"]\n        },\n        answer: {\n          setLocalDescription: [\"have-remote-offer\", \"have-local-pranswer\"],\n          setRemoteDescription: [\"have-local-offer\", \"have-remote-pranswer\"]\n        }\n      }[t][e].indexOf(r);\n    }\n\n    function s(e, t) {\n      var r = e.getRemoteCandidates().find(function (e) {\n        return t.foundation === e.foundation && t.ip === e.ip && t.port === e.port && t.priority === e.priority && t.protocol === e.protocol && t.type === e.type;\n      });\n      return r || e.addRemoteCandidate(t), !r;\n    }\n\n    function o(e, t) {\n      var r = new Error(t);\n      return r.name = e, r.code = {\n        NotSupportedError: 9,\n        InvalidStateError: 11,\n        InvalidAccessError: 15,\n        TypeError: void 0,\n        OperationError: void 0\n      }[e], r;\n    }\n\n    module.exports = function (c, d) {\n      function p(e, t) {\n        t.addTrack(e), t.dispatchEvent(new c.MediaStreamTrackEvent(\"addtrack\", {\n          track: e\n        }));\n      }\n\n      function l(e, t, r, n) {\n        var a = new Event(\"track\");\n        a.track = t, a.receiver = r, a.transceiver = {\n          receiver: r\n        }, a.streams = n, c.setTimeout(function () {\n          e._dispatchEvent(\"track\", a);\n        });\n      }\n\n      var f = function f(t) {\n        var r = this,\n            a = document.createDocumentFragment();\n        if ([\"addEventListener\", \"removeEventListener\", \"dispatchEvent\"].forEach(function (e) {\n          r[e] = a[e].bind(a);\n        }), this.canTrickleIceCandidates = null, this.needNegotiation = !1, this.localStreams = [], this.remoteStreams = [], this._localDescription = null, this._remoteDescription = null, this.signalingState = \"stable\", this.iceConnectionState = \"new\", this.connectionState = \"new\", this.iceGatheringState = \"new\", t = JSON.parse(JSON.stringify(t || {})), this.usingBundle = \"max-bundle\" === t.bundlePolicy, \"negotiate\" === t.rtcpMuxPolicy) throw o(\"NotSupportedError\", \"rtcpMuxPolicy 'negotiate' is not supported\");\n\n        switch (t.rtcpMuxPolicy || (t.rtcpMuxPolicy = \"require\"), t.iceTransportPolicy) {\n          case \"all\":\n          case \"relay\":\n            break;\n\n          default:\n            t.iceTransportPolicy = \"all\";\n        }\n\n        switch (t.bundlePolicy) {\n          case \"balanced\":\n          case \"max-compat\":\n          case \"max-bundle\":\n            break;\n\n          default:\n            t.bundlePolicy = \"balanced\";\n        }\n\n        if (t.iceServers = n(t.iceServers || [], d), this._iceGatherers = [], t.iceCandidatePoolSize) for (var i = t.iceCandidatePoolSize; i > 0; i--) {\n          this._iceGatherers.push(new c.RTCIceGatherer({\n            iceServers: t.iceServers,\n            gatherPolicy: t.iceTransportPolicy\n          }));\n        } else t.iceCandidatePoolSize = 0;\n        this._config = t, this.transceivers = [], this._sdpSessionId = e.generateSessionId(), this._sdpSessionVersion = 0, this._dtlsRole = void 0, this._isClosed = !1;\n      };\n\n      Object.defineProperty(f.prototype, \"localDescription\", {\n        configurable: !0,\n        get: function get() {\n          return this._localDescription;\n        }\n      }), Object.defineProperty(f.prototype, \"remoteDescription\", {\n        configurable: !0,\n        get: function get() {\n          return this._remoteDescription;\n        }\n      }), f.prototype.onicecandidate = null, f.prototype.onaddstream = null, f.prototype.ontrack = null, f.prototype.onremovestream = null, f.prototype.onsignalingstatechange = null, f.prototype.oniceconnectionstatechange = null, f.prototype.onconnectionstatechange = null, f.prototype.onicegatheringstatechange = null, f.prototype.onnegotiationneeded = null, f.prototype.ondatachannel = null, f.prototype._dispatchEvent = function (e, t) {\n        this._isClosed || (this.dispatchEvent(t), \"function\" == typeof this[\"on\" + e] && this[\"on\" + e](t));\n      }, f.prototype._emitGatheringStateChange = function () {\n        var e = new Event(\"icegatheringstatechange\");\n\n        this._dispatchEvent(\"icegatheringstatechange\", e);\n      }, f.prototype.getConfiguration = function () {\n        return this._config;\n      }, f.prototype.getLocalStreams = function () {\n        return this.localStreams;\n      }, f.prototype.getRemoteStreams = function () {\n        return this.remoteStreams;\n      }, f.prototype._createTransceiver = function (e, t) {\n        var r = this.transceivers.length > 0,\n            n = {\n          track: null,\n          iceGatherer: null,\n          iceTransport: null,\n          dtlsTransport: null,\n          localCapabilities: null,\n          remoteCapabilities: null,\n          rtpSender: null,\n          rtpReceiver: null,\n          kind: e,\n          mid: null,\n          sendEncodingParameters: null,\n          recvEncodingParameters: null,\n          stream: null,\n          associatedRemoteMediaStreams: [],\n          wantReceive: !0\n        };\n        if (this.usingBundle && r) n.iceTransport = this.transceivers[0].iceTransport, n.dtlsTransport = this.transceivers[0].dtlsTransport;else {\n          var a = this._createIceAndDtlsTransports();\n\n          n.iceTransport = a.iceTransport, n.dtlsTransport = a.dtlsTransport;\n        }\n        return t || this.transceivers.push(n), n;\n      }, f.prototype.addTrack = function (e, t) {\n        if (this._isClosed) throw o(\"InvalidStateError\", \"Attempted to call addTrack on a closed peerconnection.\");\n        var r;\n        if (this.transceivers.find(function (t) {\n          return t.track === e;\n        })) throw o(\"InvalidAccessError\", \"Track already exists.\");\n\n        for (var n = 0; n < this.transceivers.length; n++) {\n          this.transceivers[n].track || this.transceivers[n].kind !== e.kind || (r = this.transceivers[n]);\n        }\n\n        return r || (r = this._createTransceiver(e.kind)), this._maybeFireNegotiationNeeded(), -1 === this.localStreams.indexOf(t) && this.localStreams.push(t), r.track = e, r.stream = t, r.rtpSender = new c.RTCRtpSender(e, r.dtlsTransport), r.rtpSender;\n      }, f.prototype.addStream = function (e) {\n        var t = this;\n        if (d >= 15025) e.getTracks().forEach(function (r) {\n          t.addTrack(r, e);\n        });else {\n          var r = e.clone();\n          e.getTracks().forEach(function (e, t) {\n            var n = r.getTracks()[t];\n            e.addEventListener(\"enabled\", function (e) {\n              n.enabled = e.enabled;\n            });\n          }), r.getTracks().forEach(function (e) {\n            t.addTrack(e, r);\n          });\n        }\n      }, f.prototype.removeTrack = function (e) {\n        if (this._isClosed) throw o(\"InvalidStateError\", \"Attempted to call removeTrack on a closed peerconnection.\");\n        if (!(e instanceof c.RTCRtpSender)) throw new TypeError(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\");\n        var t = this.transceivers.find(function (t) {\n          return t.rtpSender === e;\n        });\n        if (!t) throw o(\"InvalidAccessError\", \"Sender was not created by this connection.\");\n        var r = t.stream;\n        t.rtpSender.stop(), t.rtpSender = null, t.track = null, t.stream = null, -1 === this.transceivers.map(function (e) {\n          return e.stream;\n        }).indexOf(r) && this.localStreams.indexOf(r) > -1 && this.localStreams.splice(this.localStreams.indexOf(r), 1), this._maybeFireNegotiationNeeded();\n      }, f.prototype.removeStream = function (e) {\n        var t = this;\n        e.getTracks().forEach(function (e) {\n          var r = t.getSenders().find(function (t) {\n            return t.track === e;\n          });\n          r && t.removeTrack(r);\n        });\n      }, f.prototype.getSenders = function () {\n        return this.transceivers.filter(function (e) {\n          return !!e.rtpSender;\n        }).map(function (e) {\n          return e.rtpSender;\n        });\n      }, f.prototype.getReceivers = function () {\n        return this.transceivers.filter(function (e) {\n          return !!e.rtpReceiver;\n        }).map(function (e) {\n          return e.rtpReceiver;\n        });\n      }, f.prototype._createIceGatherer = function (e, t) {\n        var r = this;\n        if (t && e > 0) return this.transceivers[0].iceGatherer;\n        if (this._iceGatherers.length) return this._iceGatherers.shift();\n        var n = new c.RTCIceGatherer({\n          iceServers: this._config.iceServers,\n          gatherPolicy: this._config.iceTransportPolicy\n        });\n        return Object.defineProperty(n, \"state\", {\n          value: \"new\",\n          writable: !0\n        }), this.transceivers[e].bufferedCandidateEvents = [], this.transceivers[e].bufferCandidates = function (t) {\n          var a = !t.candidate || 0 === Object.keys(t.candidate).length;\n          n.state = a ? \"completed\" : \"gathering\", null !== r.transceivers[e].bufferedCandidateEvents && r.transceivers[e].bufferedCandidateEvents.push(t);\n        }, n.addEventListener(\"localcandidate\", this.transceivers[e].bufferCandidates), n;\n      }, f.prototype._gather = function (t, r) {\n        var n = this,\n            a = this.transceivers[r].iceGatherer;\n\n        if (!a.onlocalcandidate) {\n          var i = this.transceivers[r].bufferedCandidateEvents;\n          this.transceivers[r].bufferedCandidateEvents = null, a.removeEventListener(\"localcandidate\", this.transceivers[r].bufferCandidates), a.onlocalcandidate = function (i) {\n            if (!(n.usingBundle && r > 0)) {\n              var s = new Event(\"icecandidate\");\n              s.candidate = {\n                sdpMid: t,\n                sdpMLineIndex: r\n              };\n              var o = i.candidate,\n                  c = !o || 0 === Object.keys(o).length;\n              if (c) \"new\" !== a.state && \"gathering\" !== a.state || (a.state = \"completed\");else {\n                \"new\" === a.state && (a.state = \"gathering\"), o.component = 1, o.ufrag = a.getLocalParameters().usernameFragment;\n                var d = e.writeCandidate(o);\n                s.candidate = Object.assign(s.candidate, e.parseCandidate(d)), s.candidate.candidate = d, s.candidate.toJSON = function () {\n                  return {\n                    candidate: s.candidate.candidate,\n                    sdpMid: s.candidate.sdpMid,\n                    sdpMLineIndex: s.candidate.sdpMLineIndex,\n                    usernameFragment: s.candidate.usernameFragment\n                  };\n                };\n              }\n              var p = e.getMediaSections(n._localDescription.sdp);\n              p[s.candidate.sdpMLineIndex] += c ? \"a=end-of-candidates\\r\\n\" : \"a=\" + s.candidate.candidate + \"\\r\\n\", n._localDescription.sdp = e.getDescription(n._localDescription.sdp) + p.join(\"\");\n              var l = n.transceivers.every(function (e) {\n                return e.iceGatherer && \"completed\" === e.iceGatherer.state;\n              });\n              \"gathering\" !== n.iceGatheringState && (n.iceGatheringState = \"gathering\", n._emitGatheringStateChange()), c || n._dispatchEvent(\"icecandidate\", s), l && (n._dispatchEvent(\"icecandidate\", new Event(\"icecandidate\")), n.iceGatheringState = \"complete\", n._emitGatheringStateChange());\n            }\n          }, c.setTimeout(function () {\n            i.forEach(function (e) {\n              a.onlocalcandidate(e);\n            });\n          }, 0);\n        }\n      }, f.prototype._createIceAndDtlsTransports = function () {\n        var e = this,\n            t = new c.RTCIceTransport(null);\n\n        t.onicestatechange = function () {\n          e._updateIceConnectionState(), e._updateConnectionState();\n        };\n\n        var r = new c.RTCDtlsTransport(t);\n        return r.ondtlsstatechange = function () {\n          e._updateConnectionState();\n        }, r.onerror = function () {\n          Object.defineProperty(r, \"state\", {\n            value: \"failed\",\n            writable: !0\n          }), e._updateConnectionState();\n        }, {\n          iceTransport: t,\n          dtlsTransport: r\n        };\n      }, f.prototype._disposeIceAndDtlsTransports = function (e) {\n        var t = this.transceivers[e].iceGatherer;\n        t && (delete t.onlocalcandidate, delete this.transceivers[e].iceGatherer);\n        var r = this.transceivers[e].iceTransport;\n        r && (delete r.onicestatechange, delete this.transceivers[e].iceTransport);\n        var n = this.transceivers[e].dtlsTransport;\n        n && (delete n.ondtlsstatechange, delete n.onerror, delete this.transceivers[e].dtlsTransport);\n      }, f.prototype._transceive = function (t, r, n) {\n        var i = a(t.localCapabilities, t.remoteCapabilities);\n        r && t.rtpSender && (i.encodings = t.sendEncodingParameters, i.rtcp = {\n          cname: e.localCName,\n          compound: t.rtcpParameters.compound\n        }, t.recvEncodingParameters.length && (i.rtcp.ssrc = t.recvEncodingParameters[0].ssrc), t.rtpSender.send(i)), n && t.rtpReceiver && i.codecs.length > 0 && (\"video\" === t.kind && t.recvEncodingParameters && d < 15019 && t.recvEncodingParameters.forEach(function (e) {\n          delete e.rtx;\n        }), t.recvEncodingParameters.length ? i.encodings = t.recvEncodingParameters : i.encodings = [{}], i.rtcp = {\n          compound: t.rtcpParameters.compound\n        }, t.rtcpParameters.cname && (i.rtcp.cname = t.rtcpParameters.cname), t.sendEncodingParameters.length && (i.rtcp.ssrc = t.sendEncodingParameters[0].ssrc), t.rtpReceiver.receive(i));\n      }, f.prototype.setLocalDescription = function (t) {\n        var r,\n            n,\n            s = this;\n        if (-1 === [\"offer\", \"answer\"].indexOf(t.type)) return Promise.reject(o(\"TypeError\", 'Unsupported type \"' + t.type + '\"'));\n        if (!i(\"setLocalDescription\", t.type, s.signalingState) || s._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not set local \" + t.type + \" in state \" + s.signalingState));\n        if (\"offer\" === t.type) r = e.splitSections(t.sdp), n = r.shift(), r.forEach(function (t, r) {\n          var n = e.parseRtpParameters(t);\n          s.transceivers[r].localCapabilities = n;\n        }), s.transceivers.forEach(function (e, t) {\n          s._gather(e.mid, t);\n        });else if (\"answer\" === t.type) {\n          r = e.splitSections(s._remoteDescription.sdp), n = r.shift();\n          var c = e.matchPrefix(n, \"a=ice-lite\").length > 0;\n          r.forEach(function (t, r) {\n            var i = s.transceivers[r],\n                o = i.iceGatherer,\n                d = i.iceTransport,\n                p = i.dtlsTransport,\n                l = i.localCapabilities,\n                f = i.remoteCapabilities;\n\n            if (!(e.isRejected(t) && 0 === e.matchPrefix(t, \"a=bundle-only\").length) && !i.rejected) {\n              var u = e.getIceParameters(t, n),\n                  v = e.getDtlsParameters(t, n);\n              c && (v.role = \"server\"), s.usingBundle && 0 !== r || (s._gather(i.mid, r), \"new\" === d.state && d.start(o, u, c ? \"controlling\" : \"controlled\"), \"new\" === p.state && p.start(v));\n              var h = a(l, f);\n\n              s._transceive(i, h.codecs.length > 0, !1);\n            }\n          });\n        }\n        return s._localDescription = {\n          type: t.type,\n          sdp: t.sdp\n        }, \"offer\" === t.type ? s._updateSignalingState(\"have-local-offer\") : s._updateSignalingState(\"stable\"), Promise.resolve();\n      }, f.prototype.setRemoteDescription = function (t) {\n        var r = this;\n        if (-1 === [\"offer\", \"answer\"].indexOf(t.type)) return Promise.reject(o(\"TypeError\", 'Unsupported type \"' + t.type + '\"'));\n        if (!i(\"setRemoteDescription\", t.type, r.signalingState) || r._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not set remote \" + t.type + \" in state \" + r.signalingState));\n        var n = {};\n        r.remoteStreams.forEach(function (e) {\n          n[e.id] = e;\n        });\n        var f = [],\n            u = e.splitSections(t.sdp),\n            v = u.shift(),\n            h = e.matchPrefix(v, \"a=ice-lite\").length > 0,\n            m = e.matchPrefix(v, \"a=group:BUNDLE \").length > 0;\n        r.usingBundle = m;\n        var g = e.matchPrefix(v, \"a=ice-options:\")[0];\n        return r.canTrickleIceCandidates = !!g && g.substr(14).split(\" \").indexOf(\"trickle\") >= 0, u.forEach(function (i, o) {\n          var l = e.splitLines(i),\n              u = e.getKind(i),\n              g = e.isRejected(i) && 0 === e.matchPrefix(i, \"a=bundle-only\").length,\n              y = l[0].substr(2).split(\" \")[2],\n              S = e.getDirection(i, v),\n              T = e.parseMsid(i),\n              E = e.getMid(i) || e.generateIdentifier();\n          if (g || \"application\" === u && (\"DTLS/SCTP\" === y || \"UDP/DTLS/SCTP\" === y)) r.transceivers[o] = {\n            mid: E,\n            kind: u,\n            protocol: y,\n            rejected: !0\n          };else {\n            var C, P, w, R, _, k, b, x, D;\n\n            !g && r.transceivers[o] && r.transceivers[o].rejected && (r.transceivers[o] = r._createTransceiver(u, !0));\n            var I,\n                L,\n                M = e.parseRtpParameters(i);\n            g || (I = e.getIceParameters(i, v), (L = e.getDtlsParameters(i, v)).role = \"client\"), b = e.parseRtpEncodingParameters(i);\n            var O = e.parseRtcpParameters(i),\n                G = e.matchPrefix(i, \"a=end-of-candidates\", v).length > 0,\n                j = e.matchPrefix(i, \"a=candidate:\").map(function (t) {\n              return e.parseCandidate(t);\n            }).filter(function (e) {\n              return 1 === e.component;\n            });\n\n            if ((\"offer\" === t.type || \"answer\" === t.type) && !g && m && o > 0 && r.transceivers[o] && (r._disposeIceAndDtlsTransports(o), r.transceivers[o].iceGatherer = r.transceivers[0].iceGatherer, r.transceivers[o].iceTransport = r.transceivers[0].iceTransport, r.transceivers[o].dtlsTransport = r.transceivers[0].dtlsTransport, r.transceivers[o].rtpSender && r.transceivers[o].rtpSender.setTransport(r.transceivers[0].dtlsTransport), r.transceivers[o].rtpReceiver && r.transceivers[o].rtpReceiver.setTransport(r.transceivers[0].dtlsTransport)), \"offer\" !== t.type || g) {\n              if (\"answer\" === t.type && !g) {\n                P = (C = r.transceivers[o]).iceGatherer, w = C.iceTransport, R = C.dtlsTransport, _ = C.rtpReceiver, k = C.sendEncodingParameters, x = C.localCapabilities, r.transceivers[o].recvEncodingParameters = b, r.transceivers[o].remoteCapabilities = M, r.transceivers[o].rtcpParameters = O, j.length && \"new\" === w.state && (!h && !G || m && 0 !== o ? j.forEach(function (e) {\n                  s(C.iceTransport, e);\n                }) : w.setRemoteCandidates(j)), m && 0 !== o || (\"new\" === w.state && w.start(P, I, \"controlling\"), \"new\" === R.state && R.start(L)), !a(C.localCapabilities, C.remoteCapabilities).codecs.filter(function (e) {\n                  return \"rtx\" === e.name.toLowerCase();\n                }).length && C.sendEncodingParameters[0].rtx && delete C.sendEncodingParameters[0].rtx, r._transceive(C, \"sendrecv\" === S || \"recvonly\" === S, \"sendrecv\" === S || \"sendonly\" === S), !_ || \"sendrecv\" !== S && \"sendonly\" !== S ? delete C.rtpReceiver : (D = _.track, T ? (n[T.stream] || (n[T.stream] = new c.MediaStream()), p(D, n[T.stream]), f.push([D, _, n[T.stream]])) : (n.default || (n.default = new c.MediaStream()), p(D, n.default), f.push([D, _, n.default])));\n              }\n            } else {\n              (C = r.transceivers[o] || r._createTransceiver(u)).mid = E, C.iceGatherer || (C.iceGatherer = r._createIceGatherer(o, m)), j.length && \"new\" === C.iceTransport.state && (!G || m && 0 !== o ? j.forEach(function (e) {\n                s(C.iceTransport, e);\n              }) : C.iceTransport.setRemoteCandidates(j)), x = c.RTCRtpReceiver.getCapabilities(u), d < 15019 && (x.codecs = x.codecs.filter(function (e) {\n                return \"rtx\" !== e.name;\n              })), k = C.sendEncodingParameters || [{\n                ssrc: 1001 * (2 * o + 2)\n              }];\n              var N,\n                  A = !1;\n\n              if (\"sendrecv\" === S || \"sendonly\" === S) {\n                if (A = !C.rtpReceiver, _ = C.rtpReceiver || new c.RTCRtpReceiver(C.dtlsTransport, u), A) D = _.track, T && \"-\" === T.stream || (T ? (n[T.stream] || (n[T.stream] = new c.MediaStream(), Object.defineProperty(n[T.stream], \"id\", {\n                  get: function get() {\n                    return T.stream;\n                  }\n                })), Object.defineProperty(D, \"id\", {\n                  get: function get() {\n                    return T.track;\n                  }\n                }), N = n[T.stream]) : (n.default || (n.default = new c.MediaStream()), N = n.default)), N && (p(D, N), C.associatedRemoteMediaStreams.push(N)), f.push([D, _, N]);\n              } else C.rtpReceiver && C.rtpReceiver.track && (C.associatedRemoteMediaStreams.forEach(function (e) {\n                var t,\n                    r,\n                    n = e.getTracks().find(function (e) {\n                  return e.id === C.rtpReceiver.track.id;\n                });\n                n && (t = n, (r = e).removeTrack(t), r.dispatchEvent(new c.MediaStreamTrackEvent(\"removetrack\", {\n                  track: t\n                })));\n              }), C.associatedRemoteMediaStreams = []);\n\n              C.localCapabilities = x, C.remoteCapabilities = M, C.rtpReceiver = _, C.rtcpParameters = O, C.sendEncodingParameters = k, C.recvEncodingParameters = b, r._transceive(r.transceivers[o], !1, A);\n            }\n          }\n        }), void 0 === r._dtlsRole && (r._dtlsRole = \"offer\" === t.type ? \"active\" : \"passive\"), r._remoteDescription = {\n          type: t.type,\n          sdp: t.sdp\n        }, \"offer\" === t.type ? r._updateSignalingState(\"have-remote-offer\") : r._updateSignalingState(\"stable\"), Object.keys(n).forEach(function (e) {\n          var t = n[e];\n\n          if (t.getTracks().length) {\n            if (-1 === r.remoteStreams.indexOf(t)) {\n              r.remoteStreams.push(t);\n              var a = new Event(\"addstream\");\n              a.stream = t, c.setTimeout(function () {\n                r._dispatchEvent(\"addstream\", a);\n              });\n            }\n\n            f.forEach(function (e) {\n              var n = e[0],\n                  a = e[1];\n              t.id === e[2].id && l(r, n, a, [t]);\n            });\n          }\n        }), f.forEach(function (e) {\n          e[2] || l(r, e[0], e[1], []);\n        }), c.setTimeout(function () {\n          r && r.transceivers && r.transceivers.forEach(function (e) {\n            e.iceTransport && \"new\" === e.iceTransport.state && e.iceTransport.getRemoteCandidates().length > 0 && (console.warn(\"Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification\"), e.iceTransport.addRemoteCandidate({}));\n          });\n        }, 4e3), Promise.resolve();\n      }, f.prototype.close = function () {\n        this.transceivers.forEach(function (e) {\n          e.iceTransport && e.iceTransport.stop(), e.dtlsTransport && e.dtlsTransport.stop(), e.rtpSender && e.rtpSender.stop(), e.rtpReceiver && e.rtpReceiver.stop();\n        }), this._isClosed = !0, this._updateSignalingState(\"closed\");\n      }, f.prototype._updateSignalingState = function (e) {\n        this.signalingState = e;\n        var t = new Event(\"signalingstatechange\");\n\n        this._dispatchEvent(\"signalingstatechange\", t);\n      }, f.prototype._maybeFireNegotiationNeeded = function () {\n        var e = this;\n        \"stable\" === this.signalingState && !0 !== this.needNegotiation && (this.needNegotiation = !0, c.setTimeout(function () {\n          if (e.needNegotiation) {\n            e.needNegotiation = !1;\n            var t = new Event(\"negotiationneeded\");\n\n            e._dispatchEvent(\"negotiationneeded\", t);\n          }\n        }, 0));\n      }, f.prototype._updateIceConnectionState = function () {\n        var e,\n            t = {\n          new: 0,\n          closed: 0,\n          checking: 0,\n          connected: 0,\n          completed: 0,\n          disconnected: 0,\n          failed: 0\n        };\n\n        if (this.transceivers.forEach(function (e) {\n          e.iceTransport && !e.rejected && t[e.iceTransport.state]++;\n        }), e = \"new\", t.failed > 0 ? e = \"failed\" : t.checking > 0 ? e = \"checking\" : t.disconnected > 0 ? e = \"disconnected\" : t.new > 0 ? e = \"new\" : t.connected > 0 ? e = \"connected\" : t.completed > 0 && (e = \"completed\"), e !== this.iceConnectionState) {\n          this.iceConnectionState = e;\n          var r = new Event(\"iceconnectionstatechange\");\n\n          this._dispatchEvent(\"iceconnectionstatechange\", r);\n        }\n      }, f.prototype._updateConnectionState = function () {\n        var e,\n            t = {\n          new: 0,\n          closed: 0,\n          connecting: 0,\n          connected: 0,\n          completed: 0,\n          disconnected: 0,\n          failed: 0\n        };\n\n        if (this.transceivers.forEach(function (e) {\n          e.iceTransport && e.dtlsTransport && !e.rejected && (t[e.iceTransport.state]++, t[e.dtlsTransport.state]++);\n        }), t.connected += t.completed, e = \"new\", t.failed > 0 ? e = \"failed\" : t.connecting > 0 ? e = \"connecting\" : t.disconnected > 0 ? e = \"disconnected\" : t.new > 0 ? e = \"new\" : t.connected > 0 && (e = \"connected\"), e !== this.connectionState) {\n          this.connectionState = e;\n          var r = new Event(\"connectionstatechange\");\n\n          this._dispatchEvent(\"connectionstatechange\", r);\n        }\n      }, f.prototype.createOffer = function () {\n        var t = this;\n        if (t._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not call createOffer after close\"));\n        var n = t.transceivers.filter(function (e) {\n          return \"audio\" === e.kind;\n        }).length,\n            a = t.transceivers.filter(function (e) {\n          return \"video\" === e.kind;\n        }).length,\n            i = arguments[0];\n\n        if (i) {\n          if (i.mandatory || i.optional) throw new TypeError(\"Legacy mandatory/optional constraints not supported.\");\n          void 0 !== i.offerToReceiveAudio && (n = !0 === i.offerToReceiveAudio ? 1 : !1 === i.offerToReceiveAudio ? 0 : i.offerToReceiveAudio), void 0 !== i.offerToReceiveVideo && (a = !0 === i.offerToReceiveVideo ? 1 : !1 === i.offerToReceiveVideo ? 0 : i.offerToReceiveVideo);\n        }\n\n        for (t.transceivers.forEach(function (e) {\n          \"audio\" === e.kind ? --n < 0 && (e.wantReceive = !1) : \"video\" === e.kind && --a < 0 && (e.wantReceive = !1);\n        }); n > 0 || a > 0;) {\n          n > 0 && (t._createTransceiver(\"audio\"), n--), a > 0 && (t._createTransceiver(\"video\"), a--);\n        }\n\n        var s = e.writeSessionBoilerplate(t._sdpSessionId, t._sdpSessionVersion++);\n        t.transceivers.forEach(function (r, n) {\n          var a = r.track,\n              i = r.kind,\n              s = r.mid || e.generateIdentifier();\n          r.mid = s, r.iceGatherer || (r.iceGatherer = t._createIceGatherer(n, t.usingBundle));\n          var o = c.RTCRtpSender.getCapabilities(i);\n          d < 15019 && (o.codecs = o.codecs.filter(function (e) {\n            return \"rtx\" !== e.name;\n          })), o.codecs.forEach(function (e) {\n            \"H264\" === e.name && void 0 === e.parameters[\"level-asymmetry-allowed\"] && (e.parameters[\"level-asymmetry-allowed\"] = \"1\"), r.remoteCapabilities && r.remoteCapabilities.codecs && r.remoteCapabilities.codecs.forEach(function (t) {\n              e.name.toLowerCase() === t.name.toLowerCase() && e.clockRate === t.clockRate && (e.preferredPayloadType = t.payloadType);\n            });\n          }), o.headerExtensions.forEach(function (e) {\n            (r.remoteCapabilities && r.remoteCapabilities.headerExtensions || []).forEach(function (t) {\n              e.uri === t.uri && (e.id = t.id);\n            });\n          });\n          var p = r.sendEncodingParameters || [{\n            ssrc: 1001 * (2 * n + 1)\n          }];\n          a && d >= 15019 && \"video\" === i && !p[0].rtx && (p[0].rtx = {\n            ssrc: p[0].ssrc + 1\n          }), r.wantReceive && (r.rtpReceiver = new c.RTCRtpReceiver(r.dtlsTransport, i)), r.localCapabilities = o, r.sendEncodingParameters = p;\n        }), \"max-compat\" !== t._config.bundlePolicy && (s += \"a=group:BUNDLE \" + t.transceivers.map(function (e) {\n          return e.mid;\n        }).join(\" \") + \"\\r\\n\"), s += \"a=ice-options:trickle\\r\\n\", t.transceivers.forEach(function (n, a) {\n          s += r(n, n.localCapabilities, \"offer\", n.stream, t._dtlsRole), s += \"a=rtcp-rsize\\r\\n\", !n.iceGatherer || \"new\" === t.iceGatheringState || 0 !== a && t.usingBundle || (n.iceGatherer.getLocalCandidates().forEach(function (t) {\n            t.component = 1, s += \"a=\" + e.writeCandidate(t) + \"\\r\\n\";\n          }), \"completed\" === n.iceGatherer.state && (s += \"a=end-of-candidates\\r\\n\"));\n        });\n        var p = new c.RTCSessionDescription({\n          type: \"offer\",\n          sdp: s\n        });\n        return Promise.resolve(p);\n      }, f.prototype.createAnswer = function () {\n        var t = this;\n        if (t._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not call createAnswer after close\"));\n        if (\"have-remote-offer\" !== t.signalingState && \"have-local-pranswer\" !== t.signalingState) return Promise.reject(o(\"InvalidStateError\", \"Can not call createAnswer in signalingState \" + t.signalingState));\n        var n = e.writeSessionBoilerplate(t._sdpSessionId, t._sdpSessionVersion++);\n        t.usingBundle && (n += \"a=group:BUNDLE \" + t.transceivers.map(function (e) {\n          return e.mid;\n        }).join(\" \") + \"\\r\\n\"), n += \"a=ice-options:trickle\\r\\n\";\n        var i = e.getMediaSections(t._remoteDescription.sdp).length;\n        t.transceivers.forEach(function (e, s) {\n          if (!(s + 1 > i)) {\n            if (e.rejected) return \"application\" === e.kind ? \"DTLS/SCTP\" === e.protocol ? n += \"m=application 0 DTLS/SCTP 5000\\r\\n\" : n += \"m=application 0 \" + e.protocol + \" webrtc-datachannel\\r\\n\" : \"audio\" === e.kind ? n += \"m=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\na=rtpmap:0 PCMU/8000\\r\\n\" : \"video\" === e.kind && (n += \"m=video 0 UDP/TLS/RTP/SAVPF 120\\r\\na=rtpmap:120 VP8/90000\\r\\n\"), void (n += \"c=IN IP4 0.0.0.0\\r\\na=inactive\\r\\na=mid:\" + e.mid + \"\\r\\n\");\n            var o;\n            if (e.stream) \"audio\" === e.kind ? o = e.stream.getAudioTracks()[0] : \"video\" === e.kind && (o = e.stream.getVideoTracks()[0]), o && d >= 15019 && \"video\" === e.kind && !e.sendEncodingParameters[0].rtx && (e.sendEncodingParameters[0].rtx = {\n              ssrc: e.sendEncodingParameters[0].ssrc + 1\n            });\n            var c = a(e.localCapabilities, e.remoteCapabilities);\n            !c.codecs.filter(function (e) {\n              return \"rtx\" === e.name.toLowerCase();\n            }).length && e.sendEncodingParameters[0].rtx && delete e.sendEncodingParameters[0].rtx, n += r(e, c, \"answer\", e.stream, t._dtlsRole), e.rtcpParameters && e.rtcpParameters.reducedSize && (n += \"a=rtcp-rsize\\r\\n\");\n          }\n        });\n        var s = new c.RTCSessionDescription({\n          type: \"answer\",\n          sdp: n\n        });\n        return Promise.resolve(s);\n      }, f.prototype.addIceCandidate = function (t) {\n        var r,\n            n = this;\n        return t && void 0 === t.sdpMLineIndex && !t.sdpMid ? Promise.reject(new TypeError(\"sdpMLineIndex or sdpMid required\")) : new Promise(function (a, i) {\n          if (!n._remoteDescription) return i(o(\"InvalidStateError\", \"Can not add ICE candidate without a remote description\"));\n\n          if (t && \"\" !== t.candidate) {\n            var c = t.sdpMLineIndex;\n            if (t.sdpMid) for (var d = 0; d < n.transceivers.length; d++) {\n              if (n.transceivers[d].mid === t.sdpMid) {\n                c = d;\n                break;\n              }\n            }\n            var p = n.transceivers[c];\n            if (!p) return i(o(\"OperationError\", \"Can not add ICE candidate\"));\n            if (p.rejected) return a();\n            var l = Object.keys(t.candidate).length > 0 ? e.parseCandidate(t.candidate) : {};\n            if (\"tcp\" === l.protocol && (0 === l.port || 9 === l.port)) return a();\n            if (l.component && 1 !== l.component) return a();\n            if ((0 === c || c > 0 && p.iceTransport !== n.transceivers[0].iceTransport) && !s(p.iceTransport, l)) return i(o(\"OperationError\", \"Can not add ICE candidate\"));\n            var f = t.candidate.trim();\n            0 === f.indexOf(\"a=\") && (f = f.substr(2)), (r = e.getMediaSections(n._remoteDescription.sdp))[c] += \"a=\" + (l.type ? f : \"end-of-candidates\") + \"\\r\\n\", n._remoteDescription.sdp = e.getDescription(n._remoteDescription.sdp) + r.join(\"\");\n          } else for (var u = 0; u < n.transceivers.length && (n.transceivers[u].rejected || (n.transceivers[u].iceTransport.addRemoteCandidate({}), (r = e.getMediaSections(n._remoteDescription.sdp))[u] += \"a=end-of-candidates\\r\\n\", n._remoteDescription.sdp = e.getDescription(n._remoteDescription.sdp) + r.join(\"\"), !n.usingBundle)); u++) {\n            ;\n          }\n\n          a();\n        });\n      }, f.prototype.getStats = function (e) {\n        if (e && e instanceof c.MediaStreamTrack) {\n          var t = null;\n          if (this.transceivers.forEach(function (r) {\n            r.rtpSender && r.rtpSender.track === e ? t = r.rtpSender : r.rtpReceiver && r.rtpReceiver.track === e && (t = r.rtpReceiver);\n          }), !t) throw o(\"InvalidAccessError\", \"Invalid selector.\");\n          return t.getStats();\n        }\n\n        var r = [];\n        return this.transceivers.forEach(function (e) {\n          [\"rtpSender\", \"rtpReceiver\", \"iceGatherer\", \"iceTransport\", \"dtlsTransport\"].forEach(function (t) {\n            e[t] && r.push(e[t].getStats());\n          });\n        }), Promise.all(r).then(function (e) {\n          var t = new Map();\n          return e.forEach(function (e) {\n            e.forEach(function (e) {\n              t.set(e.id, e);\n            });\n          }), t;\n        });\n      };\n      [\"RTCRtpSender\", \"RTCRtpReceiver\", \"RTCIceGatherer\", \"RTCIceTransport\", \"RTCDtlsTransport\"].forEach(function (e) {\n        var r = c[e];\n\n        if (r && r.prototype && r.prototype.getStats) {\n          var n = r.prototype.getStats;\n\n          r.prototype.getStats = function () {\n            return n.apply(this).then(function (e) {\n              var r = new Map();\n              return Object.keys(e).forEach(function (n) {\n                e[n].type = t(e[n]), r.set(n, e[n]);\n              }), r;\n            });\n          };\n        }\n      });\n      var u = [\"createOffer\", \"createAnswer\"];\n      return u.forEach(function (e) {\n        var t = f.prototype[e];\n\n        f.prototype[e] = function () {\n          var e = arguments;\n          return \"function\" == typeof e[0] || \"function\" == typeof e[1] ? t.apply(this, [arguments[2]]).then(function (t) {\n            \"function\" == typeof e[0] && e[0].apply(null, [t]);\n          }, function (t) {\n            \"function\" == typeof e[1] && e[1].apply(null, [t]);\n          }) : t.apply(this, arguments);\n        };\n      }), (u = [\"setLocalDescription\", \"setRemoteDescription\", \"addIceCandidate\"]).forEach(function (e) {\n        var t = f.prototype[e];\n\n        f.prototype[e] = function () {\n          var e = arguments;\n          return \"function\" == typeof e[1] || \"function\" == typeof e[2] ? t.apply(this, arguments).then(function () {\n            \"function\" == typeof e[1] && e[1].apply(null);\n          }, function (t) {\n            \"function\" == typeof e[2] && e[2].apply(null, [t]);\n          }) : t.apply(this, arguments);\n        };\n      }), [\"getStats\"].forEach(function (e) {\n        var t = f.prototype[e];\n\n        f.prototype[e] = function () {\n          var e = arguments;\n          return \"function\" == typeof e[1] ? t.apply(this, arguments).then(function () {\n            \"function\" == typeof e[1] && e[1].apply(null);\n          }) : t.apply(this, arguments);\n        };\n      }), f;\n    };\n  }, {\n    \"sdp\": \"YHvh\"\n  }],\n  \"YdKx\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e) {\n      var r = e && e.navigator,\n          t = r.mediaDevices.getUserMedia.bind(r.mediaDevices);\n\n      r.mediaDevices.getUserMedia = function (e) {\n        return t(e).catch(function (e) {\n          return Promise.reject(function (e) {\n            return {\n              name: {\n                PermissionDeniedError: \"NotAllowedError\"\n              }[e.name] || e.name,\n              message: e.message,\n              constraint: e.constraint,\n              toString: function toString() {\n                return this.name;\n              }\n            };\n          }(e));\n        });\n      };\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetUserMedia = e;\n  }, {}],\n  \"P3bV\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e) {\n      \"getDisplayMedia\" in e.navigator && e.navigator.mediaDevices && (e.navigator.mediaDevices && \"getDisplayMedia\" in e.navigator.mediaDevices || (e.navigator.mediaDevices.getDisplayMedia = e.navigator.getDisplayMedia.bind(e.navigator)));\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetDisplayMedia = e;\n  }, {}],\n  \"XRic\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimPeerConnection = a, exports.shimReplaceTrack = p, Object.defineProperty(exports, \"shimGetUserMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return n.shimGetUserMedia;\n      }\n    }), Object.defineProperty(exports, \"shimGetDisplayMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return i.shimGetDisplayMedia;\n      }\n    });\n\n    var e = s(require(\"../utils\")),\n        t = require(\"./filtericeservers\"),\n        r = o(require(\"rtcpeerconnection-shim\")),\n        n = require(\"./getusermedia\"),\n        i = require(\"./getdisplaymedia\");\n\n    function o(e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    }\n\n    function c() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return c = function c() {\n        return e;\n      }, e;\n    }\n\n    function s(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = c();\n      if (t && t.has(e)) return t.get(e);\n      var r = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var o = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          o && (o.get || o.set) ? Object.defineProperty(r, i, o) : r[i] = e[i];\n        }\n      }\n\n      return r.default = e, t && t.set(e, r), r;\n    }\n\n    function a(n) {\n      var i = e.detectBrowser(n);\n\n      if (n.RTCIceGatherer && (n.RTCIceCandidate || (n.RTCIceCandidate = function (e) {\n        return e;\n      }), n.RTCSessionDescription || (n.RTCSessionDescription = function (e) {\n        return e;\n      }), i.version < 15025)) {\n        var o = Object.getOwnPropertyDescriptor(n.MediaStreamTrack.prototype, \"enabled\");\n        Object.defineProperty(n.MediaStreamTrack.prototype, \"enabled\", {\n          set: function set(e) {\n            o.set.call(this, e);\n            var t = new Event(\"enabled\");\n            t.enabled = e, this.dispatchEvent(t);\n          }\n        });\n      }\n\n      !n.RTCRtpSender || \"dtmf\" in n.RTCRtpSender.prototype || Object.defineProperty(n.RTCRtpSender.prototype, \"dtmf\", {\n        get: function get() {\n          return void 0 === this._dtmf && (\"audio\" === this.track.kind ? this._dtmf = new n.RTCDtmfSender(this) : \"video\" === this.track.kind && (this._dtmf = null)), this._dtmf;\n        }\n      }), n.RTCDtmfSender && !n.RTCDTMFSender && (n.RTCDTMFSender = n.RTCDtmfSender);\n      var c = (0, r.default)(n, i.version);\n      n.RTCPeerConnection = function (r) {\n        return r && r.iceServers && (r.iceServers = (0, t.filterIceServers)(r.iceServers, i.version), e.log(\"ICE servers after filtering:\", r.iceServers)), new c(r);\n      }, n.RTCPeerConnection.prototype = c.prototype;\n    }\n\n    function p(e) {\n      !e.RTCRtpSender || \"replaceTrack\" in e.RTCRtpSender.prototype || (e.RTCRtpSender.prototype.replaceTrack = e.RTCRtpSender.prototype.setTrack);\n    }\n  }, {\n    \"../utils\": \"iSxC\",\n    \"./filtericeservers\": \"NZ1C\",\n    \"rtcpeerconnection-shim\": \"NJ2u\",\n    \"./getusermedia\": \"YdKx\",\n    \"./getdisplaymedia\": \"P3bV\"\n  }],\n  \"GzSv\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetUserMedia = n;\n    var e = o(require(\"../utils\"));\n\n    function t() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return t = function t() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var o = t();\n      if (o && o.has(e)) return o.get(e);\n      var r = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(r, i, a) : r[i] = e[i];\n        }\n      }\n\n      return r.default = e, o && o.set(e, r), r;\n    }\n\n    function r(e) {\n      return (r = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function n(t) {\n      var o = e.detectBrowser(t),\n          n = t && t.navigator,\n          i = t && t.MediaStreamTrack;\n\n      if (n.getUserMedia = function (t, o, r) {\n        e.deprecated(\"navigator.getUserMedia\", \"navigator.mediaDevices.getUserMedia\"), n.mediaDevices.getUserMedia(t).then(o, r);\n      }, !(o.version > 55 && \"autoGainControl\" in n.mediaDevices.getSupportedConstraints())) {\n        var a = function a(e, t, o) {\n          t in e && !(o in e) && (e[o] = e[t], delete e[t]);\n        },\n            s = n.mediaDevices.getUserMedia.bind(n.mediaDevices);\n\n        if (n.mediaDevices.getUserMedia = function (e) {\n          return \"object\" === r(e) && \"object\" === r(e.audio) && (e = JSON.parse(JSON.stringify(e)), a(e.audio, \"autoGainControl\", \"mozAutoGainControl\"), a(e.audio, \"noiseSuppression\", \"mozNoiseSuppression\")), s(e);\n        }, i && i.prototype.getSettings) {\n          var p = i.prototype.getSettings;\n\n          i.prototype.getSettings = function () {\n            var e = p.apply(this, arguments);\n            return a(e, \"mozAutoGainControl\", \"autoGainControl\"), a(e, \"mozNoiseSuppression\", \"noiseSuppression\"), e;\n          };\n        }\n\n        if (i && i.prototype.applyConstraints) {\n          var u = i.prototype.applyConstraints;\n\n          i.prototype.applyConstraints = function (e) {\n            return \"audio\" === this.kind && \"object\" === r(e) && (e = JSON.parse(JSON.stringify(e)), a(e, \"autoGainControl\", \"mozAutoGainControl\"), a(e, \"noiseSuppression\", \"mozNoiseSuppression\")), u.apply(this, [e]);\n          };\n        }\n      }\n    }\n  }, {\n    \"../utils\": \"iSxC\"\n  }],\n  \"UuGU\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e, i) {\n      e.navigator.mediaDevices && \"getDisplayMedia\" in e.navigator.mediaDevices || e.navigator.mediaDevices && (e.navigator.mediaDevices.getDisplayMedia = function (a) {\n        if (!a || !a.video) {\n          var t = new DOMException(\"getDisplayMedia without video constraints is undefined\");\n          return t.name = \"NotFoundError\", t.code = 8, Promise.reject(t);\n        }\n\n        return !0 === a.video ? a.video = {\n          mediaSource: i\n        } : a.video.mediaSource = i, e.navigator.mediaDevices.getUserMedia(a);\n      });\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetDisplayMedia = e;\n  }, {}],\n  \"Fzdr\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimOnTrack = c, exports.shimPeerConnection = s, exports.shimSenderGetStats = p, exports.shimReceiverGetStats = u, exports.shimRemoveStream = f, exports.shimRTCDataChannel = C, exports.shimAddTransceiver = d, exports.shimCreateOffer = y, exports.shimCreateAnswer = l, Object.defineProperty(exports, \"shimGetUserMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return t.shimGetUserMedia;\n      }\n    }), Object.defineProperty(exports, \"shimGetDisplayMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return r.shimGetDisplayMedia;\n      }\n    });\n\n    var e = o(require(\"../utils\")),\n        t = require(\"./getusermedia\"),\n        r = require(\"./getdisplaymedia\");\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = n();\n      if (t && t.has(e)) return t.get(e);\n      var r = {},\n          o = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = o ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(r, i, a) : r[i] = e[i];\n        }\n      }\n\n      return r.default = e, t && t.set(e, r), r;\n    }\n\n    function i(e, t, r) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: r,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = r, e;\n    }\n\n    function a(e) {\n      return (a = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function c(e) {\n      \"object\" === a(e) && e.RTCTrackEvent && \"receiver\" in e.RTCTrackEvent.prototype && !(\"transceiver\" in e.RTCTrackEvent.prototype) && Object.defineProperty(e.RTCTrackEvent.prototype, \"transceiver\", {\n        get: function get() {\n          return {\n            receiver: this.receiver\n          };\n        }\n      });\n    }\n\n    function s(t) {\n      var r = e.detectBrowser(t);\n\n      if (\"object\" === a(t) && (t.RTCPeerConnection || t.mozRTCPeerConnection)) {\n        if (!t.RTCPeerConnection && t.mozRTCPeerConnection && (t.RTCPeerConnection = t.mozRTCPeerConnection), r.version < 53 && [\"setLocalDescription\", \"setRemoteDescription\", \"addIceCandidate\"].forEach(function (e) {\n          var r = t.RTCPeerConnection.prototype[e],\n              n = i({}, e, function () {\n            return arguments[0] = new (\"addIceCandidate\" === e ? t.RTCIceCandidate : t.RTCSessionDescription)(arguments[0]), r.apply(this, arguments);\n          });\n          t.RTCPeerConnection.prototype[e] = n[e];\n        }), r.version < 68) {\n          var n = t.RTCPeerConnection.prototype.addIceCandidate;\n\n          t.RTCPeerConnection.prototype.addIceCandidate = function () {\n            return arguments[0] ? arguments[0] && \"\" === arguments[0].candidate ? Promise.resolve() : n.apply(this, arguments) : (arguments[1] && arguments[1].apply(null), Promise.resolve());\n          };\n        }\n\n        var o = {\n          inboundrtp: \"inbound-rtp\",\n          outboundrtp: \"outbound-rtp\",\n          candidatepair: \"candidate-pair\",\n          localcandidate: \"local-candidate\",\n          remotecandidate: \"remote-candidate\"\n        },\n            c = t.RTCPeerConnection.prototype.getStats;\n\n        t.RTCPeerConnection.prototype.getStats = function () {\n          var _arguments2 = Array.prototype.slice.call(arguments),\n              e = _arguments2[0],\n              t = _arguments2[1],\n              n = _arguments2[2];\n\n          return c.apply(this, [e || null]).then(function (e) {\n            if (r.version < 53 && !t) try {\n              e.forEach(function (e) {\n                e.type = o[e.type] || e.type;\n              });\n            } catch (n) {\n              if (\"TypeError\" !== n.name) throw n;\n              e.forEach(function (t, r) {\n                e.set(r, Object.assign({}, t, {\n                  type: o[t.type] || t.type\n                }));\n              });\n            }\n            return e;\n          }).then(t, n);\n        };\n      }\n    }\n\n    function p(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection && e.RTCRtpSender && !(e.RTCRtpSender && \"getStats\" in e.RTCRtpSender.prototype)) {\n        var t = e.RTCPeerConnection.prototype.getSenders;\n        t && (e.RTCPeerConnection.prototype.getSenders = function () {\n          var e = this,\n              r = t.apply(this, []);\n          return r.forEach(function (t) {\n            return t._pc = e;\n          }), r;\n        });\n        var r = e.RTCPeerConnection.prototype.addTrack;\n        r && (e.RTCPeerConnection.prototype.addTrack = function () {\n          var e = r.apply(this, arguments);\n          return e._pc = this, e;\n        }), e.RTCRtpSender.prototype.getStats = function () {\n          return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map());\n        };\n      }\n    }\n\n    function u(t) {\n      if (\"object\" === a(t) && t.RTCPeerConnection && t.RTCRtpSender && !(t.RTCRtpSender && \"getStats\" in t.RTCRtpReceiver.prototype)) {\n        var r = t.RTCPeerConnection.prototype.getReceivers;\n        r && (t.RTCPeerConnection.prototype.getReceivers = function () {\n          var e = this,\n              t = r.apply(this, []);\n          return t.forEach(function (t) {\n            return t._pc = e;\n          }), t;\n        }), e.wrapPeerConnectionEvent(t, \"track\", function (e) {\n          return e.receiver._pc = e.srcElement, e;\n        }), t.RTCRtpReceiver.prototype.getStats = function () {\n          return this._pc.getStats(this.track);\n        };\n      }\n    }\n\n    function f(t) {\n      !t.RTCPeerConnection || \"removeStream\" in t.RTCPeerConnection.prototype || (t.RTCPeerConnection.prototype.removeStream = function (t) {\n        var r = this;\n        e.deprecated(\"removeStream\", \"removeTrack\"), this.getSenders().forEach(function (e) {\n          e.track && t.getTracks().includes(e.track) && r.removeTrack(e);\n        });\n      });\n    }\n\n    function C(e) {\n      e.DataChannel && !e.RTCDataChannel && (e.RTCDataChannel = e.DataChannel);\n    }\n\n    function d(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.addTransceiver;\n        t && (e.RTCPeerConnection.prototype.addTransceiver = function () {\n          this.setParametersPromises = [];\n          var e = arguments[1],\n              r = e && \"sendEncodings\" in e;\n          r && e.sendEncodings.forEach(function (e) {\n            if (\"rid\" in e) {\n              if (!/^[a-z0-9]{0,16}$/i.test(e.rid)) throw new TypeError(\"Invalid RID value provided.\");\n            }\n\n            if (\"scaleResolutionDownBy\" in e && !(parseFloat(e.scaleResolutionDownBy) >= 1)) throw new RangeError(\"scale_resolution_down_by must be >= 1.0\");\n            if (\"maxFramerate\" in e && !(parseFloat(e.maxFramerate) >= 0)) throw new RangeError(\"max_framerate must be >= 0.0\");\n          });\n          var n = t.apply(this, arguments);\n\n          if (r) {\n            var o = n.sender,\n                i = o.getParameters();\n            \"encodings\" in i || (i.encodings = e.sendEncodings, this.setParametersPromises.push(o.setParameters(i).catch(function () {})));\n          }\n\n          return n;\n        });\n      }\n    }\n\n    function y(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.createOffer;\n\n        e.RTCPeerConnection.prototype.createOffer = function () {\n          var e = arguments,\n              r = this;\n          return this.setParametersPromises && this.setParametersPromises.length ? Promise.all(this.setParametersPromises).then(function () {\n            return t.apply(r, e);\n          }).finally(function () {\n            r.setParametersPromises = [];\n          }) : t.apply(this, arguments);\n        };\n      }\n    }\n\n    function l(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.createAnswer;\n\n        e.RTCPeerConnection.prototype.createAnswer = function () {\n          var e = arguments,\n              r = this;\n          return this.setParametersPromises && this.setParametersPromises.length ? Promise.all(this.setParametersPromises).then(function () {\n            return t.apply(r, e);\n          }).finally(function () {\n            r.setParametersPromises = [];\n          }) : t.apply(this, arguments);\n        };\n      }\n    }\n  }, {\n    \"../utils\": \"iSxC\",\n    \"./getusermedia\": \"GzSv\",\n    \"./getdisplaymedia\": \"UuGU\"\n  }],\n  \"t1lL\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimLocalStreamsAPI = n, exports.shimRemoteStreamsAPI = i, exports.shimCallbacksAPI = a, exports.shimGetUserMedia = s, exports.shimConstraints = c, exports.shimRTCIceServerUrls = d, exports.shimTrackEventTransceiver = f, exports.shimCreateOfferLegacy = p;\n    var e = r(require(\"../utils\"));\n\n    function t() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return t = function t() {\n        return e;\n      }, e;\n    }\n\n    function r(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var r = t();\n      if (r && r.has(e)) return r.get(e);\n      var o = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(o, i, a) : o[i] = e[i];\n        }\n      }\n\n      return o.default = e, r && r.set(e, o), o;\n    }\n\n    function o(e) {\n      return (o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function n(e) {\n      if (\"object\" === o(e) && e.RTCPeerConnection) {\n        if (\"getLocalStreams\" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.getLocalStreams = function () {\n          return this._localStreams || (this._localStreams = []), this._localStreams;\n        }), !(\"addStream\" in e.RTCPeerConnection.prototype)) {\n          var t = e.RTCPeerConnection.prototype.addTrack;\n          e.RTCPeerConnection.prototype.addStream = function (e) {\n            var r = this;\n            this._localStreams || (this._localStreams = []), this._localStreams.includes(e) || this._localStreams.push(e), e.getAudioTracks().forEach(function (o) {\n              return t.call(r, o, e);\n            }), e.getVideoTracks().forEach(function (o) {\n              return t.call(r, o, e);\n            });\n          }, e.RTCPeerConnection.prototype.addTrack = function (e) {\n            var r = arguments[1];\n            return r && (this._localStreams ? this._localStreams.includes(r) || this._localStreams.push(r) : this._localStreams = [r]), t.apply(this, arguments);\n          };\n        }\n\n        \"removeStream\" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.removeStream = function (e) {\n          var t = this;\n          this._localStreams || (this._localStreams = []);\n\n          var r = this._localStreams.indexOf(e);\n\n          if (-1 !== r) {\n            this._localStreams.splice(r, 1);\n\n            var o = e.getTracks();\n            this.getSenders().forEach(function (e) {\n              o.includes(e.track) && t.removeTrack(e);\n            });\n          }\n        });\n      }\n    }\n\n    function i(e) {\n      if (\"object\" === o(e) && e.RTCPeerConnection && (\"getRemoteStreams\" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.getRemoteStreams = function () {\n        return this._remoteStreams ? this._remoteStreams : [];\n      }), !(\"onaddstream\" in e.RTCPeerConnection.prototype))) {\n        Object.defineProperty(e.RTCPeerConnection.prototype, \"onaddstream\", {\n          get: function get() {\n            return this._onaddstream;\n          },\n          set: function set(e) {\n            var t = this;\n            this._onaddstream && (this.removeEventListener(\"addstream\", this._onaddstream), this.removeEventListener(\"track\", this._onaddstreampoly)), this.addEventListener(\"addstream\", this._onaddstream = e), this.addEventListener(\"track\", this._onaddstreampoly = function (e) {\n              e.streams.forEach(function (e) {\n                if (t._remoteStreams || (t._remoteStreams = []), !t._remoteStreams.includes(e)) {\n                  t._remoteStreams.push(e);\n\n                  var r = new Event(\"addstream\");\n                  r.stream = e, t.dispatchEvent(r);\n                }\n              });\n            });\n          }\n        });\n        var t = e.RTCPeerConnection.prototype.setRemoteDescription;\n\n        e.RTCPeerConnection.prototype.setRemoteDescription = function () {\n          var e = this;\n          return this._onaddstreampoly || this.addEventListener(\"track\", this._onaddstreampoly = function (t) {\n            t.streams.forEach(function (t) {\n              if (e._remoteStreams || (e._remoteStreams = []), !(e._remoteStreams.indexOf(t) >= 0)) {\n                e._remoteStreams.push(t);\n\n                var r = new Event(\"addstream\");\n                r.stream = t, e.dispatchEvent(r);\n              }\n            });\n          }), t.apply(e, arguments);\n        };\n      }\n    }\n\n    function a(e) {\n      if (\"object\" === o(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype,\n            r = t.createOffer,\n            n = t.createAnswer,\n            i = t.setLocalDescription,\n            a = t.setRemoteDescription,\n            s = t.addIceCandidate;\n        t.createOffer = function (e, t) {\n          var o = arguments.length >= 2 ? arguments[2] : arguments[0],\n              n = r.apply(this, [o]);\n          return t ? (n.then(e, t), Promise.resolve()) : n;\n        }, t.createAnswer = function (e, t) {\n          var r = arguments.length >= 2 ? arguments[2] : arguments[0],\n              o = n.apply(this, [r]);\n          return t ? (o.then(e, t), Promise.resolve()) : o;\n        };\n\n        var c = function c(e, t, r) {\n          var o = i.apply(this, [e]);\n          return r ? (o.then(t, r), Promise.resolve()) : o;\n        };\n\n        t.setLocalDescription = c, c = function c(e, t, r) {\n          var o = a.apply(this, [e]);\n          return r ? (o.then(t, r), Promise.resolve()) : o;\n        }, t.setRemoteDescription = c, c = function c(e, t, r) {\n          var o = s.apply(this, [e]);\n          return r ? (o.then(t, r), Promise.resolve()) : o;\n        }, t.addIceCandidate = c;\n      }\n    }\n\n    function s(e) {\n      var t = e && e.navigator;\n\n      if (t.mediaDevices && t.mediaDevices.getUserMedia) {\n        var r = t.mediaDevices,\n            o = r.getUserMedia.bind(r);\n\n        t.mediaDevices.getUserMedia = function (e) {\n          return o(c(e));\n        };\n      }\n\n      !t.getUserMedia && t.mediaDevices && t.mediaDevices.getUserMedia && (t.getUserMedia = function (e, r, o) {\n        t.mediaDevices.getUserMedia(e).then(r, o);\n      }.bind(t));\n    }\n\n    function c(t) {\n      return t && void 0 !== t.video ? Object.assign({}, t, {\n        video: e.compactObject(t.video)\n      }) : t;\n    }\n\n    function d(t) {\n      var r = t.RTCPeerConnection;\n      t.RTCPeerConnection = function (t, o) {\n        if (t && t.iceServers) {\n          for (var n = [], i = 0; i < t.iceServers.length; i++) {\n            var a = t.iceServers[i];\n            !a.hasOwnProperty(\"urls\") && a.hasOwnProperty(\"url\") ? (e.deprecated(\"RTCIceServer.url\", \"RTCIceServer.urls\"), (a = JSON.parse(JSON.stringify(a))).urls = a.url, delete a.url, n.push(a)) : n.push(t.iceServers[i]);\n          }\n\n          t.iceServers = n;\n        }\n\n        return new r(t, o);\n      }, t.RTCPeerConnection.prototype = r.prototype, \"generateCertificate\" in t.RTCPeerConnection && Object.defineProperty(t.RTCPeerConnection, \"generateCertificate\", {\n        get: function get() {\n          return r.generateCertificate;\n        }\n      });\n    }\n\n    function f(e) {\n      \"object\" === o(e) && e.RTCTrackEvent && \"receiver\" in e.RTCTrackEvent.prototype && !(\"transceiver\" in e.RTCTrackEvent.prototype) && Object.defineProperty(e.RTCTrackEvent.prototype, \"transceiver\", {\n        get: function get() {\n          return {\n            receiver: this.receiver\n          };\n        }\n      });\n    }\n\n    function p(e) {\n      var t = e.RTCPeerConnection.prototype.createOffer;\n\n      e.RTCPeerConnection.prototype.createOffer = function (e) {\n        if (e) {\n          void 0 !== e.offerToReceiveAudio && (e.offerToReceiveAudio = !!e.offerToReceiveAudio);\n          var r = this.getTransceivers().find(function (e) {\n            return \"audio\" === e.receiver.track.kind;\n          });\n          !1 === e.offerToReceiveAudio && r ? \"sendrecv\" === r.direction ? r.setDirection ? r.setDirection(\"sendonly\") : r.direction = \"sendonly\" : \"recvonly\" === r.direction && (r.setDirection ? r.setDirection(\"inactive\") : r.direction = \"inactive\") : !0 !== e.offerToReceiveAudio || r || this.addTransceiver(\"audio\"), void 0 !== e.offerToReceiveVideo && (e.offerToReceiveVideo = !!e.offerToReceiveVideo);\n          var o = this.getTransceivers().find(function (e) {\n            return \"video\" === e.receiver.track.kind;\n          });\n          !1 === e.offerToReceiveVideo && o ? \"sendrecv\" === o.direction ? o.setDirection ? o.setDirection(\"sendonly\") : o.direction = \"sendonly\" : \"recvonly\" === o.direction && (o.setDirection ? o.setDirection(\"inactive\") : o.direction = \"inactive\") : !0 !== e.offerToReceiveVideo || o || this.addTransceiver(\"video\");\n        }\n\n        return t.apply(this, arguments);\n      };\n    }\n  }, {\n    \"../utils\": \"iSxC\"\n  }],\n  \"GOQK\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimRTCIceCandidate = a, exports.shimMaxMessageSize = c, exports.shimSendThrowTypeError = s, exports.shimConnectionState = p, exports.removeAllowExtmapMixed = u;\n    var e = r(require(\"sdp\")),\n        t = o(require(\"./utils\"));\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = n();\n      if (t && t.has(e)) return t.get(e);\n      var o = {},\n          r = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = r ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(o, i, a) : o[i] = e[i];\n        }\n      }\n\n      return o.default = e, t && t.set(e, o), o;\n    }\n\n    function r(e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    }\n\n    function i(e) {\n      return (i = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function a(n) {\n      if (n.RTCIceCandidate && !(n.RTCIceCandidate && \"foundation\" in n.RTCIceCandidate.prototype)) {\n        var o = n.RTCIceCandidate;\n        n.RTCIceCandidate = function (t) {\n          if (\"object\" === i(t) && t.candidate && 0 === t.candidate.indexOf(\"a=\") && ((t = JSON.parse(JSON.stringify(t))).candidate = t.candidate.substr(2)), t.candidate && t.candidate.length) {\n            var n = new o(t),\n                r = e.default.parseCandidate(t.candidate),\n                a = Object.assign(n, r);\n            return a.toJSON = function () {\n              return {\n                candidate: a.candidate,\n                sdpMid: a.sdpMid,\n                sdpMLineIndex: a.sdpMLineIndex,\n                usernameFragment: a.usernameFragment\n              };\n            }, a;\n          }\n\n          return new o(t);\n        }, n.RTCIceCandidate.prototype = o.prototype, t.wrapPeerConnectionEvent(n, \"icecandidate\", function (e) {\n          return e.candidate && Object.defineProperty(e, \"candidate\", {\n            value: new n.RTCIceCandidate(e.candidate),\n            writable: \"false\"\n          }), e;\n        });\n      }\n    }\n\n    function c(n) {\n      if (n.RTCPeerConnection) {\n        var o = t.detectBrowser(n);\n        \"sctp\" in n.RTCPeerConnection.prototype || Object.defineProperty(n.RTCPeerConnection.prototype, \"sctp\", {\n          get: function get() {\n            return void 0 === this._sctp ? null : this._sctp;\n          }\n        });\n        var r = n.RTCPeerConnection.prototype.setRemoteDescription;\n\n        n.RTCPeerConnection.prototype.setRemoteDescription = function () {\n          if (this._sctp = null, \"chrome\" === o.browser && o.version >= 76) {\n            var _this$getConfiguratio = this.getConfiguration(),\n                t = _this$getConfiguratio.sdpSemantics;\n\n            \"plan-b\" === t && Object.defineProperty(this, \"sctp\", {\n              get: function get() {\n                return void 0 === this._sctp ? null : this._sctp;\n              },\n              enumerable: !0,\n              configurable: !0\n            });\n          }\n\n          if (function (t) {\n            if (!t || !t.sdp) return !1;\n            var n = e.default.splitSections(t.sdp);\n            return n.shift(), n.some(function (t) {\n              var n = e.default.parseMLine(t);\n              return n && \"application\" === n.kind && -1 !== n.protocol.indexOf(\"SCTP\");\n            });\n          }(arguments[0])) {\n            var n,\n                i = function (e) {\n              var t = e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n              if (null === t || t.length < 2) return -1;\n              var n = parseInt(t[1], 10);\n              return n != n ? -1 : n;\n            }(arguments[0]),\n                a = (p = i, u = 65536, \"firefox\" === o.browser && (u = o.version < 57 ? -1 === p ? 16384 : 2147483637 : o.version < 60 ? 57 === o.version ? 65535 : 65536 : 2147483637), u),\n                c = function (t, n) {\n              var r = 65536;\n              \"firefox\" === o.browser && 57 === o.version && (r = 65535);\n              var i = e.default.matchPrefix(t.sdp, \"a=max-message-size:\");\n              return i.length > 0 ? r = parseInt(i[0].substr(19), 10) : \"firefox\" === o.browser && -1 !== n && (r = 2147483637), r;\n            }(arguments[0], i);\n\n            n = 0 === a && 0 === c ? Number.POSITIVE_INFINITY : 0 === a || 0 === c ? Math.max(a, c) : Math.min(a, c);\n            var s = {};\n            Object.defineProperty(s, \"maxMessageSize\", {\n              get: function get() {\n                return n;\n              }\n            }), this._sctp = s;\n          }\n\n          var p, u;\n          return r.apply(this, arguments);\n        };\n      }\n    }\n\n    function s(e) {\n      if (e.RTCPeerConnection && \"createDataChannel\" in e.RTCPeerConnection.prototype) {\n        var n = e.RTCPeerConnection.prototype.createDataChannel;\n        e.RTCPeerConnection.prototype.createDataChannel = function () {\n          var e = n.apply(this, arguments);\n          return o(e, this), e;\n        }, t.wrapPeerConnectionEvent(e, \"datachannel\", function (e) {\n          return o(e.channel, e.target), e;\n        });\n      }\n\n      function o(e, t) {\n        var n = e.send;\n\n        e.send = function () {\n          var o = arguments[0],\n              r = o.length || o.size || o.byteLength;\n          if (\"open\" === e.readyState && t.sctp && r > t.sctp.maxMessageSize) throw new TypeError(\"Message too large (can send a maximum of \" + t.sctp.maxMessageSize + \" bytes)\");\n          return n.apply(e, arguments);\n        };\n      }\n    }\n\n    function p(e) {\n      if (e.RTCPeerConnection && !(\"connectionState\" in e.RTCPeerConnection.prototype)) {\n        var t = e.RTCPeerConnection.prototype;\n        Object.defineProperty(t, \"connectionState\", {\n          get: function get() {\n            return {\n              completed: \"connected\",\n              checking: \"connecting\"\n            }[this.iceConnectionState] || this.iceConnectionState;\n          },\n          enumerable: !0,\n          configurable: !0\n        }), Object.defineProperty(t, \"onconnectionstatechange\", {\n          get: function get() {\n            return this._onconnectionstatechange || null;\n          },\n          set: function set(e) {\n            this._onconnectionstatechange && (this.removeEventListener(\"connectionstatechange\", this._onconnectionstatechange), delete this._onconnectionstatechange), e && this.addEventListener(\"connectionstatechange\", this._onconnectionstatechange = e);\n          },\n          enumerable: !0,\n          configurable: !0\n        }), [\"setLocalDescription\", \"setRemoteDescription\"].forEach(function (e) {\n          var n = t[e];\n\n          t[e] = function () {\n            return this._connectionstatechangepoly || (this._connectionstatechangepoly = function (e) {\n              var t = e.target;\n\n              if (t._lastConnectionState !== t.connectionState) {\n                t._lastConnectionState = t.connectionState;\n                var n = new Event(\"connectionstatechange\", e);\n                t.dispatchEvent(n);\n              }\n\n              return e;\n            }, this.addEventListener(\"iceconnectionstatechange\", this._connectionstatechangepoly)), n.apply(this, arguments);\n          };\n        });\n      }\n    }\n\n    function u(e) {\n      if (e.RTCPeerConnection) {\n        var n = t.detectBrowser(e);\n\n        if (!(\"chrome\" === n.browser && n.version >= 71)) {\n          var o = e.RTCPeerConnection.prototype.setRemoteDescription;\n\n          e.RTCPeerConnection.prototype.setRemoteDescription = function (e) {\n            return e && e.sdp && -1 !== e.sdp.indexOf(\"\\na=extmap-allow-mixed\") && (e.sdp = e.sdp.split(\"\\n\").filter(function (e) {\n              return \"a=extmap-allow-mixed\" !== e.trim();\n            }).join(\"\\n\")), o.apply(this, arguments);\n          };\n        }\n      }\n    }\n  }, {\n    \"sdp\": \"YHvh\",\n    \"./utils\": \"iSxC\"\n  }],\n  \"KtlG\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.adapterFactory = m;\n    var e = o(require(\"./utils\")),\n        r = o(require(\"./chrome/chrome_shim\")),\n        i = o(require(\"./edge/edge_shim\")),\n        s = o(require(\"./firefox/firefox_shim\")),\n        t = o(require(\"./safari/safari_shim\")),\n        a = o(require(\"./common_shim\"));\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var r = n();\n      if (r && r.has(e)) return r.get(e);\n      var i = {},\n          s = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var t in e) {\n        if (Object.prototype.hasOwnProperty.call(e, t)) {\n          var a = s ? Object.getOwnPropertyDescriptor(e, t) : null;\n          a && (a.get || a.set) ? Object.defineProperty(i, t, a) : i[t] = e[t];\n        }\n      }\n\n      return i.default = e, r && r.set(e, i), i;\n    }\n\n    function m() {\n      var _ref = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n          n = _ref.window,\n          o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {\n        shimChrome: !0,\n        shimFirefox: !0,\n        shimEdge: !0,\n        shimSafari: !0\n      },\n          m = e.log,\n          h = e.detectBrowser(n),\n          d = {\n        browserDetails: h,\n        commonShim: a,\n        extractVersion: e.extractVersion,\n        disableLog: e.disableLog,\n        disableWarnings: e.disableWarnings\n      };\n\n      switch (h.browser) {\n        case \"chrome\":\n          if (!r || !r.shimPeerConnection || !o.shimChrome) return m(\"Chrome shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming chrome.\"), d.browserShim = r, r.shimGetUserMedia(n), r.shimMediaStream(n), r.shimPeerConnection(n), r.shimOnTrack(n), r.shimAddTrackRemoveTrack(n), r.shimGetSendersWithDtmf(n), r.shimGetStats(n), r.shimSenderReceiverGetStats(n), r.fixNegotiationNeeded(n), a.shimRTCIceCandidate(n), a.shimConnectionState(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n), a.removeAllowExtmapMixed(n);\n          break;\n\n        case \"firefox\":\n          if (!s || !s.shimPeerConnection || !o.shimFirefox) return m(\"Firefox shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming firefox.\"), d.browserShim = s, s.shimGetUserMedia(n), s.shimPeerConnection(n), s.shimOnTrack(n), s.shimRemoveStream(n), s.shimSenderGetStats(n), s.shimReceiverGetStats(n), s.shimRTCDataChannel(n), s.shimAddTransceiver(n), s.shimCreateOffer(n), s.shimCreateAnswer(n), a.shimRTCIceCandidate(n), a.shimConnectionState(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n);\n          break;\n\n        case \"edge\":\n          if (!i || !i.shimPeerConnection || !o.shimEdge) return m(\"MS edge shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming edge.\"), d.browserShim = i, i.shimGetUserMedia(n), i.shimGetDisplayMedia(n), i.shimPeerConnection(n), i.shimReplaceTrack(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n);\n          break;\n\n        case \"safari\":\n          if (!t || !o.shimSafari) return m(\"Safari shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming safari.\"), d.browserShim = t, t.shimRTCIceServerUrls(n), t.shimCreateOfferLegacy(n), t.shimCallbacksAPI(n), t.shimLocalStreamsAPI(n), t.shimRemoteStreamsAPI(n), t.shimTrackEventTransceiver(n), t.shimGetUserMedia(n), a.shimRTCIceCandidate(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n), a.removeAllowExtmapMixed(n);\n          break;\n\n        default:\n          m(\"Unsupported browser!\");\n      }\n\n      return d;\n    }\n  }, {\n    \"./utils\": \"iSxC\",\n    \"./chrome/chrome_shim\": \"uI5X\",\n    \"./edge/edge_shim\": \"XRic\",\n    \"./firefox/firefox_shim\": \"Fzdr\",\n    \"./safari/safari_shim\": \"t1lL\",\n    \"./common_shim\": \"GOQK\"\n  }],\n  \"tI1X\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.default = void 0;\n\n    var e = require(\"./adapter_factory.js\"),\n        r = (0, e.adapterFactory)({\n      window: window\n    }),\n        t = r;\n\n    exports.default = t;\n  }, {\n    \"./adapter_factory.js\": \"KtlG\"\n  }],\n  \"sXtV\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n    var t = e(require(\"webrtc-adapter\"));\n    exports.webRTCAdapter = t.default;\n  }, {\n    \"webrtc-adapter\": \"tI1X\"\n  }],\n  \"I31f\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var r = require(\"./adapter\");\n\n    exports.Supports = new (function () {\n      function e() {\n        this.isIOS = [\"iPad\", \"iPhone\", \"iPod\"].includes(navigator.platform), this.supportedBrowsers = [\"firefox\", \"chrome\", \"safari\"], this.minFirefoxVersion = 59, this.minChromeVersion = 72, this.minSafariVersion = 605;\n      }\n\n      return e.prototype.isWebRTCSupported = function () {\n        return \"undefined\" != typeof RTCPeerConnection;\n      }, e.prototype.isBrowserSupported = function () {\n        var r = this.getBrowser(),\n            e = this.getVersion();\n        return !!this.supportedBrowsers.includes(r) && (\"chrome\" === r ? e >= this.minChromeVersion : \"firefox\" === r ? e >= this.minFirefoxVersion : \"safari\" === r && !this.isIOS && e >= this.minSafariVersion);\n      }, e.prototype.getBrowser = function () {\n        return r.webRTCAdapter.browserDetails.browser;\n      }, e.prototype.getVersion = function () {\n        return r.webRTCAdapter.browserDetails.version || 0;\n      }, e.prototype.isUnifiedPlanSupported = function () {\n        var e,\n            i = this.getBrowser(),\n            t = r.webRTCAdapter.browserDetails.version || 0;\n        if (\"chrome\" === i && t < 72) return !1;\n        if (\"firefox\" === i && t >= 59) return !0;\n        if (!(window.RTCRtpTransceiver && \"currentDirection\" in RTCRtpTransceiver.prototype)) return !1;\n        var o = !1;\n\n        try {\n          (e = new RTCPeerConnection()).addTransceiver(\"audio\"), o = !0;\n        } catch (n) {} finally {\n          e && e.close();\n        }\n\n        return o;\n      }, e.prototype.toString = function () {\n        return \"Supports: \\n    browser:\" + this.getBrowser() + \" \\n    version:\" + this.getVersion() + \" \\n    isIOS:\" + this.isIOS + \" \\n    isWebRTCSupported:\" + this.isWebRTCSupported() + \" \\n    isBrowserSupported:\" + this.isBrowserSupported() + \" \\n    isUnifiedPlanSupported:\" + this.isUnifiedPlanSupported();\n      }, e;\n    }())();\n  }, {\n    \"./adapter\": \"sXtV\"\n  }],\n  \"BHXf\": [function (require, module, exports) {\n    \"use strict\";\n\n    var r = this && this.__importStar || function (r) {\n      if (r && r.__esModule) return r;\n      var t = {};\n      if (null != r) for (var e in r) {\n        Object.hasOwnProperty.call(r, e) && (t[e] = r[e]);\n      }\n      return t.default = r, t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var t = r(require(\"peerjs-js-binarypack\")),\n        e = require(\"./supports\"),\n        o = {\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }, {\n        urls: \"turn:0.peerjs.com:3478\",\n        username: \"peerjs\",\n        credential: \"peerjsp\"\n      }],\n      sdpSemantics: \"unified-plan\"\n    };\n\n    exports.util = new (function () {\n      function r() {\n        this.CLOUD_HOST = \"0.peerjs.com\", this.CLOUD_PORT = 443, this.chunkedBrowsers = {\n          Chrome: 1,\n          chrome: 1\n        }, this.chunkedMTU = 16300, this.defaultConfig = o, this.browser = e.Supports.getBrowser(), this.browserVersion = e.Supports.getVersion(), this.supports = function () {\n          var r,\n              t = {\n            browser: e.Supports.isBrowserSupported(),\n            webRTC: e.Supports.isWebRTCSupported(),\n            audioVideo: !1,\n            data: !1,\n            binaryBlob: !1,\n            reliable: !1\n          };\n          if (!t.webRTC) return t;\n\n          try {\n            r = new RTCPeerConnection(o), t.audioVideo = !0;\n            var n = void 0;\n\n            try {\n              n = r.createDataChannel(\"_PEERJSTEST\", {\n                ordered: !0\n              }), t.data = !0, t.reliable = !!n.ordered;\n\n              try {\n                n.binaryType = \"blob\", t.binaryBlob = !e.Supports.isIOS;\n              } catch (a) {}\n            } catch (a) {} finally {\n              n && n.close();\n            }\n          } catch (a) {} finally {\n            r && r.close();\n          }\n\n          return t;\n        }(), this.pack = t.pack, this.unpack = t.unpack, this._dataCount = 1;\n      }\n\n      return r.prototype.noop = function () {}, r.prototype.validateId = function (r) {\n        return !r || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(r);\n      }, r.prototype.chunk = function (r) {\n        for (var t = [], e = r.size, o = Math.ceil(e / exports.util.chunkedMTU), n = 0, a = 0; a < e;) {\n          var i = Math.min(e, a + exports.util.chunkedMTU),\n              s = r.slice(a, i),\n              u = {\n            __peerData: this._dataCount,\n            n: n,\n            data: s,\n            total: o\n          };\n          t.push(u), a = i, n++;\n        }\n\n        return this._dataCount++, t;\n      }, r.prototype.blobToArrayBuffer = function (r, t) {\n        var e = new FileReader();\n        return e.onload = function (r) {\n          r.target && t(r.target.result);\n        }, e.readAsArrayBuffer(r), e;\n      }, r.prototype.binaryStringToArrayBuffer = function (r) {\n        for (var t = new Uint8Array(r.length), e = 0; e < r.length; e++) {\n          t[e] = 255 & r.charCodeAt(e);\n        }\n\n        return t.buffer;\n      }, r.prototype.randomToken = function () {\n        return Math.random().toString(36).substr(2);\n      }, r.prototype.isSecure = function () {\n        return \"https:\" === location.protocol;\n      }, r;\n    }())();\n  }, {\n    \"peerjs-js-binarypack\": \"kdPp\",\n    \"./supports\": \"I31f\"\n  }],\n  \"JJlS\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = Object.prototype.hasOwnProperty,\n        t = \"~\";\n\n    function n() {}\n\n    function r(e, t, n) {\n      this.fn = e, this.context = t, this.once = n || !1;\n    }\n\n    function o(e, n, o, s, i) {\n      if (\"function\" != typeof o) throw new TypeError(\"The listener must be a function\");\n      var c = new r(o, s || e, i),\n          f = t ? t + n : n;\n      return e._events[f] ? e._events[f].fn ? e._events[f] = [e._events[f], c] : e._events[f].push(c) : (e._events[f] = c, e._eventsCount++), e;\n    }\n\n    function s(e, t) {\n      0 == --e._eventsCount ? e._events = new n() : delete e._events[t];\n    }\n\n    function i() {\n      this._events = new n(), this._eventsCount = 0;\n    }\n\n    Object.create && (n.prototype = Object.create(null), new n().__proto__ || (t = !1)), i.prototype.eventNames = function () {\n      var n,\n          r,\n          o = [];\n      if (0 === this._eventsCount) return o;\n\n      for (r in n = this._events) {\n        e.call(n, r) && o.push(t ? r.slice(1) : r);\n      }\n\n      return Object.getOwnPropertySymbols ? o.concat(Object.getOwnPropertySymbols(n)) : o;\n    }, i.prototype.listeners = function (e) {\n      var n = t ? t + e : e,\n          r = this._events[n];\n      if (!r) return [];\n      if (r.fn) return [r.fn];\n\n      for (var o = 0, s = r.length, i = new Array(s); o < s; o++) {\n        i[o] = r[o].fn;\n      }\n\n      return i;\n    }, i.prototype.listenerCount = function (e) {\n      var n = t ? t + e : e,\n          r = this._events[n];\n      return r ? r.fn ? 1 : r.length : 0;\n    }, i.prototype.emit = function (e, n, r, o, s, i) {\n      var c = t ? t + e : e;\n      if (!this._events[c]) return !1;\n      var f,\n          u,\n          a = this._events[c],\n          l = arguments.length;\n\n      if (a.fn) {\n        switch (a.once && this.removeListener(e, a.fn, void 0, !0), l) {\n          case 1:\n            return a.fn.call(a.context), !0;\n\n          case 2:\n            return a.fn.call(a.context, n), !0;\n\n          case 3:\n            return a.fn.call(a.context, n, r), !0;\n\n          case 4:\n            return a.fn.call(a.context, n, r, o), !0;\n\n          case 5:\n            return a.fn.call(a.context, n, r, o, s), !0;\n\n          case 6:\n            return a.fn.call(a.context, n, r, o, s, i), !0;\n        }\n\n        for (u = 1, f = new Array(l - 1); u < l; u++) {\n          f[u - 1] = arguments[u];\n        }\n\n        a.fn.apply(a.context, f);\n      } else {\n        var v,\n            h = a.length;\n\n        for (u = 0; u < h; u++) {\n          switch (a[u].once && this.removeListener(e, a[u].fn, void 0, !0), l) {\n            case 1:\n              a[u].fn.call(a[u].context);\n              break;\n\n            case 2:\n              a[u].fn.call(a[u].context, n);\n              break;\n\n            case 3:\n              a[u].fn.call(a[u].context, n, r);\n              break;\n\n            case 4:\n              a[u].fn.call(a[u].context, n, r, o);\n              break;\n\n            default:\n              if (!f) for (v = 1, f = new Array(l - 1); v < l; v++) {\n                f[v - 1] = arguments[v];\n              }\n              a[u].fn.apply(a[u].context, f);\n          }\n        }\n      }\n\n      return !0;\n    }, i.prototype.on = function (e, t, n) {\n      return o(this, e, t, n, !1);\n    }, i.prototype.once = function (e, t, n) {\n      return o(this, e, t, n, !0);\n    }, i.prototype.removeListener = function (e, n, r, o) {\n      var i = t ? t + e : e;\n      if (!this._events[i]) return this;\n      if (!n) return s(this, i), this;\n      var c = this._events[i];\n      if (c.fn) c.fn !== n || o && !c.once || r && c.context !== r || s(this, i);else {\n        for (var f = 0, u = [], a = c.length; f < a; f++) {\n          (c[f].fn !== n || o && !c[f].once || r && c[f].context !== r) && u.push(c[f]);\n        }\n\n        u.length ? this._events[i] = 1 === u.length ? u[0] : u : s(this, i);\n      }\n      return this;\n    }, i.prototype.removeAllListeners = function (e) {\n      var r;\n      return e ? (r = t ? t + e : e, this._events[r] && s(this, r)) : (this._events = new n(), this._eventsCount = 0), this;\n    }, i.prototype.off = i.prototype.removeListener, i.prototype.addListener = i.prototype.on, i.prefixed = t, i.EventEmitter = i, \"undefined\" != typeof module && (module.exports = i);\n  }, {}],\n  \"WOs9\": [function (require, module, exports) {\n    \"use strict\";\n\n    var r = this && this.__read || function (r, e) {\n      var o = \"function\" == typeof Symbol && r[Symbol.iterator];\n      if (!o) return r;\n      var t,\n          n,\n          l = o.call(r),\n          i = [];\n\n      try {\n        for (; (void 0 === e || e-- > 0) && !(t = l.next()).done;) {\n          i.push(t.value);\n        }\n      } catch (s) {\n        n = {\n          error: s\n        };\n      } finally {\n        try {\n          t && !t.done && (o = l.return) && o.call(l);\n        } finally {\n          if (n) throw n.error;\n        }\n      }\n\n      return i;\n    },\n        e = this && this.__spread || function () {\n      for (var e = [], o = 0; o < arguments.length; o++) {\n        e = e.concat(r(arguments[o]));\n      }\n\n      return e;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n    var o,\n        t = \"PeerJS: \";\n    !function (r) {\n      r[r.Disabled = 0] = \"Disabled\", r[r.Errors = 1] = \"Errors\", r[r.Warnings = 2] = \"Warnings\", r[r.All = 3] = \"All\";\n    }(o = exports.LogLevel || (exports.LogLevel = {}));\n\n    var n = function () {\n      function r() {\n        this._logLevel = o.Disabled;\n      }\n\n      return Object.defineProperty(r.prototype, \"logLevel\", {\n        get: function get() {\n          return this._logLevel;\n        },\n        set: function set(r) {\n          this._logLevel = r;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), r.prototype.log = function () {\n        for (var r = [], t = 0; t < arguments.length; t++) {\n          r[t] = arguments[t];\n        }\n\n        this._logLevel >= o.All && this._print.apply(this, e([o.All], r));\n      }, r.prototype.warn = function () {\n        for (var r = [], t = 0; t < arguments.length; t++) {\n          r[t] = arguments[t];\n        }\n\n        this._logLevel >= o.Warnings && this._print.apply(this, e([o.Warnings], r));\n      }, r.prototype.error = function () {\n        for (var r = [], t = 0; t < arguments.length; t++) {\n          r[t] = arguments[t];\n        }\n\n        this._logLevel >= o.Errors && this._print.apply(this, e([o.Errors], r));\n      }, r.prototype.setLogFunction = function (r) {\n        this._print = r;\n      }, r.prototype._print = function (r) {\n        for (var n = [], l = 1; l < arguments.length; l++) {\n          n[l - 1] = arguments[l];\n        }\n\n        var i = e([t], n);\n\n        for (var s in i) {\n          i[s] instanceof Error && (i[s] = \"(\" + i[s].name + \") \" + i[s].message);\n        }\n\n        r >= o.All ? console.log.apply(console, e(i)) : r >= o.Warnings ? console.warn.apply(console, e([\"WARNING\"], i)) : r >= o.Errors && console.error.apply(console, e([\"ERROR\"], i));\n      }, r;\n    }();\n\n    exports.default = new n();\n  }, {}],\n  \"ZRYf\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e, r, n, o, t, a, i;\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), function (e) {\n      e.Open = \"open\", e.Stream = \"stream\", e.Data = \"data\", e.Close = \"close\", e.Error = \"error\", e.IceStateChanged = \"iceStateChanged\";\n    }(e = exports.ConnectionEventType || (exports.ConnectionEventType = {})), function (e) {\n      e.Data = \"data\", e.Media = \"media\";\n    }(r = exports.ConnectionType || (exports.ConnectionType = {})), function (e) {\n      e.Open = \"open\", e.Close = \"close\", e.Connection = \"connection\", e.Call = \"call\", e.Disconnected = \"disconnected\", e.Error = \"error\";\n    }(n = exports.PeerEventType || (exports.PeerEventType = {})), function (e) {\n      e.BrowserIncompatible = \"browser-incompatible\", e.Disconnected = \"disconnected\", e.InvalidID = \"invalid-id\", e.InvalidKey = \"invalid-key\", e.Network = \"network\", e.PeerUnavailable = \"peer-unavailable\", e.SslUnavailable = \"ssl-unavailable\", e.ServerError = \"server-error\", e.SocketError = \"socket-error\", e.SocketClosed = \"socket-closed\", e.UnavailableID = \"unavailable-id\", e.WebRTC = \"webrtc\";\n    }(o = exports.PeerErrorType || (exports.PeerErrorType = {})), function (e) {\n      e.Binary = \"binary\", e.BinaryUTF8 = \"binary-utf8\", e.JSON = \"json\";\n    }(t = exports.SerializationType || (exports.SerializationType = {})), function (e) {\n      e.Message = \"message\", e.Disconnected = \"disconnected\", e.Error = \"error\", e.Close = \"close\";\n    }(a = exports.SocketEventType || (exports.SocketEventType = {})), function (e) {\n      e.Heartbeat = \"HEARTBEAT\", e.Candidate = \"CANDIDATE\", e.Offer = \"OFFER\", e.Answer = \"ANSWER\", e.Open = \"OPEN\", e.Error = \"ERROR\", e.IdTaken = \"ID-TAKEN\", e.InvalidKey = \"INVALID-KEY\", e.Leave = \"LEAVE\", e.Expire = \"EXPIRE\";\n    }(i = exports.ServerMessageType || (exports.ServerMessageType = {}));\n  }, {}],\n  \"wJlv\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e = function e(t, n) {\n        return (_e = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var n in t) {\n            t.hasOwnProperty(n) && (e[n] = t[n]);\n          }\n        })(t, n);\n      };\n\n      return function (t, n) {\n        function s() {\n          this.constructor = t;\n        }\n\n        _e(t, n), t.prototype = null === n ? Object.create(n) : (s.prototype = n.prototype, new s());\n      };\n    }(),\n        t = this && this.__read || function (e, t) {\n      var n = \"function\" == typeof Symbol && e[Symbol.iterator];\n      if (!n) return e;\n      var s,\n          o,\n          r = n.call(e),\n          i = [];\n\n      try {\n        for (; (void 0 === t || t-- > 0) && !(s = r.next()).done;) {\n          i.push(s.value);\n        }\n      } catch (c) {\n        o = {\n          error: c\n        };\n      } finally {\n        try {\n          s && !s.done && (n = r.return) && n.call(r);\n        } finally {\n          if (o) throw o.error;\n        }\n      }\n\n      return i;\n    },\n        n = this && this.__spread || function () {\n      for (var e = [], n = 0; n < arguments.length; n++) {\n        e = e.concat(t(arguments[n]));\n      }\n\n      return e;\n    },\n        s = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          n = t && e[t],\n          s = 0;\n      if (n) return n.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && s >= e.length && (e = void 0), {\n            value: e && e[s++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        o = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var r = require(\"eventemitter3\"),\n        i = o(require(\"./logger\")),\n        c = require(\"./enums\"),\n        a = function (t) {\n      function o(e, n, s, o, r, i) {\n        void 0 === i && (i = 5e3);\n        var c = t.call(this) || this;\n        c.pingInterval = i, c._disconnected = !0, c._messagesQueue = [];\n        var a = e ? \"wss://\" : \"ws://\";\n        return c._baseUrl = a + n + \":\" + s + o + \"peerjs?key=\" + r, c;\n      }\n\n      return e(o, t), o.prototype.start = function (e, t) {\n        var n = this;\n        this._id = e;\n        var s = this._baseUrl + \"&id=\" + e + \"&token=\" + t;\n        !this._socket && this._disconnected && (this._socket = new WebSocket(s), this._disconnected = !1, this._socket.onmessage = function (e) {\n          var t;\n\n          try {\n            t = JSON.parse(e.data), i.default.log(\"Server message received:\", t);\n          } catch (s) {\n            return void i.default.log(\"Invalid server message\", e.data);\n          }\n\n          n.emit(c.SocketEventType.Message, t);\n        }, this._socket.onclose = function (e) {\n          n._disconnected || (i.default.log(\"Socket closed.\", e), n._cleanup(), n._disconnected = !0, n.emit(c.SocketEventType.Disconnected));\n        }, this._socket.onopen = function () {\n          n._disconnected || (n._sendQueuedMessages(), i.default.log(\"Socket open\"), n._scheduleHeartbeat());\n        });\n      }, o.prototype._scheduleHeartbeat = function () {\n        var e = this;\n        this._wsPingTimer = setTimeout(function () {\n          e._sendHeartbeat();\n        }, this.pingInterval);\n      }, o.prototype._sendHeartbeat = function () {\n        if (this._wsOpen()) {\n          var e = JSON.stringify({\n            type: c.ServerMessageType.Heartbeat\n          });\n          this._socket.send(e), this._scheduleHeartbeat();\n        } else i.default.log(\"Cannot send heartbeat, because socket closed\");\n      }, o.prototype._wsOpen = function () {\n        return !!this._socket && 1 === this._socket.readyState;\n      }, o.prototype._sendQueuedMessages = function () {\n        var e,\n            t,\n            o = n(this._messagesQueue);\n        this._messagesQueue = [];\n\n        try {\n          for (var r = s(o), i = r.next(); !i.done; i = r.next()) {\n            var c = i.value;\n            this.send(c);\n          }\n        } catch (a) {\n          e = {\n            error: a\n          };\n        } finally {\n          try {\n            i && !i.done && (t = r.return) && t.call(r);\n          } finally {\n            if (e) throw e.error;\n          }\n        }\n      }, o.prototype.send = function (e) {\n        if (!this._disconnected) if (this._id) {\n          if (e.type) {\n            if (this._wsOpen()) {\n              var t = JSON.stringify(e);\n\n              this._socket.send(t);\n            }\n          } else this.emit(c.SocketEventType.Error, \"Invalid message\");\n        } else this._messagesQueue.push(e);\n      }, o.prototype.close = function () {\n        this._disconnected || (this._cleanup(), this._disconnected = !0);\n      }, o.prototype._cleanup = function () {\n        this._socket && (this._socket.onopen = this._socket.onmessage = this._socket.onclose = null, this._socket.close(), this._socket = void 0), clearTimeout(this._wsPingTimer);\n      }, o;\n    }(r.EventEmitter);\n\n    exports.Socket = a;\n  }, {\n    \"eventemitter3\": \"JJlS\",\n    \"./logger\": \"WOs9\",\n    \"./enums\": \"ZRYf\"\n  }],\n  \"HCdX\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__assign || function () {\n      return (e = Object.assign || function (e) {\n        for (var n, t = 1, o = arguments.length; t < o; t++) {\n          for (var i in n = arguments[t]) {\n            Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);\n          }\n        }\n\n        return e;\n      }).apply(this, arguments);\n    },\n        n = this && this.__awaiter || function (e, n, t, o) {\n      return new (t || (t = Promise))(function (i, r) {\n        function c(e) {\n          try {\n            s(o.next(e));\n          } catch (n) {\n            r(n);\n          }\n        }\n\n        function a(e) {\n          try {\n            s(o.throw(e));\n          } catch (n) {\n            r(n);\n          }\n        }\n\n        function s(e) {\n          var n;\n          e.done ? i(e.value) : (n = e.value, n instanceof t ? n : new t(function (e) {\n            e(n);\n          })).then(c, a);\n        }\n\n        s((o = o.apply(e, n || [])).next());\n      });\n    },\n        t = this && this.__generator || function (e, n) {\n      var t,\n          o,\n          i,\n          r,\n          c = {\n        label: 0,\n        sent: function sent() {\n          if (1 & i[0]) throw i[1];\n          return i[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return r = {\n        next: a(0),\n        throw: a(1),\n        return: a(2)\n      }, \"function\" == typeof Symbol && (r[Symbol.iterator] = function () {\n        return this;\n      }), r;\n\n      function a(r) {\n        return function (a) {\n          return function (r) {\n            if (t) throw new TypeError(\"Generator is already executing.\");\n\n            for (; c;) {\n              try {\n                if (t = 1, o && (i = 2 & r[0] ? o.return : r[0] ? o.throw || ((i = o.return) && i.call(o), 0) : o.next) && !(i = i.call(o, r[1])).done) return i;\n\n                switch (o = 0, i && (r = [2 & r[0], i.value]), r[0]) {\n                  case 0:\n                  case 1:\n                    i = r;\n                    break;\n\n                  case 4:\n                    return c.label++, {\n                      value: r[1],\n                      done: !1\n                    };\n\n                  case 5:\n                    c.label++, o = r[1], r = [0];\n                    continue;\n\n                  case 7:\n                    r = c.ops.pop(), c.trys.pop();\n                    continue;\n\n                  default:\n                    if (!(i = (i = c.trys).length > 0 && i[i.length - 1]) && (6 === r[0] || 2 === r[0])) {\n                      c = 0;\n                      continue;\n                    }\n\n                    if (3 === r[0] && (!i || r[1] > i[0] && r[1] < i[3])) {\n                      c.label = r[1];\n                      break;\n                    }\n\n                    if (6 === r[0] && c.label < i[1]) {\n                      c.label = i[1], i = r;\n                      break;\n                    }\n\n                    if (i && c.label < i[2]) {\n                      c.label = i[2], c.ops.push(r);\n                      break;\n                    }\n\n                    i[2] && c.ops.pop(), c.trys.pop();\n                    continue;\n                }\n\n                r = n.call(e, c);\n              } catch (a) {\n                r = [6, a], o = 0;\n              } finally {\n                t = i = 0;\n              }\n            }\n\n            if (5 & r[0]) throw r[1];\n            return {\n              value: r[0] ? r[1] : void 0,\n              done: !0\n            };\n          }([r, a]);\n        };\n      }\n    },\n        o = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var i = require(\"./util\"),\n        r = o(require(\"./logger\")),\n        c = require(\"./enums\"),\n        a = function () {\n      function o(e) {\n        this.connection = e;\n      }\n\n      return o.prototype.startConnection = function (e) {\n        var n = this._startPeerConnection();\n\n        if (this.connection.peerConnection = n, this.connection.type === c.ConnectionType.Media && e._stream && this._addTracksToConnection(e._stream, n), e.originator) {\n          if (this.connection.type === c.ConnectionType.Data) {\n            var t = this.connection,\n                o = {\n              ordered: !!e.reliable\n            },\n                i = n.createDataChannel(t.label, o);\n            t.initialize(i);\n          }\n\n          this._makeOffer();\n        } else this.handleSDP(\"OFFER\", e.sdp);\n      }, o.prototype._startPeerConnection = function () {\n        r.default.log(\"Creating RTCPeerConnection.\");\n        var e = new RTCPeerConnection(this.connection.provider.options.config);\n        return this._setupListeners(e), e;\n      }, o.prototype._setupListeners = function (e) {\n        var n = this,\n            t = this.connection.peer,\n            o = this.connection.connectionId,\n            a = this.connection.type,\n            s = this.connection.provider;\n        r.default.log(\"Listening for ICE candidates.\"), e.onicecandidate = function (e) {\n          e.candidate && e.candidate.candidate && (r.default.log(\"Received ICE candidates for \" + t + \":\", e.candidate), s.socket.send({\n            type: c.ServerMessageType.Candidate,\n            payload: {\n              candidate: e.candidate,\n              type: a,\n              connectionId: o\n            },\n            dst: t\n          }));\n        }, e.oniceconnectionstatechange = function () {\n          switch (e.iceConnectionState) {\n            case \"failed\":\n              r.default.log(\"iceConnectionState is failed, closing connections to \" + t), n.connection.emit(c.ConnectionEventType.Error, new Error(\"Negotiation of connection to \" + t + \" failed.\")), n.connection.close();\n              break;\n\n            case \"closed\":\n              r.default.log(\"iceConnectionState is closed, closing connections to \" + t), n.connection.emit(c.ConnectionEventType.Error, new Error(\"Connection to \" + t + \" closed.\")), n.connection.close();\n              break;\n\n            case \"disconnected\":\n              r.default.log(\"iceConnectionState is disconnected, closing connections to \" + t), n.connection.emit(c.ConnectionEventType.Error, new Error(\"Connection to \" + t + \" disconnected.\")), n.connection.close();\n              break;\n\n            case \"completed\":\n              e.onicecandidate = i.util.noop;\n          }\n\n          n.connection.emit(c.ConnectionEventType.IceStateChanged, e.iceConnectionState);\n        }, r.default.log(\"Listening for data channel\"), e.ondatachannel = function (e) {\n          r.default.log(\"Received data channel\");\n          var n = e.channel;\n          s.getConnection(t, o).initialize(n);\n        }, r.default.log(\"Listening for remote stream\"), e.ontrack = function (e) {\n          r.default.log(\"Received remote stream\");\n          var i = e.streams[0],\n              a = s.getConnection(t, o);\n\n          if (a.type === c.ConnectionType.Media) {\n            var d = a;\n\n            n._addStreamToMediaConnection(i, d);\n          }\n        };\n      }, o.prototype.cleanup = function () {\n        r.default.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n        var e = this.connection.peerConnection;\n\n        if (e) {\n          this.connection.peerConnection = null, e.onicecandidate = e.oniceconnectionstatechange = e.ondatachannel = e.ontrack = function () {};\n          var n = \"closed\" !== e.signalingState,\n              t = !1;\n\n          if (this.connection.type === c.ConnectionType.Data) {\n            var o = this.connection.dataChannel;\n            o && (t = !!o.readyState && \"closed\" !== o.readyState);\n          }\n\n          (n || t) && e.close();\n        }\n      }, o.prototype._makeOffer = function () {\n        return n(this, void 0, Promise, function () {\n          var n, o, a, s, d, l, u;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                n = this.connection.peerConnection, o = this.connection.provider, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 7,, 8]), [4, n.createOffer(this.connection.options.constraints)];\n\n              case 2:\n                a = t.sent(), r.default.log(\"Created offer.\"), this.connection.options.sdpTransform && \"function\" == typeof this.connection.options.sdpTransform && (a.sdp = this.connection.options.sdpTransform(a.sdp) || a.sdp), t.label = 3;\n\n              case 3:\n                return t.trys.push([3, 5,, 6]), [4, n.setLocalDescription(a)];\n\n              case 4:\n                return t.sent(), r.default.log(\"Set localDescription:\", a, \"for:\" + this.connection.peer), s = {\n                  sdp: a,\n                  type: this.connection.type,\n                  connectionId: this.connection.connectionId,\n                  metadata: this.connection.metadata,\n                  browser: i.util.browser\n                }, this.connection.type === c.ConnectionType.Data && (d = this.connection, s = e(e({}, s), {\n                  label: d.label,\n                  reliable: d.reliable,\n                  serialization: d.serialization\n                })), o.socket.send({\n                  type: c.ServerMessageType.Offer,\n                  payload: s,\n                  dst: this.connection.peer\n                }), [3, 6];\n\n              case 5:\n                return \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\" != (l = t.sent()) && (o.emitError(c.PeerErrorType.WebRTC, l), r.default.log(\"Failed to setLocalDescription, \", l)), [3, 6];\n\n              case 6:\n                return [3, 8];\n\n              case 7:\n                return u = t.sent(), o.emitError(c.PeerErrorType.WebRTC, u), r.default.log(\"Failed to createOffer, \", u), [3, 8];\n\n              case 8:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype._makeAnswer = function () {\n        return n(this, void 0, Promise, function () {\n          var e, n, o, a, s;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                e = this.connection.peerConnection, n = this.connection.provider, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 7,, 8]), [4, e.createAnswer()];\n\n              case 2:\n                o = t.sent(), r.default.log(\"Created answer.\"), this.connection.options.sdpTransform && \"function\" == typeof this.connection.options.sdpTransform && (o.sdp = this.connection.options.sdpTransform(o.sdp) || o.sdp), t.label = 3;\n\n              case 3:\n                return t.trys.push([3, 5,, 6]), [4, e.setLocalDescription(o)];\n\n              case 4:\n                return t.sent(), r.default.log(\"Set localDescription:\", o, \"for:\" + this.connection.peer), n.socket.send({\n                  type: c.ServerMessageType.Answer,\n                  payload: {\n                    sdp: o,\n                    type: this.connection.type,\n                    connectionId: this.connection.connectionId,\n                    browser: i.util.browser\n                  },\n                  dst: this.connection.peer\n                }), [3, 6];\n\n              case 5:\n                return a = t.sent(), n.emitError(c.PeerErrorType.WebRTC, a), r.default.log(\"Failed to setLocalDescription, \", a), [3, 6];\n\n              case 6:\n                return [3, 8];\n\n              case 7:\n                return s = t.sent(), n.emitError(c.PeerErrorType.WebRTC, s), r.default.log(\"Failed to create answer, \", s), [3, 8];\n\n              case 8:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype.handleSDP = function (e, o) {\n        return n(this, void 0, Promise, function () {\n          var n, i, a, s;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                o = new RTCSessionDescription(o), n = this.connection.peerConnection, i = this.connection.provider, r.default.log(\"Setting remote description\", o), a = this, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 5,, 6]), [4, n.setRemoteDescription(o)];\n\n              case 2:\n                return t.sent(), r.default.log(\"Set remoteDescription:\" + e + \" for:\" + this.connection.peer), \"OFFER\" !== e ? [3, 4] : [4, a._makeAnswer()];\n\n              case 3:\n                t.sent(), t.label = 4;\n\n              case 4:\n                return [3, 6];\n\n              case 5:\n                return s = t.sent(), i.emitError(c.PeerErrorType.WebRTC, s), r.default.log(\"Failed to setRemoteDescription, \", s), [3, 6];\n\n              case 6:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype.handleCandidate = function (e) {\n        return n(this, void 0, Promise, function () {\n          var n, o, i, a, s, d;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                r.default.log(\"handleCandidate:\", e), n = e.candidate, o = e.sdpMLineIndex, i = e.sdpMid, a = this.connection.peerConnection, s = this.connection.provider, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 3,, 4]), [4, a.addIceCandidate(new RTCIceCandidate({\n                  sdpMid: i,\n                  sdpMLineIndex: o,\n                  candidate: n\n                }))];\n\n              case 2:\n                return t.sent(), r.default.log(\"Added ICE candidate for:\" + this.connection.peer), [3, 4];\n\n              case 3:\n                return d = t.sent(), s.emitError(c.PeerErrorType.WebRTC, d), r.default.log(\"Failed to handleCandidate, \", d), [3, 4];\n\n              case 4:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype._addTracksToConnection = function (e, n) {\n        if (r.default.log(\"add tracks from stream \" + e.id + \" to peer connection\"), !n.addTrack) return r.default.error(\"Your browser does't support RTCPeerConnection#addTrack. Ignored.\");\n        e.getTracks().forEach(function (t) {\n          n.addTrack(t, e);\n        });\n      }, o.prototype._addStreamToMediaConnection = function (e, n) {\n        r.default.log(\"add stream \" + e.id + \" to media connection \" + n.connectionId), n.addStream(e);\n      }, o;\n    }();\n\n    exports.Negotiator = a;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./enums\": \"ZRYf\"\n  }],\n  \"tQFK\": [function (require, module, exports) {\n    \"use strict\";\n\n    var t = this && this.__extends || function () {\n      var _t2 = function t(e, r) {\n        return (_t2 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (t, e) {\n          t.__proto__ = e;\n        } || function (t, e) {\n          for (var r in e) {\n            e.hasOwnProperty(r) && (t[r] = e[r]);\n          }\n        })(e, r);\n      };\n\n      return function (e, r) {\n        function n() {\n          this.constructor = e;\n        }\n\n        _t2(e, r), e.prototype = null === r ? Object.create(r) : (n.prototype = r.prototype, new n());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var e = require(\"eventemitter3\"),\n        r = function (e) {\n      function r(t, r, n) {\n        var o = e.call(this) || this;\n        return o.peer = t, o.provider = r, o.options = n, o._open = !1, o.metadata = n.metadata, o;\n      }\n\n      return t(r, e), Object.defineProperty(r.prototype, \"open\", {\n        get: function get() {\n          return this._open;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), r;\n    }(e.EventEmitter);\n\n    exports.BaseConnection = r;\n  }, {\n    \"eventemitter3\": \"JJlS\"\n  }],\n  \"dbHP\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e2 = function e(t, o) {\n        return (_e2 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var o in t) {\n            t.hasOwnProperty(o) && (e[o] = t[o]);\n          }\n        })(t, o);\n      };\n\n      return function (t, o) {\n        function r() {\n          this.constructor = t;\n        }\n\n        _e2(t, o), t.prototype = null === o ? Object.create(o) : (r.prototype = o.prototype, new r());\n      };\n    }(),\n        t = this && this.__assign || function () {\n      return (t = Object.assign || function (e) {\n        for (var t, o = 1, r = arguments.length; o < r; o++) {\n          for (var n in t = arguments[o]) {\n            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n          }\n        }\n\n        return e;\n      }).apply(this, arguments);\n    },\n        o = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          o = t && e[t],\n          r = 0;\n      if (o) return o.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && r >= e.length && (e = void 0), {\n            value: e && e[r++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        r = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var n = require(\"./util\"),\n        i = r(require(\"./logger\")),\n        a = require(\"./negotiator\"),\n        s = require(\"./enums\"),\n        l = require(\"./baseconnection\"),\n        c = function (r) {\n      function l(e, t, o) {\n        var i = r.call(this, e, t, o) || this;\n        return i._localStream = i.options._stream, i.connectionId = i.options.connectionId || l.ID_PREFIX + n.util.randomToken(), i._negotiator = new a.Negotiator(i), i._localStream && i._negotiator.startConnection({\n          _stream: i._localStream,\n          originator: !0\n        }), i;\n      }\n\n      return e(l, r), Object.defineProperty(l.prototype, \"type\", {\n        get: function get() {\n          return s.ConnectionType.Media;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(l.prototype, \"localStream\", {\n        get: function get() {\n          return this._localStream;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(l.prototype, \"remoteStream\", {\n        get: function get() {\n          return this._remoteStream;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), l.prototype.addStream = function (e) {\n        i.default.log(\"Receiving stream\", e), this._remoteStream = e, r.prototype.emit.call(this, s.ConnectionEventType.Stream, e);\n      }, l.prototype.handleMessage = function (e) {\n        var t = e.type,\n            o = e.payload;\n\n        switch (e.type) {\n          case s.ServerMessageType.Answer:\n            this._negotiator.handleSDP(t, o.sdp), this._open = !0;\n            break;\n\n          case s.ServerMessageType.Candidate:\n            this._negotiator.handleCandidate(o.candidate);\n\n            break;\n\n          default:\n            i.default.warn(\"Unrecognized message type:\" + t + \" from peer:\" + this.peer);\n        }\n      }, l.prototype.answer = function (e, r) {\n        var n, a;\n        if (void 0 === r && (r = {}), this._localStream) i.default.warn(\"Local stream already exists on this MediaConnection. Are you answering a call twice?\");else {\n          this._localStream = e, r && r.sdpTransform && (this.options.sdpTransform = r.sdpTransform), this._negotiator.startConnection(t(t({}, this.options._payload), {\n            _stream: e\n          }));\n\n          var s = this.provider._getMessages(this.connectionId);\n\n          try {\n            for (var l = o(s), c = l.next(); !c.done; c = l.next()) {\n              var p = c.value;\n              this.handleMessage(p);\n            }\n          } catch (u) {\n            n = {\n              error: u\n            };\n          } finally {\n            try {\n              c && !c.done && (a = l.return) && a.call(l);\n            } finally {\n              if (n) throw n.error;\n            }\n          }\n\n          this._open = !0;\n        }\n      }, l.prototype.close = function () {\n        this._negotiator && (this._negotiator.cleanup(), this._negotiator = null), this._localStream = null, this._remoteStream = null, this.provider && (this.provider._removeConnection(this), this.provider = null), this.options && this.options._stream && (this.options._stream = null), this.open && (this._open = !1, r.prototype.emit.call(this, s.ConnectionEventType.Close));\n      }, l.ID_PREFIX = \"mc_\", l;\n    }(l.BaseConnection);\n\n    exports.MediaConnection = c;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./negotiator\": \"HCdX\",\n    \"./enums\": \"ZRYf\",\n    \"./baseconnection\": \"tQFK\"\n  }],\n  \"GGp6\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e3 = function e(t, r) {\n        return (_e3 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var r in t) {\n            t.hasOwnProperty(r) && (e[r] = t[r]);\n          }\n        })(t, r);\n      };\n\n      return function (t, r) {\n        function o() {\n          this.constructor = t;\n        }\n\n        _e3(t, r), t.prototype = null === r ? Object.create(r) : (o.prototype = r.prototype, new o());\n      };\n    }(),\n        t = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var r = require(\"eventemitter3\"),\n        o = t(require(\"./logger\")),\n        n = function (t) {\n      function r() {\n        var e = t.call(this) || this;\n        return e.fileReader = new FileReader(), e._queue = [], e._processing = !1, e.fileReader.onload = function (t) {\n          e._processing = !1, t.target && e.emit(\"done\", t.target.result), e.doNextTask();\n        }, e.fileReader.onerror = function (t) {\n          o.default.error(\"EncodingQueue error:\", t), e._processing = !1, e.destroy(), e.emit(\"error\", t);\n        }, e;\n      }\n\n      return e(r, t), Object.defineProperty(r.prototype, \"queue\", {\n        get: function get() {\n          return this._queue;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(r.prototype, \"size\", {\n        get: function get() {\n          return this.queue.length;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(r.prototype, \"processing\", {\n        get: function get() {\n          return this._processing;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), r.prototype.enque = function (e) {\n        this.queue.push(e), this.processing || this.doNextTask();\n      }, r.prototype.destroy = function () {\n        this.fileReader.abort(), this._queue = [];\n      }, r.prototype.doNextTask = function () {\n        0 !== this.size && (this.processing || (this._processing = !0, this.fileReader.readAsArrayBuffer(this.queue.shift())));\n      }, r;\n    }(r.EventEmitter);\n\n    exports.EncodingQueue = n;\n  }, {\n    \"eventemitter3\": \"JJlS\",\n    \"./logger\": \"WOs9\"\n  }],\n  \"GBTQ\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e4 = function e(t, n) {\n        return (_e4 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var n in t) {\n            t.hasOwnProperty(n) && (e[n] = t[n]);\n          }\n        })(t, n);\n      };\n\n      return function (t, n) {\n        function i() {\n          this.constructor = t;\n        }\n\n        _e4(t, n), t.prototype = null === n ? Object.create(n) : (i.prototype = n.prototype, new i());\n      };\n    }(),\n        t = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          n = t && e[t],\n          i = 0;\n      if (n) return n.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && i >= e.length && (e = void 0), {\n            value: e && e[i++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        n = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var i = require(\"./util\"),\n        o = n(require(\"./logger\")),\n        r = require(\"./negotiator\"),\n        a = require(\"./enums\"),\n        s = require(\"./baseconnection\"),\n        u = require(\"./encodingQueue\"),\n        l = function (n) {\n      function s(e, t, l) {\n        var f = n.call(this, e, t, l) || this;\n        return f.stringify = JSON.stringify, f.parse = JSON.parse, f._buffer = [], f._bufferSize = 0, f._buffering = !1, f._chunkedData = {}, f._encodingQueue = new u.EncodingQueue(), f.connectionId = f.options.connectionId || s.ID_PREFIX + i.util.randomToken(), f.label = f.options.label || f.connectionId, f.serialization = f.options.serialization || a.SerializationType.Binary, f.reliable = !!f.options.reliable, f._encodingQueue.on(\"done\", function (e) {\n          f._bufferedSend(e);\n        }), f._encodingQueue.on(\"error\", function () {\n          o.default.error(\"DC#\" + f.connectionId + \": Error occured in encoding from blob to arraybuffer, close DC\"), f.close();\n        }), f._negotiator = new r.Negotiator(f), f._negotiator.startConnection(f.options._payload || {\n          originator: !0\n        }), f;\n      }\n\n      return e(s, n), Object.defineProperty(s.prototype, \"type\", {\n        get: function get() {\n          return a.ConnectionType.Data;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(s.prototype, \"dataChannel\", {\n        get: function get() {\n          return this._dc;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(s.prototype, \"bufferSize\", {\n        get: function get() {\n          return this._bufferSize;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), s.prototype.initialize = function (e) {\n        this._dc = e, this._configureDataChannel();\n      }, s.prototype._configureDataChannel = function () {\n        var e = this;\n        i.util.supports.binaryBlob && !i.util.supports.reliable || (this.dataChannel.binaryType = \"arraybuffer\"), this.dataChannel.onopen = function () {\n          o.default.log(\"DC#\" + e.connectionId + \" dc connection success\"), e._open = !0, e.emit(a.ConnectionEventType.Open);\n        }, this.dataChannel.onmessage = function (t) {\n          o.default.log(\"DC#\" + e.connectionId + \" dc onmessage:\", t.data), e._handleDataMessage(t);\n        }, this.dataChannel.onclose = function () {\n          o.default.log(\"DC#\" + e.connectionId + \" dc closed for:\", e.peer), e.close();\n        };\n      }, s.prototype._handleDataMessage = function (e) {\n        var t = this,\n            o = e.data,\n            r = o.constructor,\n            s = o;\n\n        if (this.serialization === a.SerializationType.Binary || this.serialization === a.SerializationType.BinaryUTF8) {\n          if (r === Blob) return void i.util.blobToArrayBuffer(o, function (e) {\n            var n = i.util.unpack(e);\n            t.emit(a.ConnectionEventType.Data, n);\n          });\n          if (r === ArrayBuffer) s = i.util.unpack(o);else if (r === String) {\n            var u = i.util.binaryStringToArrayBuffer(o);\n            s = i.util.unpack(u);\n          }\n        } else this.serialization === a.SerializationType.JSON && (s = this.parse(o));\n\n        s.__peerData ? this._handleChunk(s) : n.prototype.emit.call(this, a.ConnectionEventType.Data, s);\n      }, s.prototype._handleChunk = function (e) {\n        var t = e.__peerData,\n            n = this._chunkedData[t] || {\n          data: [],\n          count: 0,\n          total: e.total\n        };\n\n        if (n.data[e.n] = e.data, n.count++, this._chunkedData[t] = n, n.total === n.count) {\n          delete this._chunkedData[t];\n          var i = new Blob(n.data);\n\n          this._handleDataMessage({\n            data: i\n          });\n        }\n      }, s.prototype.close = function () {\n        this._buffer = [], this._bufferSize = 0, this._chunkedData = {}, this._negotiator && (this._negotiator.cleanup(), this._negotiator = null), this.provider && (this.provider._removeConnection(this), this.provider = null), this.dataChannel && (this.dataChannel.onopen = null, this.dataChannel.onmessage = null, this.dataChannel.onclose = null, this._dc = null), this._encodingQueue && (this._encodingQueue.destroy(), this._encodingQueue.removeAllListeners(), this._encodingQueue = null), this.open && (this._open = !1, n.prototype.emit.call(this, a.ConnectionEventType.Close));\n      }, s.prototype.send = function (e, t) {\n        if (this.open) {\n          if (this.serialization === a.SerializationType.JSON) this._bufferedSend(this.stringify(e));else if (this.serialization === a.SerializationType.Binary || this.serialization === a.SerializationType.BinaryUTF8) {\n            var o = i.util.pack(e);\n            if (!t && o.size > i.util.chunkedMTU) return void this._sendChunks(o);\n            i.util.supports.binaryBlob ? this._bufferedSend(o) : this._encodingQueue.enque(o);\n          } else this._bufferedSend(e);\n        } else n.prototype.emit.call(this, a.ConnectionEventType.Error, new Error(\"Connection is not open. You should listen for the `open` event before sending messages.\"));\n      }, s.prototype._bufferedSend = function (e) {\n        !this._buffering && this._trySend(e) || (this._buffer.push(e), this._bufferSize = this._buffer.length);\n      }, s.prototype._trySend = function (e) {\n        var t = this;\n        if (!this.open) return !1;\n        if (this.dataChannel.bufferedAmount > s.MAX_BUFFERED_AMOUNT) return this._buffering = !0, setTimeout(function () {\n          t._buffering = !1, t._tryBuffer();\n        }, 50), !1;\n\n        try {\n          this.dataChannel.send(e);\n        } catch (n) {\n          return o.default.error(\"DC#:\" + this.connectionId + \" Error when sending:\", n), this._buffering = !0, this.close(), !1;\n        }\n\n        return !0;\n      }, s.prototype._tryBuffer = function () {\n        if (this.open && 0 !== this._buffer.length) {\n          var e = this._buffer[0];\n          this._trySend(e) && (this._buffer.shift(), this._bufferSize = this._buffer.length, this._tryBuffer());\n        }\n      }, s.prototype._sendChunks = function (e) {\n        var n,\n            r,\n            a = i.util.chunk(e);\n        o.default.log(\"DC#\" + this.connectionId + \" Try to send \" + a.length + \" chunks...\");\n\n        try {\n          for (var s = t(a), u = s.next(); !u.done; u = s.next()) {\n            var l = u.value;\n            this.send(l, !0);\n          }\n        } catch (f) {\n          n = {\n            error: f\n          };\n        } finally {\n          try {\n            u && !u.done && (r = s.return) && r.call(s);\n          } finally {\n            if (n) throw n.error;\n          }\n        }\n      }, s.prototype.handleMessage = function (e) {\n        var t = e.payload;\n\n        switch (e.type) {\n          case a.ServerMessageType.Answer:\n            this._negotiator.handleSDP(e.type, t.sdp);\n\n            break;\n\n          case a.ServerMessageType.Candidate:\n            this._negotiator.handleCandidate(t.candidate);\n\n            break;\n\n          default:\n            o.default.warn(\"Unrecognized message type:\", e.type, \"from peer:\", this.peer);\n        }\n      }, s.ID_PREFIX = \"dc_\", s.MAX_BUFFERED_AMOUNT = 8388608, s;\n    }(s.BaseConnection);\n\n    exports.DataConnection = l;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./negotiator\": \"HCdX\",\n    \"./enums\": \"ZRYf\",\n    \"./baseconnection\": \"tQFK\",\n    \"./encodingQueue\": \"GGp6\"\n  }],\n  \"in7L\": [function (require, module, exports) {\n    \"use strict\";\n\n    var t = this && this.__awaiter || function (t, e, r, o) {\n      return new (r || (r = Promise))(function (n, s) {\n        function i(t) {\n          try {\n            a(o.next(t));\n          } catch (e) {\n            s(e);\n          }\n        }\n\n        function u(t) {\n          try {\n            a(o.throw(t));\n          } catch (e) {\n            s(e);\n          }\n        }\n\n        function a(t) {\n          var e;\n          t.done ? n(t.value) : (e = t.value, e instanceof r ? e : new r(function (t) {\n            t(e);\n          })).then(i, u);\n        }\n\n        a((o = o.apply(t, e || [])).next());\n      });\n    },\n        e = this && this.__generator || function (t, e) {\n      var r,\n          o,\n          n,\n          s,\n          i = {\n        label: 0,\n        sent: function sent() {\n          if (1 & n[0]) throw n[1];\n          return n[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return s = {\n        next: u(0),\n        throw: u(1),\n        return: u(2)\n      }, \"function\" == typeof Symbol && (s[Symbol.iterator] = function () {\n        return this;\n      }), s;\n\n      function u(s) {\n        return function (u) {\n          return function (s) {\n            if (r) throw new TypeError(\"Generator is already executing.\");\n\n            for (; i;) {\n              try {\n                if (r = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, s[1])).done) return n;\n\n                switch (o = 0, n && (s = [2 & s[0], n.value]), s[0]) {\n                  case 0:\n                  case 1:\n                    n = s;\n                    break;\n\n                  case 4:\n                    return i.label++, {\n                      value: s[1],\n                      done: !1\n                    };\n\n                  case 5:\n                    i.label++, o = s[1], s = [0];\n                    continue;\n\n                  case 7:\n                    s = i.ops.pop(), i.trys.pop();\n                    continue;\n\n                  default:\n                    if (!(n = (n = i.trys).length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {\n                      i = 0;\n                      continue;\n                    }\n\n                    if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {\n                      i.label = s[1];\n                      break;\n                    }\n\n                    if (6 === s[0] && i.label < n[1]) {\n                      i.label = n[1], n = s;\n                      break;\n                    }\n\n                    if (n && i.label < n[2]) {\n                      i.label = n[2], i.ops.push(s);\n                      break;\n                    }\n\n                    n[2] && i.ops.pop(), i.trys.pop();\n                    continue;\n                }\n\n                s = e.call(t, i);\n              } catch (u) {\n                s = [6, u], o = 0;\n              } finally {\n                r = n = 0;\n              }\n            }\n\n            if (5 & s[0]) throw s[1];\n            return {\n              value: s[0] ? s[1] : void 0,\n              done: !0\n            };\n          }([s, u]);\n        };\n      }\n    },\n        r = this && this.__importDefault || function (t) {\n      return t && t.__esModule ? t : {\n        default: t\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var o = require(\"./util\"),\n        n = r(require(\"./logger\")),\n        s = function () {\n      function r(t) {\n        this._options = t;\n      }\n\n      return r.prototype._buildUrl = function (t) {\n        var e = (this._options.secure ? \"https://\" : \"http://\") + this._options.host + \":\" + this._options.port + this._options.path + this._options.key + \"/\" + t;\n        return e += \"?ts=\" + new Date().getTime() + Math.random();\n      }, r.prototype.retrieveId = function () {\n        return t(this, void 0, Promise, function () {\n          var t, r, s, i;\n          return e(this, function (e) {\n            switch (e.label) {\n              case 0:\n                t = this._buildUrl(\"id\"), e.label = 1;\n\n              case 1:\n                return e.trys.push([1, 3,, 4]), [4, fetch(t)];\n\n              case 2:\n                if (200 !== (r = e.sent()).status) throw new Error(\"Error. Status:\" + r.status);\n                return [2, r.text()];\n\n              case 3:\n                throw s = e.sent(), n.default.error(\"Error retrieving ID\", s), i = \"\", \"/\" === this._options.path && this._options.host !== o.util.CLOUD_HOST && (i = \" If you passed in a `path` to your self-hosted PeerServer, you'll also need to pass in that same path when creating a new Peer.\"), new Error(\"Could not get an ID from the server.\" + i);\n\n              case 4:\n                return [2];\n            }\n          });\n        });\n      }, r.prototype.listAllPeers = function () {\n        return t(this, void 0, Promise, function () {\n          var t, r, s, i;\n          return e(this, function (e) {\n            switch (e.label) {\n              case 0:\n                t = this._buildUrl(\"peers\"), e.label = 1;\n\n              case 1:\n                return e.trys.push([1, 3,, 4]), [4, fetch(t)];\n\n              case 2:\n                if (200 !== (r = e.sent()).status) {\n                  if (401 === r.status) throw s = \"\", s = this._options.host === o.util.CLOUD_HOST ? \"It looks like you're using the cloud server. You can email team@peerjs.com to enable peer listing for your API key.\" : \"You need to enable `allow_discovery` on your self-hosted PeerServer to use this feature.\", new Error(\"It doesn't look like you have permission to list peers IDs. \" + s);\n                  throw new Error(\"Error. Status:\" + r.status);\n                }\n\n                return [2, r.json()];\n\n              case 3:\n                throw i = e.sent(), n.default.error(\"Error retrieving list peers\", i), new Error(\"Could not get list peers from the server.\" + i);\n\n              case 4:\n                return [2];\n            }\n          });\n        });\n      }, r;\n    }();\n\n    exports.API = s;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\"\n  }],\n  \"Hxpd\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e5 = function e(t, n) {\n        return (_e5 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var n in t) {\n            t.hasOwnProperty(n) && (e[n] = t[n]);\n          }\n        })(t, n);\n      };\n\n      return function (t, n) {\n        function r() {\n          this.constructor = t;\n        }\n\n        _e5(t, n), t.prototype = null === n ? Object.create(n) : (r.prototype = n.prototype, new r());\n      };\n    }(),\n        t = this && this.__assign || function () {\n      return (t = Object.assign || function (e) {\n        for (var t, n = 1, r = arguments.length; n < r; n++) {\n          for (var o in t = arguments[n]) {\n            Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);\n          }\n        }\n\n        return e;\n      }).apply(this, arguments);\n    },\n        n = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          n = t && e[t],\n          r = 0;\n      if (n) return n.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && r >= e.length && (e = void 0), {\n            value: e && e[r++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        r = this && this.__read || function (e, t) {\n      var n = \"function\" == typeof Symbol && e[Symbol.iterator];\n      if (!n) return e;\n      var r,\n          o,\n          i = n.call(e),\n          s = [];\n\n      try {\n        for (; (void 0 === t || t-- > 0) && !(r = i.next()).done;) {\n          s.push(r.value);\n        }\n      } catch (a) {\n        o = {\n          error: a\n        };\n      } finally {\n        try {\n          r && !r.done && (n = i.return) && n.call(i);\n        } finally {\n          if (o) throw o.error;\n        }\n      }\n\n      return s;\n    },\n        o = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var i = require(\"eventemitter3\"),\n        s = require(\"./util\"),\n        a = o(require(\"./logger\")),\n        c = require(\"./socket\"),\n        l = require(\"./mediaconnection\"),\n        d = require(\"./dataconnection\"),\n        u = require(\"./enums\"),\n        p = require(\"./api\"),\n        h = function () {\n      return function () {};\n    }(),\n        f = function (o) {\n      function i(e, n) {\n        var r,\n            c = o.call(this) || this;\n        return c._id = null, c._lastServerId = null, c._destroyed = !1, c._disconnected = !1, c._open = !1, c._connections = new Map(), c._lostMessages = new Map(), e && e.constructor == Object ? n = e : e && (r = e.toString()), n = t({\n          debug: 0,\n          host: s.util.CLOUD_HOST,\n          port: s.util.CLOUD_PORT,\n          path: \"/\",\n          key: i.DEFAULT_KEY,\n          token: s.util.randomToken(),\n          config: s.util.defaultConfig\n        }, n), c._options = n, \"/\" === c._options.host && (c._options.host = window.location.hostname), c._options.path && (\"/\" !== c._options.path[0] && (c._options.path = \"/\" + c._options.path), \"/\" !== c._options.path[c._options.path.length - 1] && (c._options.path += \"/\")), void 0 === c._options.secure && c._options.host !== s.util.CLOUD_HOST ? c._options.secure = s.util.isSecure() : c._options.host == s.util.CLOUD_HOST && (c._options.secure = !0), c._options.logFunction && a.default.setLogFunction(c._options.logFunction), a.default.logLevel = c._options.debug || 0, c._api = new p.API(n), c._socket = c._createServerConnection(), s.util.supports.audioVideo || s.util.supports.data ? r && !s.util.validateId(r) ? (c._delayedAbort(u.PeerErrorType.InvalidID, 'ID \"' + r + '\" is invalid'), c) : (r ? c._initialize(r) : c._api.retrieveId().then(function (e) {\n          return c._initialize(e);\n        }).catch(function (e) {\n          return c._abort(u.PeerErrorType.ServerError, e);\n        }), c) : (c._delayedAbort(u.PeerErrorType.BrowserIncompatible, \"The current browser does not support WebRTC\"), c);\n      }\n\n      return e(i, o), Object.defineProperty(i.prototype, \"id\", {\n        get: function get() {\n          return this._id;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"options\", {\n        get: function get() {\n          return this._options;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"open\", {\n        get: function get() {\n          return this._open;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"socket\", {\n        get: function get() {\n          return this._socket;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"connections\", {\n        get: function get() {\n          var e,\n              t,\n              o = Object.create(null);\n\n          try {\n            for (var i = n(this._connections), s = i.next(); !s.done; s = i.next()) {\n              var a = r(s.value, 2),\n                  c = a[0],\n                  l = a[1];\n              o[c] = l;\n            }\n          } catch (d) {\n            e = {\n              error: d\n            };\n          } finally {\n            try {\n              s && !s.done && (t = i.return) && t.call(i);\n            } finally {\n              if (e) throw e.error;\n            }\n          }\n\n          return o;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"destroyed\", {\n        get: function get() {\n          return this._destroyed;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"disconnected\", {\n        get: function get() {\n          return this._disconnected;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), i.prototype._createServerConnection = function () {\n        var e = this,\n            t = new c.Socket(this._options.secure, this._options.host, this._options.port, this._options.path, this._options.key, this._options.pingInterval);\n        return t.on(u.SocketEventType.Message, function (t) {\n          e._handleMessage(t);\n        }), t.on(u.SocketEventType.Error, function (t) {\n          e._abort(u.PeerErrorType.SocketError, t);\n        }), t.on(u.SocketEventType.Disconnected, function () {\n          e.disconnected || (e.emitError(u.PeerErrorType.Network, \"Lost connection to server.\"), e.disconnect());\n        }), t.on(u.SocketEventType.Close, function () {\n          e.disconnected || e._abort(u.PeerErrorType.SocketClosed, \"Underlying socket is already closed.\");\n        }), t;\n      }, i.prototype._initialize = function (e) {\n        this._id = e, this.socket.start(e, this._options.token);\n      }, i.prototype._handleMessage = function (e) {\n        var t,\n            r,\n            o = e.type,\n            i = e.payload,\n            s = e.src;\n\n        switch (o) {\n          case u.ServerMessageType.Open:\n            this._lastServerId = this.id, this._open = !0, this.emit(u.PeerEventType.Open, this.id);\n            break;\n\n          case u.ServerMessageType.Error:\n            this._abort(u.PeerErrorType.ServerError, i.msg);\n\n            break;\n\n          case u.ServerMessageType.IdTaken:\n            this._abort(u.PeerErrorType.UnavailableID, 'ID \"' + this.id + '\" is taken');\n\n            break;\n\n          case u.ServerMessageType.InvalidKey:\n            this._abort(u.PeerErrorType.InvalidKey, 'API KEY \"' + this._options.key + '\" is invalid');\n\n            break;\n\n          case u.ServerMessageType.Leave:\n            a.default.log(\"Received leave message from \" + s), this._cleanupPeer(s), this._connections.delete(s);\n            break;\n\n          case u.ServerMessageType.Expire:\n            this.emitError(u.PeerErrorType.PeerUnavailable, \"Could not connect to peer \" + s);\n            break;\n\n          case u.ServerMessageType.Offer:\n            var c = i.connectionId;\n            if ((_ = this.getConnection(s, c)) && (_.close(), a.default.warn(\"Offer received for existing Connection ID:\" + c)), i.type === u.ConnectionType.Media) _ = new l.MediaConnection(s, this, {\n              connectionId: c,\n              _payload: i,\n              metadata: i.metadata\n            }), this._addConnection(s, _), this.emit(u.PeerEventType.Call, _);else {\n              if (i.type !== u.ConnectionType.Data) return void a.default.warn(\"Received malformed connection type:\" + i.type);\n              _ = new d.DataConnection(s, this, {\n                connectionId: c,\n                _payload: i,\n                metadata: i.metadata,\n                label: i.label,\n                serialization: i.serialization,\n                reliable: i.reliable\n              }), this._addConnection(s, _), this.emit(u.PeerEventType.Connection, _);\n            }\n\n            var p = this._getMessages(c);\n\n            try {\n              for (var h = n(p), f = h.next(); !f.done; f = h.next()) {\n                var y = f.value;\n\n                _.handleMessage(y);\n              }\n            } catch (v) {\n              t = {\n                error: v\n              };\n            } finally {\n              try {\n                f && !f.done && (r = h.return) && r.call(h);\n              } finally {\n                if (t) throw t.error;\n              }\n            }\n\n            break;\n\n          default:\n            if (!i) return void a.default.warn(\"You received a malformed message from \" + s + \" of type \" + o);\n\n            var _;\n\n            c = i.connectionId;\n            (_ = this.getConnection(s, c)) && _.peerConnection ? _.handleMessage(e) : c ? this._storeMessage(c, e) : a.default.warn(\"You received an unrecognized message:\", e);\n        }\n      }, i.prototype._storeMessage = function (e, t) {\n        this._lostMessages.has(e) || this._lostMessages.set(e, []), this._lostMessages.get(e).push(t);\n      }, i.prototype._getMessages = function (e) {\n        var t = this._lostMessages.get(e);\n\n        return t ? (this._lostMessages.delete(e), t) : [];\n      }, i.prototype.connect = function (e, t) {\n        if (void 0 === t && (t = {}), this.disconnected) return a.default.warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect, or call reconnect on this peer if you believe its ID to still be available.\"), void this.emitError(u.PeerErrorType.Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n        var n = new d.DataConnection(e, this, t);\n        return this._addConnection(e, n), n;\n      }, i.prototype.call = function (e, t, n) {\n        if (void 0 === n && (n = {}), this.disconnected) return a.default.warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect.\"), void this.emitError(u.PeerErrorType.Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n\n        if (t) {\n          n._stream = t;\n          var r = new l.MediaConnection(e, this, n);\n          return this._addConnection(e, r), r;\n        }\n\n        a.default.error(\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\");\n      }, i.prototype._addConnection = function (e, t) {\n        a.default.log(\"add connection \" + t.type + \":\" + t.connectionId + \" to peerId:\" + e), this._connections.has(e) || this._connections.set(e, []), this._connections.get(e).push(t);\n      }, i.prototype._removeConnection = function (e) {\n        var t = this._connections.get(e.peer);\n\n        if (t) {\n          var n = t.indexOf(e);\n          -1 !== n && t.splice(n, 1);\n        }\n\n        this._lostMessages.delete(e.connectionId);\n      }, i.prototype.getConnection = function (e, t) {\n        var r,\n            o,\n            i = this._connections.get(e);\n\n        if (!i) return null;\n\n        try {\n          for (var s = n(i), a = s.next(); !a.done; a = s.next()) {\n            var c = a.value;\n            if (c.connectionId === t) return c;\n          }\n        } catch (l) {\n          r = {\n            error: l\n          };\n        } finally {\n          try {\n            a && !a.done && (o = s.return) && o.call(s);\n          } finally {\n            if (r) throw r.error;\n          }\n        }\n\n        return null;\n      }, i.prototype._delayedAbort = function (e, t) {\n        var n = this;\n        setTimeout(function () {\n          n._abort(e, t);\n        }, 0);\n      }, i.prototype._abort = function (e, t) {\n        a.default.error(\"Aborting!\"), this.emitError(e, t), this._lastServerId ? this.disconnect() : this.destroy();\n      }, i.prototype.emitError = function (e, t) {\n        var n;\n        a.default.error(\"Error:\", t), (n = \"string\" == typeof t ? new Error(t) : t).type = e, this.emit(u.PeerEventType.Error, n);\n      }, i.prototype.destroy = function () {\n        this.destroyed || (a.default.log(\"Destroy peer with ID:\" + this.id), this.disconnect(), this._cleanup(), this._destroyed = !0, this.emit(u.PeerEventType.Close));\n      }, i.prototype._cleanup = function () {\n        var e, t;\n\n        try {\n          for (var r = n(this._connections.keys()), o = r.next(); !o.done; o = r.next()) {\n            var i = o.value;\n            this._cleanupPeer(i), this._connections.delete(i);\n          }\n        } catch (s) {\n          e = {\n            error: s\n          };\n        } finally {\n          try {\n            o && !o.done && (t = r.return) && t.call(r);\n          } finally {\n            if (e) throw e.error;\n          }\n        }\n\n        this.socket.removeAllListeners();\n      }, i.prototype._cleanupPeer = function (e) {\n        var t,\n            r,\n            o = this._connections.get(e);\n\n        if (o) try {\n          for (var i = n(o), s = i.next(); !s.done; s = i.next()) {\n            s.value.close();\n          }\n        } catch (a) {\n          t = {\n            error: a\n          };\n        } finally {\n          try {\n            s && !s.done && (r = i.return) && r.call(i);\n          } finally {\n            if (t) throw t.error;\n          }\n        }\n      }, i.prototype.disconnect = function () {\n        if (!this.disconnected) {\n          var e = this.id;\n          a.default.log(\"Disconnect peer with ID:\" + e), this._disconnected = !0, this._open = !1, this.socket.close(), this._lastServerId = e, this._id = null, this.emit(u.PeerEventType.Disconnected, e);\n        }\n      }, i.prototype.reconnect = function () {\n        if (this.disconnected && !this.destroyed) a.default.log(\"Attempting reconnection to server with ID \" + this._lastServerId), this._disconnected = !1, this._initialize(this._lastServerId);else {\n          if (this.destroyed) throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n          if (this.disconnected || this.open) throw new Error(\"Peer \" + this.id + \" cannot reconnect because it is not disconnected from the server!\");\n          a.default.error(\"In a hurry? We're still trying to make the initial connection!\");\n        }\n      }, i.prototype.listAllPeers = function (e) {\n        var t = this;\n        void 0 === e && (e = function e(_e6) {}), this._api.listAllPeers().then(function (t) {\n          return e(t);\n        }).catch(function (e) {\n          return t._abort(u.PeerErrorType.ServerError, e);\n        });\n      }, i.DEFAULT_KEY = \"peerjs\", i;\n    }(i.EventEmitter);\n\n    exports.Peer = f;\n  }, {\n    \"eventemitter3\": \"JJlS\",\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./socket\": \"wJlv\",\n    \"./mediaconnection\": \"dbHP\",\n    \"./dataconnection\": \"GBTQ\",\n    \"./enums\": \"ZRYf\",\n    \"./api\": \"in7L\"\n  }],\n  \"iTK6\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var e = require(\"./util\"),\n        r = require(\"./peer\");\n\n    exports.peerjs = {\n      Peer: r.Peer,\n      util: e.util\n    }, exports.default = r.Peer, window.peerjs = exports.peerjs, window.Peer = r.Peer;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./peer\": \"Hxpd\"\n  }]\n}, {}, [\"iTK6\"], null);","/*!\n * Paper.js v0.12.4 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2019, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & https://puckey.studio/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Sun Dec 15 21:25:00 2019 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2019 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * https://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\nvar paper = function (self, undefined) {\n  self = self || require('./node/self.js');\n  var window = self.window,\n      document = self.document;\n  var Base = new function () {\n    var hidden = /^(statics|enumerable|beans|preserve)$/,\n        array = [],\n        _slice = array.slice,\n        create = Object.create,\n        describe = Object.getOwnPropertyDescriptor,\n        define = Object.defineProperty,\n        forEach = array.forEach || function (iter, bind) {\n      for (var i = 0, l = this.length; i < l; i++) {\n        iter.call(bind, this[i], i, this);\n      }\n    },\n        forIn = function forIn(iter, bind) {\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) iter.call(bind, this[i], i, this);\n      }\n    },\n        set = Object.assign || function (dst) {\n      for (var i = 1, l = arguments.length; i < l; i++) {\n        var src = arguments[i];\n\n        for (var key in src) {\n          if (src.hasOwnProperty(key)) dst[key] = src[key];\n        }\n      }\n\n      return dst;\n    },\n        _each = function each(obj, iter, bind) {\n      if (obj) {\n        var desc = describe(obj, 'length');\n        (desc && typeof desc.value === 'number' ? forEach : forIn).call(obj, iter, bind = bind || obj);\n      }\n\n      return bind;\n    };\n\n    function _inject(dest, src, enumerable, beans, preserve) {\n      var beansNames = {};\n\n      function field(name, val) {\n        val = val || (val = describe(src, name)) && (val.get ? val : val.value);\n        if (typeof val === 'string' && val[0] === '#') val = dest[val.substring(1)] || val;\n        var isFunc = typeof val === 'function',\n            res = val,\n            prev = preserve || isFunc && !val.base ? val && val.get ? name in dest : dest[name] : null,\n            bean;\n\n        if (!preserve || !prev) {\n          if (isFunc && prev) val.base = prev;\n          if (isFunc && beans !== false && (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/))) beansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\n          if (!res || isFunc || !res.get || typeof res.get !== 'function' || !Base.isPlainObject(res)) {\n            res = {\n              value: res,\n              writable: true\n            };\n          }\n\n          if ((describe(dest, name) || {\n            configurable: true\n          }).configurable) {\n            res.configurable = true;\n            res.enumerable = enumerable != null ? enumerable : !bean;\n          }\n\n          define(dest, name, res);\n        }\n      }\n\n      if (src) {\n        for (var name in src) {\n          if (src.hasOwnProperty(name) && !hidden.test(name)) field(name);\n        }\n\n        for (var name in beansNames) {\n          var part = beansNames[name],\n              set = dest['set' + part],\n              get = dest['get' + part] || set && dest['is' + part];\n          if (get && (beans === true || get.length === 0)) field(name, {\n            get: get,\n            set: set\n          });\n        }\n      }\n\n      return dest;\n    }\n\n    function Base() {\n      for (var i = 0, l = arguments.length; i < l; i++) {\n        var src = arguments[i];\n        if (src) set(this, src);\n      }\n\n      return this;\n    }\n\n    return _inject(Base, {\n      inject: function inject(src) {\n        if (src) {\n          var statics = src.statics === true ? src : src.statics,\n              beans = src.beans,\n              preserve = src.preserve;\n          if (statics !== src) _inject(this.prototype, src, src.enumerable, beans, preserve);\n\n          _inject(this, statics, null, beans, preserve);\n        }\n\n        for (var i = 1, l = arguments.length; i < l; i++) {\n          this.inject(arguments[i]);\n        }\n\n        return this;\n      },\n      extend: function extend() {\n        var base = this,\n            ctor,\n            proto;\n\n        for (var i = 0, obj, l = arguments.length; i < l && !(ctor && proto); i++) {\n          obj = arguments[i];\n          ctor = ctor || obj.initialize;\n          proto = proto || obj.prototype;\n        }\n\n        ctor = ctor || function () {\n          base.apply(this, arguments);\n        };\n\n        proto = ctor.prototype = proto || create(this.prototype);\n        define(proto, 'constructor', {\n          value: ctor,\n          writable: true,\n          configurable: true\n        });\n\n        _inject(ctor, this);\n\n        if (arguments.length) this.inject.apply(ctor, arguments);\n        ctor.base = base;\n        return ctor;\n      }\n    }).inject({\n      enumerable: false,\n      initialize: Base,\n      set: Base,\n      inject: function inject() {\n        for (var i = 0, l = arguments.length; i < l; i++) {\n          var src = arguments[i];\n\n          if (src) {\n            _inject(this, src, src.enumerable, src.beans, src.preserve);\n          }\n        }\n\n        return this;\n      },\n      extend: function extend() {\n        var res = create(this);\n        return res.inject.apply(res, arguments);\n      },\n      each: function each(iter, bind) {\n        return _each(this, iter, bind);\n      },\n      clone: function clone() {\n        return new this.constructor(this);\n      },\n      statics: {\n        set: set,\n        each: _each,\n        create: create,\n        define: define,\n        describe: describe,\n        clone: function clone(obj) {\n          return set(new obj.constructor(), obj);\n        },\n        isPlainObject: function isPlainObject(obj) {\n          var ctor = obj != null && obj.constructor;\n          return ctor && (ctor === Object || ctor === Base || ctor.name === 'Object');\n        },\n        pick: function pick(a, b) {\n          return a !== undefined ? a : b;\n        },\n        slice: function slice(list, begin, end) {\n          return _slice.call(list, begin, end);\n        }\n      }\n    });\n  }();\n  if (typeof module !== 'undefined') module.exports = Base;\n  Base.inject({\n    enumerable: false,\n    toString: function toString() {\n      return this._id != null ? (this._class || 'Object') + (this._name ? \" '\" + this._name + \"'\" : ' @' + this._id) : '{ ' + Base.each(this, function (value, key) {\n        if (!/^_/.test(key)) {\n          var type = typeof value;\n          this.push(key + ': ' + (type === 'number' ? Formatter.instance.number(value) : type === 'string' ? \"'\" + value + \"'\" : value));\n        }\n      }, []).join(', ') + ' }';\n    },\n    getClassName: function getClassName() {\n      return this._class || '';\n    },\n    importJSON: function importJSON(json) {\n      return Base.importJSON(json, this);\n    },\n    exportJSON: function exportJSON(options) {\n      return Base.exportJSON(this, options);\n    },\n    toJSON: function toJSON() {\n      return Base.serialize(this);\n    },\n    set: function set(props, exclude) {\n      if (props) Base.filter(this, props, exclude, this._prioritize);\n      return this;\n    }\n  }, {\n    beans: false,\n    statics: {\n      exports: {},\n      extend: function extend() {\n        var res = extend.base.apply(this, arguments),\n            name = res.prototype._class;\n        if (name && !Base.exports[name]) Base.exports[name] = res;\n        return res;\n      },\n      equals: function equals(obj1, obj2) {\n        if (obj1 === obj2) return true;\n        if (obj1 && obj1.equals) return obj1.equals(obj2);\n        if (obj2 && obj2.equals) return obj2.equals(obj1);\n\n        if (obj1 && obj2 && typeof obj1 === 'object' && typeof obj2 === 'object') {\n          if (Array.isArray(obj1) && Array.isArray(obj2)) {\n            var length = obj1.length;\n            if (length !== obj2.length) return false;\n\n            while (length--) {\n              if (!Base.equals(obj1[length], obj2[length])) return false;\n            }\n          } else {\n            var keys = Object.keys(obj1),\n                length = keys.length;\n            if (length !== Object.keys(obj2).length) return false;\n\n            while (length--) {\n              var key = keys[length];\n              if (!(obj2.hasOwnProperty(key) && Base.equals(obj1[key], obj2[key]))) return false;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      },\n      read: function read(list, start, options, amount) {\n        if (this === Base) {\n          var value = this.peek(list, start);\n          list.__index++;\n          return value;\n        }\n\n        var proto = this.prototype,\n            readIndex = proto._readIndex,\n            begin = start || readIndex && list.__index || 0,\n            length = list.length,\n            obj = list[begin];\n        amount = amount || length - begin;\n\n        if (obj instanceof this || options && options.readNull && obj == null && amount <= 1) {\n          if (readIndex) list.__index = begin + 1;\n          return obj && options && options.clone ? obj.clone() : obj;\n        }\n\n        obj = Base.create(proto);\n        if (readIndex) obj.__read = true;\n        obj = obj.initialize.apply(obj, begin > 0 || begin + amount < length ? Base.slice(list, begin, begin + amount) : list) || obj;\n\n        if (readIndex) {\n          list.__index = begin + obj.__read;\n          var filtered = obj.__filtered;\n\n          if (filtered) {\n            list.__filtered = filtered;\n            obj.__filtered = undefined;\n          }\n\n          obj.__read = undefined;\n        }\n\n        return obj;\n      },\n      peek: function peek(list, start) {\n        return list[list.__index = start || list.__index || 0];\n      },\n      remain: function remain(list) {\n        return list.length - (list.__index || 0);\n      },\n      readList: function readList(list, start, options, amount) {\n        var res = [],\n            entry,\n            begin = start || 0,\n            end = amount ? begin + amount : list.length;\n\n        for (var i = begin; i < end; i++) {\n          res.push(Array.isArray(entry = list[i]) ? this.read(entry, 0, options) : this.read(list, i, options, 1));\n        }\n\n        return res;\n      },\n      readNamed: function readNamed(list, name, start, options, amount) {\n        var value = this.getNamed(list, name),\n            hasValue = value !== undefined;\n\n        if (hasValue) {\n          var filtered = list.__filtered;\n\n          if (!filtered) {\n            var source = this.getSource(list);\n            filtered = list.__filtered = Base.create(source);\n            filtered.__unfiltered = source;\n          }\n\n          filtered[name] = undefined;\n        }\n\n        return this.read(hasValue ? [value] : list, start, options, amount);\n      },\n      readSupported: function readSupported(list, dest) {\n        var source = this.getSource(list),\n            that = this,\n            read = false;\n\n        if (source) {\n          Object.keys(source).forEach(function (key) {\n            if (key in dest) {\n              var value = that.readNamed(list, key);\n\n              if (value !== undefined) {\n                dest[key] = value;\n              }\n\n              read = true;\n            }\n          });\n        }\n\n        return read;\n      },\n      getSource: function getSource(list) {\n        var source = list.__source;\n\n        if (source === undefined) {\n          var arg = list.length === 1 && list[0];\n          source = list.__source = arg && Base.isPlainObject(arg) ? arg : null;\n        }\n\n        return source;\n      },\n      getNamed: function getNamed(list, name) {\n        var source = this.getSource(list);\n\n        if (source) {\n          return name ? source[name] : list.__filtered || source;\n        }\n      },\n      hasNamed: function hasNamed(list, name) {\n        return !!this.getNamed(list, name);\n      },\n      filter: function filter(dest, source, exclude, prioritize) {\n        var processed;\n\n        function handleKey(key) {\n          if (!(exclude && key in exclude) && !(processed && key in processed)) {\n            var value = source[key];\n            if (value !== undefined) dest[key] = value;\n          }\n        }\n\n        if (prioritize) {\n          var keys = {};\n\n          for (var i = 0, key, l = prioritize.length; i < l; i++) {\n            if ((key = prioritize[i]) in source) {\n              handleKey(key);\n              keys[key] = true;\n            }\n          }\n\n          processed = keys;\n        }\n\n        Object.keys(source.__unfiltered || source).forEach(handleKey);\n        return dest;\n      },\n      isPlainValue: function isPlainValue(obj, asString) {\n        return Base.isPlainObject(obj) || Array.isArray(obj) || asString && typeof obj === 'string';\n      },\n      serialize: function serialize(obj, options, compact, dictionary) {\n        options = options || {};\n        var isRoot = !dictionary,\n            res;\n\n        if (isRoot) {\n          options.formatter = new Formatter(options.precision);\n          dictionary = {\n            length: 0,\n            definitions: {},\n            references: {},\n            add: function add(item, create) {\n              var id = '#' + item._id,\n                  ref = this.references[id];\n\n              if (!ref) {\n                this.length++;\n                var res = create.call(item),\n                    name = item._class;\n                if (name && res[0] !== name) res.unshift(name);\n                this.definitions[id] = res;\n                ref = this.references[id] = [id];\n              }\n\n              return ref;\n            }\n          };\n        }\n\n        if (obj && obj._serialize) {\n          res = obj._serialize(options, dictionary);\n          var name = obj._class;\n\n          if (name && !obj._compactSerialize && (isRoot || !compact) && res[0] !== name) {\n            res.unshift(name);\n          }\n        } else if (Array.isArray(obj)) {\n          res = [];\n\n          for (var i = 0, l = obj.length; i < l; i++) {\n            res[i] = Base.serialize(obj[i], options, compact, dictionary);\n          }\n        } else if (Base.isPlainObject(obj)) {\n          res = {};\n          var keys = Object.keys(obj);\n\n          for (var i = 0, l = keys.length; i < l; i++) {\n            var key = keys[i];\n            res[key] = Base.serialize(obj[key], options, compact, dictionary);\n          }\n        } else if (typeof obj === 'number') {\n          res = options.formatter.number(obj, options.precision);\n        } else {\n          res = obj;\n        }\n\n        return isRoot && dictionary.length > 0 ? [['dictionary', dictionary.definitions], res] : res;\n      },\n      deserialize: function deserialize(json, create, _data, _setDictionary, _isRoot) {\n        var res = json,\n            isFirst = !_data,\n            hasDictionary = isFirst && json && json.length && json[0][0] === 'dictionary';\n        _data = _data || {};\n\n        if (Array.isArray(json)) {\n          var type = json[0],\n              isDictionary = type === 'dictionary';\n\n          if (json.length == 1 && /^#/.test(type)) {\n            return _data.dictionary[type];\n          }\n\n          type = Base.exports[type];\n          res = [];\n\n          for (var i = type ? 1 : 0, l = json.length; i < l; i++) {\n            res.push(Base.deserialize(json[i], create, _data, isDictionary, hasDictionary));\n          }\n\n          if (type) {\n            var args = res;\n\n            if (create) {\n              res = create(type, args, isFirst || _isRoot);\n            } else {\n              res = new type(args);\n            }\n          }\n        } else if (Base.isPlainObject(json)) {\n          res = {};\n          if (_setDictionary) _data.dictionary = res;\n\n          for (var key in json) {\n            res[key] = Base.deserialize(json[key], create, _data);\n          }\n        }\n\n        return hasDictionary ? res[1] : res;\n      },\n      exportJSON: function exportJSON(obj, options) {\n        var json = Base.serialize(obj, options);\n        return options && options.asString == false ? json : JSON.stringify(json);\n      },\n      importJSON: function importJSON(json, target) {\n        return Base.deserialize(typeof json === 'string' ? JSON.parse(json) : json, function (ctor, args, isRoot) {\n          var useTarget = isRoot && target && target.constructor === ctor,\n              obj = useTarget ? target : Base.create(ctor.prototype);\n\n          if (args.length === 1 && obj instanceof Item && (useTarget || !(obj instanceof Layer))) {\n            var arg = args[0];\n\n            if (Base.isPlainObject(arg)) {\n              arg.insert = false;\n\n              if (useTarget) {\n                args = args.concat([{\n                  insert: true\n                }]);\n              }\n            }\n          }\n\n          (useTarget ? obj.set : ctor).apply(obj, args);\n          if (useTarget) target = null;\n          return obj;\n        });\n      },\n      push: function push(list, items) {\n        var itemsLength = items.length;\n\n        if (itemsLength < 4096) {\n          list.push.apply(list, items);\n        } else {\n          var startLength = list.length;\n          list.length += itemsLength;\n\n          for (var i = 0; i < itemsLength; i++) {\n            list[startLength + i] = items[i];\n          }\n        }\n\n        return list;\n      },\n      splice: function splice(list, items, index, remove) {\n        var amount = items && items.length,\n            append = index === undefined;\n        index = append ? list.length : index;\n        if (index > list.length) index = list.length;\n\n        for (var i = 0; i < amount; i++) {\n          items[i]._index = index + i;\n        }\n\n        if (append) {\n          Base.push(list, items);\n          return [];\n        } else {\n          var args = [index, remove];\n          if (items) Base.push(args, items);\n          var removed = list.splice.apply(list, args);\n\n          for (var i = 0, l = removed.length; i < l; i++) {\n            removed[i]._index = undefined;\n          }\n\n          for (var i = index + amount, l = list.length; i < l; i++) {\n            list[i]._index = i;\n          }\n\n          return removed;\n        }\n      },\n      capitalize: function capitalize(str) {\n        return str.replace(/\\b[a-z]/g, function (match) {\n          return match.toUpperCase();\n        });\n      },\n      camelize: function camelize(str) {\n        return str.replace(/-(.)/g, function (match, chr) {\n          return chr.toUpperCase();\n        });\n      },\n      hyphenate: function hyphenate(str) {\n        return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n      }\n    }\n  });\n  var Emitter = {\n    on: function on(type, func) {\n      if (typeof type !== 'string') {\n        Base.each(type, function (value, key) {\n          this.on(key, value);\n        }, this);\n      } else {\n        var types = this._eventTypes,\n            entry = types && types[type],\n            handlers = this._callbacks = this._callbacks || {};\n        handlers = handlers[type] = handlers[type] || [];\n\n        if (handlers.indexOf(func) === -1) {\n          handlers.push(func);\n          if (entry && entry.install && handlers.length === 1) entry.install.call(this, type);\n        }\n      }\n\n      return this;\n    },\n    off: function off(type, func) {\n      if (typeof type !== 'string') {\n        Base.each(type, function (value, key) {\n          this.off(key, value);\n        }, this);\n        return;\n      }\n\n      var types = this._eventTypes,\n          entry = types && types[type],\n          handlers = this._callbacks && this._callbacks[type],\n          index;\n\n      if (handlers) {\n        if (!func || (index = handlers.indexOf(func)) !== -1 && handlers.length === 1) {\n          if (entry && entry.uninstall) entry.uninstall.call(this, type);\n          delete this._callbacks[type];\n        } else if (index !== -1) {\n          handlers.splice(index, 1);\n        }\n      }\n\n      return this;\n    },\n    once: function once(type, func) {\n      return this.on(type, function handler() {\n        func.apply(this, arguments);\n        this.off(type, handler);\n      });\n    },\n    emit: function emit(type, event) {\n      var handlers = this._callbacks && this._callbacks[type];\n      if (!handlers) return false;\n      var args = Base.slice(arguments, 1),\n          setTarget = event && event.target && !event.currentTarget;\n      handlers = handlers.slice();\n      if (setTarget) event.currentTarget = this;\n\n      for (var i = 0, l = handlers.length; i < l; i++) {\n        if (handlers[i].apply(this, args) == false) {\n          if (event && event.stop) event.stop();\n          break;\n        }\n      }\n\n      if (setTarget) delete event.currentTarget;\n      return true;\n    },\n    responds: function responds(type) {\n      return !!(this._callbacks && this._callbacks[type]);\n    },\n    attach: '#on',\n    detach: '#off',\n    fire: '#emit',\n    _installEvents: function _installEvents(install) {\n      var types = this._eventTypes,\n          handlers = this._callbacks,\n          key = install ? 'install' : 'uninstall';\n\n      if (types) {\n        for (var type in handlers) {\n          if (handlers[type].length > 0) {\n            var entry = types[type],\n                func = entry && entry[key];\n            if (func) func.call(this, type);\n          }\n        }\n      }\n    },\n    statics: {\n      inject: function inject(src) {\n        var events = src._events;\n\n        if (events) {\n          var types = {};\n          Base.each(events, function (entry, key) {\n            var isString = typeof entry === 'string',\n                name = isString ? entry : key,\n                part = Base.capitalize(name),\n                type = name.substring(2).toLowerCase();\n            types[type] = isString ? {} : entry;\n            name = '_' + name;\n\n            src['get' + part] = function () {\n              return this[name];\n            };\n\n            src['set' + part] = function (func) {\n              var prev = this[name];\n              if (prev) this.off(type, prev);\n              if (func) this.on(type, func);\n              this[name] = func;\n            };\n          });\n          src._eventTypes = types;\n        }\n\n        return inject.base.apply(this, arguments);\n      }\n    }\n  };\n  var PaperScope = Base.extend({\n    _class: 'PaperScope',\n    initialize: function PaperScope() {\n      paper = this;\n      this.settings = new Base({\n        applyMatrix: true,\n        insertItems: true,\n        handleSize: 4,\n        hitTolerance: 0\n      });\n      this.project = null;\n      this.projects = [];\n      this.tools = [];\n      this._id = PaperScope._id++;\n      PaperScope._scopes[this._id] = this;\n      var proto = PaperScope.prototype;\n\n      if (!this.support) {\n        var ctx = CanvasProvider.getContext(1, 1) || {};\n        proto.support = {\n          nativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n          nativeBlendModes: BlendMode.nativeModes\n        };\n        CanvasProvider.release(ctx);\n      }\n\n      if (!this.agent) {\n        var user = self.navigator.userAgent.toLowerCase(),\n            os = (/(darwin|win|mac|linux|freebsd|sunos)/.exec(user) || [])[0],\n            platform = os === 'darwin' ? 'mac' : os,\n            agent = proto.agent = proto.browser = {\n          platform: platform\n        };\n        if (platform) agent[platform] = true;\n        user.replace(/(opera|chrome|safari|webkit|firefox|msie|trident|atom|node|jsdom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:v?([.\\d]+))?/g, function (match, n, v1, v2, rv) {\n          if (!agent.chrome) {\n            var v = n === 'opera' ? v2 : /^(node|trident)$/.test(n) ? rv : v1;\n            agent.version = v;\n            agent.versionNumber = parseFloat(v);\n            n = {\n              trident: 'msie',\n              jsdom: 'node'\n            }[n] || n;\n            agent.name = n;\n            agent[n] = true;\n          }\n        });\n        if (agent.chrome) delete agent.webkit;\n        if (agent.atom) delete agent.chrome;\n      }\n    },\n    version: \"0.12.4\",\n    getView: function getView() {\n      var project = this.project;\n      return project && project._view;\n    },\n    getPaper: function getPaper() {\n      return this;\n    },\n    execute: function execute(code, options) {},\n    install: function install(scope) {\n      var that = this;\n      Base.each(['project', 'view', 'tool'], function (key) {\n        Base.define(scope, key, {\n          configurable: true,\n          get: function get() {\n            return that[key];\n          }\n        });\n      });\n\n      for (var key in this) {\n        if (!/^_/.test(key) && this[key]) scope[key] = this[key];\n      }\n    },\n    setup: function setup(element) {\n      paper = this;\n      this.project = new Project(element);\n      return this;\n    },\n    createCanvas: function createCanvas(width, height) {\n      return CanvasProvider.getCanvas(width, height);\n    },\n    activate: function activate() {\n      paper = this;\n    },\n    clear: function clear() {\n      var projects = this.projects,\n          tools = this.tools;\n\n      for (var i = projects.length - 1; i >= 0; i--) {\n        projects[i].remove();\n      }\n\n      for (var i = tools.length - 1; i >= 0; i--) {\n        tools[i].remove();\n      }\n    },\n    remove: function remove() {\n      this.clear();\n      delete PaperScope._scopes[this._id];\n    },\n    statics: new function () {\n      function handleAttribute(name) {\n        name += 'Attribute';\n        return function (el, attr) {\n          return el[name](attr) || el[name]('data-paper-' + attr);\n        };\n      }\n\n      return {\n        _scopes: {},\n        _id: 0,\n        get: function get(id) {\n          return this._scopes[id] || null;\n        },\n        getAttribute: handleAttribute('get'),\n        hasAttribute: handleAttribute('has')\n      };\n    }()\n  });\n  var PaperScopeItem = Base.extend(Emitter, {\n    initialize: function initialize(activate) {\n      this._scope = paper;\n      this._index = this._scope[this._list].push(this) - 1;\n      if (activate || !this._scope[this._reference]) this.activate();\n    },\n    activate: function activate() {\n      if (!this._scope) return false;\n      var prev = this._scope[this._reference];\n      if (prev && prev !== this) prev.emit('deactivate');\n      this._scope[this._reference] = this;\n      this.emit('activate', prev);\n      return true;\n    },\n    isActive: function isActive() {\n      return this._scope[this._reference] === this;\n    },\n    remove: function remove() {\n      if (this._index == null) return false;\n      Base.splice(this._scope[this._list], null, this._index, 1);\n      if (this._scope[this._reference] == this) this._scope[this._reference] = null;\n      this._scope = null;\n      return true;\n    },\n    getView: function getView() {\n      return this._scope.getView();\n    }\n  });\n  var CollisionDetection = {\n    findItemBoundsCollisions: function findItemBoundsCollisions(items1, items2, tolerance) {\n      function getBounds(items) {\n        var bounds = new Array(items.length);\n\n        for (var i = 0; i < items.length; i++) {\n          var rect = items[i].getBounds();\n          bounds[i] = [rect.left, rect.top, rect.right, rect.bottom];\n        }\n\n        return bounds;\n      }\n\n      var bounds1 = getBounds(items1),\n          bounds2 = !items2 || items2 === items1 ? bounds1 : getBounds(items2);\n      return this.findBoundsCollisions(bounds1, bounds2, tolerance || 0);\n    },\n    findCurveBoundsCollisions: function findCurveBoundsCollisions(curves1, curves2, tolerance, bothAxis) {\n      function getBounds(curves) {\n        var min = Math.min,\n            max = Math.max,\n            bounds = new Array(curves.length);\n\n        for (var i = 0; i < curves.length; i++) {\n          var v = curves[i];\n          bounds[i] = [min(v[0], v[2], v[4], v[6]), min(v[1], v[3], v[5], v[7]), max(v[0], v[2], v[4], v[6]), max(v[1], v[3], v[5], v[7])];\n        }\n\n        return bounds;\n      }\n\n      var bounds1 = getBounds(curves1),\n          bounds2 = !curves2 || curves2 === curves1 ? bounds1 : getBounds(curves2);\n\n      if (bothAxis) {\n        var hor = this.findBoundsCollisions(bounds1, bounds2, tolerance || 0, false, true),\n            ver = this.findBoundsCollisions(bounds1, bounds2, tolerance || 0, true, true),\n            list = [];\n\n        for (var i = 0, l = hor.length; i < l; i++) {\n          list[i] = {\n            hor: hor[i],\n            ver: ver[i]\n          };\n        }\n\n        return list;\n      }\n\n      return this.findBoundsCollisions(bounds1, bounds2, tolerance || 0);\n    },\n    findBoundsCollisions: function findBoundsCollisions(boundsA, boundsB, tolerance, sweepVertical, onlySweepAxisCollisions) {\n      var self = !boundsB || boundsA === boundsB,\n          allBounds = self ? boundsA : boundsA.concat(boundsB),\n          lengthA = boundsA.length,\n          lengthAll = allBounds.length;\n\n      function binarySearch(indices, coord, value) {\n        var lo = 0,\n            hi = indices.length;\n\n        while (lo < hi) {\n          var mid = hi + lo >>> 1;\n\n          if (allBounds[indices[mid]][coord] < value) {\n            lo = mid + 1;\n          } else {\n            hi = mid;\n          }\n        }\n\n        return lo - 1;\n      }\n\n      var pri0 = sweepVertical ? 1 : 0,\n          pri1 = pri0 + 2,\n          sec0 = sweepVertical ? 0 : 1,\n          sec1 = sec0 + 2;\n      var allIndicesByPri0 = new Array(lengthAll);\n\n      for (var i = 0; i < lengthAll; i++) {\n        allIndicesByPri0[i] = i;\n      }\n\n      allIndicesByPri0.sort(function (i1, i2) {\n        return allBounds[i1][pri0] - allBounds[i2][pri0];\n      });\n      var activeIndicesByPri1 = [],\n          allCollisions = new Array(lengthA);\n\n      for (var i = 0; i < lengthAll; i++) {\n        var curIndex = allIndicesByPri0[i],\n            curBounds = allBounds[curIndex],\n            origIndex = self ? curIndex : curIndex - lengthA,\n            isCurrentA = curIndex < lengthA,\n            isCurrentB = self || !isCurrentA,\n            curCollisions = isCurrentA ? [] : null;\n\n        if (activeIndicesByPri1.length) {\n          var pruneCount = binarySearch(activeIndicesByPri1, pri1, curBounds[pri0] - tolerance) + 1;\n          activeIndicesByPri1.splice(0, pruneCount);\n\n          if (self && onlySweepAxisCollisions) {\n            curCollisions = curCollisions.concat(activeIndicesByPri1);\n\n            for (var j = 0; j < activeIndicesByPri1.length; j++) {\n              var activeIndex = activeIndicesByPri1[j];\n              allCollisions[activeIndex].push(origIndex);\n            }\n          } else {\n            var curSec1 = curBounds[sec1],\n                curSec0 = curBounds[sec0];\n\n            for (var j = 0; j < activeIndicesByPri1.length; j++) {\n              var activeIndex = activeIndicesByPri1[j],\n                  activeBounds = allBounds[activeIndex],\n                  isActiveA = activeIndex < lengthA,\n                  isActiveB = self || activeIndex >= lengthA;\n\n              if (onlySweepAxisCollisions || (isCurrentA && isActiveB || isCurrentB && isActiveA) && curSec1 >= activeBounds[sec0] - tolerance && curSec0 <= activeBounds[sec1] + tolerance) {\n                if (isCurrentA && isActiveB) {\n                  curCollisions.push(self ? activeIndex : activeIndex - lengthA);\n                }\n\n                if (isCurrentB && isActiveA) {\n                  allCollisions[activeIndex].push(origIndex);\n                }\n              }\n            }\n          }\n        }\n\n        if (isCurrentA) {\n          if (boundsA === boundsB) {\n            curCollisions.push(curIndex);\n          }\n\n          allCollisions[curIndex] = curCollisions;\n        }\n\n        if (activeIndicesByPri1.length) {\n          var curPri1 = curBounds[pri1],\n              index = binarySearch(activeIndicesByPri1, pri1, curPri1);\n          activeIndicesByPri1.splice(index + 1, 0, curIndex);\n        } else {\n          activeIndicesByPri1.push(curIndex);\n        }\n      }\n\n      for (var i = 0; i < allCollisions.length; i++) {\n        var collisions = allCollisions[i];\n\n        if (collisions) {\n          collisions.sort(function (i1, i2) {\n            return i1 - i2;\n          });\n        }\n      }\n\n      return allCollisions;\n    }\n  };\n  var Formatter = Base.extend({\n    initialize: function initialize(precision) {\n      this.precision = Base.pick(precision, 5);\n      this.multiplier = Math.pow(10, this.precision);\n    },\n    number: function number(val) {\n      return this.precision < 16 ? Math.round(val * this.multiplier) / this.multiplier : val;\n    },\n    pair: function pair(val1, val2, separator) {\n      return this.number(val1) + (separator || ',') + this.number(val2);\n    },\n    point: function point(val, separator) {\n      return this.number(val.x) + (separator || ',') + this.number(val.y);\n    },\n    size: function size(val, separator) {\n      return this.number(val.width) + (separator || ',') + this.number(val.height);\n    },\n    rectangle: function rectangle(val, separator) {\n      return this.point(val, separator) + (separator || ',') + this.size(val, separator);\n    }\n  });\n  Formatter.instance = new Formatter();\n  var Numerical = new function () {\n    var abscissas = [[0.5773502691896257645091488], [0, 0.7745966692414833770358531], [0.3399810435848562648026658, 0.8611363115940525752239465], [0, 0.5384693101056830910363144, 0.9061798459386639927976269], [0.2386191860831969086305017, 0.6612093864662645136613996, 0.9324695142031520278123016], [0, 0.4058451513773971669066064, 0.7415311855993944398638648, 0.9491079123427585245261897], [0.1834346424956498049394761, 0.5255324099163289858177390, 0.7966664774136267395915539, 0.9602898564975362316835609], [0, 0.3242534234038089290385380, 0.6133714327005903973087020, 0.8360311073266357942994298, 0.9681602395076260898355762], [0.1488743389816312108848260, 0.4333953941292471907992659, 0.6794095682990244062343274, 0.8650633666889845107320967, 0.9739065285171717200779640], [0, 0.2695431559523449723315320, 0.5190961292068118159257257, 0.7301520055740493240934163, 0.8870625997680952990751578, 0.9782286581460569928039380], [0.1252334085114689154724414, 0.3678314989981801937526915, 0.5873179542866174472967024, 0.7699026741943046870368938, 0.9041172563704748566784659, 0.9815606342467192506905491], [0, 0.2304583159551347940655281, 0.4484927510364468528779129, 0.6423493394403402206439846, 0.8015780907333099127942065, 0.9175983992229779652065478, 0.9841830547185881494728294], [0.1080549487073436620662447, 0.3191123689278897604356718, 0.5152486363581540919652907, 0.6872929048116854701480198, 0.8272013150697649931897947, 0.9284348836635735173363911, 0.9862838086968123388415973], [0, 0.2011940939974345223006283, 0.3941513470775633698972074, 0.5709721726085388475372267, 0.7244177313601700474161861, 0.8482065834104272162006483, 0.9372733924007059043077589, 0.9879925180204854284895657], [0.0950125098376374401853193, 0.2816035507792589132304605, 0.4580167776572273863424194, 0.6178762444026437484466718, 0.7554044083550030338951012, 0.8656312023878317438804679, 0.9445750230732325760779884, 0.9894009349916499325961542]];\n    var weights = [[1], [0.8888888888888888888888889, 0.5555555555555555555555556], [0.6521451548625461426269361, 0.3478548451374538573730639], [0.5688888888888888888888889, 0.4786286704993664680412915, 0.2369268850561890875142640], [0.4679139345726910473898703, 0.3607615730481386075698335, 0.1713244923791703450402961], [0.4179591836734693877551020, 0.3818300505051189449503698, 0.2797053914892766679014678, 0.1294849661688696932706114], [0.3626837833783619829651504, 0.3137066458778872873379622, 0.2223810344533744705443560, 0.1012285362903762591525314], [0.3302393550012597631645251, 0.3123470770400028400686304, 0.2606106964029354623187429, 0.1806481606948574040584720, 0.0812743883615744119718922], [0.2955242247147528701738930, 0.2692667193099963550912269, 0.2190863625159820439955349, 0.1494513491505805931457763, 0.0666713443086881375935688], [0.2729250867779006307144835, 0.2628045445102466621806889, 0.2331937645919904799185237, 0.1862902109277342514260976, 0.1255803694649046246346943, 0.0556685671161736664827537], [0.2491470458134027850005624, 0.2334925365383548087608499, 0.2031674267230659217490645, 0.1600783285433462263346525, 0.1069393259953184309602547, 0.0471753363865118271946160], [0.2325515532308739101945895, 0.2262831802628972384120902, 0.2078160475368885023125232, 0.1781459807619457382800467, 0.1388735102197872384636018, 0.0921214998377284479144218, 0.0404840047653158795200216], [0.2152638534631577901958764, 0.2051984637212956039659241, 0.1855383974779378137417166, 0.1572031671581935345696019, 0.1215185706879031846894148, 0.0801580871597602098056333, 0.0351194603317518630318329], [0.2025782419255612728806202, 0.1984314853271115764561183, 0.1861610000155622110268006, 0.1662692058169939335532009, 0.1395706779261543144478048, 0.1071592204671719350118695, 0.0703660474881081247092674, 0.0307532419961172683546284], [0.1894506104550684962853967, 0.1826034150449235888667637, 0.1691565193950025381893121, 0.1495959888165767320815017, 0.1246289712555338720524763, 0.0951585116824927848099251, 0.0622535239386478928628438, 0.0271524594117540948517806]];\n\n    var abs = Math.abs,\n        sqrt = Math.sqrt,\n        pow = Math.pow,\n        log2 = Math.log2 || function (x) {\n      return Math.log(x) * Math.LOG2E;\n    },\n        EPSILON = 1e-12,\n        MACHINE_EPSILON = 1.12e-16;\n\n    function clamp(value, min, max) {\n      return value < min ? min : value > max ? max : value;\n    }\n\n    function getDiscriminant(a, b, c) {\n      function split(v) {\n        var x = v * 134217729,\n            y = v - x,\n            hi = y + x,\n            lo = v - hi;\n        return [hi, lo];\n      }\n\n      var D = b * b - a * c,\n          E = b * b + a * c;\n\n      if (abs(D) * 3 < E) {\n        var ad = split(a),\n            bd = split(b),\n            cd = split(c),\n            p = b * b,\n            dp = bd[0] * bd[0] - p + 2 * bd[0] * bd[1] + bd[1] * bd[1],\n            q = a * c,\n            dq = ad[0] * cd[0] - q + ad[0] * cd[1] + ad[1] * cd[0] + ad[1] * cd[1];\n        D = p - q + (dp - dq);\n      }\n\n      return D;\n    }\n\n    function getNormalizationFactor() {\n      var norm = Math.max.apply(Math, arguments);\n      return norm && (norm < 1e-8 || norm > 1e8) ? pow(2, -Math.round(log2(norm))) : 0;\n    }\n\n    return {\n      EPSILON: EPSILON,\n      MACHINE_EPSILON: MACHINE_EPSILON,\n      CURVETIME_EPSILON: 1e-8,\n      GEOMETRIC_EPSILON: 1e-7,\n      TRIGONOMETRIC_EPSILON: 1e-8,\n      KAPPA: 4 * (sqrt(2) - 1) / 3,\n      isZero: function isZero(val) {\n        return val >= -EPSILON && val <= EPSILON;\n      },\n      isMachineZero: function isMachineZero(val) {\n        return val >= -MACHINE_EPSILON && val <= MACHINE_EPSILON;\n      },\n      clamp: clamp,\n      integrate: function integrate(f, a, b, n) {\n        var x = abscissas[n - 2],\n            w = weights[n - 2],\n            A = (b - a) * 0.5,\n            B = A + a,\n            i = 0,\n            m = n + 1 >> 1,\n            sum = n & 1 ? w[i++] * f(B) : 0;\n\n        while (i < m) {\n          var Ax = A * x[i];\n          sum += w[i++] * (f(B + Ax) + f(B - Ax));\n        }\n\n        return A * sum;\n      },\n      findRoot: function findRoot(f, df, x, a, b, n, tolerance) {\n        for (var i = 0; i < n; i++) {\n          var fx = f(x),\n              dx = fx / df(x),\n              nx = x - dx;\n\n          if (abs(dx) < tolerance) {\n            x = nx;\n            break;\n          }\n\n          if (fx > 0) {\n            b = x;\n            x = nx <= a ? (a + b) * 0.5 : nx;\n          } else {\n            a = x;\n            x = nx >= b ? (a + b) * 0.5 : nx;\n          }\n        }\n\n        return clamp(x, a, b);\n      },\n      solveQuadratic: function solveQuadratic(a, b, c, roots, min, max) {\n        var x1,\n            x2 = Infinity;\n\n        if (abs(a) < EPSILON) {\n          if (abs(b) < EPSILON) return abs(c) < EPSILON ? -1 : 0;\n          x1 = -c / b;\n        } else {\n          b *= -0.5;\n          var D = getDiscriminant(a, b, c);\n\n          if (D && abs(D) < MACHINE_EPSILON) {\n            var f = getNormalizationFactor(abs(a), abs(b), abs(c));\n\n            if (f) {\n              a *= f;\n              b *= f;\n              c *= f;\n              D = getDiscriminant(a, b, c);\n            }\n          }\n\n          if (D >= -MACHINE_EPSILON) {\n            var Q = D < 0 ? 0 : sqrt(D),\n                R = b + (b < 0 ? -Q : Q);\n\n            if (R === 0) {\n              x1 = c / a;\n              x2 = -x1;\n            } else {\n              x1 = R / a;\n              x2 = c / R;\n            }\n          }\n        }\n\n        var count = 0,\n            boundless = min == null,\n            minB = min - EPSILON,\n            maxB = max + EPSILON;\n        if (isFinite(x1) && (boundless || x1 > minB && x1 < maxB)) roots[count++] = boundless ? x1 : clamp(x1, min, max);\n        if (x2 !== x1 && isFinite(x2) && (boundless || x2 > minB && x2 < maxB)) roots[count++] = boundless ? x2 : clamp(x2, min, max);\n        return count;\n      },\n      solveCubic: function solveCubic(a, b, c, d, roots, min, max) {\n        var f = getNormalizationFactor(abs(a), abs(b), abs(c), abs(d)),\n            x,\n            b1,\n            c2,\n            qd,\n            q;\n\n        if (f) {\n          a *= f;\n          b *= f;\n          c *= f;\n          d *= f;\n        }\n\n        function evaluate(x0) {\n          x = x0;\n          var tmp = a * x;\n          b1 = tmp + b;\n          c2 = b1 * x + c;\n          qd = (tmp + b1) * x + c2;\n          q = c2 * x + d;\n        }\n\n        if (abs(a) < EPSILON) {\n          a = b;\n          b1 = c;\n          c2 = d;\n          x = Infinity;\n        } else if (abs(d) < EPSILON) {\n          b1 = b;\n          c2 = c;\n          x = 0;\n        } else {\n          evaluate(-(b / a) / 3);\n          var t = q / a,\n              r = pow(abs(t), 1 / 3),\n              s = t < 0 ? -1 : 1,\n              td = -qd / a,\n              rd = td > 0 ? 1.324717957244746 * Math.max(r, sqrt(td)) : r,\n              x0 = x - s * rd;\n\n          if (x0 !== x) {\n            do {\n              evaluate(x0);\n              x0 = qd === 0 ? x : x - q / qd / (1 + MACHINE_EPSILON);\n            } while (s * x0 > s * x);\n\n            if (abs(a) * x * x > abs(d / x)) {\n              c2 = -d / x;\n              b1 = (c2 - c) / x;\n            }\n          }\n        }\n\n        var count = Numerical.solveQuadratic(a, b1, c2, roots, min, max),\n            boundless = min == null;\n        if (isFinite(x) && (count === 0 || count > 0 && x !== roots[0] && x !== roots[1]) && (boundless || x > min - EPSILON && x < max + EPSILON)) roots[count++] = boundless ? x : clamp(x, min, max);\n        return count;\n      }\n    };\n  }();\n  var UID = {\n    _id: 1,\n    _pools: {},\n    get: function get(name) {\n      if (name) {\n        var pool = this._pools[name];\n        if (!pool) pool = this._pools[name] = {\n          _id: 1\n        };\n        return pool._id++;\n      } else {\n        return this._id++;\n      }\n    }\n  };\n  var Point = Base.extend({\n    _class: 'Point',\n    _readIndex: true,\n    initialize: function Point(arg0, arg1) {\n      var type = typeof arg0,\n          reading = this.__read,\n          read = 0;\n\n      if (type === 'number') {\n        var hasY = typeof arg1 === 'number';\n\n        this._set(arg0, hasY ? arg1 : arg0);\n\n        if (reading) read = hasY ? 2 : 1;\n      } else if (type === 'undefined' || arg0 === null) {\n        this._set(0, 0);\n\n        if (reading) read = arg0 === null ? 1 : 0;\n      } else {\n        var obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n        read = 1;\n\n        if (Array.isArray(obj)) {\n          this._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n        } else if ('x' in obj) {\n          this._set(obj.x || 0, obj.y || 0);\n        } else if ('width' in obj) {\n          this._set(obj.width || 0, obj.height || 0);\n        } else if ('angle' in obj) {\n          this._set(obj.length || 0, 0);\n\n          this.setAngle(obj.angle || 0);\n        } else {\n          this._set(0, 0);\n\n          read = 0;\n        }\n      }\n\n      if (reading) this.__read = read;\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n    equals: function equals(point) {\n      return this === point || point && (this.x === point.x && this.y === point.y || Array.isArray(point) && this.x === point[0] && this.y === point[1]) || false;\n    },\n    clone: function clone() {\n      return new Point(this.x, this.y);\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n    },\n    _serialize: function _serialize(options) {\n      var f = options.formatter;\n      return [f.number(this.x), f.number(this.y)];\n    },\n    getLength: function getLength() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n    setLength: function setLength(length) {\n      if (this.isZero()) {\n        var angle = this._angle || 0;\n\n        this._set(Math.cos(angle) * length, Math.sin(angle) * length);\n      } else {\n        var scale = length / this.getLength();\n        if (Numerical.isZero(scale)) this.getAngle();\n\n        this._set(this.x * scale, this.y * scale);\n      }\n    },\n    getAngle: function getAngle() {\n      return this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n    },\n    setAngle: function setAngle(angle) {\n      this.setAngleInRadians.call(this, angle * Math.PI / 180);\n    },\n    getAngleInDegrees: '#getAngle',\n    setAngleInDegrees: '#setAngle',\n    getAngleInRadians: function getAngleInRadians() {\n      if (!arguments.length) {\n        return this.isZero() ? this._angle || 0 : this._angle = Math.atan2(this.y, this.x);\n      } else {\n        var point = Point.read(arguments),\n            div = this.getLength() * point.getLength();\n\n        if (Numerical.isZero(div)) {\n          return NaN;\n        } else {\n          var a = this.dot(point) / div;\n          return Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n        }\n      }\n    },\n    setAngleInRadians: function setAngleInRadians(angle) {\n      this._angle = angle;\n\n      if (!this.isZero()) {\n        var length = this.getLength();\n\n        this._set(Math.cos(angle) * length, Math.sin(angle) * length);\n      }\n    },\n    getQuadrant: function getQuadrant() {\n      return this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n    }\n  }, {\n    beans: false,\n    getDirectedAngle: function getDirectedAngle() {\n      var point = Point.read(arguments);\n      return Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n    },\n    getDistance: function getDistance() {\n      var args = arguments,\n          point = Point.read(args),\n          x = point.x - this.x,\n          y = point.y - this.y,\n          d = x * x + y * y,\n          squared = Base.read(args);\n      return squared ? d : Math.sqrt(d);\n    },\n    normalize: function normalize(length) {\n      if (length === undefined) length = 1;\n      var current = this.getLength(),\n          scale = current !== 0 ? length / current : 0,\n          point = new Point(this.x * scale, this.y * scale);\n      if (scale >= 0) point._angle = this._angle;\n      return point;\n    },\n    rotate: function rotate(angle, center) {\n      if (angle === 0) return this.clone();\n      angle = angle * Math.PI / 180;\n      var point = center ? this.subtract(center) : this,\n          sin = Math.sin(angle),\n          cos = Math.cos(angle);\n      point = new Point(point.x * cos - point.y * sin, point.x * sin + point.y * cos);\n      return center ? point.add(center) : point;\n    },\n    transform: function transform(matrix) {\n      return matrix ? matrix._transformPoint(this) : this;\n    },\n    add: function add() {\n      var point = Point.read(arguments);\n      return new Point(this.x + point.x, this.y + point.y);\n    },\n    subtract: function subtract() {\n      var point = Point.read(arguments);\n      return new Point(this.x - point.x, this.y - point.y);\n    },\n    multiply: function multiply() {\n      var point = Point.read(arguments);\n      return new Point(this.x * point.x, this.y * point.y);\n    },\n    divide: function divide() {\n      var point = Point.read(arguments);\n      return new Point(this.x / point.x, this.y / point.y);\n    },\n    modulo: function modulo() {\n      var point = Point.read(arguments);\n      return new Point(this.x % point.x, this.y % point.y);\n    },\n    negate: function negate() {\n      return new Point(-this.x, -this.y);\n    },\n    isInside: function isInside() {\n      return _Rectangle.read(arguments).contains(this);\n    },\n    isClose: function isClose() {\n      var args = arguments,\n          point = Point.read(args),\n          tolerance = Base.read(args);\n      return this.getDistance(point) <= tolerance;\n    },\n    isCollinear: function isCollinear() {\n      var point = Point.read(arguments);\n      return Point.isCollinear(this.x, this.y, point.x, point.y);\n    },\n    isColinear: '#isCollinear',\n    isOrthogonal: function isOrthogonal() {\n      var point = Point.read(arguments);\n      return Point.isOrthogonal(this.x, this.y, point.x, point.y);\n    },\n    isZero: function isZero() {\n      var isZero = Numerical.isZero;\n      return isZero(this.x) && isZero(this.y);\n    },\n    isNaN: function (_isNaN) {\n      function isNaN() {\n        return _isNaN.apply(this, arguments);\n      }\n\n      isNaN.toString = function () {\n        return _isNaN.toString();\n      };\n\n      return isNaN;\n    }(function () {\n      return isNaN(this.x) || isNaN(this.y);\n    }),\n    isInQuadrant: function isInQuadrant(q) {\n      return this.x * (q > 1 && q < 4 ? -1 : 1) >= 0 && this.y * (q > 2 ? -1 : 1) >= 0;\n    },\n    dot: function dot() {\n      var point = Point.read(arguments);\n      return this.x * point.x + this.y * point.y;\n    },\n    cross: function cross() {\n      var point = Point.read(arguments);\n      return this.x * point.y - this.y * point.x;\n    },\n    project: function project() {\n      var point = Point.read(arguments),\n          scale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n      return new Point(point.x * scale, point.y * scale);\n    },\n    statics: {\n      min: function min() {\n        var args = arguments,\n            point1 = Point.read(args),\n            point2 = Point.read(args);\n        return new Point(Math.min(point1.x, point2.x), Math.min(point1.y, point2.y));\n      },\n      max: function max() {\n        var args = arguments,\n            point1 = Point.read(args),\n            point2 = Point.read(args);\n        return new Point(Math.max(point1.x, point2.x), Math.max(point1.y, point2.y));\n      },\n      random: function random() {\n        return new Point(Math.random(), Math.random());\n      },\n      isCollinear: function isCollinear(x1, y1, x2, y2) {\n        return Math.abs(x1 * y2 - y1 * x2) <= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2)) * 1e-8;\n      },\n      isOrthogonal: function isOrthogonal(x1, y1, x2, y2) {\n        return Math.abs(x1 * x2 + y1 * y2) <= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2)) * 1e-8;\n      }\n    }\n  }, Base.each(['round', 'ceil', 'floor', 'abs'], function (key) {\n    var op = Math[key];\n\n    this[key] = function () {\n      return new Point(op(this.x), op(this.y));\n    };\n  }, {}));\n  var LinkedPoint = Point.extend({\n    initialize: function Point(x, y, owner, setter) {\n      this._x = x;\n      this._y = y;\n      this._owner = owner;\n      this._setter = setter;\n    },\n    _set: function _set(x, y, _dontNotify) {\n      this._x = x;\n      this._y = y;\n      if (!_dontNotify) this._owner[this._setter](this);\n      return this;\n    },\n    getX: function getX() {\n      return this._x;\n    },\n    setX: function setX(x) {\n      this._x = x;\n\n      this._owner[this._setter](this);\n    },\n    getY: function getY() {\n      return this._y;\n    },\n    setY: function setY(y) {\n      this._y = y;\n\n      this._owner[this._setter](this);\n    },\n    isSelected: function isSelected() {\n      return !!(this._owner._selection & this._getSelection());\n    },\n    setSelected: function setSelected(selected) {\n      this._owner._changeSelection(this._getSelection(), selected);\n    },\n    _getSelection: function _getSelection() {\n      return this._setter === 'setPosition' ? 4 : 0;\n    }\n  });\n  var Size = Base.extend({\n    _class: 'Size',\n    _readIndex: true,\n    initialize: function Size(arg0, arg1) {\n      var type = typeof arg0,\n          reading = this.__read,\n          read = 0;\n\n      if (type === 'number') {\n        var hasHeight = typeof arg1 === 'number';\n\n        this._set(arg0, hasHeight ? arg1 : arg0);\n\n        if (reading) read = hasHeight ? 2 : 1;\n      } else if (type === 'undefined' || arg0 === null) {\n        this._set(0, 0);\n\n        if (reading) read = arg0 === null ? 1 : 0;\n      } else {\n        var obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n        read = 1;\n\n        if (Array.isArray(obj)) {\n          this._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n        } else if ('width' in obj) {\n          this._set(obj.width || 0, obj.height || 0);\n        } else if ('x' in obj) {\n          this._set(obj.x || 0, obj.y || 0);\n        } else {\n          this._set(0, 0);\n\n          read = 0;\n        }\n      }\n\n      if (reading) this.__read = read;\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(width, height) {\n      this.width = width;\n      this.height = height;\n      return this;\n    },\n    equals: function equals(size) {\n      return size === this || size && (this.width === size.width && this.height === size.height || Array.isArray(size) && this.width === size[0] && this.height === size[1]) || false;\n    },\n    clone: function clone() {\n      return new Size(this.width, this.height);\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '{ width: ' + f.number(this.width) + ', height: ' + f.number(this.height) + ' }';\n    },\n    _serialize: function _serialize(options) {\n      var f = options.formatter;\n      return [f.number(this.width), f.number(this.height)];\n    },\n    add: function add() {\n      var size = Size.read(arguments);\n      return new Size(this.width + size.width, this.height + size.height);\n    },\n    subtract: function subtract() {\n      var size = Size.read(arguments);\n      return new Size(this.width - size.width, this.height - size.height);\n    },\n    multiply: function multiply() {\n      var size = Size.read(arguments);\n      return new Size(this.width * size.width, this.height * size.height);\n    },\n    divide: function divide() {\n      var size = Size.read(arguments);\n      return new Size(this.width / size.width, this.height / size.height);\n    },\n    modulo: function modulo() {\n      var size = Size.read(arguments);\n      return new Size(this.width % size.width, this.height % size.height);\n    },\n    negate: function negate() {\n      return new Size(-this.width, -this.height);\n    },\n    isZero: function isZero() {\n      var isZero = Numerical.isZero;\n      return isZero(this.width) && isZero(this.height);\n    },\n    isNaN: function (_isNaN2) {\n      function isNaN() {\n        return _isNaN2.apply(this, arguments);\n      }\n\n      isNaN.toString = function () {\n        return _isNaN2.toString();\n      };\n\n      return isNaN;\n    }(function () {\n      return isNaN(this.width) || isNaN(this.height);\n    }),\n    statics: {\n      min: function min(size1, size2) {\n        return new Size(Math.min(size1.width, size2.width), Math.min(size1.height, size2.height));\n      },\n      max: function max(size1, size2) {\n        return new Size(Math.max(size1.width, size2.width), Math.max(size1.height, size2.height));\n      },\n      random: function random() {\n        return new Size(Math.random(), Math.random());\n      }\n    }\n  }, Base.each(['round', 'ceil', 'floor', 'abs'], function (key) {\n    var op = Math[key];\n\n    this[key] = function () {\n      return new Size(op(this.width), op(this.height));\n    };\n  }, {}));\n  var LinkedSize = Size.extend({\n    initialize: function Size(width, height, owner, setter) {\n      this._width = width;\n      this._height = height;\n      this._owner = owner;\n      this._setter = setter;\n    },\n    _set: function _set(width, height, _dontNotify) {\n      this._width = width;\n      this._height = height;\n      if (!_dontNotify) this._owner[this._setter](this);\n      return this;\n    },\n    getWidth: function getWidth() {\n      return this._width;\n    },\n    setWidth: function setWidth(width) {\n      this._width = width;\n\n      this._owner[this._setter](this);\n    },\n    getHeight: function getHeight() {\n      return this._height;\n    },\n    setHeight: function setHeight(height) {\n      this._height = height;\n\n      this._owner[this._setter](this);\n    }\n  });\n\n  var _Rectangle = Base.extend({\n    _class: 'Rectangle',\n    _readIndex: true,\n    beans: true,\n    initialize: function Rectangle(arg0, arg1, arg2, arg3) {\n      var args = arguments,\n          type = typeof arg0,\n          read;\n\n      if (type === 'number') {\n        this._set(arg0, arg1, arg2, arg3);\n\n        read = 4;\n      } else if (type === 'undefined' || arg0 === null) {\n        this._set(0, 0, 0, 0);\n\n        read = arg0 === null ? 1 : 0;\n      } else if (args.length === 1) {\n        if (Array.isArray(arg0)) {\n          this._set.apply(this, arg0);\n\n          read = 1;\n        } else if (arg0.x !== undefined || arg0.width !== undefined) {\n          this._set(arg0.x || 0, arg0.y || 0, arg0.width || 0, arg0.height || 0);\n\n          read = 1;\n        } else if (arg0.from === undefined && arg0.to === undefined) {\n          this._set(0, 0, 0, 0);\n\n          if (Base.readSupported(args, this)) {\n            read = 1;\n          }\n        }\n      }\n\n      if (read === undefined) {\n        var frm = Point.readNamed(args, 'from'),\n            next = Base.peek(args),\n            x = frm.x,\n            y = frm.y,\n            width,\n            height;\n\n        if (next && next.x !== undefined || Base.hasNamed(args, 'to')) {\n          var to = Point.readNamed(args, 'to');\n          width = to.x - x;\n          height = to.y - y;\n\n          if (width < 0) {\n            x = to.x;\n            width = -width;\n          }\n\n          if (height < 0) {\n            y = to.y;\n            height = -height;\n          }\n        } else {\n          var size = Size.read(args);\n          width = size.width;\n          height = size.height;\n        }\n\n        this._set(x, y, width, height);\n\n        read = args.__index;\n      }\n\n      var filtered = args.__filtered;\n      if (filtered) this.__filtered = filtered;\n      if (this.__read) this.__read = read;\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(x, y, width, height) {\n      this.x = x;\n      this.y = y;\n      this.width = width;\n      this.height = height;\n      return this;\n    },\n    clone: function clone() {\n      return new _Rectangle(this.x, this.y, this.width, this.height);\n    },\n    equals: function equals(rect) {\n      var rt = Base.isPlainValue(rect) ? _Rectangle.read(arguments) : rect;\n      return rt === this || rt && this.x === rt.x && this.y === rt.y && this.width === rt.width && this.height === rt.height || false;\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ', width: ' + f.number(this.width) + ', height: ' + f.number(this.height) + ' }';\n    },\n    _serialize: function _serialize(options) {\n      var f = options.formatter;\n      return [f.number(this.x), f.number(this.y), f.number(this.width), f.number(this.height)];\n    },\n    getPoint: function getPoint(_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n      return new ctor(this.x, this.y, this, 'setPoint');\n    },\n    setPoint: function setPoint() {\n      var point = Point.read(arguments);\n      this.x = point.x;\n      this.y = point.y;\n    },\n    getSize: function getSize(_dontLink) {\n      var ctor = _dontLink ? Size : LinkedSize;\n      return new ctor(this.width, this.height, this, 'setSize');\n    },\n    _fw: 1,\n    _fh: 1,\n    setSize: function setSize() {\n      var size = Size.read(arguments),\n          sx = this._sx,\n          sy = this._sy,\n          w = size.width,\n          h = size.height;\n\n      if (sx) {\n        this.x += (this.width - w) * sx;\n      }\n\n      if (sy) {\n        this.y += (this.height - h) * sy;\n      }\n\n      this.width = w;\n      this.height = h;\n      this._fw = this._fh = 1;\n    },\n    getLeft: function getLeft() {\n      return this.x;\n    },\n    setLeft: function setLeft(left) {\n      if (!this._fw) {\n        var amount = left - this.x;\n        this.width -= this._sx === 0.5 ? amount * 2 : amount;\n      }\n\n      this.x = left;\n      this._sx = this._fw = 0;\n    },\n    getTop: function getTop() {\n      return this.y;\n    },\n    setTop: function setTop(top) {\n      if (!this._fh) {\n        var amount = top - this.y;\n        this.height -= this._sy === 0.5 ? amount * 2 : amount;\n      }\n\n      this.y = top;\n      this._sy = this._fh = 0;\n    },\n    getRight: function getRight() {\n      return this.x + this.width;\n    },\n    setRight: function setRight(right) {\n      if (!this._fw) {\n        var amount = right - this.x;\n        this.width = this._sx === 0.5 ? amount * 2 : amount;\n      }\n\n      this.x = right - this.width;\n      this._sx = 1;\n      this._fw = 0;\n    },\n    getBottom: function getBottom() {\n      return this.y + this.height;\n    },\n    setBottom: function setBottom(bottom) {\n      if (!this._fh) {\n        var amount = bottom - this.y;\n        this.height = this._sy === 0.5 ? amount * 2 : amount;\n      }\n\n      this.y = bottom - this.height;\n      this._sy = 1;\n      this._fh = 0;\n    },\n    getCenterX: function getCenterX() {\n      return this.x + this.width / 2;\n    },\n    setCenterX: function setCenterX(x) {\n      if (this._fw || this._sx === 0.5) {\n        this.x = x - this.width / 2;\n      } else {\n        if (this._sx) {\n          this.x += (x - this.x) * 2 * this._sx;\n        }\n\n        this.width = (x - this.x) * 2;\n      }\n\n      this._sx = 0.5;\n      this._fw = 0;\n    },\n    getCenterY: function getCenterY() {\n      return this.y + this.height / 2;\n    },\n    setCenterY: function setCenterY(y) {\n      if (this._fh || this._sy === 0.5) {\n        this.y = y - this.height / 2;\n      } else {\n        if (this._sy) {\n          this.y += (y - this.y) * 2 * this._sy;\n        }\n\n        this.height = (y - this.y) * 2;\n      }\n\n      this._sy = 0.5;\n      this._fh = 0;\n    },\n    getCenter: function getCenter(_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n      return new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n    },\n    setCenter: function setCenter() {\n      var point = Point.read(arguments);\n      this.setCenterX(point.x);\n      this.setCenterY(point.y);\n      return this;\n    },\n    getArea: function getArea() {\n      return this.width * this.height;\n    },\n    isEmpty: function isEmpty() {\n      return this.width === 0 || this.height === 0;\n    },\n    contains: function contains(arg) {\n      return arg && arg.width !== undefined || (Array.isArray(arg) ? arg : arguments).length === 4 ? this._containsRectangle(_Rectangle.read(arguments)) : this._containsPoint(Point.read(arguments));\n    },\n    _containsPoint: function _containsPoint(point) {\n      var x = point.x,\n          y = point.y;\n      return x >= this.x && y >= this.y && x <= this.x + this.width && y <= this.y + this.height;\n    },\n    _containsRectangle: function _containsRectangle(rect) {\n      var x = rect.x,\n          y = rect.y;\n      return x >= this.x && y >= this.y && x + rect.width <= this.x + this.width && y + rect.height <= this.y + this.height;\n    },\n    intersects: function intersects() {\n      var rect = _Rectangle.read(arguments),\n          epsilon = Base.read(arguments) || 0;\n\n      return rect.x + rect.width > this.x - epsilon && rect.y + rect.height > this.y - epsilon && rect.x < this.x + this.width + epsilon && rect.y < this.y + this.height + epsilon;\n    },\n    intersect: function intersect() {\n      var rect = _Rectangle.read(arguments),\n          x1 = Math.max(this.x, rect.x),\n          y1 = Math.max(this.y, rect.y),\n          x2 = Math.min(this.x + this.width, rect.x + rect.width),\n          y2 = Math.min(this.y + this.height, rect.y + rect.height);\n\n      return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n    },\n    unite: function unite() {\n      var rect = _Rectangle.read(arguments),\n          x1 = Math.min(this.x, rect.x),\n          y1 = Math.min(this.y, rect.y),\n          x2 = Math.max(this.x + this.width, rect.x + rect.width),\n          y2 = Math.max(this.y + this.height, rect.y + rect.height);\n\n      return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n    },\n    include: function include() {\n      var point = Point.read(arguments);\n      var x1 = Math.min(this.x, point.x),\n          y1 = Math.min(this.y, point.y),\n          x2 = Math.max(this.x + this.width, point.x),\n          y2 = Math.max(this.y + this.height, point.y);\n      return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n    },\n    expand: function expand() {\n      var amount = Size.read(arguments),\n          hor = amount.width,\n          ver = amount.height;\n      return new _Rectangle(this.x - hor / 2, this.y - ver / 2, this.width + hor, this.height + ver);\n    },\n    scale: function scale(hor, ver) {\n      return this.expand(this.width * hor - this.width, this.height * (ver === undefined ? hor : ver) - this.height);\n    }\n  }, Base.each([['Top', 'Left'], ['Top', 'Right'], ['Bottom', 'Left'], ['Bottom', 'Right'], ['Left', 'Center'], ['Top', 'Center'], ['Right', 'Center'], ['Bottom', 'Center']], function (parts, index) {\n    var part = parts.join(''),\n        xFirst = /^[RL]/.test(part);\n    if (index >= 4) parts[1] += xFirst ? 'Y' : 'X';\n    var x = parts[xFirst ? 0 : 1],\n        y = parts[xFirst ? 1 : 0],\n        getX = 'get' + x,\n        getY = 'get' + y,\n        setX = 'set' + x,\n        setY = 'set' + y,\n        get = 'get' + part,\n        set = 'set' + part;\n\n    this[get] = function (_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n      return new ctor(this[getX](), this[getY](), this, set);\n    };\n\n    this[set] = function () {\n      var point = Point.read(arguments);\n      this[setX](point.x);\n      this[setY](point.y);\n    };\n  }, {\n    beans: true\n  }));\n\n  var LinkedRectangle = _Rectangle.extend({\n    initialize: function Rectangle(x, y, width, height, owner, setter) {\n      this._set(x, y, width, height, true);\n\n      this._owner = owner;\n      this._setter = setter;\n    },\n    _set: function _set(x, y, width, height, _dontNotify) {\n      this._x = x;\n      this._y = y;\n      this._width = width;\n      this._height = height;\n      if (!_dontNotify) this._owner[this._setter](this);\n      return this;\n    }\n  }, new function () {\n    var proto = _Rectangle.prototype;\n    return Base.each(['x', 'y', 'width', 'height'], function (key) {\n      var part = Base.capitalize(key),\n          internal = '_' + key;\n\n      this['get' + part] = function () {\n        return this[internal];\n      };\n\n      this['set' + part] = function (value) {\n        this[internal] = value;\n        if (!this._dontNotify) this._owner[this._setter](this);\n      };\n    }, Base.each(['Point', 'Size', 'Center', 'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY', 'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight', 'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'], function (key) {\n      var name = 'set' + key;\n\n      this[name] = function () {\n        this._dontNotify = true;\n        proto[name].apply(this, arguments);\n        this._dontNotify = false;\n\n        this._owner[this._setter](this);\n      };\n    }, {\n      isSelected: function isSelected() {\n        return !!(this._owner._selection & 2);\n      },\n      setSelected: function setSelected(selected) {\n        var owner = this._owner;\n\n        if (owner._changeSelection) {\n          owner._changeSelection(2, selected);\n        }\n      }\n    }));\n  }());\n\n  var Matrix = Base.extend({\n    _class: 'Matrix',\n    initialize: function Matrix(arg, _dontNotify) {\n      var args = arguments,\n          count = args.length,\n          ok = true;\n\n      if (count >= 6) {\n        this._set.apply(this, args);\n      } else if (count === 1 || count === 2) {\n        if (arg instanceof Matrix) {\n          this._set(arg._a, arg._b, arg._c, arg._d, arg._tx, arg._ty, _dontNotify);\n        } else if (Array.isArray(arg)) {\n          this._set.apply(this, _dontNotify ? arg.concat([_dontNotify]) : arg);\n        } else {\n          ok = false;\n        }\n      } else if (!count) {\n        this.reset();\n      } else {\n        ok = false;\n      }\n\n      if (!ok) {\n        throw new Error('Unsupported matrix parameters');\n      }\n\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(a, b, c, d, tx, ty, _dontNotify) {\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      this._d = d;\n      this._tx = tx;\n      this._ty = ty;\n      if (!_dontNotify) this._changed();\n      return this;\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return Base.serialize(this.getValues(), options, true, dictionary);\n    },\n    _changed: function _changed() {\n      var owner = this._owner;\n\n      if (owner) {\n        if (owner._applyMatrix) {\n          owner.transform(null, true);\n        } else {\n          owner._changed(25);\n        }\n      }\n    },\n    clone: function clone() {\n      return new Matrix(this._a, this._b, this._c, this._d, this._tx, this._ty);\n    },\n    equals: function equals(mx) {\n      return mx === this || mx && this._a === mx._a && this._b === mx._b && this._c === mx._c && this._d === mx._d && this._tx === mx._tx && this._ty === mx._ty;\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '[[' + [f.number(this._a), f.number(this._c), f.number(this._tx)].join(', ') + '], [' + [f.number(this._b), f.number(this._d), f.number(this._ty)].join(', ') + ']]';\n    },\n    reset: function reset(_dontNotify) {\n      this._a = this._d = 1;\n      this._b = this._c = this._tx = this._ty = 0;\n      if (!_dontNotify) this._changed();\n      return this;\n    },\n    apply: function apply(recursively, _setApplyMatrix) {\n      var owner = this._owner;\n\n      if (owner) {\n        owner.transform(null, Base.pick(recursively, true), _setApplyMatrix);\n        return this.isIdentity();\n      }\n\n      return false;\n    },\n    translate: function translate() {\n      var point = Point.read(arguments),\n          x = point.x,\n          y = point.y;\n      this._tx += x * this._a + y * this._c;\n      this._ty += x * this._b + y * this._d;\n\n      this._changed();\n\n      return this;\n    },\n    scale: function scale() {\n      var args = arguments,\n          scale = Point.read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      if (center) this.translate(center);\n      this._a *= scale.x;\n      this._b *= scale.x;\n      this._c *= scale.y;\n      this._d *= scale.y;\n      if (center) this.translate(center.negate());\n\n      this._changed();\n\n      return this;\n    },\n    rotate: function rotate(angle) {\n      angle *= Math.PI / 180;\n      var center = Point.read(arguments, 1),\n          x = center.x,\n          y = center.y,\n          cos = Math.cos(angle),\n          sin = Math.sin(angle),\n          tx = x - x * cos + y * sin,\n          ty = y - x * sin - y * cos,\n          a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d;\n      this._a = cos * a + sin * c;\n      this._b = cos * b + sin * d;\n      this._c = -sin * a + cos * c;\n      this._d = -sin * b + cos * d;\n      this._tx += tx * a + ty * c;\n      this._ty += tx * b + ty * d;\n\n      this._changed();\n\n      return this;\n    },\n    shear: function shear() {\n      var args = arguments,\n          shear = Point.read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      if (center) this.translate(center);\n      var a = this._a,\n          b = this._b;\n      this._a += shear.y * this._c;\n      this._b += shear.y * this._d;\n      this._c += shear.x * a;\n      this._d += shear.x * b;\n      if (center) this.translate(center.negate());\n\n      this._changed();\n\n      return this;\n    },\n    skew: function skew() {\n      var args = arguments,\n          skew = Point.read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      }),\n          toRadians = Math.PI / 180,\n          shear = new Point(Math.tan(skew.x * toRadians), Math.tan(skew.y * toRadians));\n      return this.shear(shear, center);\n    },\n    append: function append(mx, _dontNotify) {\n      if (mx) {\n        var a1 = this._a,\n            b1 = this._b,\n            c1 = this._c,\n            d1 = this._d,\n            a2 = mx._a,\n            b2 = mx._c,\n            c2 = mx._b,\n            d2 = mx._d,\n            tx2 = mx._tx,\n            ty2 = mx._ty;\n        this._a = a2 * a1 + c2 * c1;\n        this._c = b2 * a1 + d2 * c1;\n        this._b = a2 * b1 + c2 * d1;\n        this._d = b2 * b1 + d2 * d1;\n        this._tx += tx2 * a1 + ty2 * c1;\n        this._ty += tx2 * b1 + ty2 * d1;\n        if (!_dontNotify) this._changed();\n      }\n\n      return this;\n    },\n    prepend: function prepend(mx, _dontNotify) {\n      if (mx) {\n        var a1 = this._a,\n            b1 = this._b,\n            c1 = this._c,\n            d1 = this._d,\n            tx1 = this._tx,\n            ty1 = this._ty,\n            a2 = mx._a,\n            b2 = mx._c,\n            c2 = mx._b,\n            d2 = mx._d,\n            tx2 = mx._tx,\n            ty2 = mx._ty;\n        this._a = a2 * a1 + b2 * b1;\n        this._c = a2 * c1 + b2 * d1;\n        this._b = c2 * a1 + d2 * b1;\n        this._d = c2 * c1 + d2 * d1;\n        this._tx = a2 * tx1 + b2 * ty1 + tx2;\n        this._ty = c2 * tx1 + d2 * ty1 + ty2;\n        if (!_dontNotify) this._changed();\n      }\n\n      return this;\n    },\n    appended: function appended(mx) {\n      return this.clone().append(mx);\n    },\n    prepended: function prepended(mx) {\n      return this.clone().prepend(mx);\n    },\n    invert: function invert() {\n      var a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d,\n          tx = this._tx,\n          ty = this._ty,\n          det = a * d - b * c,\n          res = null;\n\n      if (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n        this._a = d / det;\n        this._b = -b / det;\n        this._c = -c / det;\n        this._d = a / det;\n        this._tx = (c * ty - d * tx) / det;\n        this._ty = (b * tx - a * ty) / det;\n        res = this;\n      }\n\n      return res;\n    },\n    inverted: function inverted() {\n      return this.clone().invert();\n    },\n    concatenate: '#append',\n    preConcatenate: '#prepend',\n    chain: '#appended',\n    _shiftless: function _shiftless() {\n      return new Matrix(this._a, this._b, this._c, this._d, 0, 0);\n    },\n    _orNullIfIdentity: function _orNullIfIdentity() {\n      return this.isIdentity() ? null : this;\n    },\n    isIdentity: function isIdentity() {\n      return this._a === 1 && this._b === 0 && this._c === 0 && this._d === 1 && this._tx === 0 && this._ty === 0;\n    },\n    isInvertible: function isInvertible() {\n      var det = this._a * this._d - this._c * this._b;\n      return det && !isNaN(det) && isFinite(this._tx) && isFinite(this._ty);\n    },\n    isSingular: function isSingular() {\n      return !this.isInvertible();\n    },\n    transform: function transform(src, dst, count) {\n      return arguments.length < 3 ? this._transformPoint(Point.read(arguments)) : this._transformCoordinates(src, dst, count);\n    },\n    _transformPoint: function _transformPoint(point, dest, _dontNotify) {\n      var x = point.x,\n          y = point.y;\n      if (!dest) dest = new Point();\n      return dest._set(x * this._a + y * this._c + this._tx, x * this._b + y * this._d + this._ty, _dontNotify);\n    },\n    _transformCoordinates: function _transformCoordinates(src, dst, count) {\n      for (var i = 0, max = 2 * count; i < max; i += 2) {\n        var x = src[i],\n            y = src[i + 1];\n        dst[i] = x * this._a + y * this._c + this._tx;\n        dst[i + 1] = x * this._b + y * this._d + this._ty;\n      }\n\n      return dst;\n    },\n    _transformCorners: function _transformCorners(rect) {\n      var x1 = rect.x,\n          y1 = rect.y,\n          x2 = x1 + rect.width,\n          y2 = y1 + rect.height,\n          coords = [x1, y1, x2, y1, x2, y2, x1, y2];\n      return this._transformCoordinates(coords, coords, 4);\n    },\n    _transformBounds: function _transformBounds(bounds, dest, _dontNotify) {\n      var coords = this._transformCorners(bounds),\n          min = coords.slice(0, 2),\n          max = min.slice();\n\n      for (var i = 2; i < 8; i++) {\n        var val = coords[i],\n            j = i & 1;\n\n        if (val < min[j]) {\n          min[j] = val;\n        } else if (val > max[j]) {\n          max[j] = val;\n        }\n      }\n\n      if (!dest) dest = new _Rectangle();\n      return dest._set(min[0], min[1], max[0] - min[0], max[1] - min[1], _dontNotify);\n    },\n    inverseTransform: function inverseTransform() {\n      return this._inverseTransform(Point.read(arguments));\n    },\n    _inverseTransform: function _inverseTransform(point, dest, _dontNotify) {\n      var a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d,\n          tx = this._tx,\n          ty = this._ty,\n          det = a * d - b * c,\n          res = null;\n\n      if (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n        var x = point.x - this._tx,\n            y = point.y - this._ty;\n        if (!dest) dest = new Point();\n        res = dest._set((x * d - y * c) / det, (y * a - x * b) / det, _dontNotify);\n      }\n\n      return res;\n    },\n    decompose: function decompose() {\n      var a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d,\n          det = a * d - b * c,\n          sqrt = Math.sqrt,\n          atan2 = Math.atan2,\n          degrees = 180 / Math.PI,\n          rotate,\n          scale,\n          skew;\n\n      if (a !== 0 || b !== 0) {\n        var r = sqrt(a * a + b * b);\n        rotate = Math.acos(a / r) * (b > 0 ? 1 : -1);\n        scale = [r, det / r];\n        skew = [atan2(a * c + b * d, r * r), 0];\n      } else if (c !== 0 || d !== 0) {\n        var s = sqrt(c * c + d * d);\n        rotate = Math.asin(c / s) * (d > 0 ? 1 : -1);\n        scale = [det / s, s];\n        skew = [0, atan2(a * c + b * d, s * s)];\n      } else {\n        rotate = 0;\n        skew = scale = [0, 0];\n      }\n\n      return {\n        translation: this.getTranslation(),\n        rotation: rotate * degrees,\n        scaling: new Point(scale),\n        skewing: new Point(skew[0] * degrees, skew[1] * degrees)\n      };\n    },\n    getValues: function getValues() {\n      return [this._a, this._b, this._c, this._d, this._tx, this._ty];\n    },\n    getTranslation: function getTranslation() {\n      return new Point(this._tx, this._ty);\n    },\n    getScaling: function getScaling() {\n      return this.decompose().scaling;\n    },\n    getRotation: function getRotation() {\n      return this.decompose().rotation;\n    },\n    applyToContext: function applyToContext(ctx) {\n      if (!this.isIdentity()) {\n        ctx.transform(this._a, this._b, this._c, this._d, this._tx, this._ty);\n      }\n    }\n  }, Base.each(['a', 'b', 'c', 'd', 'tx', 'ty'], function (key) {\n    var part = Base.capitalize(key),\n        prop = '_' + key;\n\n    this['get' + part] = function () {\n      return this[prop];\n    };\n\n    this['set' + part] = function (value) {\n      this[prop] = value;\n\n      this._changed();\n    };\n  }, {}));\n  var Line = Base.extend({\n    _class: 'Line',\n    initialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n      var asVector = false;\n\n      if (arguments.length >= 4) {\n        this._px = arg0;\n        this._py = arg1;\n        this._vx = arg2;\n        this._vy = arg3;\n        asVector = arg4;\n      } else {\n        this._px = arg0.x;\n        this._py = arg0.y;\n        this._vx = arg1.x;\n        this._vy = arg1.y;\n        asVector = arg2;\n      }\n\n      if (!asVector) {\n        this._vx -= this._px;\n        this._vy -= this._py;\n      }\n    },\n    getPoint: function getPoint() {\n      return new Point(this._px, this._py);\n    },\n    getVector: function getVector() {\n      return new Point(this._vx, this._vy);\n    },\n    getLength: function getLength() {\n      return this.getVector().getLength();\n    },\n    intersect: function intersect(line, isInfinite) {\n      return Line.intersect(this._px, this._py, this._vx, this._vy, line._px, line._py, line._vx, line._vy, true, isInfinite);\n    },\n    getSide: function getSide(point, isInfinite) {\n      return Line.getSide(this._px, this._py, this._vx, this._vy, point.x, point.y, true, isInfinite);\n    },\n    getDistance: function getDistance(point) {\n      return Math.abs(this.getSignedDistance(point));\n    },\n    getSignedDistance: function getSignedDistance(point) {\n      return Line.getSignedDistance(this._px, this._py, this._vx, this._vy, point.x, point.y, true);\n    },\n    isCollinear: function isCollinear(line) {\n      return Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n    },\n    isOrthogonal: function isOrthogonal(line) {\n      return Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n    },\n    statics: {\n      intersect: function intersect(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector, isInfinite) {\n        if (!asVector) {\n          v1x -= p1x;\n          v1y -= p1y;\n          v2x -= p2x;\n          v2y -= p2y;\n        }\n\n        var cross = v1x * v2y - v1y * v2x;\n\n        if (!Numerical.isMachineZero(cross)) {\n          var dx = p1x - p2x,\n              dy = p1y - p2y,\n              u1 = (v2x * dy - v2y * dx) / cross,\n              u2 = (v1x * dy - v1y * dx) / cross,\n              epsilon = 1e-12,\n              uMin = -epsilon,\n              uMax = 1 + epsilon;\n\n          if (isInfinite || uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n            if (!isInfinite) {\n              u1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n            }\n\n            return new Point(p1x + u1 * v1x, p1y + u1 * v1y);\n          }\n        }\n      },\n      getSide: function getSide(px, py, vx, vy, x, y, asVector, isInfinite) {\n        if (!asVector) {\n          vx -= px;\n          vy -= py;\n        }\n\n        var v2x = x - px,\n            v2y = y - py,\n            ccw = v2x * vy - v2y * vx;\n\n        if (!isInfinite && Numerical.isMachineZero(ccw)) {\n          ccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n          if (ccw >= 0 && ccw <= 1) ccw = 0;\n        }\n\n        return ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n      },\n      getSignedDistance: function getSignedDistance(px, py, vx, vy, x, y, asVector) {\n        if (!asVector) {\n          vx -= px;\n          vy -= py;\n        }\n\n        return vx === 0 ? vy > 0 ? x - px : px - x : vy === 0 ? vx < 0 ? y - py : py - y : ((x - px) * vy - (y - py) * vx) / (vy > vx ? vy * Math.sqrt(1 + vx * vx / (vy * vy)) : vx * Math.sqrt(1 + vy * vy / (vx * vx)));\n      },\n      getDistance: function getDistance(px, py, vx, vy, x, y, asVector) {\n        return Math.abs(Line.getSignedDistance(px, py, vx, vy, x, y, asVector));\n      }\n    }\n  });\n  var Project = PaperScopeItem.extend({\n    _class: 'Project',\n    _list: 'projects',\n    _reference: 'project',\n    _compactSerialize: true,\n    initialize: function Project(element) {\n      PaperScopeItem.call(this, true);\n      this._children = [];\n      this._namedChildren = {};\n      this._activeLayer = null;\n      this._currentStyle = new Style(null, null, this);\n      this._view = View.create(this, element || CanvasProvider.getCanvas(1, 1));\n      this._selectionItems = {};\n      this._selectionCount = 0;\n      this._updateVersion = 0;\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return Base.serialize(this._children, options, true, dictionary);\n    },\n    _changed: function _changed(flags, item) {\n      if (flags & 1) {\n        var view = this._view;\n\n        if (view) {\n          view._needsUpdate = true;\n          if (!view._requested && view._autoUpdate) view.requestUpdate();\n        }\n      }\n\n      var changes = this._changes;\n\n      if (changes && item) {\n        var changesById = this._changesById,\n            id = item._id,\n            entry = changesById[id];\n\n        if (entry) {\n          entry.flags |= flags;\n        } else {\n          changes.push(changesById[id] = {\n            item: item,\n            flags: flags\n          });\n        }\n      }\n    },\n    clear: function clear() {\n      var children = this._children;\n\n      for (var i = children.length - 1; i >= 0; i--) {\n        children[i].remove();\n      }\n    },\n    isEmpty: function isEmpty() {\n      return !this._children.length;\n    },\n    remove: function remove() {\n      if (!remove.base.call(this)) return false;\n      if (this._view) this._view.remove();\n      return true;\n    },\n    getView: function getView() {\n      return this._view;\n    },\n    getCurrentStyle: function getCurrentStyle() {\n      return this._currentStyle;\n    },\n    setCurrentStyle: function setCurrentStyle(style) {\n      this._currentStyle.set(style);\n    },\n    getIndex: function getIndex() {\n      return this._index;\n    },\n    getOptions: function getOptions() {\n      return this._scope.settings;\n    },\n    getLayers: function getLayers() {\n      return this._children;\n    },\n    getActiveLayer: function getActiveLayer() {\n      return this._activeLayer || new Layer({\n        project: this,\n        insert: true\n      });\n    },\n    getSymbolDefinitions: function getSymbolDefinitions() {\n      var definitions = [],\n          ids = {};\n      this.getItems({\n        class: SymbolItem,\n        match: function match(item) {\n          var definition = item._definition,\n              id = definition._id;\n\n          if (!ids[id]) {\n            ids[id] = true;\n            definitions.push(definition);\n          }\n\n          return false;\n        }\n      });\n      return definitions;\n    },\n    getSymbols: 'getSymbolDefinitions',\n    getSelectedItems: function getSelectedItems() {\n      var selectionItems = this._selectionItems,\n          items = [];\n\n      for (var id in selectionItems) {\n        var item = selectionItems[id],\n            selection = item._selection;\n\n        if (selection & 1 && item.isInserted()) {\n          items.push(item);\n        } else if (!selection) {\n          this._updateSelection(item);\n        }\n      }\n\n      return items;\n    },\n    _updateSelection: function _updateSelection(item) {\n      var id = item._id,\n          selectionItems = this._selectionItems;\n\n      if (item._selection) {\n        if (selectionItems[id] !== item) {\n          this._selectionCount++;\n          selectionItems[id] = item;\n        }\n      } else if (selectionItems[id] === item) {\n        this._selectionCount--;\n        delete selectionItems[id];\n      }\n    },\n    selectAll: function selectAll() {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].setFullySelected(true);\n      }\n    },\n    deselectAll: function deselectAll() {\n      var selectionItems = this._selectionItems;\n\n      for (var i in selectionItems) {\n        selectionItems[i].setFullySelected(false);\n      }\n    },\n    addLayer: function addLayer(layer) {\n      return this.insertLayer(undefined, layer);\n    },\n    insertLayer: function insertLayer(index, layer) {\n      if (layer instanceof Layer) {\n        layer._remove(false, true);\n\n        Base.splice(this._children, [layer], index, 0);\n\n        layer._setProject(this, true);\n\n        var name = layer._name;\n        if (name) layer.setName(name);\n        if (this._changes) layer._changed(5);\n        if (!this._activeLayer) this._activeLayer = layer;\n      } else {\n        layer = null;\n      }\n\n      return layer;\n    },\n    _insertItem: function _insertItem(index, item, _created) {\n      item = this.insertLayer(index, item) || (this._activeLayer || this._insertItem(undefined, new Layer(Item.NO_INSERT), true)).insertChild(index, item);\n      if (_created && item.activate) item.activate();\n      return item;\n    },\n    getItems: function getItems(options) {\n      return Item._getItems(this, options);\n    },\n    getItem: function getItem(options) {\n      return Item._getItems(this, options, null, null, true)[0] || null;\n    },\n    importJSON: function importJSON(json) {\n      this.activate();\n      var layer = this._activeLayer;\n      return Base.importJSON(json, layer && layer.isEmpty() && layer);\n    },\n    removeOn: function removeOn(type) {\n      var sets = this._removeSets;\n\n      if (sets) {\n        if (type === 'mouseup') sets.mousedrag = null;\n        var set = sets[type];\n\n        if (set) {\n          for (var id in set) {\n            var item = set[id];\n\n            for (var key in sets) {\n              var other = sets[key];\n              if (other && other != set) delete other[item._id];\n            }\n\n            item.remove();\n          }\n\n          sets[type] = null;\n        }\n      }\n    },\n    draw: function draw(ctx, matrix, pixelRatio) {\n      this._updateVersion++;\n      ctx.save();\n      matrix.applyToContext(ctx);\n      var children = this._children,\n          param = new Base({\n        offset: new Point(0, 0),\n        pixelRatio: pixelRatio,\n        viewMatrix: matrix.isIdentity() ? null : matrix,\n        matrices: [new Matrix()],\n        updateMatrix: true\n      });\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].draw(ctx, param);\n      }\n\n      ctx.restore();\n\n      if (this._selectionCount > 0) {\n        ctx.save();\n        ctx.strokeWidth = 1;\n        var items = this._selectionItems,\n            size = this._scope.settings.handleSize,\n            version = this._updateVersion;\n\n        for (var id in items) {\n          items[id]._drawSelection(ctx, matrix, size, items, version);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n  var Item = Base.extend(Emitter, {\n    statics: {\n      extend: function extend(src) {\n        if (src._serializeFields) src._serializeFields = Base.set({}, this.prototype._serializeFields, src._serializeFields);\n        return extend.base.apply(this, arguments);\n      },\n      NO_INSERT: {\n        insert: false\n      }\n    },\n    _class: 'Item',\n    _name: null,\n    _applyMatrix: true,\n    _canApplyMatrix: true,\n    _canScaleStroke: false,\n    _pivot: null,\n    _visible: true,\n    _blendMode: 'normal',\n    _opacity: 1,\n    _locked: false,\n    _guide: false,\n    _clipMask: false,\n    _selection: 0,\n    _selectBounds: true,\n    _selectChildren: false,\n    _serializeFields: {\n      name: null,\n      applyMatrix: null,\n      matrix: new Matrix(),\n      pivot: null,\n      visible: true,\n      blendMode: 'normal',\n      opacity: 1,\n      locked: false,\n      guide: false,\n      clipMask: false,\n      selected: false,\n      data: {}\n    },\n    _prioritize: ['applyMatrix']\n  }, new function () {\n    var handlers = ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick', 'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'];\n    return Base.each(handlers, function (name) {\n      this._events[name] = {\n        install: function install(type) {\n          this.getView()._countItemEvent(type, 1);\n        },\n        uninstall: function uninstall(type) {\n          this.getView()._countItemEvent(type, -1);\n        }\n      };\n    }, {\n      _events: {\n        onFrame: {\n          install: function install() {\n            this.getView()._animateItem(this, true);\n          },\n          uninstall: function uninstall() {\n            this.getView()._animateItem(this, false);\n          }\n        },\n        onLoad: {},\n        onError: {}\n      },\n      statics: {\n        _itemHandlers: handlers\n      }\n    });\n  }(), {\n    initialize: function Item() {},\n    _initialize: function _initialize(props, point) {\n      var hasProps = props && Base.isPlainObject(props),\n          internal = hasProps && props.internal === true,\n          matrix = this._matrix = new Matrix(),\n          project = hasProps && props.project || paper.project,\n          settings = paper.settings;\n      this._id = internal ? null : UID.get();\n      this._parent = this._index = null;\n      this._applyMatrix = this._canApplyMatrix && settings.applyMatrix;\n      if (point) matrix.translate(point);\n      matrix._owner = this;\n      this._style = new Style(project._currentStyle, this, project);\n\n      if (internal || hasProps && props.insert == false || !settings.insertItems && !(hasProps && props.insert === true)) {\n        this._setProject(project);\n      } else {\n        (hasProps && props.parent || project)._insertItem(undefined, this, true);\n      }\n\n      if (hasProps && props !== Item.NO_INSERT) {\n        this.set(props, {\n          internal: true,\n          insert: true,\n          project: true,\n          parent: true\n        });\n      }\n\n      return hasProps;\n    },\n    _serialize: function _serialize(options, dictionary) {\n      var props = {},\n          that = this;\n\n      function serialize(fields) {\n        for (var key in fields) {\n          var value = that[key];\n\n          if (!Base.equals(value, key === 'leading' ? fields.fontSize * 1.2 : fields[key])) {\n            props[key] = Base.serialize(value, options, key !== 'data', dictionary);\n          }\n        }\n      }\n\n      serialize(this._serializeFields);\n      if (!(this instanceof Group)) serialize(this._style._defaults);\n      return [this._class, props];\n    },\n    _changed: function _changed(flags) {\n      var symbol = this._symbol,\n          cacheParent = this._parent || symbol,\n          project = this._project;\n\n      if (flags & 8) {\n        this._bounds = this._position = this._decomposed = undefined;\n      }\n\n      if (flags & 16) {\n        this._globalMatrix = undefined;\n      }\n\n      if (cacheParent && flags & 72) {\n        Item._clearBoundsCache(cacheParent);\n      }\n\n      if (flags & 2) {\n        Item._clearBoundsCache(this);\n      }\n\n      if (project) project._changed(flags, this);\n      if (symbol) symbol._changed(flags);\n    },\n    getId: function getId() {\n      return this._id;\n    },\n    getName: function getName() {\n      return this._name;\n    },\n    setName: function setName(name) {\n      if (this._name) this._removeNamed();\n      if (name === +name + '') throw new Error('Names consisting only of numbers are not supported.');\n\n      var owner = this._getOwner();\n\n      if (name && owner) {\n        var children = owner._children,\n            namedChildren = owner._namedChildren;\n        (namedChildren[name] = namedChildren[name] || []).push(this);\n        if (!(name in children)) children[name] = this;\n      }\n\n      this._name = name || undefined;\n\n      this._changed(256);\n    },\n    getStyle: function getStyle() {\n      return this._style;\n    },\n    setStyle: function setStyle(style) {\n      this.getStyle().set(style);\n    }\n  }, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'], function (name) {\n    var part = Base.capitalize(name),\n        key = '_' + name,\n        flags = {\n      locked: 256,\n      visible: 265\n    };\n\n    this['get' + part] = function () {\n      return this[key];\n    };\n\n    this['set' + part] = function (value) {\n      if (value != this[key]) {\n        this[key] = value;\n\n        this._changed(flags[name] || 257);\n      }\n    };\n  }, {}), {\n    beans: true,\n    getSelection: function getSelection() {\n      return this._selection;\n    },\n    setSelection: function setSelection(selection) {\n      if (selection !== this._selection) {\n        this._selection = selection;\n        var project = this._project;\n\n        if (project) {\n          project._updateSelection(this);\n\n          this._changed(257);\n        }\n      }\n    },\n    _changeSelection: function _changeSelection(flag, selected) {\n      var selection = this._selection;\n      this.setSelection(selected ? selection | flag : selection & ~flag);\n    },\n    isSelected: function isSelected() {\n      if (this._selectChildren) {\n        var children = this._children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].isSelected()) return true;\n        }\n      }\n\n      return !!(this._selection & 1);\n    },\n    setSelected: function setSelected(selected) {\n      if (this._selectChildren) {\n        var children = this._children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].setSelected(selected);\n        }\n      }\n\n      this._changeSelection(1, selected);\n    },\n    isFullySelected: function isFullySelected() {\n      var children = this._children,\n          selected = !!(this._selection & 1);\n\n      if (children && selected) {\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (!children[i].isFullySelected()) return false;\n        }\n\n        return true;\n      }\n\n      return selected;\n    },\n    setFullySelected: function setFullySelected(selected) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].setFullySelected(selected);\n        }\n      }\n\n      this._changeSelection(1, selected);\n    },\n    isClipMask: function isClipMask() {\n      return this._clipMask;\n    },\n    setClipMask: function setClipMask(clipMask) {\n      if (this._clipMask != (clipMask = !!clipMask)) {\n        this._clipMask = clipMask;\n\n        if (clipMask) {\n          this.setFillColor(null);\n          this.setStrokeColor(null);\n        }\n\n        this._changed(257);\n\n        if (this._parent) this._parent._changed(2048);\n      }\n    },\n    getData: function getData() {\n      if (!this._data) this._data = {};\n      return this._data;\n    },\n    setData: function setData(data) {\n      this._data = data;\n    },\n    getPosition: function getPosition(_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n\n      var position = this._position || (this._position = this._getPositionFromBounds());\n\n      return new ctor(position.x, position.y, this, 'setPosition');\n    },\n    setPosition: function setPosition() {\n      this.translate(Point.read(arguments).subtract(this.getPosition(true)));\n    },\n    _getPositionFromBounds: function _getPositionFromBounds(bounds) {\n      return this._pivot ? this._matrix._transformPoint(this._pivot) : (bounds || this.getBounds()).getCenter(true);\n    },\n    getPivot: function getPivot() {\n      var pivot = this._pivot;\n      return pivot ? new LinkedPoint(pivot.x, pivot.y, this, 'setPivot') : null;\n    },\n    setPivot: function setPivot() {\n      this._pivot = Point.read(arguments, 0, {\n        clone: true,\n        readNull: true\n      });\n      this._position = undefined;\n    }\n  }, Base.each({\n    getStrokeBounds: {\n      stroke: true\n    },\n    getHandleBounds: {\n      handle: true\n    },\n    getInternalBounds: {\n      internal: true\n    }\n  }, function (options, key) {\n    this[key] = function (matrix) {\n      return this.getBounds(matrix, options);\n    };\n  }, {\n    beans: true,\n    getBounds: function getBounds(matrix, options) {\n      var hasMatrix = options || matrix instanceof Matrix,\n          opts = Base.set({}, hasMatrix ? options : matrix, this._boundsOptions);\n      if (!opts.stroke || this.getStrokeScaling()) opts.cacheItem = this;\n\n      var rect = this._getCachedBounds(hasMatrix && matrix, opts).rect;\n\n      return !arguments.length ? new LinkedRectangle(rect.x, rect.y, rect.width, rect.height, this, 'setBounds') : rect;\n    },\n    setBounds: function setBounds() {\n      var rect = _Rectangle.read(arguments),\n          bounds = this.getBounds(),\n          _matrix = this._matrix,\n          matrix = new Matrix(),\n          center = rect.getCenter();\n\n      matrix.translate(center);\n\n      if (rect.width != bounds.width || rect.height != bounds.height) {\n        if (!_matrix.isInvertible()) {\n          _matrix.set(_matrix._backup || new Matrix().translate(_matrix.getTranslation()));\n\n          bounds = this.getBounds();\n        }\n\n        matrix.scale(bounds.width !== 0 ? rect.width / bounds.width : 0, bounds.height !== 0 ? rect.height / bounds.height : 0);\n      }\n\n      center = bounds.getCenter();\n      matrix.translate(-center.x, -center.y);\n      this.transform(matrix);\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var children = this._children;\n      if (!children || !children.length) return new _Rectangle();\n\n      Item._updateBoundsCache(this, options.cacheItem);\n\n      return Item._getBounds(children, matrix, options);\n    },\n    _getBoundsCacheKey: function _getBoundsCacheKey(options, internal) {\n      return [options.stroke ? 1 : 0, options.handle ? 1 : 0, internal ? 1 : 0].join('');\n    },\n    _getCachedBounds: function _getCachedBounds(matrix, options, noInternal) {\n      matrix = matrix && matrix._orNullIfIdentity();\n\n      var internal = options.internal && !noInternal,\n          cacheItem = options.cacheItem,\n          _matrix = internal ? null : this._matrix._orNullIfIdentity(),\n          cacheKey = cacheItem && (!matrix || matrix.equals(_matrix)) && this._getBoundsCacheKey(options, internal),\n          bounds = this._bounds;\n\n      Item._updateBoundsCache(this._parent || this._symbol, cacheItem);\n\n      if (cacheKey && bounds && cacheKey in bounds) {\n        var cached = bounds[cacheKey];\n        return {\n          rect: cached.rect.clone(),\n          nonscaling: cached.nonscaling\n        };\n      }\n\n      var res = this._getBounds(matrix || _matrix, options),\n          rect = res.rect || res,\n          style = this._style,\n          nonscaling = res.nonscaling || style.hasStroke() && !style.getStrokeScaling();\n\n      if (cacheKey) {\n        if (!bounds) {\n          this._bounds = bounds = {};\n        }\n\n        var cached = bounds[cacheKey] = {\n          rect: rect.clone(),\n          nonscaling: nonscaling,\n          internal: internal\n        };\n      }\n\n      return {\n        rect: rect,\n        nonscaling: nonscaling\n      };\n    },\n    _getStrokeMatrix: function _getStrokeMatrix(matrix, options) {\n      var parent = this.getStrokeScaling() ? null : options && options.internal ? this : this._parent || this._symbol && this._symbol._item,\n          mx = parent ? parent.getViewMatrix().invert() : matrix;\n      return mx && mx._shiftless();\n    },\n    statics: {\n      _updateBoundsCache: function _updateBoundsCache(parent, item) {\n        if (parent && item) {\n          var id = item._id,\n              ref = parent._boundsCache = parent._boundsCache || {\n            ids: {},\n            list: []\n          };\n\n          if (!ref.ids[id]) {\n            ref.list.push(item);\n            ref.ids[id] = item;\n          }\n        }\n      },\n      _clearBoundsCache: function _clearBoundsCache(item) {\n        var cache = item._boundsCache;\n\n        if (cache) {\n          item._bounds = item._position = item._boundsCache = undefined;\n\n          for (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n            var other = list[i];\n\n            if (other !== item) {\n              other._bounds = other._position = undefined;\n              if (other._boundsCache) Item._clearBoundsCache(other);\n            }\n          }\n        }\n      },\n      _getBounds: function _getBounds(items, matrix, options) {\n        var x1 = Infinity,\n            x2 = -x1,\n            y1 = x1,\n            y2 = x2,\n            nonscaling = false;\n        options = options || {};\n\n        for (var i = 0, l = items.length; i < l; i++) {\n          var item = items[i];\n\n          if (item._visible && !item.isEmpty(true)) {\n            var bounds = item._getCachedBounds(matrix && matrix.appended(item._matrix), options, true),\n                rect = bounds.rect;\n\n            x1 = Math.min(rect.x, x1);\n            y1 = Math.min(rect.y, y1);\n            x2 = Math.max(rect.x + rect.width, x2);\n            y2 = Math.max(rect.y + rect.height, y2);\n            if (bounds.nonscaling) nonscaling = true;\n          }\n        }\n\n        return {\n          rect: isFinite(x1) ? new _Rectangle(x1, y1, x2 - x1, y2 - y1) : new _Rectangle(),\n          nonscaling: nonscaling\n        };\n      }\n    }\n  }), {\n    beans: true,\n    _decompose: function _decompose() {\n      return this._applyMatrix ? null : this._decomposed || (this._decomposed = this._matrix.decompose());\n    },\n    getRotation: function getRotation() {\n      var decomposed = this._decompose();\n\n      return decomposed ? decomposed.rotation : 0;\n    },\n    setRotation: function setRotation(rotation) {\n      var current = this.getRotation();\n\n      if (current != null && rotation != null) {\n        var decomposed = this._decomposed;\n        this.rotate(rotation - current);\n\n        if (decomposed) {\n          decomposed.rotation = rotation;\n          this._decomposed = decomposed;\n        }\n      }\n    },\n    getScaling: function getScaling() {\n      var decomposed = this._decompose(),\n          s = decomposed && decomposed.scaling;\n\n      return new LinkedPoint(s ? s.x : 1, s ? s.y : 1, this, 'setScaling');\n    },\n    setScaling: function setScaling() {\n      var current = this.getScaling(),\n          scaling = Point.read(arguments, 0, {\n        clone: true,\n        readNull: true\n      });\n\n      if (current && scaling && !current.equals(scaling)) {\n        var rotation = this.getRotation(),\n            decomposed = this._decomposed,\n            matrix = new Matrix(),\n            center = this.getPosition(true);\n        matrix.translate(center);\n        if (rotation) matrix.rotate(rotation);\n        matrix.scale(scaling.x / current.x, scaling.y / current.y);\n        if (rotation) matrix.rotate(-rotation);\n        matrix.translate(center.negate());\n        this.transform(matrix);\n\n        if (decomposed) {\n          decomposed.scaling = scaling;\n          this._decomposed = decomposed;\n        }\n      }\n    },\n    getMatrix: function getMatrix() {\n      return this._matrix;\n    },\n    setMatrix: function setMatrix() {\n      var matrix = this._matrix;\n      matrix.initialize.apply(matrix, arguments);\n    },\n    getGlobalMatrix: function getGlobalMatrix(_dontClone) {\n      var matrix = this._globalMatrix;\n\n      if (matrix) {\n        var parent = this._parent;\n        var parents = [];\n\n        while (parent) {\n          if (!parent._globalMatrix) {\n            matrix = null;\n\n            for (var i = 0, l = parents.length; i < l; i++) {\n              parents[i]._globalMatrix = null;\n            }\n\n            break;\n          }\n\n          parents.push(parent);\n          parent = parent._parent;\n        }\n      }\n\n      if (!matrix) {\n        matrix = this._globalMatrix = this._matrix.clone();\n        var parent = this._parent;\n        if (parent) matrix.prepend(parent.getGlobalMatrix(true));\n      }\n\n      return _dontClone ? matrix : matrix.clone();\n    },\n    getViewMatrix: function getViewMatrix() {\n      return this.getGlobalMatrix().prepend(this.getView()._matrix);\n    },\n    getApplyMatrix: function getApplyMatrix() {\n      return this._applyMatrix;\n    },\n    setApplyMatrix: function setApplyMatrix(apply) {\n      if (this._applyMatrix = this._canApplyMatrix && !!apply) this.transform(null, true);\n    },\n    getTransformContent: '#getApplyMatrix',\n    setTransformContent: '#setApplyMatrix'\n  }, {\n    getProject: function getProject() {\n      return this._project;\n    },\n    _setProject: function _setProject(project, installEvents) {\n      if (this._project !== project) {\n        if (this._project) this._installEvents(false);\n        this._project = project;\n        var children = this._children;\n\n        for (var i = 0, l = children && children.length; i < l; i++) {\n          children[i]._setProject(project);\n        }\n\n        installEvents = true;\n      }\n\n      if (installEvents) this._installEvents(true);\n    },\n    getView: function getView() {\n      return this._project._view;\n    },\n    _installEvents: function _installEvents(install) {\n      _installEvents.base.call(this, install);\n\n      var children = this._children;\n\n      for (var i = 0, l = children && children.length; i < l; i++) {\n        children[i]._installEvents(install);\n      }\n    },\n    getLayer: function getLayer() {\n      var parent = this;\n\n      while (parent = parent._parent) {\n        if (parent instanceof Layer) return parent;\n      }\n\n      return null;\n    },\n    getParent: function getParent() {\n      return this._parent;\n    },\n    setParent: function setParent(item) {\n      return item.addChild(this);\n    },\n    _getOwner: '#getParent',\n    getChildren: function getChildren() {\n      return this._children;\n    },\n    setChildren: function setChildren(items) {\n      this.removeChildren();\n      this.addChildren(items);\n    },\n    getFirstChild: function getFirstChild() {\n      return this._children && this._children[0] || null;\n    },\n    getLastChild: function getLastChild() {\n      return this._children && this._children[this._children.length - 1] || null;\n    },\n    getNextSibling: function getNextSibling() {\n      var owner = this._getOwner();\n\n      return owner && owner._children[this._index + 1] || null;\n    },\n    getPreviousSibling: function getPreviousSibling() {\n      var owner = this._getOwner();\n\n      return owner && owner._children[this._index - 1] || null;\n    },\n    getIndex: function getIndex() {\n      return this._index;\n    },\n    equals: function equals(item) {\n      return item === this || item && this._class === item._class && this._style.equals(item._style) && this._matrix.equals(item._matrix) && this._locked === item._locked && this._visible === item._visible && this._blendMode === item._blendMode && this._opacity === item._opacity && this._clipMask === item._clipMask && this._guide === item._guide && this._equals(item) || false;\n    },\n    _equals: function _equals(item) {\n      return Base.equals(this._children, item._children);\n    },\n    clone: function clone(options) {\n      var copy = new this.constructor(Item.NO_INSERT),\n          children = this._children,\n          insert = Base.pick(options ? options.insert : undefined, options === undefined || options === true),\n          deep = Base.pick(options ? options.deep : undefined, true);\n      if (children) copy.copyAttributes(this);\n      if (!children || deep) copy.copyContent(this);\n      if (!children) copy.copyAttributes(this);\n      if (insert) copy.insertAbove(this);\n      var name = this._name,\n          parent = this._parent;\n\n      if (name && parent) {\n        var children = parent._children,\n            orig = name,\n            i = 1;\n\n        while (children[name]) {\n          name = orig + ' ' + i++;\n        }\n\n        if (name !== orig) copy.setName(name);\n      }\n\n      return copy;\n    },\n    copyContent: function copyContent(source) {\n      var children = source._children;\n\n      for (var i = 0, l = children && children.length; i < l; i++) {\n        this.addChild(children[i].clone(false), true);\n      }\n    },\n    copyAttributes: function copyAttributes(source, excludeMatrix) {\n      this.setStyle(source._style);\n      var keys = ['_locked', '_visible', '_blendMode', '_opacity', '_clipMask', '_guide'];\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i];\n        if (source.hasOwnProperty(key)) this[key] = source[key];\n      }\n\n      if (!excludeMatrix) this._matrix.set(source._matrix, true);\n      this.setApplyMatrix(source._applyMatrix);\n      this.setPivot(source._pivot);\n      this.setSelection(source._selection);\n      var data = source._data,\n          name = source._name;\n      this._data = data ? Base.clone(data) : null;\n      if (name) this.setName(name);\n    },\n    rasterize: function rasterize(resolution, insert) {\n      var bounds = this.getStrokeBounds(),\n          scale = (resolution || this.getView().getResolution()) / 72,\n          topLeft = bounds.getTopLeft().floor(),\n          bottomRight = bounds.getBottomRight().ceil(),\n          size = new Size(bottomRight.subtract(topLeft)),\n          raster = new Raster(Item.NO_INSERT);\n\n      if (!size.isZero()) {\n        var canvas = CanvasProvider.getCanvas(size.multiply(scale)),\n            ctx = canvas.getContext('2d'),\n            matrix = new Matrix().scale(scale).translate(topLeft.negate());\n        ctx.save();\n        matrix.applyToContext(ctx);\n        this.draw(ctx, new Base({\n          matrices: [matrix]\n        }));\n        ctx.restore();\n        raster.setCanvas(canvas);\n      }\n\n      raster.transform(new Matrix().translate(topLeft.add(size.divide(2))).scale(1 / scale));\n      if (insert === undefined || insert) raster.insertAbove(this);\n      return raster;\n    },\n    contains: function contains() {\n      var matrix = this._matrix;\n      return matrix.isInvertible() && !!this._contains(matrix._inverseTransform(Point.read(arguments)));\n    },\n    _contains: function _contains(point) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          if (children[i].contains(point)) return true;\n        }\n\n        return false;\n      }\n\n      return point.isInside(this.getInternalBounds());\n    },\n    isInside: function isInside() {\n      return _Rectangle.read(arguments).contains(this.getBounds());\n    },\n    _asPathItem: function _asPathItem() {\n      return new Path.Rectangle({\n        rectangle: this.getInternalBounds(),\n        matrix: this._matrix,\n        insert: false\n      });\n    },\n    intersects: function intersects(item, _matrix) {\n      if (!(item instanceof Item)) return false;\n      return this._asPathItem().getIntersections(item._asPathItem(), null, _matrix, true).length > 0;\n    }\n  }, new function () {\n    function hitTest() {\n      var args = arguments;\n      return this._hitTest(Point.read(args), HitResult.getOptions(args));\n    }\n\n    function hitTestAll() {\n      var args = arguments,\n          point = Point.read(args),\n          options = HitResult.getOptions(args),\n          all = [];\n\n      this._hitTest(point, new Base({\n        all: all\n      }, options));\n\n      return all;\n    }\n\n    function hitTestChildren(point, options, viewMatrix, _exclude) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          var child = children[i];\n\n          var res = child !== _exclude && child._hitTest(point, options, viewMatrix);\n\n          if (res && !options.all) return res;\n        }\n      }\n\n      return null;\n    }\n\n    Project.inject({\n      hitTest: hitTest,\n      hitTestAll: hitTestAll,\n      _hitTest: hitTestChildren\n    });\n    return {\n      hitTest: hitTest,\n      hitTestAll: hitTestAll,\n      _hitTestChildren: hitTestChildren\n    };\n  }(), {\n    _hitTest: function _hitTest(point, options, parentViewMatrix) {\n      if (this._locked || !this._visible || this._guide && !options.guides || this.isEmpty()) {\n        return null;\n      }\n\n      var matrix = this._matrix,\n          viewMatrix = parentViewMatrix ? parentViewMatrix.appended(matrix) : this.getGlobalMatrix().prepend(this.getView()._matrix),\n          tolerance = Math.max(options.tolerance, 1e-12),\n          tolerancePadding = options._tolerancePadding = new Size(Path._getStrokePadding(tolerance, matrix._shiftless().invert()));\n      point = matrix._inverseTransform(point);\n\n      if (!point || !this._children && !this.getBounds({\n        internal: true,\n        stroke: true,\n        handle: true\n      }).expand(tolerancePadding.multiply(2))._containsPoint(point)) {\n        return null;\n      }\n\n      var checkSelf = !(options.guides && !this._guide || options.selected && !this.isSelected() || options.type && options.type !== Base.hyphenate(this._class) || options.class && !(this instanceof options.class)),\n          match = options.match,\n          that = this,\n          bounds,\n          res;\n\n      function filter(hit) {\n        if (hit && match && !match(hit)) hit = null;\n        if (hit && options.all) options.all.push(hit);\n        return hit;\n      }\n\n      function checkPoint(type, part) {\n        var pt = part ? bounds['get' + part]() : that.getPosition();\n\n        if (point.subtract(pt).divide(tolerancePadding).length <= 1) {\n          return new HitResult(type, that, {\n            name: part ? Base.hyphenate(part) : type,\n            point: pt\n          });\n        }\n      }\n\n      var checkPosition = options.position,\n          checkCenter = options.center,\n          checkBounds = options.bounds;\n\n      if (checkSelf && this._parent && (checkPosition || checkCenter || checkBounds)) {\n        if (checkCenter || checkBounds) {\n          bounds = this.getInternalBounds();\n        }\n\n        res = checkPosition && checkPoint('position') || checkCenter && checkPoint('center', 'Center');\n\n        if (!res && checkBounds) {\n          var points = ['TopLeft', 'TopRight', 'BottomLeft', 'BottomRight', 'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'];\n\n          for (var i = 0; i < 8 && !res; i++) {\n            res = checkPoint('bounds', points[i]);\n          }\n        }\n\n        res = filter(res);\n      }\n\n      if (!res) {\n        res = this._hitTestChildren(point, options, viewMatrix) || checkSelf && filter(this._hitTestSelf(point, options, viewMatrix, this.getStrokeScaling() ? null : viewMatrix._shiftless().invert())) || null;\n      }\n\n      if (res && res.point) {\n        res.point = matrix.transform(res.point);\n      }\n\n      return res;\n    },\n    _hitTestSelf: function _hitTestSelf(point, options) {\n      if (options.fill && this.hasFill() && this._contains(point)) return new HitResult('fill', this);\n    },\n    matches: function matches(name, compare) {\n      function matchObject(obj1, obj2) {\n        for (var i in obj1) {\n          if (obj1.hasOwnProperty(i)) {\n            var val1 = obj1[i],\n                val2 = obj2[i];\n\n            if (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n              if (!matchObject(val1, val2)) return false;\n            } else if (!Base.equals(val1, val2)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      var type = typeof name;\n\n      if (type === 'object') {\n        for (var key in name) {\n          if (name.hasOwnProperty(key) && !this.matches(key, name[key])) return false;\n        }\n\n        return true;\n      } else if (type === 'function') {\n        return name(this);\n      } else if (name === 'match') {\n        return compare(this);\n      } else {\n        var value = /^(empty|editable)$/.test(name) ? this['is' + Base.capitalize(name)]() : name === 'type' ? Base.hyphenate(this._class) : this[name];\n\n        if (name === 'class') {\n          if (typeof compare === 'function') return this instanceof compare;\n          value = this._class;\n        }\n\n        if (typeof compare === 'function') {\n          return !!compare(value);\n        } else if (compare) {\n          if (compare.test) {\n            return compare.test(value);\n          } else if (Base.isPlainObject(compare)) {\n            return matchObject(compare, value);\n          }\n        }\n\n        return Base.equals(value, compare);\n      }\n    },\n    getItems: function getItems(options) {\n      return Item._getItems(this, options, this._matrix);\n    },\n    getItem: function getItem(options) {\n      return Item._getItems(this, options, this._matrix, null, true)[0] || null;\n    },\n    statics: {\n      _getItems: function _getItems(item, options, matrix, param, firstOnly) {\n        if (!param) {\n          var obj = typeof options === 'object' && options,\n              overlapping = obj && obj.overlapping,\n              inside = obj && obj.inside,\n              bounds = overlapping || inside,\n              rect = bounds && _Rectangle.read([bounds]);\n\n          param = {\n            items: [],\n            recursive: obj && obj.recursive !== false,\n            inside: !!inside,\n            overlapping: !!overlapping,\n            rect: rect,\n            path: overlapping && new Path.Rectangle({\n              rectangle: rect,\n              insert: false\n            })\n          };\n\n          if (obj) {\n            options = Base.filter({}, options, {\n              recursive: true,\n              inside: true,\n              overlapping: true\n            });\n          }\n        }\n\n        var children = item._children,\n            items = param.items,\n            rect = param.rect;\n        matrix = rect && (matrix || new Matrix());\n\n        for (var i = 0, l = children && children.length; i < l; i++) {\n          var child = children[i],\n              childMatrix = matrix && matrix.appended(child._matrix),\n              add = true;\n\n          if (rect) {\n            var bounds = child.getBounds(childMatrix);\n            if (!rect.intersects(bounds)) continue;\n            if (!(rect.contains(bounds) || param.overlapping && (bounds.contains(rect) || param.path.intersects(child, childMatrix)))) add = false;\n          }\n\n          if (add && child.matches(options)) {\n            items.push(child);\n            if (firstOnly) break;\n          }\n\n          if (param.recursive !== false) {\n            _getItems(child, options, childMatrix, param, firstOnly);\n          }\n\n          if (firstOnly && items.length > 0) break;\n        }\n\n        return items;\n      }\n    }\n  }, {\n    importJSON: function importJSON(json) {\n      var res = Base.importJSON(json, this);\n      return res !== this ? this.addChild(res) : res;\n    },\n    addChild: function addChild(item) {\n      return this.insertChild(undefined, item);\n    },\n    insertChild: function insertChild(index, item) {\n      var res = item ? this.insertChildren(index, [item]) : null;\n      return res && res[0];\n    },\n    addChildren: function addChildren(items) {\n      return this.insertChildren(this._children.length, items);\n    },\n    insertChildren: function insertChildren(index, items) {\n      var children = this._children;\n\n      if (children && items && items.length > 0) {\n        items = Base.slice(items);\n        var inserted = {};\n\n        for (var i = items.length - 1; i >= 0; i--) {\n          var item = items[i],\n              id = item && item._id;\n\n          if (!item || inserted[id]) {\n            items.splice(i, 1);\n          } else {\n            item._remove(false, true);\n\n            inserted[id] = true;\n          }\n        }\n\n        Base.splice(children, items, index, 0);\n        var project = this._project,\n            notifySelf = project._changes;\n\n        for (var i = 0, l = items.length; i < l; i++) {\n          var item = items[i],\n              name = item._name;\n          item._parent = this;\n\n          item._setProject(project, true);\n\n          if (name) item.setName(name);\n          if (notifySelf) item._changed(5);\n        }\n\n        this._changed(11);\n      } else {\n        items = null;\n      }\n\n      return items;\n    },\n    _insertItem: '#insertChild',\n    _insertAt: function _insertAt(item, offset) {\n      var owner = item && item._getOwner(),\n          res = item !== this && owner ? this : null;\n\n      if (res) {\n        res._remove(false, true);\n\n        owner._insertItem(item._index + offset, res);\n      }\n\n      return res;\n    },\n    insertAbove: function insertAbove(item) {\n      return this._insertAt(item, 1);\n    },\n    insertBelow: function insertBelow(item) {\n      return this._insertAt(item, 0);\n    },\n    sendToBack: function sendToBack() {\n      var owner = this._getOwner();\n\n      return owner ? owner._insertItem(0, this) : null;\n    },\n    bringToFront: function bringToFront() {\n      var owner = this._getOwner();\n\n      return owner ? owner._insertItem(undefined, this) : null;\n    },\n    appendTop: '#addChild',\n    appendBottom: function appendBottom(item) {\n      return this.insertChild(0, item);\n    },\n    moveAbove: '#insertAbove',\n    moveBelow: '#insertBelow',\n    addTo: function addTo(owner) {\n      return owner._insertItem(undefined, this);\n    },\n    copyTo: function copyTo(owner) {\n      return this.clone(false).addTo(owner);\n    },\n    reduce: function reduce(options) {\n      var children = this._children;\n\n      if (children && children.length === 1) {\n        var child = children[0].reduce(options);\n\n        if (this._parent) {\n          child.insertAbove(this);\n          this.remove();\n        } else {\n          child.remove();\n        }\n\n        return child;\n      }\n\n      return this;\n    },\n    _removeNamed: function _removeNamed() {\n      var owner = this._getOwner();\n\n      if (owner) {\n        var children = owner._children,\n            namedChildren = owner._namedChildren,\n            name = this._name,\n            namedArray = namedChildren[name],\n            index = namedArray ? namedArray.indexOf(this) : -1;\n\n        if (index !== -1) {\n          if (children[name] == this) delete children[name];\n          namedArray.splice(index, 1);\n\n          if (namedArray.length) {\n            children[name] = namedArray[0];\n          } else {\n            delete namedChildren[name];\n          }\n        }\n      }\n    },\n    _remove: function _remove(notifySelf, notifyParent) {\n      var owner = this._getOwner(),\n          project = this._project,\n          index = this._index;\n\n      if (this._style) this._style._dispose();\n\n      if (owner) {\n        if (this._name) this._removeNamed();\n\n        if (index != null) {\n          if (project._activeLayer === this) project._activeLayer = this.getNextSibling() || this.getPreviousSibling();\n          Base.splice(owner._children, null, index, 1);\n        }\n\n        this._installEvents(false);\n\n        if (notifySelf && project._changes) this._changed(5);\n        if (notifyParent) owner._changed(11, this);\n        this._parent = null;\n        return true;\n      }\n\n      return false;\n    },\n    remove: function remove() {\n      return this._remove(true, true);\n    },\n    replaceWith: function replaceWith(item) {\n      var ok = item && item.insertBelow(this);\n      if (ok) this.remove();\n      return ok;\n    },\n    removeChildren: function removeChildren(start, end) {\n      if (!this._children) return null;\n      start = start || 0;\n      end = Base.pick(end, this._children.length);\n      var removed = Base.splice(this._children, null, start, end - start);\n\n      for (var i = removed.length - 1; i >= 0; i--) {\n        removed[i]._remove(true, false);\n      }\n\n      if (removed.length > 0) this._changed(11);\n      return removed;\n    },\n    clear: '#removeChildren',\n    reverseChildren: function reverseChildren() {\n      if (this._children) {\n        this._children.reverse();\n\n        for (var i = 0, l = this._children.length; i < l; i++) {\n          this._children[i]._index = i;\n        }\n\n        this._changed(11);\n      }\n    },\n    isEmpty: function isEmpty(recursively) {\n      var children = this._children;\n      var numChildren = children ? children.length : 0;\n\n      if (recursively) {\n        for (var i = 0; i < numChildren; i++) {\n          if (!children[i].isEmpty(recursively)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return !numChildren;\n    },\n    isEditable: function isEditable() {\n      var item = this;\n\n      while (item) {\n        if (!item._visible || item._locked) return false;\n        item = item._parent;\n      }\n\n      return true;\n    },\n    hasFill: function hasFill() {\n      return this.getStyle().hasFill();\n    },\n    hasStroke: function hasStroke() {\n      return this.getStyle().hasStroke();\n    },\n    hasShadow: function hasShadow() {\n      return this.getStyle().hasShadow();\n    },\n    _getOrder: function _getOrder(item) {\n      function getList(item) {\n        var list = [];\n\n        do {\n          list.unshift(item);\n        } while (item = item._parent);\n\n        return list;\n      }\n\n      var list1 = getList(this),\n          list2 = getList(item);\n\n      for (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n        if (list1[i] != list2[i]) {\n          return list1[i]._index < list2[i]._index ? 1 : -1;\n        }\n      }\n\n      return 0;\n    },\n    hasChildren: function hasChildren() {\n      return this._children && this._children.length > 0;\n    },\n    isInserted: function isInserted() {\n      return this._parent ? this._parent.isInserted() : false;\n    },\n    isAbove: function isAbove(item) {\n      return this._getOrder(item) === -1;\n    },\n    isBelow: function isBelow(item) {\n      return this._getOrder(item) === 1;\n    },\n    isParent: function isParent(item) {\n      return this._parent === item;\n    },\n    isChild: function isChild(item) {\n      return item && item._parent === this;\n    },\n    isDescendant: function isDescendant(item) {\n      var parent = this;\n\n      while (parent = parent._parent) {\n        if (parent === item) return true;\n      }\n\n      return false;\n    },\n    isAncestor: function isAncestor(item) {\n      return item ? item.isDescendant(this) : false;\n    },\n    isSibling: function isSibling(item) {\n      return this._parent === item._parent;\n    },\n    isGroupedWith: function isGroupedWith(item) {\n      var parent = this._parent;\n\n      while (parent) {\n        if (parent._parent && /^(Group|Layer|CompoundPath)$/.test(parent._class) && item.isDescendant(parent)) return true;\n        parent = parent._parent;\n      }\n\n      return false;\n    }\n  }, Base.each(['rotate', 'scale', 'shear', 'skew'], function (key) {\n    var rotate = key === 'rotate';\n\n    this[key] = function () {\n      var args = arguments,\n          value = (rotate ? Base : Point).read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      return this.transform(new Matrix()[key](value, center || this.getPosition(true)));\n    };\n  }, {\n    translate: function translate() {\n      var mx = new Matrix();\n      return this.transform(mx.translate.apply(mx, arguments));\n    },\n    transform: function transform(matrix, _applyRecursively, _setApplyMatrix) {\n      var _matrix = this._matrix,\n          transformMatrix = matrix && !matrix.isIdentity(),\n          applyMatrix = _setApplyMatrix && this._canApplyMatrix || this._applyMatrix && (transformMatrix || !_matrix.isIdentity() || _applyRecursively && this._children);\n      if (!transformMatrix && !applyMatrix) return this;\n\n      if (transformMatrix) {\n        if (!matrix.isInvertible() && _matrix.isInvertible()) _matrix._backup = _matrix.getValues();\n\n        _matrix.prepend(matrix, true);\n\n        var style = this._style,\n            fillColor = style.getFillColor(true),\n            strokeColor = style.getStrokeColor(true);\n        if (fillColor) fillColor.transform(matrix);\n        if (strokeColor) strokeColor.transform(matrix);\n      }\n\n      if (applyMatrix && (applyMatrix = this._transformContent(_matrix, _applyRecursively, _setApplyMatrix))) {\n        var pivot = this._pivot;\n        if (pivot) _matrix._transformPoint(pivot, pivot, true);\n\n        _matrix.reset(true);\n\n        if (_setApplyMatrix && this._canApplyMatrix) this._applyMatrix = true;\n      }\n\n      var bounds = this._bounds,\n          position = this._position;\n\n      if (transformMatrix || applyMatrix) {\n        this._changed(25);\n      }\n\n      var decomp = transformMatrix && bounds && matrix.decompose();\n\n      if (decomp && decomp.skewing.isZero() && decomp.rotation % 90 === 0) {\n        for (var key in bounds) {\n          var cache = bounds[key];\n\n          if (cache.nonscaling) {\n            delete bounds[key];\n          } else if (applyMatrix || !cache.internal) {\n            var rect = cache.rect;\n\n            matrix._transformBounds(rect, rect);\n          }\n        }\n\n        this._bounds = bounds;\n\n        var cached = bounds[this._getBoundsCacheKey(this._boundsOptions || {})];\n\n        if (cached) {\n          this._position = this._getPositionFromBounds(cached.rect);\n        }\n      } else if (transformMatrix && position && this._pivot) {\n        this._position = matrix._transformPoint(position, position);\n      }\n\n      return this;\n    },\n    _transformContent: function _transformContent(matrix, applyRecursively, setApplyMatrix) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].transform(matrix, applyRecursively, setApplyMatrix);\n        }\n\n        return true;\n      }\n    },\n    globalToLocal: function globalToLocal() {\n      return this.getGlobalMatrix(true)._inverseTransform(Point.read(arguments));\n    },\n    localToGlobal: function localToGlobal() {\n      return this.getGlobalMatrix(true)._transformPoint(Point.read(arguments));\n    },\n    parentToLocal: function parentToLocal() {\n      return this._matrix._inverseTransform(Point.read(arguments));\n    },\n    localToParent: function localToParent() {\n      return this._matrix._transformPoint(Point.read(arguments));\n    },\n    fitBounds: function fitBounds(rectangle, fill) {\n      rectangle = _Rectangle.read(arguments);\n      var bounds = this.getBounds(),\n          itemRatio = bounds.height / bounds.width,\n          rectRatio = rectangle.height / rectangle.width,\n          scale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio) ? rectangle.width / bounds.width : rectangle.height / bounds.height,\n          newBounds = new _Rectangle(new Point(), new Size(bounds.width * scale, bounds.height * scale));\n      newBounds.setCenter(rectangle.getCenter());\n      this.setBounds(newBounds);\n    }\n  }), {\n    _setStyles: function _setStyles(ctx, param, viewMatrix) {\n      var style = this._style,\n          matrix = this._matrix;\n\n      if (style.hasFill()) {\n        ctx.fillStyle = style.getFillColor().toCanvasStyle(ctx, matrix);\n      }\n\n      if (style.hasStroke()) {\n        ctx.strokeStyle = style.getStrokeColor().toCanvasStyle(ctx, matrix);\n        ctx.lineWidth = style.getStrokeWidth();\n        var strokeJoin = style.getStrokeJoin(),\n            strokeCap = style.getStrokeCap(),\n            miterLimit = style.getMiterLimit();\n        if (strokeJoin) ctx.lineJoin = strokeJoin;\n        if (strokeCap) ctx.lineCap = strokeCap;\n        if (miterLimit) ctx.miterLimit = miterLimit;\n\n        if (paper.support.nativeDash) {\n          var dashArray = style.getDashArray(),\n              dashOffset = style.getDashOffset();\n\n          if (dashArray && dashArray.length) {\n            if ('setLineDash' in ctx) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashOffset;\n            } else {\n              ctx.mozDash = dashArray;\n              ctx.mozDashOffset = dashOffset;\n            }\n          }\n        }\n      }\n\n      if (style.hasShadow()) {\n        var pixelRatio = param.pixelRatio || 1,\n            mx = viewMatrix._shiftless().prepend(new Matrix().scale(pixelRatio, pixelRatio)),\n            blur = mx.transform(new Point(style.getShadowBlur(), 0)),\n            offset = mx.transform(this.getShadowOffset());\n\n        ctx.shadowColor = style.getShadowColor().toCanvasStyle(ctx);\n        ctx.shadowBlur = blur.getLength();\n        ctx.shadowOffsetX = offset.x;\n        ctx.shadowOffsetY = offset.y;\n      }\n    },\n    draw: function draw(ctx, param, parentStrokeMatrix) {\n      var updateVersion = this._updateVersion = this._project._updateVersion;\n      if (!this._visible || this._opacity === 0) return;\n      var matrices = param.matrices,\n          viewMatrix = param.viewMatrix,\n          matrix = this._matrix,\n          globalMatrix = matrices[matrices.length - 1].appended(matrix);\n      if (!globalMatrix.isInvertible()) return;\n      viewMatrix = viewMatrix ? viewMatrix.appended(globalMatrix) : globalMatrix;\n      matrices.push(globalMatrix);\n\n      if (param.updateMatrix) {\n        this._globalMatrix = globalMatrix;\n      }\n\n      var blendMode = this._blendMode,\n          opacity = this._opacity,\n          normalBlend = blendMode === 'normal',\n          nativeBlend = BlendMode.nativeModes[blendMode],\n          direct = normalBlend && opacity === 1 || param.dontStart || param.clip || (nativeBlend || normalBlend && opacity < 1) && this._canComposite(),\n          pixelRatio = param.pixelRatio || 1,\n          mainCtx,\n          itemOffset,\n          prevOffset;\n\n      if (!direct) {\n        var bounds = this.getStrokeBounds(viewMatrix);\n\n        if (!bounds.width || !bounds.height) {\n          matrices.pop();\n          return;\n        }\n\n        prevOffset = param.offset;\n        itemOffset = param.offset = bounds.getTopLeft().floor();\n        mainCtx = ctx;\n        ctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1).multiply(pixelRatio));\n        if (pixelRatio !== 1) ctx.scale(pixelRatio, pixelRatio);\n      }\n\n      ctx.save();\n      var strokeMatrix = parentStrokeMatrix ? parentStrokeMatrix.appended(matrix) : this._canScaleStroke && !this.getStrokeScaling(true) && viewMatrix,\n          clip = !direct && param.clipItem,\n          transform = !strokeMatrix || clip;\n\n      if (direct) {\n        ctx.globalAlpha = opacity;\n        if (nativeBlend) ctx.globalCompositeOperation = blendMode;\n      } else if (transform) {\n        ctx.translate(-itemOffset.x, -itemOffset.y);\n      }\n\n      if (transform) {\n        (direct ? matrix : viewMatrix).applyToContext(ctx);\n      }\n\n      if (clip) {\n        param.clipItem.draw(ctx, param.extend({\n          clip: true\n        }));\n      }\n\n      if (strokeMatrix) {\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        var offset = param.offset;\n        if (offset) ctx.translate(-offset.x, -offset.y);\n      }\n\n      this._draw(ctx, param, viewMatrix, strokeMatrix);\n\n      ctx.restore();\n      matrices.pop();\n\n      if (param.clip && !param.dontFinish) {\n        ctx.clip(this.getFillRule());\n      }\n\n      if (!direct) {\n        BlendMode.process(blendMode, ctx, mainCtx, opacity, itemOffset.subtract(prevOffset).multiply(pixelRatio));\n        CanvasProvider.release(ctx);\n        param.offset = prevOffset;\n      }\n    },\n    _isUpdated: function _isUpdated(updateVersion) {\n      var parent = this._parent;\n      if (parent instanceof CompoundPath) return parent._isUpdated(updateVersion);\n      var updated = this._updateVersion === updateVersion;\n\n      if (!updated && parent && parent._visible && parent._isUpdated(updateVersion)) {\n        this._updateVersion = updateVersion;\n        updated = true;\n      }\n\n      return updated;\n    },\n    _drawSelection: function _drawSelection(ctx, matrix, size, selectionItems, updateVersion) {\n      var selection = this._selection,\n          itemSelected = selection & 1,\n          boundsSelected = selection & 2 || itemSelected && this._selectBounds,\n          positionSelected = selection & 4;\n      if (!this._drawSelected) itemSelected = false;\n\n      if ((itemSelected || boundsSelected || positionSelected) && this._isUpdated(updateVersion)) {\n        var layer,\n            color = this.getSelectedColor(true) || (layer = this.getLayer()) && layer.getSelectedColor(true),\n            mx = matrix.appended(this.getGlobalMatrix(true)),\n            half = size / 2;\n        ctx.strokeStyle = ctx.fillStyle = color ? color.toCanvasStyle(ctx) : '#009dec';\n        if (itemSelected) this._drawSelected(ctx, mx, selectionItems);\n\n        if (positionSelected) {\n          var pos = this.getPosition(true),\n              parent = this._parent,\n              point = parent ? parent.localToGlobal(pos) : pos,\n              x = point.x,\n              y = point.y;\n          ctx.beginPath();\n          ctx.arc(x, y, half, 0, Math.PI * 2, true);\n          ctx.stroke();\n          var deltas = [[0, -1], [1, 0], [0, 1], [-1, 0]],\n              start = half,\n              end = size + 1;\n\n          for (var i = 0; i < 4; i++) {\n            var delta = deltas[i],\n                dx = delta[0],\n                dy = delta[1];\n            ctx.moveTo(x + dx * start, y + dy * start);\n            ctx.lineTo(x + dx * end, y + dy * end);\n            ctx.stroke();\n          }\n        }\n\n        if (boundsSelected) {\n          var coords = mx._transformCorners(this.getInternalBounds());\n\n          ctx.beginPath();\n\n          for (var i = 0; i < 8; i++) {\n            ctx[!i ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n          }\n\n          ctx.closePath();\n          ctx.stroke();\n\n          for (var i = 0; i < 8; i++) {\n            ctx.fillRect(coords[i] - half, coords[++i] - half, size, size);\n          }\n        }\n      }\n    },\n    _canComposite: function _canComposite() {\n      return false;\n    }\n  }, Base.each(['down', 'drag', 'up', 'move'], function (key) {\n    this['removeOn' + Base.capitalize(key)] = function () {\n      var hash = {};\n      hash[key] = true;\n      return this.removeOn(hash);\n    };\n  }, {\n    removeOn: function removeOn(obj) {\n      for (var name in obj) {\n        if (obj[name]) {\n          var key = 'mouse' + name,\n              project = this._project,\n              sets = project._removeSets = project._removeSets || {};\n          sets[key] = sets[key] || {};\n          sets[key][this._id] = this;\n        }\n      }\n\n      return this;\n    }\n  }), {\n    tween: function tween(from, to, options) {\n      if (!options) {\n        options = to;\n        to = from;\n        from = null;\n\n        if (!options) {\n          options = to;\n          to = null;\n        }\n      }\n\n      var easing = options && options.easing,\n          start = options && options.start,\n          duration = options != null && (typeof options === 'number' ? options : options.duration),\n          tween = new Tween(this, from, to, duration, easing, start);\n\n      function onFrame(event) {\n        tween._handleFrame(event.time * 1000);\n\n        if (!tween.running) {\n          this.off('frame', onFrame);\n        }\n      }\n\n      if (duration) {\n        this.on('frame', onFrame);\n      }\n\n      return tween;\n    },\n    tweenTo: function tweenTo(to, options) {\n      return this.tween(null, to, options);\n    },\n    tweenFrom: function tweenFrom(from, options) {\n      return this.tween(from, null, options);\n    }\n  });\n  var Group = Item.extend({\n    _class: 'Group',\n    _selectBounds: false,\n    _selectChildren: true,\n    _serializeFields: {\n      children: []\n    },\n    initialize: function Group(arg) {\n      this._children = [];\n      this._namedChildren = {};\n      if (!this._initialize(arg)) this.addChildren(Array.isArray(arg) ? arg : arguments);\n    },\n    _changed: function _changed(flags) {\n      _changed.base.call(this, flags);\n\n      if (flags & 2050) {\n        this._clipItem = undefined;\n      }\n    },\n    _getClipItem: function _getClipItem() {\n      var clipItem = this._clipItem;\n\n      if (clipItem === undefined) {\n        clipItem = null;\n        var children = this._children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i]._clipMask) {\n            clipItem = children[i];\n            break;\n          }\n        }\n\n        this._clipItem = clipItem;\n      }\n\n      return clipItem;\n    },\n    isClipped: function isClipped() {\n      return !!this._getClipItem();\n    },\n    setClipped: function setClipped(clipped) {\n      var child = this.getFirstChild();\n      if (child) child.setClipMask(clipped);\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var clipItem = this._getClipItem();\n\n      return clipItem ? clipItem._getCachedBounds(clipItem._matrix.prepended(matrix), Base.set({}, options, {\n        stroke: false\n      })) : _getBounds.base.call(this, matrix, options);\n    },\n    _hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n      var clipItem = this._getClipItem();\n\n      return (!clipItem || clipItem.contains(point)) && _hitTestChildren.base.call(this, point, options, viewMatrix, clipItem);\n    },\n    _draw: function _draw(ctx, param) {\n      var clip = param.clip,\n          clipItem = !clip && this._getClipItem();\n\n      param = param.extend({\n        clipItem: clipItem,\n        clip: false\n      });\n\n      if (clip) {\n        ctx.beginPath();\n        param.dontStart = param.dontFinish = true;\n      } else if (clipItem) {\n        clipItem.draw(ctx, param.extend({\n          clip: true\n        }));\n      }\n\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var item = children[i];\n        if (item !== clipItem) item.draw(ctx, param);\n      }\n    }\n  });\n  var Layer = Group.extend({\n    _class: 'Layer',\n    initialize: function Layer() {\n      Group.apply(this, arguments);\n    },\n    _getOwner: function _getOwner() {\n      return this._parent || this._index != null && this._project;\n    },\n    isInserted: function isInserted() {\n      return this._parent ? isInserted.base.call(this) : this._index != null;\n    },\n    activate: function activate() {\n      this._project._activeLayer = this;\n    },\n    _hitTestSelf: function _hitTestSelf() {}\n  });\n  var Shape = Item.extend({\n    _class: 'Shape',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _canScaleStroke: true,\n    _serializeFields: {\n      type: null,\n      size: null,\n      radius: null\n    },\n    initialize: function Shape(props, point) {\n      this._initialize(props, point);\n    },\n    _equals: function _equals(item) {\n      return this._type === item._type && this._size.equals(item._size) && Base.equals(this._radius, item._radius);\n    },\n    copyContent: function copyContent(source) {\n      this.setType(source._type);\n      this.setSize(source._size);\n      this.setRadius(source._radius);\n    },\n    getType: function getType() {\n      return this._type;\n    },\n    setType: function setType(type) {\n      this._type = type;\n    },\n    getShape: '#getType',\n    setShape: '#setType',\n    getSize: function getSize() {\n      var size = this._size;\n      return new LinkedSize(size.width, size.height, this, 'setSize');\n    },\n    setSize: function setSize() {\n      var size = Size.read(arguments);\n\n      if (!this._size) {\n        this._size = size.clone();\n      } else if (!this._size.equals(size)) {\n        var type = this._type,\n            width = size.width,\n            height = size.height;\n\n        if (type === 'rectangle') {\n          this._radius.set(Size.min(this._radius, size.divide(2).abs()));\n        } else if (type === 'circle') {\n          width = height = (width + height) / 2;\n          this._radius = width / 2;\n        } else if (type === 'ellipse') {\n          this._radius._set(width / 2, height / 2);\n        }\n\n        this._size._set(width, height);\n\n        this._changed(9);\n      }\n    },\n    getRadius: function getRadius() {\n      var rad = this._radius;\n      return this._type === 'circle' ? rad : new LinkedSize(rad.width, rad.height, this, 'setRadius');\n    },\n    setRadius: function setRadius(radius) {\n      var type = this._type;\n\n      if (type === 'circle') {\n        if (radius === this._radius) return;\n        var size = radius * 2;\n        this._radius = radius;\n\n        this._size._set(size, size);\n      } else {\n        radius = Size.read(arguments);\n\n        if (!this._radius) {\n          this._radius = radius.clone();\n        } else {\n          if (this._radius.equals(radius)) return;\n\n          this._radius.set(radius);\n\n          if (type === 'rectangle') {\n            var size = Size.max(this._size, radius.multiply(2));\n\n            this._size.set(size);\n          } else if (type === 'ellipse') {\n            this._size._set(radius.width * 2, radius.height * 2);\n          }\n        }\n      }\n\n      this._changed(9);\n    },\n    isEmpty: function isEmpty() {\n      return false;\n    },\n    toPath: function toPath(insert) {\n      var path = new Path[Base.capitalize(this._type)]({\n        center: new Point(),\n        size: this._size,\n        radius: this._radius,\n        insert: false\n      });\n      path.copyAttributes(this);\n      if (paper.settings.applyMatrix) path.setApplyMatrix(true);\n      if (insert === undefined || insert) path.insertAbove(this);\n      return path;\n    },\n    toShape: '#clone',\n    _asPathItem: function _asPathItem() {\n      return this.toPath(false);\n    },\n    _draw: function _draw(ctx, param, viewMatrix, strokeMatrix) {\n      var style = this._style,\n          hasFill = style.hasFill(),\n          hasStroke = style.hasStroke(),\n          dontPaint = param.dontFinish || param.clip,\n          untransformed = !strokeMatrix;\n\n      if (hasFill || hasStroke || dontPaint) {\n        var type = this._type,\n            radius = this._radius,\n            isCircle = type === 'circle';\n        if (!param.dontStart) ctx.beginPath();\n\n        if (untransformed && isCircle) {\n          ctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n        } else {\n          var rx = isCircle ? radius : radius.width,\n              ry = isCircle ? radius : radius.height,\n              size = this._size,\n              width = size.width,\n              height = size.height;\n\n          if (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n            ctx.rect(-width / 2, -height / 2, width, height);\n          } else {\n            var x = width / 2,\n                y = height / 2,\n                kappa = 1 - 0.5522847498307936,\n                cx = rx * kappa,\n                cy = ry * kappa,\n                c = [-x, -y + ry, -x, -y + cy, -x + cx, -y, -x + rx, -y, x - rx, -y, x - cx, -y, x, -y + cy, x, -y + ry, x, y - ry, x, y - cy, x - cx, y, x - rx, y, -x + rx, y, -x + cx, y, -x, y - cy, -x, y - ry];\n            if (strokeMatrix) strokeMatrix.transform(c, c, 32);\n            ctx.moveTo(c[0], c[1]);\n            ctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n            if (x !== rx) ctx.lineTo(c[8], c[9]);\n            ctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n            if (y !== ry) ctx.lineTo(c[16], c[17]);\n            ctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n            if (x !== rx) ctx.lineTo(c[24], c[25]);\n            ctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n          }\n        }\n\n        ctx.closePath();\n      }\n\n      if (!dontPaint && (hasFill || hasStroke)) {\n        this._setStyles(ctx, param, viewMatrix);\n\n        if (hasFill) {\n          ctx.fill(style.getFillRule());\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n        }\n\n        if (hasStroke) ctx.stroke();\n      }\n    },\n    _canComposite: function _canComposite() {\n      return !(this.hasFill() && this.hasStroke());\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var rect = new _Rectangle(this._size).setCenter(0, 0),\n          style = this._style,\n          strokeWidth = options.stroke && style.hasStroke() && style.getStrokeWidth();\n      if (matrix) rect = matrix._transformBounds(rect);\n      return strokeWidth ? rect.expand(Path._getStrokePadding(strokeWidth, this._getStrokeMatrix(matrix, options))) : rect;\n    }\n  }, new function () {\n    function getCornerCenter(that, point, expand) {\n      var radius = that._radius;\n\n      if (!radius.isZero()) {\n        var halfSize = that._size.divide(2);\n\n        for (var q = 1; q <= 4; q++) {\n          var dir = new Point(q > 1 && q < 4 ? -1 : 1, q > 2 ? -1 : 1),\n              corner = dir.multiply(halfSize),\n              center = corner.subtract(dir.multiply(radius)),\n              rect = new _Rectangle(expand ? corner.add(dir.multiply(expand)) : corner, center);\n          if (rect.contains(point)) return {\n            point: center,\n            quadrant: q\n          };\n        }\n      }\n    }\n\n    function isOnEllipseStroke(point, radius, padding, quadrant) {\n      var vector = point.divide(radius);\n      return (!quadrant || vector.isInQuadrant(quadrant)) && vector.subtract(vector.normalize()).multiply(radius).divide(padding).length <= 1;\n    }\n\n    return {\n      _contains: function _contains(point) {\n        if (this._type === 'rectangle') {\n          var center = getCornerCenter(this, point);\n          return center ? point.subtract(center.point).divide(this._radius).getLength() <= 1 : _contains.base.call(this, point);\n        } else {\n          return point.divide(this.size).getLength() <= 0.5;\n        }\n      },\n      _hitTestSelf: function _hitTestSelf(point, options, viewMatrix, strokeMatrix) {\n        var hit = false,\n            style = this._style,\n            hitStroke = options.stroke && style.hasStroke(),\n            hitFill = options.fill && style.hasFill();\n\n        if (hitStroke || hitFill) {\n          var type = this._type,\n              radius = this._radius,\n              strokeRadius = hitStroke ? style.getStrokeWidth() / 2 : 0,\n              strokePadding = options._tolerancePadding.add(Path._getStrokePadding(strokeRadius, !style.getStrokeScaling() && strokeMatrix));\n\n          if (type === 'rectangle') {\n            var padding = strokePadding.multiply(2),\n                center = getCornerCenter(this, point, padding);\n\n            if (center) {\n              hit = isOnEllipseStroke(point.subtract(center.point), radius, strokePadding, center.quadrant);\n            } else {\n              var rect = new _Rectangle(this._size).setCenter(0, 0),\n                  outer = rect.expand(padding),\n                  inner = rect.expand(padding.negate());\n              hit = outer._containsPoint(point) && !inner._containsPoint(point);\n            }\n          } else {\n            hit = isOnEllipseStroke(point, radius, strokePadding);\n          }\n        }\n\n        return hit ? new HitResult(hitStroke ? 'stroke' : 'fill', this) : _hitTestSelf.base.apply(this, arguments);\n      }\n    };\n  }(), {\n    statics: new function () {\n      function createShape(type, point, size, radius, args) {\n        var item = Base.create(Shape.prototype);\n        item._type = type;\n        item._size = size;\n        item._radius = radius;\n\n        item._initialize(Base.getNamed(args), point);\n\n        return item;\n      }\n\n      return {\n        Circle: function Circle() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              radius = Base.readNamed(args, 'radius');\n          return createShape('circle', center, new Size(radius * 2), radius, args);\n        },\n        Rectangle: function Rectangle() {\n          var args = arguments,\n              rect = _Rectangle.readNamed(args, 'rectangle'),\n              radius = Size.min(Size.readNamed(args, 'radius'), rect.getSize(true).divide(2));\n\n          return createShape('rectangle', rect.getCenter(true), rect.getSize(true), radius, args);\n        },\n        Ellipse: function Ellipse() {\n          var args = arguments,\n              ellipse = Shape._readEllipse(args),\n              radius = ellipse.radius;\n\n          return createShape('ellipse', ellipse.center, radius.multiply(2), radius, args);\n        },\n        _readEllipse: function _readEllipse(args) {\n          var center, radius;\n\n          if (Base.hasNamed(args, 'radius')) {\n            center = Point.readNamed(args, 'center');\n            radius = Size.readNamed(args, 'radius');\n          } else {\n            var rect = _Rectangle.readNamed(args, 'rectangle');\n\n            center = rect.getCenter(true);\n            radius = rect.getSize(true).divide(2);\n          }\n\n          return {\n            center: center,\n            radius: radius\n          };\n        }\n      };\n    }()\n  });\n  var Raster = Item.extend({\n    _class: 'Raster',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _boundsOptions: {\n      stroke: false,\n      handle: false\n    },\n    _serializeFields: {\n      crossOrigin: null,\n      source: null\n    },\n    _prioritize: ['crossOrigin'],\n    _smoothing: true,\n    beans: true,\n    initialize: function Raster(source, position) {\n      if (!this._initialize(source, position !== undefined && Point.read(arguments))) {\n        var image,\n            type = typeof source,\n            object = type === 'string' ? document.getElementById(source) : type === 'object' ? source : null;\n\n        if (object && object !== Item.NO_INSERT) {\n          if (object.getContent || object.naturalHeight != null) {\n            image = object;\n          } else if (object) {\n            var size = Size.read(arguments);\n\n            if (!size.isZero()) {\n              image = CanvasProvider.getCanvas(size);\n            }\n          }\n        }\n\n        if (image) {\n          this.setImage(image);\n        } else {\n          this.setSource(source);\n        }\n      }\n\n      if (!this._size) {\n        this._size = new Size();\n        this._loaded = false;\n      }\n    },\n    _equals: function _equals(item) {\n      return this.getSource() === item.getSource();\n    },\n    copyContent: function copyContent(source) {\n      var image = source._image,\n          canvas = source._canvas;\n\n      if (image) {\n        this._setImage(image);\n      } else if (canvas) {\n        var copyCanvas = CanvasProvider.getCanvas(source._size);\n        copyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\n        this._setImage(copyCanvas);\n      }\n\n      this._crossOrigin = source._crossOrigin;\n    },\n    getSize: function getSize() {\n      var size = this._size;\n      return new LinkedSize(size ? size.width : 0, size ? size.height : 0, this, 'setSize');\n    },\n    setSize: function setSize() {\n      var size = Size.read(arguments);\n\n      if (!size.equals(this._size)) {\n        if (size.width > 0 && size.height > 0) {\n          var element = this.getElement();\n\n          this._setImage(CanvasProvider.getCanvas(size));\n\n          if (element) this.getContext(true).drawImage(element, 0, 0, size.width, size.height);\n        } else {\n          if (this._canvas) CanvasProvider.release(this._canvas);\n          this._size = size.clone();\n        }\n      }\n    },\n    getWidth: function getWidth() {\n      return this._size ? this._size.width : 0;\n    },\n    setWidth: function setWidth(width) {\n      this.setSize(width, this.getHeight());\n    },\n    getHeight: function getHeight() {\n      return this._size ? this._size.height : 0;\n    },\n    setHeight: function setHeight(height) {\n      this.setSize(this.getWidth(), height);\n    },\n    getLoaded: function getLoaded() {\n      return this._loaded;\n    },\n    isEmpty: function isEmpty() {\n      var size = this._size;\n      return !size || size.width === 0 && size.height === 0;\n    },\n    getResolution: function getResolution() {\n      var matrix = this._matrix,\n          orig = new Point(0, 0).transform(matrix),\n          u = new Point(1, 0).transform(matrix).subtract(orig),\n          v = new Point(0, 1).transform(matrix).subtract(orig);\n      return new Size(72 / u.getLength(), 72 / v.getLength());\n    },\n    getPpi: '#getResolution',\n    getImage: function getImage() {\n      return this._image;\n    },\n    setImage: function setImage(image) {\n      var that = this;\n\n      function emit(event) {\n        var view = that.getView(),\n            type = event && event.type || 'load';\n\n        if (view && that.responds(type)) {\n          paper = view._scope;\n          that.emit(type, new Event(event));\n        }\n      }\n\n      this._setImage(image);\n\n      if (this._loaded) {\n        setTimeout(emit, 0);\n      } else if (image) {\n        DomEvent.add(image, {\n          load: function load(event) {\n            that._setImage(image);\n\n            emit(event);\n          },\n          error: emit\n        });\n      }\n    },\n    _setImage: function _setImage(image) {\n      if (this._canvas) CanvasProvider.release(this._canvas);\n\n      if (image && image.getContext) {\n        this._image = null;\n        this._canvas = image;\n        this._loaded = true;\n      } else {\n        this._image = image;\n        this._canvas = null;\n        this._loaded = !!(image && image.src && image.complete);\n      }\n\n      this._size = new Size(image ? image.naturalWidth || image.width : 0, image ? image.naturalHeight || image.height : 0);\n      this._context = null;\n\n      this._changed(1033);\n    },\n    getCanvas: function getCanvas() {\n      if (!this._canvas) {\n        var ctx = CanvasProvider.getContext(this._size);\n\n        try {\n          if (this._image) ctx.drawImage(this._image, 0, 0);\n          this._canvas = ctx.canvas;\n        } catch (e) {\n          CanvasProvider.release(ctx);\n        }\n      }\n\n      return this._canvas;\n    },\n    setCanvas: '#setImage',\n    getContext: function getContext(_change) {\n      if (!this._context) this._context = this.getCanvas().getContext('2d');\n\n      if (_change) {\n        this._image = null;\n\n        this._changed(1025);\n      }\n\n      return this._context;\n    },\n    setContext: function setContext(context) {\n      this._context = context;\n    },\n    getSource: function getSource() {\n      var image = this._image;\n      return image && image.src || this.toDataURL();\n    },\n    setSource: function setSource(src) {\n      var image = new self.Image(),\n          crossOrigin = this._crossOrigin;\n      if (crossOrigin) image.crossOrigin = crossOrigin;\n      if (src) image.src = src;\n      this.setImage(image);\n    },\n    getCrossOrigin: function getCrossOrigin() {\n      var image = this._image;\n      return image && image.crossOrigin || this._crossOrigin || '';\n    },\n    setCrossOrigin: function setCrossOrigin(crossOrigin) {\n      this._crossOrigin = crossOrigin;\n      var image = this._image;\n      if (image) image.crossOrigin = crossOrigin;\n    },\n    getSmoothing: function getSmoothing() {\n      return this._smoothing;\n    },\n    setSmoothing: function setSmoothing(smoothing) {\n      this._smoothing = smoothing;\n\n      this._changed(257);\n    },\n    getElement: function getElement() {\n      return this._canvas || this._loaded && this._image;\n    }\n  }, {\n    beans: false,\n    getSubCanvas: function getSubCanvas() {\n      var rect = _Rectangle.read(arguments),\n          ctx = CanvasProvider.getContext(rect.getSize());\n\n      ctx.drawImage(this.getCanvas(), rect.x, rect.y, rect.width, rect.height, 0, 0, rect.width, rect.height);\n      return ctx.canvas;\n    },\n    getSubRaster: function getSubRaster() {\n      var rect = _Rectangle.read(arguments),\n          raster = new Raster(Item.NO_INSERT);\n\n      raster._setImage(this.getSubCanvas(rect));\n\n      raster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\n      raster._matrix.prepend(this._matrix);\n\n      raster.insertAbove(this);\n      return raster;\n    },\n    toDataURL: function toDataURL() {\n      var image = this._image,\n          src = image && image.src;\n      if (/^data:/.test(src)) return src;\n      var canvas = this.getCanvas();\n      return canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n    },\n    drawImage: function drawImage(image) {\n      var point = Point.read(arguments, 1);\n      this.getContext(true).drawImage(image, point.x, point.y);\n    },\n    getAverageColor: function getAverageColor(object) {\n      var bounds, path;\n\n      if (!object) {\n        bounds = this.getBounds();\n      } else if (object instanceof PathItem) {\n        path = object;\n        bounds = object.getBounds();\n      } else if (typeof object === 'object') {\n        if ('width' in object) {\n          bounds = new _Rectangle(object);\n        } else if ('x' in object) {\n          bounds = new _Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n        }\n      }\n\n      if (!bounds) return null;\n      var sampleSize = 32,\n          width = Math.min(bounds.width, sampleSize),\n          height = Math.min(bounds.height, sampleSize);\n      var ctx = Raster._sampleContext;\n\n      if (!ctx) {\n        ctx = Raster._sampleContext = CanvasProvider.getContext(new Size(sampleSize));\n      } else {\n        ctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n      }\n\n      ctx.save();\n      var matrix = new Matrix().scale(width / bounds.width, height / bounds.height).translate(-bounds.x, -bounds.y);\n      matrix.applyToContext(ctx);\n      if (path) path.draw(ctx, new Base({\n        clip: true,\n        matrices: [matrix]\n      }));\n\n      this._matrix.applyToContext(ctx);\n\n      var element = this.getElement(),\n          size = this._size;\n      if (element) ctx.drawImage(element, -size.width / 2, -size.height / 2);\n      ctx.restore();\n      var pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width), Math.ceil(height)).data,\n          channels = [0, 0, 0],\n          total = 0;\n\n      for (var i = 0, l = pixels.length; i < l; i += 4) {\n        var alpha = pixels[i + 3];\n        total += alpha;\n        alpha /= 255;\n        channels[0] += pixels[i] * alpha;\n        channels[1] += pixels[i + 1] * alpha;\n        channels[2] += pixels[i + 2] * alpha;\n      }\n\n      for (var i = 0; i < 3; i++) {\n        channels[i] /= total;\n      }\n\n      return total ? Color.read(channels) : null;\n    },\n    getPixel: function getPixel() {\n      var point = Point.read(arguments);\n      var data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n      return new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255], data[3] / 255);\n    },\n    setPixel: function setPixel() {\n      var args = arguments,\n          point = Point.read(args),\n          color = Color.read(args),\n          components = color._convert('rgb'),\n          alpha = color._alpha,\n          ctx = this.getContext(true),\n          imageData = ctx.createImageData(1, 1),\n          data = imageData.data;\n\n      data[0] = components[0] * 255;\n      data[1] = components[1] * 255;\n      data[2] = components[2] * 255;\n      data[3] = alpha != null ? alpha * 255 : 255;\n      ctx.putImageData(imageData, point.x, point.y);\n    },\n    clear: function clear() {\n      var size = this._size;\n      this.getContext(true).clearRect(0, 0, size.width + 1, size.height + 1);\n    },\n    createImageData: function createImageData() {\n      var size = Size.read(arguments);\n      return this.getContext().createImageData(size.width, size.height);\n    },\n    getImageData: function getImageData() {\n      var rect = _Rectangle.read(arguments);\n\n      if (rect.isEmpty()) rect = new _Rectangle(this._size);\n      return this.getContext().getImageData(rect.x, rect.y, rect.width, rect.height);\n    },\n    setImageData: function setImageData(data) {\n      var point = Point.read(arguments, 1);\n      this.getContext(true).putImageData(data, point.x, point.y);\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var rect = new _Rectangle(this._size).setCenter(0, 0);\n      return matrix ? matrix._transformBounds(rect) : rect;\n    },\n    _hitTestSelf: function _hitTestSelf(point) {\n      if (this._contains(point)) {\n        var that = this;\n        return new HitResult('pixel', that, {\n          offset: point.add(that._size.divide(2)).round(),\n          color: {\n            get: function get() {\n              return that.getPixel(this.offset);\n            }\n          }\n        });\n      }\n    },\n    _draw: function _draw(ctx, param, viewMatrix) {\n      var element = this.getElement();\n\n      if (element && element.width > 0 && element.height > 0) {\n        ctx.globalAlpha = this._opacity;\n\n        this._setStyles(ctx, param, viewMatrix);\n\n        DomElement.setPrefixed(ctx, 'imageSmoothingEnabled', this._smoothing);\n        ctx.drawImage(element, -this._size.width / 2, -this._size.height / 2);\n      }\n    },\n    _canComposite: function _canComposite() {\n      return true;\n    }\n  });\n  var SymbolItem = Item.extend({\n    _class: 'SymbolItem',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _boundsOptions: {\n      stroke: true\n    },\n    _serializeFields: {\n      symbol: null\n    },\n    initialize: function SymbolItem(arg0, arg1) {\n      if (!this._initialize(arg0, arg1 !== undefined && Point.read(arguments, 1))) this.setDefinition(arg0 instanceof SymbolDefinition ? arg0 : new SymbolDefinition(arg0));\n    },\n    _equals: function _equals(item) {\n      return this._definition === item._definition;\n    },\n    copyContent: function copyContent(source) {\n      this.setDefinition(source._definition);\n    },\n    getDefinition: function getDefinition() {\n      return this._definition;\n    },\n    setDefinition: function setDefinition(definition) {\n      this._definition = definition;\n\n      this._changed(9);\n    },\n    getSymbol: '#getDefinition',\n    setSymbol: '#setDefinition',\n    isEmpty: function isEmpty() {\n      return this._definition._item.isEmpty();\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var item = this._definition._item;\n      return item._getCachedBounds(item._matrix.prepended(matrix), options);\n    },\n    _hitTestSelf: function _hitTestSelf(point, options, viewMatrix) {\n      var opts = options.extend({\n        all: false\n      });\n\n      var res = this._definition._item._hitTest(point, opts, viewMatrix);\n\n      if (res) res.item = this;\n      return res;\n    },\n    _draw: function _draw(ctx, param) {\n      this._definition._item.draw(ctx, param);\n    }\n  });\n  var SymbolDefinition = Base.extend({\n    _class: 'SymbolDefinition',\n    initialize: function SymbolDefinition(item, dontCenter) {\n      this._id = UID.get();\n      this.project = paper.project;\n      if (item) this.setItem(item, dontCenter);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return dictionary.add(this, function () {\n        return Base.serialize([this._class, this._item], options, false, dictionary);\n      });\n    },\n    _changed: function _changed(flags) {\n      if (flags & 8) Item._clearBoundsCache(this);\n      if (flags & 1) this.project._changed(flags);\n    },\n    getItem: function getItem() {\n      return this._item;\n    },\n    setItem: function setItem(item, _dontCenter) {\n      if (item._symbol) item = item.clone();\n      if (this._item) this._item._symbol = null;\n      this._item = item;\n      item.remove();\n      item.setSelected(false);\n      if (!_dontCenter) item.setPosition(new Point());\n      item._symbol = this;\n\n      this._changed(9);\n    },\n    getDefinition: '#getItem',\n    setDefinition: '#setItem',\n    place: function place(position) {\n      return new SymbolItem(this, position);\n    },\n    clone: function clone() {\n      return new SymbolDefinition(this._item.clone(false));\n    },\n    equals: function equals(symbol) {\n      return symbol === this || symbol && this._item.equals(symbol._item) || false;\n    }\n  });\n  var HitResult = Base.extend({\n    _class: 'HitResult',\n    initialize: function HitResult(type, item, values) {\n      this.type = type;\n      this.item = item;\n      if (values) this.inject(values);\n    },\n    statics: {\n      getOptions: function getOptions(args) {\n        var options = args && Base.read(args);\n        return new Base({\n          type: null,\n          tolerance: paper.settings.hitTolerance,\n          fill: !options,\n          stroke: !options,\n          segments: !options,\n          handles: false,\n          ends: false,\n          position: false,\n          center: false,\n          bounds: false,\n          guides: false,\n          selected: false\n        }, options);\n      }\n    }\n  });\n  var Segment = Base.extend({\n    _class: 'Segment',\n    beans: true,\n    _selection: 0,\n    initialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n      var count = arguments.length,\n          point,\n          handleIn,\n          handleOut,\n          selection;\n\n      if (count > 0) {\n        if (arg0 == null || typeof arg0 === 'object') {\n          if (count === 1 && arg0 && 'point' in arg0) {\n            point = arg0.point;\n            handleIn = arg0.handleIn;\n            handleOut = arg0.handleOut;\n            selection = arg0.selection;\n          } else {\n            point = arg0;\n            handleIn = arg1;\n            handleOut = arg2;\n            selection = arg3;\n          }\n        } else {\n          point = [arg0, arg1];\n          handleIn = arg2 !== undefined ? [arg2, arg3] : null;\n          handleOut = arg4 !== undefined ? [arg4, arg5] : null;\n        }\n      }\n\n      new SegmentPoint(point, this, '_point');\n      new SegmentPoint(handleIn, this, '_handleIn');\n      new SegmentPoint(handleOut, this, '_handleOut');\n      if (selection) this.setSelection(selection);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      var point = this._point,\n          selection = this._selection,\n          obj = selection || this.hasHandles() ? [point, this._handleIn, this._handleOut] : point;\n      if (selection) obj.push(selection);\n      return Base.serialize(obj, options, true, dictionary);\n    },\n    _changed: function _changed(point) {\n      var path = this._path;\n      if (!path) return;\n      var curves = path._curves,\n          index = this._index,\n          curve;\n\n      if (curves) {\n        if ((!point || point === this._point || point === this._handleIn) && (curve = index > 0 ? curves[index - 1] : path._closed ? curves[curves.length - 1] : null)) curve._changed();\n        if ((!point || point === this._point || point === this._handleOut) && (curve = curves[index])) curve._changed();\n      }\n\n      path._changed(41);\n    },\n    getPoint: function getPoint() {\n      return this._point;\n    },\n    setPoint: function setPoint() {\n      this._point.set(Point.read(arguments));\n    },\n    getHandleIn: function getHandleIn() {\n      return this._handleIn;\n    },\n    setHandleIn: function setHandleIn() {\n      this._handleIn.set(Point.read(arguments));\n    },\n    getHandleOut: function getHandleOut() {\n      return this._handleOut;\n    },\n    setHandleOut: function setHandleOut() {\n      this._handleOut.set(Point.read(arguments));\n    },\n    hasHandles: function hasHandles() {\n      return !this._handleIn.isZero() || !this._handleOut.isZero();\n    },\n    isSmooth: function isSmooth() {\n      var handleIn = this._handleIn,\n          handleOut = this._handleOut;\n      return !handleIn.isZero() && !handleOut.isZero() && handleIn.isCollinear(handleOut);\n    },\n    clearHandles: function clearHandles() {\n      this._handleIn._set(0, 0);\n\n      this._handleOut._set(0, 0);\n    },\n    getSelection: function getSelection() {\n      return this._selection;\n    },\n    setSelection: function setSelection(selection) {\n      var oldSelection = this._selection,\n          path = this._path;\n      this._selection = selection = selection || 0;\n\n      if (path && selection !== oldSelection) {\n        path._updateSelection(this, oldSelection, selection);\n\n        path._changed(257);\n      }\n    },\n    _changeSelection: function _changeSelection(flag, selected) {\n      var selection = this._selection;\n      this.setSelection(selected ? selection | flag : selection & ~flag);\n    },\n    isSelected: function isSelected() {\n      return !!(this._selection & 7);\n    },\n    setSelected: function setSelected(selected) {\n      this._changeSelection(7, selected);\n    },\n    getIndex: function getIndex() {\n      return this._index !== undefined ? this._index : null;\n    },\n    getPath: function getPath() {\n      return this._path || null;\n    },\n    getCurve: function getCurve() {\n      var path = this._path,\n          index = this._index;\n\n      if (path) {\n        if (index > 0 && !path._closed && index === path._segments.length - 1) index--;\n        return path.getCurves()[index] || null;\n      }\n\n      return null;\n    },\n    getLocation: function getLocation() {\n      var curve = this.getCurve();\n      return curve ? new CurveLocation(curve, this === curve._segment1 ? 0 : 1) : null;\n    },\n    getNext: function getNext() {\n      var segments = this._path && this._path._segments;\n      return segments && (segments[this._index + 1] || this._path._closed && segments[0]) || null;\n    },\n    smooth: function smooth(options, _first, _last) {\n      var opts = options || {},\n          type = opts.type,\n          factor = opts.factor,\n          prev = this.getPrevious(),\n          next = this.getNext(),\n          p0 = (prev || this)._point,\n          p1 = this._point,\n          p2 = (next || this)._point,\n          d1 = p0.getDistance(p1),\n          d2 = p1.getDistance(p2);\n\n      if (!type || type === 'catmull-rom') {\n        var a = factor === undefined ? 0.5 : factor,\n            d1_a = Math.pow(d1, a),\n            d1_2a = d1_a * d1_a,\n            d2_a = Math.pow(d2, a),\n            d2_2a = d2_a * d2_a;\n\n        if (!_first && prev) {\n          var A = 2 * d2_2a + 3 * d2_a * d1_a + d1_2a,\n              N = 3 * d2_a * (d2_a + d1_a);\n          this.setHandleIn(N !== 0 ? new Point((d2_2a * p0._x + A * p1._x - d1_2a * p2._x) / N - p1._x, (d2_2a * p0._y + A * p1._y - d1_2a * p2._y) / N - p1._y) : new Point());\n        }\n\n        if (!_last && next) {\n          var A = 2 * d1_2a + 3 * d1_a * d2_a + d2_2a,\n              N = 3 * d1_a * (d1_a + d2_a);\n          this.setHandleOut(N !== 0 ? new Point((d1_2a * p2._x + A * p1._x - d2_2a * p0._x) / N - p1._x, (d1_2a * p2._y + A * p1._y - d2_2a * p0._y) / N - p1._y) : new Point());\n        }\n      } else if (type === 'geometric') {\n        if (prev && next) {\n          var vector = p0.subtract(p2),\n              t = factor === undefined ? 0.4 : factor,\n              k = t * d1 / (d1 + d2);\n          if (!_first) this.setHandleIn(vector.multiply(k));\n          if (!_last) this.setHandleOut(vector.multiply(k - t));\n        }\n      } else {\n        throw new Error('Smoothing method \\'' + type + '\\' not supported.');\n      }\n    },\n    getPrevious: function getPrevious() {\n      var segments = this._path && this._path._segments;\n      return segments && (segments[this._index - 1] || this._path._closed && segments[segments.length - 1]) || null;\n    },\n    isFirst: function isFirst() {\n      return !this._index;\n    },\n    isLast: function isLast() {\n      var path = this._path;\n      return path && this._index === path._segments.length - 1 || false;\n    },\n    reverse: function reverse() {\n      var handleIn = this._handleIn,\n          handleOut = this._handleOut,\n          tmp = handleIn.clone();\n      handleIn.set(handleOut);\n      handleOut.set(tmp);\n    },\n    reversed: function reversed() {\n      return new Segment(this._point, this._handleOut, this._handleIn);\n    },\n    remove: function remove() {\n      return this._path ? !!this._path.removeSegment(this._index) : false;\n    },\n    clone: function clone() {\n      return new Segment(this._point, this._handleIn, this._handleOut);\n    },\n    equals: function equals(segment) {\n      return segment === this || segment && this._class === segment._class && this._point.equals(segment._point) && this._handleIn.equals(segment._handleIn) && this._handleOut.equals(segment._handleOut) || false;\n    },\n    toString: function toString() {\n      var parts = ['point: ' + this._point];\n      if (!this._handleIn.isZero()) parts.push('handleIn: ' + this._handleIn);\n      if (!this._handleOut.isZero()) parts.push('handleOut: ' + this._handleOut);\n      return '{ ' + parts.join(', ') + ' }';\n    },\n    transform: function transform(matrix) {\n      this._transformCoordinates(matrix, new Array(6), true);\n\n      this._changed();\n    },\n    interpolate: function interpolate(from, to, factor) {\n      var u = 1 - factor,\n          v = factor,\n          point1 = from._point,\n          point2 = to._point,\n          handleIn1 = from._handleIn,\n          handleIn2 = to._handleIn,\n          handleOut2 = to._handleOut,\n          handleOut1 = from._handleOut;\n\n      this._point._set(u * point1._x + v * point2._x, u * point1._y + v * point2._y, true);\n\n      this._handleIn._set(u * handleIn1._x + v * handleIn2._x, u * handleIn1._y + v * handleIn2._y, true);\n\n      this._handleOut._set(u * handleOut1._x + v * handleOut2._x, u * handleOut1._y + v * handleOut2._y, true);\n\n      this._changed();\n    },\n    _transformCoordinates: function _transformCoordinates(matrix, coords, change) {\n      var point = this._point,\n          handleIn = !change || !this._handleIn.isZero() ? this._handleIn : null,\n          handleOut = !change || !this._handleOut.isZero() ? this._handleOut : null,\n          x = point._x,\n          y = point._y,\n          i = 2;\n      coords[0] = x;\n      coords[1] = y;\n\n      if (handleIn) {\n        coords[i++] = handleIn._x + x;\n        coords[i++] = handleIn._y + y;\n      }\n\n      if (handleOut) {\n        coords[i++] = handleOut._x + x;\n        coords[i++] = handleOut._y + y;\n      }\n\n      if (matrix) {\n        matrix._transformCoordinates(coords, coords, i / 2);\n\n        x = coords[0];\n        y = coords[1];\n\n        if (change) {\n          point._x = x;\n          point._y = y;\n          i = 2;\n\n          if (handleIn) {\n            handleIn._x = coords[i++] - x;\n            handleIn._y = coords[i++] - y;\n          }\n\n          if (handleOut) {\n            handleOut._x = coords[i++] - x;\n            handleOut._y = coords[i++] - y;\n          }\n        } else {\n          if (!handleIn) {\n            coords[i++] = x;\n            coords[i++] = y;\n          }\n\n          if (!handleOut) {\n            coords[i++] = x;\n            coords[i++] = y;\n          }\n        }\n      }\n\n      return coords;\n    }\n  });\n  var SegmentPoint = Point.extend({\n    initialize: function SegmentPoint(point, owner, key) {\n      var x, y, selected;\n\n      if (!point) {\n        x = y = 0;\n      } else if ((x = point[0]) !== undefined) {\n        y = point[1];\n      } else {\n        var pt = point;\n\n        if ((x = pt.x) === undefined) {\n          pt = Point.read(arguments);\n          x = pt.x;\n        }\n\n        y = pt.y;\n        selected = pt.selected;\n      }\n\n      this._x = x;\n      this._y = y;\n      this._owner = owner;\n      owner[key] = this;\n      if (selected) this.setSelected(true);\n    },\n    _set: function _set(x, y) {\n      this._x = x;\n      this._y = y;\n\n      this._owner._changed(this);\n\n      return this;\n    },\n    getX: function getX() {\n      return this._x;\n    },\n    setX: function setX(x) {\n      this._x = x;\n\n      this._owner._changed(this);\n    },\n    getY: function getY() {\n      return this._y;\n    },\n    setY: function setY(y) {\n      this._y = y;\n\n      this._owner._changed(this);\n    },\n    isZero: function isZero() {\n      var isZero = Numerical.isZero;\n      return isZero(this._x) && isZero(this._y);\n    },\n    isSelected: function isSelected() {\n      return !!(this._owner._selection & this._getSelection());\n    },\n    setSelected: function setSelected(selected) {\n      this._owner._changeSelection(this._getSelection(), selected);\n    },\n    _getSelection: function _getSelection() {\n      var owner = this._owner;\n      return this === owner._point ? 1 : this === owner._handleIn ? 2 : this === owner._handleOut ? 4 : 0;\n    }\n  });\n  var Curve = Base.extend({\n    _class: 'Curve',\n    beans: true,\n    initialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n      var count = arguments.length,\n          seg1,\n          seg2,\n          point1,\n          point2,\n          handle1,\n          handle2;\n\n      if (count === 3) {\n        this._path = arg0;\n        seg1 = arg1;\n        seg2 = arg2;\n      } else if (!count) {\n        seg1 = new Segment();\n        seg2 = new Segment();\n      } else if (count === 1) {\n        if ('segment1' in arg0) {\n          seg1 = new Segment(arg0.segment1);\n          seg2 = new Segment(arg0.segment2);\n        } else if ('point1' in arg0) {\n          point1 = arg0.point1;\n          handle1 = arg0.handle1;\n          handle2 = arg0.handle2;\n          point2 = arg0.point2;\n        } else if (Array.isArray(arg0)) {\n          point1 = [arg0[0], arg0[1]];\n          point2 = [arg0[6], arg0[7]];\n          handle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n          handle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n        }\n      } else if (count === 2) {\n        seg1 = new Segment(arg0);\n        seg2 = new Segment(arg1);\n      } else if (count === 4) {\n        point1 = arg0;\n        handle1 = arg1;\n        handle2 = arg2;\n        point2 = arg3;\n      } else if (count === 8) {\n        point1 = [arg0, arg1];\n        point2 = [arg6, arg7];\n        handle1 = [arg2 - arg0, arg3 - arg1];\n        handle2 = [arg4 - arg6, arg5 - arg7];\n      }\n\n      this._segment1 = seg1 || new Segment(point1, null, handle1);\n      this._segment2 = seg2 || new Segment(point2, handle2, null);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return Base.serialize(this.hasHandles() ? [this.getPoint1(), this.getHandle1(), this.getHandle2(), this.getPoint2()] : [this.getPoint1(), this.getPoint2()], options, true, dictionary);\n    },\n    _changed: function _changed() {\n      this._length = this._bounds = undefined;\n    },\n    clone: function clone() {\n      return new Curve(this._segment1, this._segment2);\n    },\n    toString: function toString() {\n      var parts = ['point1: ' + this._segment1._point];\n      if (!this._segment1._handleOut.isZero()) parts.push('handle1: ' + this._segment1._handleOut);\n      if (!this._segment2._handleIn.isZero()) parts.push('handle2: ' + this._segment2._handleIn);\n      parts.push('point2: ' + this._segment2._point);\n      return '{ ' + parts.join(', ') + ' }';\n    },\n    classify: function classify() {\n      return Curve.classify(this.getValues());\n    },\n    remove: function remove() {\n      var removed = false;\n\n      if (this._path) {\n        var segment2 = this._segment2,\n            handleOut = segment2._handleOut;\n        removed = segment2.remove();\n        if (removed) this._segment1._handleOut.set(handleOut);\n      }\n\n      return removed;\n    },\n    getPoint1: function getPoint1() {\n      return this._segment1._point;\n    },\n    setPoint1: function setPoint1() {\n      this._segment1._point.set(Point.read(arguments));\n    },\n    getPoint2: function getPoint2() {\n      return this._segment2._point;\n    },\n    setPoint2: function setPoint2() {\n      this._segment2._point.set(Point.read(arguments));\n    },\n    getHandle1: function getHandle1() {\n      return this._segment1._handleOut;\n    },\n    setHandle1: function setHandle1() {\n      this._segment1._handleOut.set(Point.read(arguments));\n    },\n    getHandle2: function getHandle2() {\n      return this._segment2._handleIn;\n    },\n    setHandle2: function setHandle2() {\n      this._segment2._handleIn.set(Point.read(arguments));\n    },\n    getSegment1: function getSegment1() {\n      return this._segment1;\n    },\n    getSegment2: function getSegment2() {\n      return this._segment2;\n    },\n    getPath: function getPath() {\n      return this._path;\n    },\n    getIndex: function getIndex() {\n      return this._segment1._index;\n    },\n    getNext: function getNext() {\n      var curves = this._path && this._path._curves;\n      return curves && (curves[this._segment1._index + 1] || this._path._closed && curves[0]) || null;\n    },\n    getPrevious: function getPrevious() {\n      var curves = this._path && this._path._curves;\n      return curves && (curves[this._segment1._index - 1] || this._path._closed && curves[curves.length - 1]) || null;\n    },\n    isFirst: function isFirst() {\n      return !this._segment1._index;\n    },\n    isLast: function isLast() {\n      var path = this._path;\n      return path && this._segment1._index === path._curves.length - 1 || false;\n    },\n    isSelected: function isSelected() {\n      return this.getPoint1().isSelected() && this.getHandle1().isSelected() && this.getHandle2().isSelected() && this.getPoint2().isSelected();\n    },\n    setSelected: function setSelected(selected) {\n      this.getPoint1().setSelected(selected);\n      this.getHandle1().setSelected(selected);\n      this.getHandle2().setSelected(selected);\n      this.getPoint2().setSelected(selected);\n    },\n    getValues: function getValues(matrix) {\n      return Curve.getValues(this._segment1, this._segment2, matrix);\n    },\n    getPoints: function getPoints() {\n      var coords = this.getValues(),\n          points = [];\n\n      for (var i = 0; i < 8; i += 2) {\n        points.push(new Point(coords[i], coords[i + 1]));\n      }\n\n      return points;\n    }\n  }, {\n    getLength: function getLength() {\n      if (this._length == null) this._length = Curve.getLength(this.getValues(), 0, 1);\n      return this._length;\n    },\n    getArea: function getArea() {\n      return Curve.getArea(this.getValues());\n    },\n    getLine: function getLine() {\n      return new Line(this._segment1._point, this._segment2._point);\n    },\n    getPart: function getPart(from, to) {\n      return new Curve(Curve.getPart(this.getValues(), from, to));\n    },\n    getPartLength: function getPartLength(from, to) {\n      return Curve.getLength(this.getValues(), from, to);\n    },\n    divideAt: function divideAt(location) {\n      return this.divideAtTime(location && location.curve === this ? location.time : this.getTimeAt(location));\n    },\n    divideAtTime: function divideAtTime(time, _setHandles) {\n      var tMin = 1e-8,\n          tMax = 1 - tMin,\n          res = null;\n\n      if (time >= tMin && time <= tMax) {\n        var parts = Curve.subdivide(this.getValues(), time),\n            left = parts[0],\n            right = parts[1],\n            setHandles = _setHandles || this.hasHandles(),\n            seg1 = this._segment1,\n            seg2 = this._segment2,\n            path = this._path;\n\n        if (setHandles) {\n          seg1._handleOut._set(left[2] - left[0], left[3] - left[1]);\n\n          seg2._handleIn._set(right[4] - right[6], right[5] - right[7]);\n        }\n\n        var x = left[6],\n            y = left[7],\n            segment = new Segment(new Point(x, y), setHandles && new Point(left[4] - x, left[5] - y), setHandles && new Point(right[2] - x, right[3] - y));\n\n        if (path) {\n          path.insert(seg1._index + 1, segment);\n          res = this.getNext();\n        } else {\n          this._segment2 = segment;\n\n          this._changed();\n\n          res = new Curve(segment, seg2);\n        }\n      }\n\n      return res;\n    },\n    splitAt: function splitAt(location) {\n      var path = this._path;\n      return path ? path.splitAt(location) : null;\n    },\n    splitAtTime: function splitAtTime(time) {\n      return this.splitAt(this.getLocationAtTime(time));\n    },\n    divide: function divide(offset, isTime) {\n      return this.divideAtTime(offset === undefined ? 0.5 : isTime ? offset : this.getTimeAt(offset));\n    },\n    split: function split(offset, isTime) {\n      return this.splitAtTime(offset === undefined ? 0.5 : isTime ? offset : this.getTimeAt(offset));\n    },\n    reversed: function reversed() {\n      return new Curve(this._segment2.reversed(), this._segment1.reversed());\n    },\n    clearHandles: function clearHandles() {\n      this._segment1._handleOut._set(0, 0);\n\n      this._segment2._handleIn._set(0, 0);\n    },\n    statics: {\n      getValues: function getValues(segment1, segment2, matrix, straight) {\n        var p1 = segment1._point,\n            h1 = segment1._handleOut,\n            h2 = segment2._handleIn,\n            p2 = segment2._point,\n            x1 = p1.x,\n            y1 = p1.y,\n            x2 = p2.x,\n            y2 = p2.y,\n            values = straight ? [x1, y1, x1, y1, x2, y2, x2, y2] : [x1, y1, x1 + h1._x, y1 + h1._y, x2 + h2._x, y2 + h2._y, x2, y2];\n        if (matrix) matrix._transformCoordinates(values, values, 4);\n        return values;\n      },\n      subdivide: function subdivide(v, t) {\n        var x0 = v[0],\n            y0 = v[1],\n            x1 = v[2],\n            y1 = v[3],\n            x2 = v[4],\n            y2 = v[5],\n            x3 = v[6],\n            y3 = v[7];\n        if (t === undefined) t = 0.5;\n        var u = 1 - t,\n            x4 = u * x0 + t * x1,\n            y4 = u * y0 + t * y1,\n            x5 = u * x1 + t * x2,\n            y5 = u * y1 + t * y2,\n            x6 = u * x2 + t * x3,\n            y6 = u * y2 + t * y3,\n            x7 = u * x4 + t * x5,\n            y7 = u * y4 + t * y5,\n            x8 = u * x5 + t * x6,\n            y8 = u * y5 + t * y6,\n            x9 = u * x7 + t * x8,\n            y9 = u * y7 + t * y8;\n        return [[x0, y0, x4, y4, x7, y7, x9, y9], [x9, y9, x8, y8, x6, y6, x3, y3]];\n      },\n      getMonoCurves: function getMonoCurves(v, dir) {\n        var curves = [],\n            io = dir ? 0 : 1,\n            o0 = v[io + 0],\n            o1 = v[io + 2],\n            o2 = v[io + 4],\n            o3 = v[io + 6];\n\n        if (o0 >= o1 === o1 >= o2 && o1 >= o2 === o2 >= o3 || Curve.isStraight(v)) {\n          curves.push(v);\n        } else {\n          var a = 3 * (o1 - o2) - o0 + o3,\n              b = 2 * (o0 + o2) - 4 * o1,\n              c = o1 - o0,\n              tMin = 1e-8,\n              tMax = 1 - tMin,\n              roots = [],\n              n = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\n          if (!n) {\n            curves.push(v);\n          } else {\n            roots.sort();\n            var t = roots[0],\n                parts = Curve.subdivide(v, t);\n            curves.push(parts[0]);\n\n            if (n > 1) {\n              t = (roots[1] - t) / (1 - t);\n              parts = Curve.subdivide(parts[1], t);\n              curves.push(parts[0]);\n            }\n\n            curves.push(parts[1]);\n          }\n        }\n\n        return curves;\n      },\n      solveCubic: function solveCubic(v, coord, val, roots, min, max) {\n        var v0 = v[coord],\n            v1 = v[coord + 2],\n            v2 = v[coord + 4],\n            v3 = v[coord + 6],\n            res = 0;\n\n        if (!(v0 < val && v3 < val && v1 < val && v2 < val || v0 > val && v3 > val && v1 > val && v2 > val)) {\n          var c = 3 * (v1 - v0),\n              b = 3 * (v2 - v1) - c,\n              a = v3 - v0 - c - b;\n          res = Numerical.solveCubic(a, b, c, v0 - val, roots, min, max);\n        }\n\n        return res;\n      },\n      getTimeOf: function getTimeOf(v, point) {\n        var p0 = new Point(v[0], v[1]),\n            p3 = new Point(v[6], v[7]),\n            epsilon = 1e-12,\n            geomEpsilon = 1e-7,\n            t = point.isClose(p0, epsilon) ? 0 : point.isClose(p3, epsilon) ? 1 : null;\n\n        if (t === null) {\n          var coords = [point.x, point.y],\n              roots = [];\n\n          for (var c = 0; c < 2; c++) {\n            var count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\n            for (var i = 0; i < count; i++) {\n              var u = roots[i];\n              if (point.isClose(Curve.getPoint(v, u), geomEpsilon)) return u;\n            }\n          }\n        }\n\n        return point.isClose(p0, geomEpsilon) ? 0 : point.isClose(p3, geomEpsilon) ? 1 : null;\n      },\n      getNearestTime: function getNearestTime(v, point) {\n        if (Curve.isStraight(v)) {\n          var x0 = v[0],\n              y0 = v[1],\n              x3 = v[6],\n              y3 = v[7],\n              vx = x3 - x0,\n              vy = y3 - y0,\n              det = vx * vx + vy * vy;\n          if (det === 0) return 0;\n          var u = ((point.x - x0) * vx + (point.y - y0) * vy) / det;\n          return u < 1e-12 ? 0 : u > 0.999999999999 ? 1 : Curve.getTimeOf(v, new Point(x0 + u * vx, y0 + u * vy));\n        }\n\n        var count = 100,\n            minDist = Infinity,\n            minT = 0;\n\n        function refine(t) {\n          if (t >= 0 && t <= 1) {\n            var dist = point.getDistance(Curve.getPoint(v, t), true);\n\n            if (dist < minDist) {\n              minDist = dist;\n              minT = t;\n              return true;\n            }\n          }\n        }\n\n        for (var i = 0; i <= count; i++) {\n          refine(i / count);\n        }\n\n        var step = 1 / (count * 2);\n\n        while (step > 1e-8) {\n          if (!refine(minT - step) && !refine(minT + step)) step /= 2;\n        }\n\n        return minT;\n      },\n      getPart: function getPart(v, from, to) {\n        var flip = from > to;\n\n        if (flip) {\n          var tmp = from;\n          from = to;\n          to = tmp;\n        }\n\n        if (from > 0) v = Curve.subdivide(v, from)[1];\n        if (to < 1) v = Curve.subdivide(v, (to - from) / (1 - from))[0];\n        return flip ? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]] : v;\n      },\n      isFlatEnough: function isFlatEnough(v, flatness) {\n        var x0 = v[0],\n            y0 = v[1],\n            x1 = v[2],\n            y1 = v[3],\n            x2 = v[4],\n            y2 = v[5],\n            x3 = v[6],\n            y3 = v[7],\n            ux = 3 * x1 - 2 * x0 - x3,\n            uy = 3 * y1 - 2 * y0 - y3,\n            vx = 3 * x2 - 2 * x3 - x0,\n            vy = 3 * y2 - 2 * y3 - y0;\n        return Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy) <= 16 * flatness * flatness;\n      },\n      getArea: function getArea(v) {\n        var x0 = v[0],\n            y0 = v[1],\n            x1 = v[2],\n            y1 = v[3],\n            x2 = v[4],\n            y2 = v[5],\n            x3 = v[6],\n            y3 = v[7];\n        return 3 * ((y3 - y0) * (x1 + x2) - (x3 - x0) * (y1 + y2) + y1 * (x0 - x2) - x1 * (y0 - y2) + y3 * (x2 + x0 / 3) - x3 * (y2 + y0 / 3)) / 20;\n      },\n      getBounds: function getBounds(v) {\n        var min = v.slice(0, 2),\n            max = min.slice(),\n            roots = [0, 0];\n\n        for (var i = 0; i < 2; i++) {\n          Curve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6], i, 0, min, max, roots);\n        }\n\n        return new _Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n      },\n      _addBounds: function _addBounds(v0, v1, v2, v3, coord, padding, min, max, roots) {\n        function add(value, padding) {\n          var left = value - padding,\n              right = value + padding;\n          if (left < min[coord]) min[coord] = left;\n          if (right > max[coord]) max[coord] = right;\n        }\n\n        padding /= 2;\n        var minPad = min[coord] - padding,\n            maxPad = max[coord] + padding;\n\n        if (v0 < minPad || v1 < minPad || v2 < minPad || v3 < minPad || v0 > maxPad || v1 > maxPad || v2 > maxPad || v3 > maxPad) {\n          if (v1 < v0 != v1 < v3 && v2 < v0 != v2 < v3) {\n            add(v0, padding);\n            add(v3, padding);\n          } else {\n            var a = 3 * (v1 - v2) - v0 + v3,\n                b = 2 * (v0 + v2) - 4 * v1,\n                c = v1 - v0,\n                count = Numerical.solveQuadratic(a, b, c, roots),\n                tMin = 1e-8,\n                tMax = 1 - tMin;\n            add(v3, 0);\n\n            for (var i = 0; i < count; i++) {\n              var t = roots[i],\n                  u = 1 - t;\n              if (tMin <= t && t <= tMax) add(u * u * u * v0 + 3 * u * u * t * v1 + 3 * u * t * t * v2 + t * t * t * v3, padding);\n            }\n          }\n        }\n      }\n    }\n  }, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds'], function (name) {\n    this[name] = function () {\n      if (!this._bounds) this._bounds = {};\n      var bounds = this._bounds[name];\n\n      if (!bounds) {\n        bounds = this._bounds[name] = Path[name]([this._segment1, this._segment2], false, this._path);\n      }\n\n      return bounds.clone();\n    };\n  }, {}), Base.each({\n    isStraight: function isStraight(p1, h1, h2, p2) {\n      if (h1.isZero() && h2.isZero()) {\n        return true;\n      } else {\n        var v = p2.subtract(p1);\n\n        if (v.isZero()) {\n          return false;\n        } else if (v.isCollinear(h1) && v.isCollinear(h2)) {\n          var l = new Line(p1, p2),\n              epsilon = 1e-7;\n\n          if (l.getDistance(p1.add(h1)) < epsilon && l.getDistance(p2.add(h2)) < epsilon) {\n            var div = v.dot(v),\n                s1 = v.dot(h1) / div,\n                s2 = v.dot(h2) / div;\n            return s1 >= 0 && s1 <= 1 && s2 <= 0 && s2 >= -1;\n          }\n        }\n      }\n\n      return false;\n    },\n    isLinear: function isLinear(p1, h1, h2, p2) {\n      var third = p2.subtract(p1).divide(3);\n      return h1.equals(third) && h2.negate().equals(third);\n    }\n  }, function (test, name) {\n    this[name] = function (epsilon) {\n      var seg1 = this._segment1,\n          seg2 = this._segment2;\n      return test(seg1._point, seg1._handleOut, seg2._handleIn, seg2._point, epsilon);\n    };\n\n    this.statics[name] = function (v, epsilon) {\n      var x0 = v[0],\n          y0 = v[1],\n          x3 = v[6],\n          y3 = v[7];\n      return test(new Point(x0, y0), new Point(v[2] - x0, v[3] - y0), new Point(v[4] - x3, v[5] - y3), new Point(x3, y3), epsilon);\n    };\n  }, {\n    statics: {},\n    hasHandles: function hasHandles() {\n      return !this._segment1._handleOut.isZero() || !this._segment2._handleIn.isZero();\n    },\n    hasLength: function hasLength(epsilon) {\n      return (!this.getPoint1().equals(this.getPoint2()) || this.hasHandles()) && this.getLength() > (epsilon || 0);\n    },\n    isCollinear: function isCollinear(curve) {\n      return curve && this.isStraight() && curve.isStraight() && this.getLine().isCollinear(curve.getLine());\n    },\n    isHorizontal: function isHorizontal() {\n      return this.isStraight() && Math.abs(this.getTangentAtTime(0.5).y) < 1e-8;\n    },\n    isVertical: function isVertical() {\n      return this.isStraight() && Math.abs(this.getTangentAtTime(0.5).x) < 1e-8;\n    }\n  }), {\n    beans: false,\n    getLocationAt: function getLocationAt(offset, _isTime) {\n      return this.getLocationAtTime(_isTime ? offset : this.getTimeAt(offset));\n    },\n    getLocationAtTime: function getLocationAtTime(t) {\n      return t != null && t >= 0 && t <= 1 ? new CurveLocation(this, t) : null;\n    },\n    getTimeAt: function getTimeAt(offset, start) {\n      return Curve.getTimeAt(this.getValues(), offset, start);\n    },\n    getParameterAt: '#getTimeAt',\n    getTimesWithTangent: function getTimesWithTangent() {\n      var tangent = Point.read(arguments);\n      return tangent.isZero() ? [] : Curve.getTimesWithTangent(this.getValues(), tangent);\n    },\n    getOffsetAtTime: function getOffsetAtTime(t) {\n      return this.getPartLength(0, t);\n    },\n    getLocationOf: function getLocationOf() {\n      return this.getLocationAtTime(this.getTimeOf(Point.read(arguments)));\n    },\n    getOffsetOf: function getOffsetOf() {\n      var loc = this.getLocationOf.apply(this, arguments);\n      return loc ? loc.getOffset() : null;\n    },\n    getTimeOf: function getTimeOf() {\n      return Curve.getTimeOf(this.getValues(), Point.read(arguments));\n    },\n    getParameterOf: '#getTimeOf',\n    getNearestLocation: function getNearestLocation() {\n      var point = Point.read(arguments),\n          values = this.getValues(),\n          t = Curve.getNearestTime(values, point),\n          pt = Curve.getPoint(values, t);\n      return new CurveLocation(this, t, pt, null, point.getDistance(pt));\n    },\n    getNearestPoint: function getNearestPoint() {\n      var loc = this.getNearestLocation.apply(this, arguments);\n      return loc ? loc.getPoint() : loc;\n    }\n  }, new function () {\n    var methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent', 'getWeightedNormal', 'getCurvature'];\n    return Base.each(methods, function (name) {\n      this[name + 'At'] = function (location, _isTime) {\n        var values = this.getValues();\n        return Curve[name](values, _isTime ? location : Curve.getTimeAt(values, location));\n      };\n\n      this[name + 'AtTime'] = function (time) {\n        return Curve[name](this.getValues(), time);\n      };\n    }, {\n      statics: {\n        _evaluateMethods: methods\n      }\n    });\n  }(), new function () {\n    function getLengthIntegrand(v) {\n      var x0 = v[0],\n          y0 = v[1],\n          x1 = v[2],\n          y1 = v[3],\n          x2 = v[4],\n          y2 = v[5],\n          x3 = v[6],\n          y3 = v[7],\n          ax = 9 * (x1 - x2) + 3 * (x3 - x0),\n          bx = 6 * (x0 + x2) - 12 * x1,\n          cx = 3 * (x1 - x0),\n          ay = 9 * (y1 - y2) + 3 * (y3 - y0),\n          by = 6 * (y0 + y2) - 12 * y1,\n          cy = 3 * (y1 - y0);\n      return function (t) {\n        var dx = (ax * t + bx) * t + cx,\n            dy = (ay * t + by) * t + cy;\n        return Math.sqrt(dx * dx + dy * dy);\n      };\n    }\n\n    function getIterations(a, b) {\n      return Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n    }\n\n    function evaluate(v, t, type, normalized) {\n      if (t == null || t < 0 || t > 1) return null;\n      var x0 = v[0],\n          y0 = v[1],\n          x1 = v[2],\n          y1 = v[3],\n          x2 = v[4],\n          y2 = v[5],\n          x3 = v[6],\n          y3 = v[7],\n          isZero = Numerical.isZero;\n\n      if (isZero(x1 - x0) && isZero(y1 - y0)) {\n        x1 = x0;\n        y1 = y0;\n      }\n\n      if (isZero(x2 - x3) && isZero(y2 - y3)) {\n        x2 = x3;\n        y2 = y3;\n      }\n\n      var cx = 3 * (x1 - x0),\n          bx = 3 * (x2 - x1) - cx,\n          ax = x3 - x0 - cx - bx,\n          cy = 3 * (y1 - y0),\n          by = 3 * (y2 - y1) - cy,\n          ay = y3 - y0 - cy - by,\n          x,\n          y;\n\n      if (type === 0) {\n        x = t === 0 ? x0 : t === 1 ? x3 : ((ax * t + bx) * t + cx) * t + x0;\n        y = t === 0 ? y0 : t === 1 ? y3 : ((ay * t + by) * t + cy) * t + y0;\n      } else {\n        var tMin = 1e-8,\n            tMax = 1 - tMin;\n\n        if (t < tMin) {\n          x = cx;\n          y = cy;\n        } else if (t > tMax) {\n          x = 3 * (x3 - x2);\n          y = 3 * (y3 - y2);\n        } else {\n          x = (3 * ax * t + 2 * bx) * t + cx;\n          y = (3 * ay * t + 2 * by) * t + cy;\n        }\n\n        if (normalized) {\n          if (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n            x = x2 - x1;\n            y = y2 - y1;\n          }\n\n          var len = Math.sqrt(x * x + y * y);\n\n          if (len) {\n            x /= len;\n            y /= len;\n          }\n        }\n\n        if (type === 3) {\n          var x2 = 6 * ax * t + 2 * bx,\n              y2 = 6 * ay * t + 2 * by,\n              d = Math.pow(x * x + y * y, 3 / 2);\n          x = d !== 0 ? (x * y2 - y * x2) / d : 0;\n          y = 0;\n        }\n      }\n\n      return type === 2 ? new Point(y, -x) : new Point(x, y);\n    }\n\n    return {\n      statics: {\n        classify: function classify(v) {\n          var x0 = v[0],\n              y0 = v[1],\n              x1 = v[2],\n              y1 = v[3],\n              x2 = v[4],\n              y2 = v[5],\n              x3 = v[6],\n              y3 = v[7],\n              a1 = x0 * (y3 - y2) + y0 * (x2 - x3) + x3 * y2 - y3 * x2,\n              a2 = x1 * (y0 - y3) + y1 * (x3 - x0) + x0 * y3 - y0 * x3,\n              a3 = x2 * (y1 - y0) + y2 * (x0 - x1) + x1 * y0 - y1 * x0,\n              d3 = 3 * a3,\n              d2 = d3 - a2,\n              d1 = d2 - a2 + a1,\n              l = Math.sqrt(d1 * d1 + d2 * d2 + d3 * d3),\n              s = l !== 0 ? 1 / l : 0,\n              isZero = Numerical.isZero,\n              serpentine = 'serpentine';\n          d1 *= s;\n          d2 *= s;\n          d3 *= s;\n\n          function type(type, t1, t2) {\n            var hasRoots = t1 !== undefined,\n                t1Ok = hasRoots && t1 > 0 && t1 < 1,\n                t2Ok = hasRoots && t2 > 0 && t2 < 1;\n\n            if (hasRoots && (!(t1Ok || t2Ok) || type === 'loop' && !(t1Ok && t2Ok))) {\n              type = 'arch';\n              t1Ok = t2Ok = false;\n            }\n\n            return {\n              type: type,\n              roots: t1Ok || t2Ok ? t1Ok && t2Ok ? t1 < t2 ? [t1, t2] : [t2, t1] : [t1Ok ? t1 : t2] : null\n            };\n          }\n\n          if (isZero(d1)) {\n            return isZero(d2) ? type(isZero(d3) ? 'line' : 'quadratic') : type(serpentine, d3 / (3 * d2));\n          }\n\n          var d = 3 * d2 * d2 - 4 * d1 * d3;\n\n          if (isZero(d)) {\n            return type('cusp', d2 / (2 * d1));\n          }\n\n          var f1 = d > 0 ? Math.sqrt(d / 3) : Math.sqrt(-d),\n              f2 = 2 * d1;\n          return type(d > 0 ? serpentine : 'loop', (d2 + f1) / f2, (d2 - f1) / f2);\n        },\n        getLength: function getLength(v, a, b, ds) {\n          if (a === undefined) a = 0;\n          if (b === undefined) b = 1;\n\n          if (Curve.isStraight(v)) {\n            var c = v;\n\n            if (b < 1) {\n              c = Curve.subdivide(c, b)[0];\n              a /= b;\n            }\n\n            if (a > 0) {\n              c = Curve.subdivide(c, a)[1];\n            }\n\n            var dx = c[6] - c[0],\n                dy = c[7] - c[1];\n            return Math.sqrt(dx * dx + dy * dy);\n          }\n\n          return Numerical.integrate(ds || getLengthIntegrand(v), a, b, getIterations(a, b));\n        },\n        getTimeAt: function getTimeAt(v, offset, start) {\n          if (start === undefined) start = offset < 0 ? 1 : 0;\n          if (offset === 0) return start;\n          var abs = Math.abs,\n              epsilon = 1e-12,\n              forward = offset > 0,\n              a = forward ? start : 0,\n              b = forward ? 1 : start,\n              ds = getLengthIntegrand(v),\n              rangeLength = Curve.getLength(v, a, b, ds),\n              diff = abs(offset) - rangeLength;\n\n          if (abs(diff) < epsilon) {\n            return forward ? b : a;\n          } else if (diff > epsilon) {\n            return null;\n          }\n\n          var guess = offset / rangeLength,\n              length = 0;\n\n          function f(t) {\n            length += Numerical.integrate(ds, start, t, getIterations(start, t));\n            start = t;\n            return length - offset;\n          }\n\n          return Numerical.findRoot(f, ds, start + guess, a, b, 32, 1e-12);\n        },\n        getPoint: function getPoint(v, t) {\n          return evaluate(v, t, 0, false);\n        },\n        getTangent: function getTangent(v, t) {\n          return evaluate(v, t, 1, true);\n        },\n        getWeightedTangent: function getWeightedTangent(v, t) {\n          return evaluate(v, t, 1, false);\n        },\n        getNormal: function getNormal(v, t) {\n          return evaluate(v, t, 2, true);\n        },\n        getWeightedNormal: function getWeightedNormal(v, t) {\n          return evaluate(v, t, 2, false);\n        },\n        getCurvature: function getCurvature(v, t) {\n          return evaluate(v, t, 3, false).x;\n        },\n        getPeaks: function getPeaks(v) {\n          var x0 = v[0],\n              y0 = v[1],\n              x1 = v[2],\n              y1 = v[3],\n              x2 = v[4],\n              y2 = v[5],\n              x3 = v[6],\n              y3 = v[7],\n              ax = -x0 + 3 * x1 - 3 * x2 + x3,\n              bx = 3 * x0 - 6 * x1 + 3 * x2,\n              cx = -3 * x0 + 3 * x1,\n              ay = -y0 + 3 * y1 - 3 * y2 + y3,\n              by = 3 * y0 - 6 * y1 + 3 * y2,\n              cy = -3 * y0 + 3 * y1,\n              tMin = 1e-8,\n              tMax = 1 - tMin,\n              roots = [];\n          Numerical.solveCubic(9 * (ax * ax + ay * ay), 9 * (ax * bx + by * ay), 2 * (bx * bx + by * by) + 3 * (cx * ax + cy * ay), cx * bx + by * cy, roots, tMin, tMax);\n          return roots.sort();\n        }\n      }\n    };\n  }(), new function () {\n    function addLocation(locations, include, c1, t1, c2, t2, overlap) {\n      var excludeStart = !overlap && c1.getPrevious() === c2,\n          excludeEnd = !overlap && c1 !== c2 && c1.getNext() === c2,\n          tMin = 1e-8,\n          tMax = 1 - tMin;\n\n      if (t1 !== null && t1 >= (excludeStart ? tMin : 0) && t1 <= (excludeEnd ? tMax : 1)) {\n        if (t2 !== null && t2 >= (excludeEnd ? tMin : 0) && t2 <= (excludeStart ? tMax : 1)) {\n          var loc1 = new CurveLocation(c1, t1, null, overlap),\n              loc2 = new CurveLocation(c2, t2, null, overlap);\n          loc1._intersection = loc2;\n          loc2._intersection = loc1;\n\n          if (!include || include(loc1)) {\n            CurveLocation.insert(locations, loc1, true);\n          }\n        }\n      }\n    }\n\n    function addCurveIntersections(v1, v2, c1, c2, locations, include, flip, recursion, calls, tMin, tMax, uMin, uMax) {\n      if (++calls >= 4096 || ++recursion >= 40) return calls;\n      var fatLineEpsilon = 1e-9,\n          q0x = v2[0],\n          q0y = v2[1],\n          q3x = v2[6],\n          q3y = v2[7],\n          getSignedDistance = Line.getSignedDistance,\n          d1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n          d2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n          factor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n          dMin = factor * Math.min(0, d1, d2),\n          dMax = factor * Math.max(0, d1, d2),\n          dp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n          dp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n          dp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n          dp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n          hull = getConvexHull(dp0, dp1, dp2, dp3),\n          top = hull[0],\n          bottom = hull[1],\n          tMinClip,\n          tMaxClip;\n      if (d1 === 0 && d2 === 0 && dp0 === 0 && dp1 === 0 && dp2 === 0 && dp3 === 0 || (tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null || (tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(), dMin, dMax)) == null) return calls;\n      var tMinNew = tMin + (tMax - tMin) * tMinClip,\n          tMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\n      if (Math.max(uMax - uMin, tMaxNew - tMinNew) < fatLineEpsilon) {\n        var t = (tMinNew + tMaxNew) / 2,\n            u = (uMin + uMax) / 2;\n        addLocation(locations, include, flip ? c2 : c1, flip ? u : t, flip ? c1 : c2, flip ? t : u);\n      } else {\n        v1 = Curve.getPart(v1, tMinClip, tMaxClip);\n        var uDiff = uMax - uMin;\n\n        if (tMaxClip - tMinClip > 0.8) {\n          if (tMaxNew - tMinNew > uDiff) {\n            var parts = Curve.subdivide(v1, 0.5),\n                t = (tMinNew + tMaxNew) / 2;\n            calls = addCurveIntersections(v2, parts[0], c2, c1, locations, include, !flip, recursion, calls, uMin, uMax, tMinNew, t);\n            calls = addCurveIntersections(v2, parts[1], c2, c1, locations, include, !flip, recursion, calls, uMin, uMax, t, tMaxNew);\n          } else {\n            var parts = Curve.subdivide(v2, 0.5),\n                u = (uMin + uMax) / 2;\n            calls = addCurveIntersections(parts[0], v1, c2, c1, locations, include, !flip, recursion, calls, uMin, u, tMinNew, tMaxNew);\n            calls = addCurveIntersections(parts[1], v1, c2, c1, locations, include, !flip, recursion, calls, u, uMax, tMinNew, tMaxNew);\n          }\n        } else {\n          if (uDiff === 0 || uDiff >= fatLineEpsilon) {\n            calls = addCurveIntersections(v2, v1, c2, c1, locations, include, !flip, recursion, calls, uMin, uMax, tMinNew, tMaxNew);\n          } else {\n            calls = addCurveIntersections(v1, v2, c1, c2, locations, include, flip, recursion, calls, tMinNew, tMaxNew, uMin, uMax);\n          }\n        }\n      }\n\n      return calls;\n    }\n\n    function getConvexHull(dq0, dq1, dq2, dq3) {\n      var p0 = [0, dq0],\n          p1 = [1 / 3, dq1],\n          p2 = [2 / 3, dq2],\n          p3 = [1, dq3],\n          dist1 = dq1 - (2 * dq0 + dq3) / 3,\n          dist2 = dq2 - (dq0 + 2 * dq3) / 3,\n          hull;\n\n      if (dist1 * dist2 < 0) {\n        hull = [[p0, p1, p3], [p0, p2, p3]];\n      } else {\n        var distRatio = dist1 / dist2;\n        hull = [distRatio >= 2 ? [p0, p1, p3] : distRatio <= 0.5 ? [p0, p2, p3] : [p0, p1, p2, p3], [p0, p3]];\n      }\n\n      return (dist1 || dist2) < 0 ? hull.reverse() : hull;\n    }\n\n    function clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n      if (hullTop[0][1] < dMin) {\n        return clipConvexHullPart(hullTop, true, dMin);\n      } else if (hullBottom[0][1] > dMax) {\n        return clipConvexHullPart(hullBottom, false, dMax);\n      } else {\n        return hullTop[0][0];\n      }\n    }\n\n    function clipConvexHullPart(part, top, threshold) {\n      var px = part[0][0],\n          py = part[0][1];\n\n      for (var i = 1, l = part.length; i < l; i++) {\n        var qx = part[i][0],\n            qy = part[i][1];\n\n        if (top ? qy >= threshold : qy <= threshold) {\n          return qy === threshold ? qx : px + (threshold - py) * (qx - px) / (qy - py);\n        }\n\n        px = qx;\n        py = qy;\n      }\n\n      return null;\n    }\n\n    function getCurveLineIntersections(v, px, py, vx, vy) {\n      var isZero = Numerical.isZero;\n\n      if (isZero(vx) && isZero(vy)) {\n        var t = Curve.getTimeOf(v, new Point(px, py));\n        return t === null ? [] : [t];\n      }\n\n      var angle = Math.atan2(-vy, vx),\n          sin = Math.sin(angle),\n          cos = Math.cos(angle),\n          rv = [],\n          roots = [];\n\n      for (var i = 0; i < 8; i += 2) {\n        var x = v[i] - px,\n            y = v[i + 1] - py;\n        rv.push(x * cos - y * sin, x * sin + y * cos);\n      }\n\n      Curve.solveCubic(rv, 1, 0, roots, 0, 1);\n      return roots;\n    }\n\n    function addCurveLineIntersections(v1, v2, c1, c2, locations, include, flip) {\n      var x1 = v2[0],\n          y1 = v2[1],\n          x2 = v2[6],\n          y2 = v2[7],\n          roots = getCurveLineIntersections(v1, x1, y1, x2 - x1, y2 - y1);\n\n      for (var i = 0, l = roots.length; i < l; i++) {\n        var t1 = roots[i],\n            p1 = Curve.getPoint(v1, t1),\n            t2 = Curve.getTimeOf(v2, p1);\n\n        if (t2 !== null) {\n          addLocation(locations, include, flip ? c2 : c1, flip ? t2 : t1, flip ? c1 : c2, flip ? t1 : t2);\n        }\n      }\n    }\n\n    function addLineIntersection(v1, v2, c1, c2, locations, include) {\n      var pt = Line.intersect(v1[0], v1[1], v1[6], v1[7], v2[0], v2[1], v2[6], v2[7]);\n\n      if (pt) {\n        addLocation(locations, include, c1, Curve.getTimeOf(v1, pt), c2, Curve.getTimeOf(v2, pt));\n      }\n    }\n\n    function getCurveIntersections(v1, v2, c1, c2, locations, include) {\n      var epsilon = 1e-12,\n          min = Math.min,\n          max = Math.max;\n\n      if (max(v1[0], v1[2], v1[4], v1[6]) + epsilon > min(v2[0], v2[2], v2[4], v2[6]) && min(v1[0], v1[2], v1[4], v1[6]) - epsilon < max(v2[0], v2[2], v2[4], v2[6]) && max(v1[1], v1[3], v1[5], v1[7]) + epsilon > min(v2[1], v2[3], v2[5], v2[7]) && min(v1[1], v1[3], v1[5], v1[7]) - epsilon < max(v2[1], v2[3], v2[5], v2[7])) {\n        var overlaps = getOverlaps(v1, v2);\n\n        if (overlaps) {\n          for (var i = 0; i < 2; i++) {\n            var overlap = overlaps[i];\n            addLocation(locations, include, c1, overlap[0], c2, overlap[1], true);\n          }\n        } else {\n          var straight1 = Curve.isStraight(v1),\n              straight2 = Curve.isStraight(v2),\n              straight = straight1 && straight2,\n              flip = straight1 && !straight2,\n              before = locations.length;\n          (straight ? addLineIntersection : straight1 || straight2 ? addCurveLineIntersections : addCurveIntersections)(flip ? v2 : v1, flip ? v1 : v2, flip ? c2 : c1, flip ? c1 : c2, locations, include, flip, 0, 0, 0, 1, 0, 1);\n\n          if (!straight || locations.length === before) {\n            for (var i = 0; i < 4; i++) {\n              var t1 = i >> 1,\n                  t2 = i & 1,\n                  i1 = t1 * 6,\n                  i2 = t2 * 6,\n                  p1 = new Point(v1[i1], v1[i1 + 1]),\n                  p2 = new Point(v2[i2], v2[i2 + 1]);\n\n              if (p1.isClose(p2, epsilon)) {\n                addLocation(locations, include, c1, t1, c2, t2);\n              }\n            }\n          }\n        }\n      }\n\n      return locations;\n    }\n\n    function getSelfIntersection(v1, c1, locations, include) {\n      var info = Curve.classify(v1);\n\n      if (info.type === 'loop') {\n        var roots = info.roots;\n        addLocation(locations, include, c1, roots[0], c1, roots[1]);\n      }\n\n      return locations;\n    }\n\n    function getIntersections(curves1, curves2, include, matrix1, matrix2, _returnFirst) {\n      var epsilon = 1e-7,\n          self = !curves2;\n      if (self) curves2 = curves1;\n      var length1 = curves1.length,\n          length2 = curves2.length,\n          values1 = new Array(length1),\n          values2 = self ? values1 : new Array(length2),\n          locations = [];\n\n      for (var i = 0; i < length1; i++) {\n        values1[i] = curves1[i].getValues(matrix1);\n      }\n\n      if (!self) {\n        for (var i = 0; i < length2; i++) {\n          values2[i] = curves2[i].getValues(matrix2);\n        }\n      }\n\n      var boundsCollisions = CollisionDetection.findCurveBoundsCollisions(values1, values2, epsilon);\n\n      for (var index1 = 0; index1 < length1; index1++) {\n        var curve1 = curves1[index1],\n            v1 = values1[index1];\n\n        if (self) {\n          getSelfIntersection(v1, curve1, locations, include);\n        }\n\n        var collisions1 = boundsCollisions[index1];\n\n        if (collisions1) {\n          for (var j = 0; j < collisions1.length; j++) {\n            if (_returnFirst && locations.length) return locations;\n            var index2 = collisions1[j];\n\n            if (!self || index2 > index1) {\n              var curve2 = curves2[index2],\n                  v2 = values2[index2];\n              getCurveIntersections(v1, v2, curve1, curve2, locations, include);\n            }\n          }\n        }\n      }\n\n      return locations;\n    }\n\n    function getOverlaps(v1, v2) {\n      function getSquaredLineLength(v) {\n        var x = v[6] - v[0],\n            y = v[7] - v[1];\n        return x * x + y * y;\n      }\n\n      var abs = Math.abs,\n          getDistance = Line.getDistance,\n          timeEpsilon = 1e-8,\n          geomEpsilon = 1e-7,\n          straight1 = Curve.isStraight(v1),\n          straight2 = Curve.isStraight(v2),\n          straightBoth = straight1 && straight2,\n          flip = getSquaredLineLength(v1) < getSquaredLineLength(v2),\n          l1 = flip ? v2 : v1,\n          l2 = flip ? v1 : v2,\n          px = l1[0],\n          py = l1[1],\n          vx = l1[6] - px,\n          vy = l1[7] - py;\n\n      if (getDistance(px, py, vx, vy, l2[0], l2[1], true) < geomEpsilon && getDistance(px, py, vx, vy, l2[6], l2[7], true) < geomEpsilon) {\n        if (!straightBoth && getDistance(px, py, vx, vy, l1[2], l1[3], true) < geomEpsilon && getDistance(px, py, vx, vy, l1[4], l1[5], true) < geomEpsilon && getDistance(px, py, vx, vy, l2[2], l2[3], true) < geomEpsilon && getDistance(px, py, vx, vy, l2[4], l2[5], true) < geomEpsilon) {\n          straight1 = straight2 = straightBoth = true;\n        }\n      } else if (straightBoth) {\n        return null;\n      }\n\n      if (straight1 ^ straight2) {\n        return null;\n      }\n\n      var v = [v1, v2],\n          pairs = [];\n\n      for (var i = 0; i < 4 && pairs.length < 2; i++) {\n        var i1 = i & 1,\n            i2 = i1 ^ 1,\n            t1 = i >> 1,\n            t2 = Curve.getTimeOf(v[i1], new Point(v[i2][t1 ? 6 : 0], v[i2][t1 ? 7 : 1]));\n\n        if (t2 != null) {\n          var pair = i1 ? [t1, t2] : [t2, t1];\n\n          if (!pairs.length || abs(pair[0] - pairs[0][0]) > timeEpsilon && abs(pair[1] - pairs[0][1]) > timeEpsilon) {\n            pairs.push(pair);\n          }\n        }\n\n        if (i > 2 && !pairs.length) break;\n      }\n\n      if (pairs.length !== 2) {\n        pairs = null;\n      } else if (!straightBoth) {\n        var o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n            o2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n        if (abs(o2[2] - o1[2]) > geomEpsilon || abs(o2[3] - o1[3]) > geomEpsilon || abs(o2[4] - o1[4]) > geomEpsilon || abs(o2[5] - o1[5]) > geomEpsilon) pairs = null;\n      }\n\n      return pairs;\n    }\n\n    function getTimesWithTangent(v, tangent) {\n      var x0 = v[0],\n          y0 = v[1],\n          x1 = v[2],\n          y1 = v[3],\n          x2 = v[4],\n          y2 = v[5],\n          x3 = v[6],\n          y3 = v[7],\n          normalized = tangent.normalize(),\n          tx = normalized.x,\n          ty = normalized.y,\n          ax = 3 * x3 - 9 * x2 + 9 * x1 - 3 * x0,\n          ay = 3 * y3 - 9 * y2 + 9 * y1 - 3 * y0,\n          bx = 6 * x2 - 12 * x1 + 6 * x0,\n          by = 6 * y2 - 12 * y1 + 6 * y0,\n          cx = 3 * x1 - 3 * x0,\n          cy = 3 * y1 - 3 * y0,\n          den = 2 * ax * ty - 2 * ay * tx,\n          times = [];\n\n      if (Math.abs(den) < Numerical.CURVETIME_EPSILON) {\n        var num = ax * cy - ay * cx,\n            den = ax * by - ay * bx;\n\n        if (den != 0) {\n          var t = -num / den;\n          if (t >= 0 && t <= 1) times.push(t);\n        }\n      } else {\n        var delta = (bx * bx - 4 * ax * cx) * ty * ty + (-2 * bx * by + 4 * ay * cx + 4 * ax * cy) * tx * ty + (by * by - 4 * ay * cy) * tx * tx,\n            k = bx * ty - by * tx;\n\n        if (delta >= 0 && den != 0) {\n          var d = Math.sqrt(delta),\n              t0 = -(k + d) / den,\n              t1 = (-k + d) / den;\n          if (t0 >= 0 && t0 <= 1) times.push(t0);\n          if (t1 >= 0 && t1 <= 1) times.push(t1);\n        }\n      }\n\n      return times;\n    }\n\n    return {\n      getIntersections: function getIntersections(curve) {\n        var v1 = this.getValues(),\n            v2 = curve && curve !== this && curve.getValues();\n        return v2 ? getCurveIntersections(v1, v2, this, curve, []) : getSelfIntersection(v1, this, []);\n      },\n      statics: {\n        getOverlaps: getOverlaps,\n        getIntersections: getIntersections,\n        getCurveLineIntersections: getCurveLineIntersections,\n        getTimesWithTangent: getTimesWithTangent\n      }\n    };\n  }());\n  var CurveLocation = Base.extend({\n    _class: 'CurveLocation',\n    initialize: function CurveLocation(curve, time, point, _overlap, _distance) {\n      if (time >= 0.99999999) {\n        var next = curve.getNext();\n\n        if (next) {\n          time = 0;\n          curve = next;\n        }\n      }\n\n      this._setCurve(curve);\n\n      this._time = time;\n      this._point = point || curve.getPointAtTime(time);\n      this._overlap = _overlap;\n      this._distance = _distance;\n      this._intersection = this._next = this._previous = null;\n    },\n    _setCurve: function _setCurve(curve) {\n      var path = curve._path;\n      this._path = path;\n      this._version = path ? path._version : 0;\n      this._curve = curve;\n      this._segment = null;\n      this._segment1 = curve._segment1;\n      this._segment2 = curve._segment2;\n    },\n    _setSegment: function _setSegment(segment) {\n      this._setCurve(segment.getCurve());\n\n      this._segment = segment;\n      this._time = segment === this._segment1 ? 0 : 1;\n      this._point = segment._point.clone();\n    },\n    getSegment: function getSegment() {\n      var segment = this._segment;\n\n      if (!segment) {\n        var curve = this.getCurve(),\n            time = this.getTime();\n\n        if (time === 0) {\n          segment = curve._segment1;\n        } else if (time === 1) {\n          segment = curve._segment2;\n        } else if (time != null) {\n          segment = curve.getPartLength(0, time) < curve.getPartLength(time, 1) ? curve._segment1 : curve._segment2;\n        }\n\n        this._segment = segment;\n      }\n\n      return segment;\n    },\n    getCurve: function getCurve() {\n      var path = this._path,\n          that = this;\n\n      if (path && path._version !== this._version) {\n        this._time = this._offset = this._curveOffset = this._curve = null;\n      }\n\n      function trySegment(segment) {\n        var curve = segment && segment.getCurve();\n\n        if (curve && (that._time = curve.getTimeOf(that._point)) != null) {\n          that._setCurve(curve);\n\n          return curve;\n        }\n      }\n\n      return this._curve || trySegment(this._segment) || trySegment(this._segment1) || trySegment(this._segment2.getPrevious());\n    },\n    getPath: function getPath() {\n      var curve = this.getCurve();\n      return curve && curve._path;\n    },\n    getIndex: function getIndex() {\n      var curve = this.getCurve();\n      return curve && curve.getIndex();\n    },\n    getTime: function getTime() {\n      var curve = this.getCurve(),\n          time = this._time;\n      return curve && time == null ? this._time = curve.getTimeOf(this._point) : time;\n    },\n    getParameter: '#getTime',\n    getPoint: function getPoint() {\n      return this._point;\n    },\n    getOffset: function getOffset() {\n      var offset = this._offset;\n\n      if (offset == null) {\n        offset = 0;\n        var path = this.getPath(),\n            index = this.getIndex();\n\n        if (path && index != null) {\n          var curves = path.getCurves();\n\n          for (var i = 0; i < index; i++) {\n            offset += curves[i].getLength();\n          }\n        }\n\n        this._offset = offset += this.getCurveOffset();\n      }\n\n      return offset;\n    },\n    getCurveOffset: function getCurveOffset() {\n      var offset = this._curveOffset;\n\n      if (offset == null) {\n        var curve = this.getCurve(),\n            time = this.getTime();\n        this._curveOffset = offset = time != null && curve && curve.getPartLength(0, time);\n      }\n\n      return offset;\n    },\n    getIntersection: function getIntersection() {\n      return this._intersection;\n    },\n    getDistance: function getDistance() {\n      return this._distance;\n    },\n    divide: function divide() {\n      var curve = this.getCurve(),\n          res = curve && curve.divideAtTime(this.getTime());\n\n      if (res) {\n        this._setSegment(res._segment1);\n      }\n\n      return res;\n    },\n    split: function split() {\n      var curve = this.getCurve(),\n          path = curve._path,\n          res = curve && curve.splitAtTime(this.getTime());\n\n      if (res) {\n        this._setSegment(path.getLastSegment());\n      }\n\n      return res;\n    },\n    equals: function equals(loc, _ignoreOther) {\n      var res = this === loc;\n\n      if (!res && loc instanceof CurveLocation) {\n        var c1 = this.getCurve(),\n            c2 = loc.getCurve(),\n            p1 = c1._path,\n            p2 = c2._path;\n\n        if (p1 === p2) {\n          var abs = Math.abs,\n              epsilon = 1e-7,\n              diff = abs(this.getOffset() - loc.getOffset()),\n              i1 = !_ignoreOther && this._intersection,\n              i2 = !_ignoreOther && loc._intersection;\n          res = (diff < epsilon || p1 && abs(p1.getLength() - diff) < epsilon) && (!i1 && !i2 || i1 && i2 && i1.equals(i2, true));\n        }\n      }\n\n      return res;\n    },\n    toString: function toString() {\n      var parts = [],\n          point = this.getPoint(),\n          f = Formatter.instance;\n      if (point) parts.push('point: ' + point);\n      var index = this.getIndex();\n      if (index != null) parts.push('index: ' + index);\n      var time = this.getTime();\n      if (time != null) parts.push('time: ' + f.number(time));\n      if (this._distance != null) parts.push('distance: ' + f.number(this._distance));\n      return '{ ' + parts.join(', ') + ' }';\n    },\n    isTouching: function isTouching() {\n      var inter = this._intersection;\n\n      if (inter && this.getTangent().isCollinear(inter.getTangent())) {\n        var curve1 = this.getCurve(),\n            curve2 = inter.getCurve();\n        return !(curve1.isStraight() && curve2.isStraight() && curve1.getLine().intersect(curve2.getLine()));\n      }\n\n      return false;\n    },\n    isCrossing: function isCrossing() {\n      var inter = this._intersection;\n      if (!inter) return false;\n      var t1 = this.getTime(),\n          t2 = inter.getTime(),\n          tMin = 1e-8,\n          tMax = 1 - tMin,\n          t1Inside = t1 >= tMin && t1 <= tMax,\n          t2Inside = t2 >= tMin && t2 <= tMax;\n      if (t1Inside && t2Inside) return !this.isTouching();\n      var c2 = this.getCurve(),\n          c1 = c2 && t1 < tMin ? c2.getPrevious() : c2,\n          c4 = inter.getCurve(),\n          c3 = c4 && t2 < tMin ? c4.getPrevious() : c4;\n      if (t1 > tMax) c2 = c2.getNext();\n      if (t2 > tMax) c4 = c4.getNext();\n      if (!c1 || !c2 || !c3 || !c4) return false;\n      var offsets = [];\n\n      function addOffsets(curve, end) {\n        var v = curve.getValues(),\n            roots = Curve.classify(v).roots || Curve.getPeaks(v),\n            count = roots.length,\n            offset = Curve.getLength(v, end && count ? roots[count - 1] : 0, !end && count ? roots[0] : 1);\n        offsets.push(count ? offset : offset / 64);\n      }\n\n      function isInRange(angle, min, max) {\n        return min < max ? angle > min && angle < max : angle > min || angle < max;\n      }\n\n      if (!t1Inside) {\n        addOffsets(c1, true);\n        addOffsets(c2, false);\n      }\n\n      if (!t2Inside) {\n        addOffsets(c3, true);\n        addOffsets(c4, false);\n      }\n\n      var pt = this.getPoint(),\n          offset = Math.min.apply(Math, offsets),\n          v2 = t1Inside ? c2.getTangentAtTime(t1) : c2.getPointAt(offset).subtract(pt),\n          v1 = t1Inside ? v2.negate() : c1.getPointAt(-offset).subtract(pt),\n          v4 = t2Inside ? c4.getTangentAtTime(t2) : c4.getPointAt(offset).subtract(pt),\n          v3 = t2Inside ? v4.negate() : c3.getPointAt(-offset).subtract(pt),\n          a1 = v1.getAngle(),\n          a2 = v2.getAngle(),\n          a3 = v3.getAngle(),\n          a4 = v4.getAngle();\n      return !!(t1Inside ? isInRange(a1, a3, a4) ^ isInRange(a2, a3, a4) && isInRange(a1, a4, a3) ^ isInRange(a2, a4, a3) : isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2) && isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1));\n    },\n    hasOverlap: function hasOverlap() {\n      return !!this._overlap;\n    }\n  }, Base.each(Curve._evaluateMethods, function (name) {\n    var get = name + 'At';\n\n    this[name] = function () {\n      var curve = this.getCurve(),\n          time = this.getTime();\n      return time != null && curve && curve[get](time, true);\n    };\n  }, {\n    preserve: true\n  }), new function () {\n    function insert(locations, loc, merge) {\n      var length = locations.length,\n          l = 0,\n          r = length - 1;\n\n      function search(index, dir) {\n        for (var i = index + dir; i >= -1 && i <= length; i += dir) {\n          var loc2 = locations[(i % length + length) % length];\n          if (!loc.getPoint().isClose(loc2.getPoint(), 1e-7)) break;\n          if (loc.equals(loc2)) return loc2;\n        }\n\n        return null;\n      }\n\n      while (l <= r) {\n        var m = l + r >>> 1,\n            loc2 = locations[m],\n            found;\n\n        if (merge && (found = loc.equals(loc2) ? loc2 : search(m, -1) || search(m, 1))) {\n          if (loc._overlap) {\n            found._overlap = found._intersection._overlap = true;\n          }\n\n          return found;\n        }\n\n        var path1 = loc.getPath(),\n            path2 = loc2.getPath(),\n            diff = path1 !== path2 ? path1._id - path2._id : loc.getIndex() + loc.getTime() - (loc2.getIndex() + loc2.getTime());\n\n        if (diff < 0) {\n          r = m - 1;\n        } else {\n          l = m + 1;\n        }\n      }\n\n      locations.splice(l, 0, loc);\n      return loc;\n    }\n\n    return {\n      statics: {\n        insert: insert,\n        expand: function expand(locations) {\n          var expanded = locations.slice();\n\n          for (var i = locations.length - 1; i >= 0; i--) {\n            insert(expanded, locations[i]._intersection, false);\n          }\n\n          return expanded;\n        }\n      }\n    };\n  }());\n  var PathItem = Item.extend({\n    _class: 'PathItem',\n    _selectBounds: false,\n    _canScaleStroke: true,\n    beans: true,\n    initialize: function PathItem() {},\n    statics: {\n      create: function create(arg) {\n        var data, segments, compound;\n\n        if (Base.isPlainObject(arg)) {\n          segments = arg.segments;\n          data = arg.pathData;\n        } else if (Array.isArray(arg)) {\n          segments = arg;\n        } else if (typeof arg === 'string') {\n          data = arg;\n        }\n\n        if (segments) {\n          var first = segments[0];\n          compound = first && Array.isArray(first[0]);\n        } else if (data) {\n          compound = (data.match(/m/gi) || []).length > 1 || /z\\s*\\S+/i.test(data);\n        }\n\n        var ctor = compound ? CompoundPath : Path;\n        return new ctor(arg);\n      }\n    },\n    _asPathItem: function _asPathItem() {\n      return this;\n    },\n    isClockwise: function isClockwise() {\n      return this.getArea() >= 0;\n    },\n    setClockwise: function setClockwise(clockwise) {\n      if (this.isClockwise() != (clockwise = !!clockwise)) this.reverse();\n    },\n    setPathData: function setPathData(data) {\n      var parts = data && data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n          coords,\n          relative = false,\n          previous,\n          control,\n          current = new Point(),\n          start = new Point();\n\n      function getCoord(index, coord) {\n        var val = +coords[index];\n        if (relative) val += current[coord];\n        return val;\n      }\n\n      function getPoint(index) {\n        return new Point(getCoord(index, 'x'), getCoord(index + 1, 'y'));\n      }\n\n      this.clear();\n\n      for (var i = 0, l = parts && parts.length; i < l; i++) {\n        var part = parts[i],\n            command = part[0],\n            lower = command.toLowerCase();\n        coords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n        var length = coords && coords.length;\n        relative = command === lower;\n        if (previous === 'z' && !/[mz]/.test(lower)) this.moveTo(current);\n\n        switch (lower) {\n          case 'm':\n          case 'l':\n            var move = lower === 'm';\n\n            for (var j = 0; j < length; j += 2) {\n              this[move ? 'moveTo' : 'lineTo'](current = getPoint(j));\n\n              if (move) {\n                start = current;\n                move = false;\n              }\n            }\n\n            control = current;\n            break;\n\n          case 'h':\n          case 'v':\n            var coord = lower === 'h' ? 'x' : 'y';\n            current = current.clone();\n\n            for (var j = 0; j < length; j++) {\n              current[coord] = getCoord(j, coord);\n              this.lineTo(current);\n            }\n\n            control = current;\n            break;\n\n          case 'c':\n            for (var j = 0; j < length; j += 6) {\n              this.cubicCurveTo(getPoint(j), control = getPoint(j + 2), current = getPoint(j + 4));\n            }\n\n            break;\n\n          case 's':\n            for (var j = 0; j < length; j += 4) {\n              this.cubicCurveTo(/[cs]/.test(previous) ? current.multiply(2).subtract(control) : current, control = getPoint(j), current = getPoint(j + 2));\n              previous = lower;\n            }\n\n            break;\n\n          case 'q':\n            for (var j = 0; j < length; j += 4) {\n              this.quadraticCurveTo(control = getPoint(j), current = getPoint(j + 2));\n            }\n\n            break;\n\n          case 't':\n            for (var j = 0; j < length; j += 2) {\n              this.quadraticCurveTo(control = /[qt]/.test(previous) ? current.multiply(2).subtract(control) : current, current = getPoint(j));\n              previous = lower;\n            }\n\n            break;\n\n          case 'a':\n            for (var j = 0; j < length; j += 7) {\n              this.arcTo(current = getPoint(j + 5), new Size(+coords[j], +coords[j + 1]), +coords[j + 2], +coords[j + 4], +coords[j + 3]);\n            }\n\n            break;\n\n          case 'z':\n            this.closePath(1e-12);\n            current = start;\n            break;\n        }\n\n        previous = lower;\n      }\n    },\n    _canComposite: function _canComposite() {\n      return !(this.hasFill() && this.hasStroke());\n    },\n    _contains: function _contains(point) {\n      var winding = point.isInside(this.getBounds({\n        internal: true,\n        handle: true\n      })) ? this._getWinding(point) : {};\n      return winding.onPath || !!(this.getFillRule() === 'evenodd' ? winding.windingL & 1 || winding.windingR & 1 : winding.winding);\n    },\n    getIntersections: function getIntersections(path, include, _matrix, _returnFirst) {\n      var self = this === path || !path,\n          matrix1 = this._matrix._orNullIfIdentity(),\n          matrix2 = self ? matrix1 : (_matrix || path._matrix)._orNullIfIdentity();\n\n      return self || this.getBounds(matrix1).intersects(path.getBounds(matrix2), 1e-12) ? Curve.getIntersections(this.getCurves(), !self && path.getCurves(), include, matrix1, matrix2, _returnFirst) : [];\n    },\n    getCrossings: function getCrossings(path) {\n      return this.getIntersections(path, function (inter) {\n        return inter.isCrossing();\n      });\n    },\n    getNearestLocation: function getNearestLocation() {\n      var point = Point.read(arguments),\n          curves = this.getCurves(),\n          minDist = Infinity,\n          minLoc = null;\n\n      for (var i = 0, l = curves.length; i < l; i++) {\n        var loc = curves[i].getNearestLocation(point);\n\n        if (loc._distance < minDist) {\n          minDist = loc._distance;\n          minLoc = loc;\n        }\n      }\n\n      return minLoc;\n    },\n    getNearestPoint: function getNearestPoint() {\n      var loc = this.getNearestLocation.apply(this, arguments);\n      return loc ? loc.getPoint() : loc;\n    },\n    interpolate: function interpolate(from, to, factor) {\n      var isPath = !this._children,\n          name = isPath ? '_segments' : '_children',\n          itemsFrom = from[name],\n          itemsTo = to[name],\n          items = this[name];\n\n      if (!itemsFrom || !itemsTo || itemsFrom.length !== itemsTo.length) {\n        throw new Error('Invalid operands in interpolate() call: ' + from + ', ' + to);\n      }\n\n      var current = items.length,\n          length = itemsTo.length;\n\n      if (current < length) {\n        var ctor = isPath ? Segment : Path;\n\n        for (var i = current; i < length; i++) {\n          this.add(new ctor());\n        }\n      } else if (current > length) {\n        this[isPath ? 'removeSegments' : 'removeChildren'](length, current);\n      }\n\n      for (var i = 0; i < length; i++) {\n        items[i].interpolate(itemsFrom[i], itemsTo[i], factor);\n      }\n\n      if (isPath) {\n        this.setClosed(from._closed);\n\n        this._changed(9);\n      }\n    },\n    compare: function compare(path) {\n      var ok = false;\n\n      if (path) {\n        var paths1 = this._children || [this],\n            paths2 = path._children ? path._children.slice() : [path],\n            length1 = paths1.length,\n            length2 = paths2.length,\n            matched = [],\n            count = 0;\n        ok = true;\n        var boundsOverlaps = CollisionDetection.findBoundsOverlaps(paths1, paths2, Numerical.GEOMETRIC_EPSILON);\n\n        for (var i1 = length1 - 1; i1 >= 0 && ok; i1--) {\n          var path1 = paths1[i1];\n          ok = false;\n          var pathBoundsOverlaps = boundsOverlaps[i1];\n\n          if (pathBoundsOverlaps) {\n            for (var i2 = pathBoundsOverlaps.length - 1; i2 >= 0 && !ok; i2--) {\n              if (path1.compare(paths2[pathBoundsOverlaps[i2]])) {\n                if (!matched[pathBoundsOverlaps[i2]]) {\n                  matched[pathBoundsOverlaps[i2]] = true;\n                  count++;\n                }\n\n                ok = true;\n              }\n            }\n          }\n        }\n\n        ok = ok && count === length2;\n      }\n\n      return ok;\n    }\n  });\n  var Path = PathItem.extend({\n    _class: 'Path',\n    _serializeFields: {\n      segments: [],\n      closed: false\n    },\n    initialize: function Path(arg) {\n      this._closed = false;\n      this._segments = [];\n      this._version = 0;\n      var args = arguments,\n          segments = Array.isArray(arg) ? typeof arg[0] === 'object' ? arg : args : arg && arg.size === undefined && (arg.x !== undefined || arg.point !== undefined) ? args : null;\n\n      if (segments && segments.length > 0) {\n        this.setSegments(segments);\n      } else {\n        this._curves = undefined;\n        this._segmentSelection = 0;\n\n        if (!segments && typeof arg === 'string') {\n          this.setPathData(arg);\n          arg = null;\n        }\n      }\n\n      this._initialize(!segments && arg);\n    },\n    _equals: function _equals(item) {\n      return this._closed === item._closed && Base.equals(this._segments, item._segments);\n    },\n    copyContent: function copyContent(source) {\n      this.setSegments(source._segments);\n      this._closed = source._closed;\n    },\n    _changed: function _changed(flags) {\n      _changed.base.call(this, flags);\n\n      if (flags & 8) {\n        this._length = this._area = undefined;\n\n        if (flags & 32) {\n          this._version++;\n        } else if (this._curves) {\n          for (var i = 0, l = this._curves.length; i < l; i++) {\n            this._curves[i]._changed();\n          }\n        }\n      } else if (flags & 64) {\n        this._bounds = undefined;\n      }\n    },\n    getStyle: function getStyle() {\n      var parent = this._parent;\n      return (parent instanceof CompoundPath ? parent : this)._style;\n    },\n    getSegments: function getSegments() {\n      return this._segments;\n    },\n    setSegments: function setSegments(segments) {\n      var fullySelected = this.isFullySelected(),\n          length = segments && segments.length;\n      this._segments.length = 0;\n      this._segmentSelection = 0;\n      this._curves = undefined;\n\n      if (length) {\n        var last = segments[length - 1];\n\n        if (typeof last === 'boolean') {\n          this.setClosed(last);\n          length--;\n        }\n\n        this._add(Segment.readList(segments, 0, {}, length));\n      }\n\n      if (fullySelected) this.setFullySelected(true);\n    },\n    getFirstSegment: function getFirstSegment() {\n      return this._segments[0];\n    },\n    getLastSegment: function getLastSegment() {\n      return this._segments[this._segments.length - 1];\n    },\n    getCurves: function getCurves() {\n      var curves = this._curves,\n          segments = this._segments;\n\n      if (!curves) {\n        var length = this._countCurves();\n\n        curves = this._curves = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          curves[i] = new Curve(this, segments[i], segments[i + 1] || segments[0]);\n        }\n      }\n\n      return curves;\n    },\n    getFirstCurve: function getFirstCurve() {\n      return this.getCurves()[0];\n    },\n    getLastCurve: function getLastCurve() {\n      var curves = this.getCurves();\n      return curves[curves.length - 1];\n    },\n    isClosed: function isClosed() {\n      return this._closed;\n    },\n    setClosed: function setClosed(closed) {\n      if (this._closed != (closed = !!closed)) {\n        this._closed = closed;\n\n        if (this._curves) {\n          var length = this._curves.length = this._countCurves();\n\n          if (closed) this._curves[length - 1] = new Curve(this, this._segments[length - 1], this._segments[0]);\n        }\n\n        this._changed(41);\n      }\n    }\n  }, {\n    beans: true,\n    getPathData: function getPathData(_matrix, _precision) {\n      var segments = this._segments,\n          length = segments.length,\n          f = new Formatter(_precision),\n          coords = new Array(6),\n          first = true,\n          curX,\n          curY,\n          prevX,\n          prevY,\n          inX,\n          inY,\n          outX,\n          outY,\n          parts = [];\n\n      function addSegment(segment, skipLine) {\n        segment._transformCoordinates(_matrix, coords);\n\n        curX = coords[0];\n        curY = coords[1];\n\n        if (first) {\n          parts.push('M' + f.pair(curX, curY));\n          first = false;\n        } else {\n          inX = coords[2];\n          inY = coords[3];\n\n          if (inX === curX && inY === curY && outX === prevX && outY === prevY) {\n            if (!skipLine) {\n              var dx = curX - prevX,\n                  dy = curY - prevY;\n              parts.push(dx === 0 ? 'v' + f.number(dy) : dy === 0 ? 'h' + f.number(dx) : 'l' + f.pair(dx, dy));\n            }\n          } else {\n            parts.push('c' + f.pair(outX - prevX, outY - prevY) + ' ' + f.pair(inX - prevX, inY - prevY) + ' ' + f.pair(curX - prevX, curY - prevY));\n          }\n        }\n\n        prevX = curX;\n        prevY = curY;\n        outX = coords[4];\n        outY = coords[5];\n      }\n\n      if (!length) return '';\n\n      for (var i = 0; i < length; i++) {\n        addSegment(segments[i]);\n      }\n\n      if (this._closed && length > 0) {\n        addSegment(segments[0], true);\n        parts.push('z');\n      }\n\n      return parts.join('');\n    },\n    isEmpty: function isEmpty() {\n      return !this._segments.length;\n    },\n    _transformContent: function _transformContent(matrix) {\n      var segments = this._segments,\n          coords = new Array(6);\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        segments[i]._transformCoordinates(matrix, coords, true);\n      }\n\n      return true;\n    },\n    _add: function _add(segs, index) {\n      var segments = this._segments,\n          curves = this._curves,\n          amount = segs.length,\n          append = index == null,\n          index = append ? segments.length : index;\n\n      for (var i = 0; i < amount; i++) {\n        var segment = segs[i];\n        if (segment._path) segment = segs[i] = segment.clone();\n        segment._path = this;\n        segment._index = index + i;\n        if (segment._selection) this._updateSelection(segment, 0, segment._selection);\n      }\n\n      if (append) {\n        Base.push(segments, segs);\n      } else {\n        segments.splice.apply(segments, [index, 0].concat(segs));\n\n        for (var i = index + amount, l = segments.length; i < l; i++) {\n          segments[i]._index = i;\n        }\n      }\n\n      if (curves) {\n        var total = this._countCurves(),\n            start = index > 0 && index + amount - 1 === total ? index - 1 : index,\n            insert = start,\n            end = Math.min(start + amount, total);\n\n        if (segs._curves) {\n          curves.splice.apply(curves, [start, 0].concat(segs._curves));\n          insert += segs._curves.length;\n        }\n\n        for (var i = insert; i < end; i++) {\n          curves.splice(i, 0, new Curve(this, null, null));\n        }\n\n        this._adjustCurves(start, end);\n      }\n\n      this._changed(41);\n\n      return segs;\n    },\n    _adjustCurves: function _adjustCurves(start, end) {\n      var segments = this._segments,\n          curves = this._curves,\n          curve;\n\n      for (var i = start; i < end; i++) {\n        curve = curves[i];\n        curve._path = this;\n        curve._segment1 = segments[i];\n        curve._segment2 = segments[i + 1] || segments[0];\n\n        curve._changed();\n      }\n\n      if (curve = curves[this._closed && !start ? segments.length - 1 : start - 1]) {\n        curve._segment2 = segments[start] || segments[0];\n\n        curve._changed();\n      }\n\n      if (curve = curves[end]) {\n        curve._segment1 = segments[end];\n\n        curve._changed();\n      }\n    },\n    _countCurves: function _countCurves() {\n      var length = this._segments.length;\n      return !this._closed && length > 0 ? length - 1 : length;\n    },\n    add: function add(segment1) {\n      var args = arguments;\n      return args.length > 1 && typeof segment1 !== 'number' ? this._add(Segment.readList(args)) : this._add([Segment.read(args)])[0];\n    },\n    insert: function insert(index, segment1) {\n      var args = arguments;\n      return args.length > 2 && typeof segment1 !== 'number' ? this._add(Segment.readList(args, 1), index) : this._add([Segment.read(args, 1)], index)[0];\n    },\n    addSegment: function addSegment() {\n      return this._add([Segment.read(arguments)])[0];\n    },\n    insertSegment: function insertSegment(index) {\n      return this._add([Segment.read(arguments, 1)], index)[0];\n    },\n    addSegments: function addSegments(segments) {\n      return this._add(Segment.readList(segments));\n    },\n    insertSegments: function insertSegments(index, segments) {\n      return this._add(Segment.readList(segments), index);\n    },\n    removeSegment: function removeSegment(index) {\n      return this.removeSegments(index, index + 1)[0] || null;\n    },\n    removeSegments: function removeSegments(start, end, _includeCurves) {\n      start = start || 0;\n      end = Base.pick(end, this._segments.length);\n      var segments = this._segments,\n          curves = this._curves,\n          count = segments.length,\n          removed = segments.splice(start, end - start),\n          amount = removed.length;\n      if (!amount) return removed;\n\n      for (var i = 0; i < amount; i++) {\n        var segment = removed[i];\n        if (segment._selection) this._updateSelection(segment, segment._selection, 0);\n        segment._index = segment._path = null;\n      }\n\n      for (var i = start, l = segments.length; i < l; i++) {\n        segments[i]._index = i;\n      }\n\n      if (curves) {\n        var index = start > 0 && end === count + (this._closed ? 1 : 0) ? start - 1 : start,\n            curves = curves.splice(index, amount);\n\n        for (var i = curves.length - 1; i >= 0; i--) {\n          curves[i]._path = null;\n        }\n\n        if (_includeCurves) removed._curves = curves.slice(1);\n\n        this._adjustCurves(index, index);\n      }\n\n      this._changed(41);\n\n      return removed;\n    },\n    clear: '#removeSegments',\n    hasHandles: function hasHandles() {\n      var segments = this._segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        if (segments[i].hasHandles()) return true;\n      }\n\n      return false;\n    },\n    clearHandles: function clearHandles() {\n      var segments = this._segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        segments[i].clearHandles();\n      }\n    },\n    getLength: function getLength() {\n      if (this._length == null) {\n        var curves = this.getCurves(),\n            length = 0;\n\n        for (var i = 0, l = curves.length; i < l; i++) {\n          length += curves[i].getLength();\n        }\n\n        this._length = length;\n      }\n\n      return this._length;\n    },\n    getArea: function getArea() {\n      var area = this._area;\n\n      if (area == null) {\n        var segments = this._segments,\n            closed = this._closed;\n        area = 0;\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          var last = i + 1 === l;\n          area += Curve.getArea(Curve.getValues(segments[i], segments[last ? 0 : i + 1], null, last && !closed));\n        }\n\n        this._area = area;\n      }\n\n      return area;\n    },\n    isFullySelected: function isFullySelected() {\n      var length = this._segments.length;\n      return this.isSelected() && length > 0 && this._segmentSelection === length * 7;\n    },\n    setFullySelected: function setFullySelected(selected) {\n      if (selected) this._selectSegments(true);\n      this.setSelected(selected);\n    },\n    setSelection: function setSelection(selection) {\n      if (!(selection & 1)) this._selectSegments(false);\n      setSelection.base.call(this, selection);\n    },\n    _selectSegments: function _selectSegments(selected) {\n      var segments = this._segments,\n          length = segments.length,\n          selection = selected ? 7 : 0;\n      this._segmentSelection = selection * length;\n\n      for (var i = 0; i < length; i++) {\n        segments[i]._selection = selection;\n      }\n    },\n    _updateSelection: function _updateSelection(segment, oldSelection, newSelection) {\n      segment._selection = newSelection;\n      var selection = this._segmentSelection += newSelection - oldSelection;\n      if (selection > 0) this.setSelected(true);\n    },\n    divideAt: function divideAt(location) {\n      var loc = this.getLocationAt(location),\n          curve;\n      return loc && (curve = loc.getCurve().divideAt(loc.getCurveOffset())) ? curve._segment1 : null;\n    },\n    splitAt: function splitAt(location) {\n      var loc = this.getLocationAt(location),\n          index = loc && loc.index,\n          time = loc && loc.time,\n          tMin = 1e-8,\n          tMax = 1 - tMin;\n\n      if (time > tMax) {\n        index++;\n        time = 0;\n      }\n\n      var curves = this.getCurves();\n\n      if (index >= 0 && index < curves.length) {\n        if (time >= tMin) {\n          curves[index++].divideAtTime(time);\n        }\n\n        var segs = this.removeSegments(index, this._segments.length, true),\n            path;\n\n        if (this._closed) {\n          this.setClosed(false);\n          path = this;\n        } else {\n          path = new Path(Item.NO_INSERT);\n          path.insertAbove(this);\n          path.copyAttributes(this);\n        }\n\n        path._add(segs, 0);\n\n        this.addSegment(segs[0]);\n        return path;\n      }\n\n      return null;\n    },\n    split: function split(index, time) {\n      var curve,\n          location = time === undefined ? index : (curve = this.getCurves()[index]) && curve.getLocationAtTime(time);\n      return location != null ? this.splitAt(location) : null;\n    },\n    join: function join(path, tolerance) {\n      var epsilon = tolerance || 0;\n\n      if (path && path !== this) {\n        var segments = path._segments,\n            last1 = this.getLastSegment(),\n            last2 = path.getLastSegment();\n        if (!last2) return this;\n        if (last1 && last1._point.isClose(last2._point, epsilon)) path.reverse();\n        var first2 = path.getFirstSegment();\n\n        if (last1 && last1._point.isClose(first2._point, epsilon)) {\n          last1.setHandleOut(first2._handleOut);\n\n          this._add(segments.slice(1));\n        } else {\n          var first1 = this.getFirstSegment();\n          if (first1 && first1._point.isClose(first2._point, epsilon)) path.reverse();\n          last2 = path.getLastSegment();\n\n          if (first1 && first1._point.isClose(last2._point, epsilon)) {\n            first1.setHandleIn(last2._handleIn);\n\n            this._add(segments.slice(0, segments.length - 1), 0);\n          } else {\n            this._add(segments.slice());\n          }\n        }\n\n        if (path._closed) this._add([segments[0]]);\n        path.remove();\n      }\n\n      var first = this.getFirstSegment(),\n          last = this.getLastSegment();\n\n      if (first !== last && first._point.isClose(last._point, epsilon)) {\n        first.setHandleIn(last._handleIn);\n        last.remove();\n        this.setClosed(true);\n      }\n\n      return this;\n    },\n    reduce: function reduce(options) {\n      var curves = this.getCurves(),\n          simplify = options && options.simplify,\n          tolerance = simplify ? 1e-7 : 0;\n\n      for (var i = curves.length - 1; i >= 0; i--) {\n        var curve = curves[i];\n        if (!curve.hasHandles() && (!curve.hasLength(tolerance) || simplify && curve.isCollinear(curve.getNext()))) curve.remove();\n      }\n\n      return this;\n    },\n    reverse: function reverse() {\n      this._segments.reverse();\n\n      for (var i = 0, l = this._segments.length; i < l; i++) {\n        var segment = this._segments[i];\n        var handleIn = segment._handleIn;\n        segment._handleIn = segment._handleOut;\n        segment._handleOut = handleIn;\n        segment._index = i;\n      }\n\n      this._curves = null;\n\n      this._changed(9);\n    },\n    flatten: function flatten(flatness) {\n      var flattener = new PathFlattener(this, flatness || 0.25, 256, true),\n          parts = flattener.parts,\n          length = parts.length,\n          segments = [];\n\n      for (var i = 0; i < length; i++) {\n        segments.push(new Segment(parts[i].curve.slice(0, 2)));\n      }\n\n      if (!this._closed && length > 0) {\n        segments.push(new Segment(parts[length - 1].curve.slice(6)));\n      }\n\n      this.setSegments(segments);\n    },\n    simplify: function simplify(tolerance) {\n      var segments = new PathFitter(this).fit(tolerance || 2.5);\n      if (segments) this.setSegments(segments);\n      return !!segments;\n    },\n    smooth: function smooth(options) {\n      var that = this,\n          opts = options || {},\n          type = opts.type || 'asymmetric',\n          segments = this._segments,\n          length = segments.length,\n          closed = this._closed;\n\n      function getIndex(value, _default) {\n        var index = value && value.index;\n\n        if (index != null) {\n          var path = value.path;\n          if (path && path !== that) throw new Error(value._class + ' ' + index + ' of ' + path + ' is not part of ' + that);\n          if (_default && value instanceof Curve) index++;\n        } else {\n          index = typeof value === 'number' ? value : _default;\n        }\n\n        return Math.min(index < 0 && closed ? index % length : index < 0 ? index + length : index, length - 1);\n      }\n\n      var loop = closed && opts.from === undefined && opts.to === undefined,\n          from = getIndex(opts.from, 0),\n          to = getIndex(opts.to, length - 1);\n\n      if (from > to) {\n        if (closed) {\n          from -= length;\n        } else {\n          var tmp = from;\n          from = to;\n          to = tmp;\n        }\n      }\n\n      if (/^(?:asymmetric|continuous)$/.test(type)) {\n        var asymmetric = type === 'asymmetric',\n            min = Math.min,\n            amount = to - from + 1,\n            n = amount - 1,\n            padding = loop ? min(amount, 4) : 1,\n            paddingLeft = padding,\n            paddingRight = padding,\n            knots = [];\n\n        if (!closed) {\n          paddingLeft = min(1, from);\n          paddingRight = min(1, length - to - 1);\n        }\n\n        n += paddingLeft + paddingRight;\n        if (n <= 1) return;\n\n        for (var i = 0, j = from - paddingLeft; i <= n; i++, j++) {\n          knots[i] = segments[(j < 0 ? j + length : j) % length]._point;\n        }\n\n        var x = knots[0]._x + 2 * knots[1]._x,\n            y = knots[0]._y + 2 * knots[1]._y,\n            f = 2,\n            n_1 = n - 1,\n            rx = [x],\n            ry = [y],\n            rf = [f],\n            px = [],\n            py = [];\n\n        for (var i = 1; i < n; i++) {\n          var internal = i < n_1,\n              a = internal ? 1 : asymmetric ? 1 : 2,\n              b = internal ? 4 : asymmetric ? 2 : 7,\n              u = internal ? 4 : asymmetric ? 3 : 8,\n              v = internal ? 2 : asymmetric ? 0 : 1,\n              m = a / f;\n          f = rf[i] = b - m;\n          x = rx[i] = u * knots[i]._x + v * knots[i + 1]._x - m * x;\n          y = ry[i] = u * knots[i]._y + v * knots[i + 1]._y - m * y;\n        }\n\n        px[n_1] = rx[n_1] / rf[n_1];\n        py[n_1] = ry[n_1] / rf[n_1];\n\n        for (var i = n - 2; i >= 0; i--) {\n          px[i] = (rx[i] - px[i + 1]) / rf[i];\n          py[i] = (ry[i] - py[i + 1]) / rf[i];\n        }\n\n        px[n] = (3 * knots[n]._x - px[n_1]) / 2;\n        py[n] = (3 * knots[n]._y - py[n_1]) / 2;\n\n        for (var i = paddingLeft, max = n - paddingRight, j = from; i <= max; i++, j++) {\n          var segment = segments[j < 0 ? j + length : j],\n              pt = segment._point,\n              hx = px[i] - pt._x,\n              hy = py[i] - pt._y;\n          if (loop || i < max) segment.setHandleOut(hx, hy);\n          if (loop || i > paddingLeft) segment.setHandleIn(-hx, -hy);\n        }\n      } else {\n        for (var i = from; i <= to; i++) {\n          segments[i < 0 ? i + length : i].smooth(opts, !loop && i === from, !loop && i === to);\n        }\n      }\n    },\n    toShape: function toShape(insert) {\n      if (!this._closed) return null;\n      var segments = this._segments,\n          type,\n          size,\n          radius,\n          topCenter;\n\n      function isCollinear(i, j) {\n        var seg1 = segments[i],\n            seg2 = seg1.getNext(),\n            seg3 = segments[j],\n            seg4 = seg3.getNext();\n        return seg1._handleOut.isZero() && seg2._handleIn.isZero() && seg3._handleOut.isZero() && seg4._handleIn.isZero() && seg2._point.subtract(seg1._point).isCollinear(seg4._point.subtract(seg3._point));\n      }\n\n      function isOrthogonal(i) {\n        var seg2 = segments[i],\n            seg1 = seg2.getPrevious(),\n            seg3 = seg2.getNext();\n        return seg1._handleOut.isZero() && seg2._handleIn.isZero() && seg2._handleOut.isZero() && seg3._handleIn.isZero() && seg2._point.subtract(seg1._point).isOrthogonal(seg3._point.subtract(seg2._point));\n      }\n\n      function isArc(i) {\n        var seg1 = segments[i],\n            seg2 = seg1.getNext(),\n            handle1 = seg1._handleOut,\n            handle2 = seg2._handleIn,\n            kappa = 0.5522847498307936;\n\n        if (handle1.isOrthogonal(handle2)) {\n          var pt1 = seg1._point,\n              pt2 = seg2._point,\n              corner = new Line(pt1, handle1, true).intersect(new Line(pt2, handle2, true), true);\n          return corner && Numerical.isZero(handle1.getLength() / corner.subtract(pt1).getLength() - kappa) && Numerical.isZero(handle2.getLength() / corner.subtract(pt2).getLength() - kappa);\n        }\n\n        return false;\n      }\n\n      function getDistance(i, j) {\n        return segments[i]._point.getDistance(segments[j]._point);\n      }\n\n      if (!this.hasHandles() && segments.length === 4 && isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n        type = Shape.Rectangle;\n        size = new Size(getDistance(0, 3), getDistance(0, 1));\n        topCenter = segments[1]._point.add(segments[2]._point).divide(2);\n      } else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4) && isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n        type = Shape.Rectangle;\n        size = new Size(getDistance(1, 6), getDistance(0, 3));\n        radius = size.subtract(new Size(getDistance(0, 7), getDistance(1, 2))).divide(2);\n        topCenter = segments[3]._point.add(segments[4]._point).divide(2);\n      } else if (segments.length === 4 && isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n        if (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n          type = Shape.Circle;\n          radius = getDistance(0, 2) / 2;\n        } else {\n          type = Shape.Ellipse;\n          radius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n        }\n\n        topCenter = segments[1]._point;\n      }\n\n      if (type) {\n        var center = this.getPosition(true),\n            shape = new type({\n          center: center,\n          size: size,\n          radius: radius,\n          insert: false\n        });\n        shape.copyAttributes(this, true);\n\n        shape._matrix.prepend(this._matrix);\n\n        shape.rotate(topCenter.subtract(center).getAngle() + 90);\n        if (insert === undefined || insert) shape.insertAbove(this);\n        return shape;\n      }\n\n      return null;\n    },\n    toPath: '#clone',\n    compare: function compare(path) {\n      if (!path || path instanceof CompoundPath) return compare.base.call(this, path);\n      var curves1 = this.getCurves(),\n          curves2 = path.getCurves(),\n          length1 = curves1.length,\n          length2 = curves2.length;\n\n      if (!length1 || !length2) {\n        return length1 == length2;\n      }\n\n      var v1 = curves1[0].getValues(),\n          values2 = [],\n          pos1 = 0,\n          pos2,\n          end1 = 0,\n          end2;\n\n      for (var i = 0; i < length2; i++) {\n        var v2 = curves2[i].getValues();\n        values2.push(v2);\n        var overlaps = Curve.getOverlaps(v1, v2);\n\n        if (overlaps) {\n          pos2 = !i && overlaps[0][0] > 0 ? length2 - 1 : i;\n          end2 = overlaps[0][1];\n          break;\n        }\n      }\n\n      var abs = Math.abs,\n          epsilon = 1e-8,\n          v2 = values2[pos2],\n          start2;\n\n      while (v1 && v2) {\n        var overlaps = Curve.getOverlaps(v1, v2);\n\n        if (overlaps) {\n          var t1 = overlaps[0][0];\n\n          if (abs(t1 - end1) < epsilon) {\n            end1 = overlaps[1][0];\n\n            if (end1 === 1) {\n              v1 = ++pos1 < length1 ? curves1[pos1].getValues() : null;\n              end1 = 0;\n            }\n\n            var t2 = overlaps[0][1];\n\n            if (abs(t2 - end2) < epsilon) {\n              if (!start2) start2 = [pos2, t2];\n              end2 = overlaps[1][1];\n\n              if (end2 === 1) {\n                if (++pos2 >= length2) pos2 = 0;\n                v2 = values2[pos2] || curves2[pos2].getValues();\n                end2 = 0;\n              }\n\n              if (!v1) {\n                return start2[0] === pos2 && start2[1] === end2;\n              }\n\n              continue;\n            }\n          }\n        }\n\n        break;\n      }\n\n      return false;\n    },\n    _hitTestSelf: function _hitTestSelf(point, options, viewMatrix, strokeMatrix) {\n      var that = this,\n          style = this.getStyle(),\n          segments = this._segments,\n          numSegments = segments.length,\n          closed = this._closed,\n          tolerancePadding = options._tolerancePadding,\n          strokePadding = tolerancePadding,\n          join,\n          cap,\n          miterLimit,\n          area,\n          loc,\n          res,\n          hitStroke = options.stroke && style.hasStroke(),\n          hitFill = options.fill && style.hasFill(),\n          hitCurves = options.curves,\n          strokeRadius = hitStroke ? style.getStrokeWidth() / 2 : hitFill && options.tolerance > 0 || hitCurves ? 0 : null;\n\n      if (strokeRadius !== null) {\n        if (strokeRadius > 0) {\n          join = style.getStrokeJoin();\n          cap = style.getStrokeCap();\n          miterLimit = style.getMiterLimit();\n          strokePadding = strokePadding.add(Path._getStrokePadding(strokeRadius, strokeMatrix));\n        } else {\n          join = cap = 'round';\n        }\n      }\n\n      function isCloseEnough(pt, padding) {\n        return point.subtract(pt).divide(padding).length <= 1;\n      }\n\n      function checkSegmentPoint(seg, pt, name) {\n        if (!options.selected || pt.isSelected()) {\n          var anchor = seg._point;\n          if (pt !== anchor) pt = pt.add(anchor);\n\n          if (isCloseEnough(pt, strokePadding)) {\n            return new HitResult(name, that, {\n              segment: seg,\n              point: pt\n            });\n          }\n        }\n      }\n\n      function checkSegmentPoints(seg, ends) {\n        return (ends || options.segments) && checkSegmentPoint(seg, seg._point, 'segment') || !ends && options.handles && (checkSegmentPoint(seg, seg._handleIn, 'handle-in') || checkSegmentPoint(seg, seg._handleOut, 'handle-out'));\n      }\n\n      function addToArea(point) {\n        area.add(point);\n      }\n\n      function checkSegmentStroke(segment) {\n        var isJoin = closed || segment._index > 0 && segment._index < numSegments - 1;\n\n        if ((isJoin ? join : cap) === 'round') {\n          return isCloseEnough(segment._point, strokePadding);\n        } else {\n          area = new Path({\n            internal: true,\n            closed: true\n          });\n\n          if (isJoin) {\n            if (!segment.isSmooth()) {\n              Path._addBevelJoin(segment, join, strokeRadius, miterLimit, null, strokeMatrix, addToArea, true);\n            }\n          } else if (cap === 'square') {\n            Path._addSquareCap(segment, cap, strokeRadius, null, strokeMatrix, addToArea, true);\n          }\n\n          if (!area.isEmpty()) {\n            var loc;\n            return area.contains(point) || (loc = area.getNearestLocation(point)) && isCloseEnough(loc.getPoint(), tolerancePadding);\n          }\n        }\n      }\n\n      if (options.ends && !options.segments && !closed) {\n        if (res = checkSegmentPoints(segments[0], true) || checkSegmentPoints(segments[numSegments - 1], true)) return res;\n      } else if (options.segments || options.handles) {\n        for (var i = 0; i < numSegments; i++) {\n          if (res = checkSegmentPoints(segments[i])) return res;\n        }\n      }\n\n      if (strokeRadius !== null) {\n        loc = this.getNearestLocation(point);\n\n        if (loc) {\n          var time = loc.getTime();\n\n          if (time === 0 || time === 1 && numSegments > 1) {\n            if (!checkSegmentStroke(loc.getSegment())) loc = null;\n          } else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n            loc = null;\n          }\n        }\n\n        if (!loc && join === 'miter' && numSegments > 1) {\n          for (var i = 0; i < numSegments; i++) {\n            var segment = segments[i];\n\n            if (point.getDistance(segment._point) <= miterLimit * strokeRadius && checkSegmentStroke(segment)) {\n              loc = segment.getLocation();\n              break;\n            }\n          }\n        }\n      }\n\n      return !loc && hitFill && this._contains(point) || loc && !hitStroke && !hitCurves ? new HitResult('fill', this) : loc ? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n        location: loc,\n        point: loc.getPoint()\n      }) : null;\n    }\n  }, Base.each(Curve._evaluateMethods, function (name) {\n    this[name + 'At'] = function (offset) {\n      var loc = this.getLocationAt(offset);\n      return loc && loc[name]();\n    };\n  }, {\n    beans: false,\n    getLocationOf: function getLocationOf() {\n      var point = Point.read(arguments),\n          curves = this.getCurves();\n\n      for (var i = 0, l = curves.length; i < l; i++) {\n        var loc = curves[i].getLocationOf(point);\n        if (loc) return loc;\n      }\n\n      return null;\n    },\n    getOffsetOf: function getOffsetOf() {\n      var loc = this.getLocationOf.apply(this, arguments);\n      return loc ? loc.getOffset() : null;\n    },\n    getLocationAt: function getLocationAt(offset) {\n      if (typeof offset === 'number') {\n        var curves = this.getCurves(),\n            length = 0;\n\n        for (var i = 0, l = curves.length; i < l; i++) {\n          var start = length,\n              curve = curves[i];\n          length += curve.getLength();\n\n          if (length > offset) {\n            return curve.getLocationAt(offset - start);\n          }\n        }\n\n        if (curves.length > 0 && offset <= this.getLength()) {\n          return new CurveLocation(curves[curves.length - 1], 1);\n        }\n      } else if (offset && offset.getPath && offset.getPath() === this) {\n        return offset;\n      }\n\n      return null;\n    },\n    getOffsetsWithTangent: function getOffsetsWithTangent() {\n      var tangent = Point.read(arguments);\n\n      if (tangent.isZero()) {\n        return [];\n      }\n\n      var offsets = [];\n      var curveStart = 0;\n      var curves = this.getCurves();\n\n      for (var i = 0, l = curves.length; i < l; i++) {\n        var curve = curves[i];\n        var curveTimes = curve.getTimesWithTangent(tangent);\n\n        for (var j = 0, m = curveTimes.length; j < m; j++) {\n          var offset = curveStart + curve.getOffsetAtTime(curveTimes[j]);\n\n          if (offsets.indexOf(offset) < 0) {\n            offsets.push(offset);\n          }\n        }\n\n        curveStart += curve.length;\n      }\n\n      return offsets;\n    }\n  }), new function () {\n    function drawHandles(ctx, segments, matrix, size) {\n      if (size <= 0) return;\n      var half = size / 2,\n          miniSize = size - 2,\n          miniHalf = half - 1,\n          coords = new Array(6),\n          pX,\n          pY;\n\n      function drawHandle(index) {\n        var hX = coords[index],\n            hY = coords[index + 1];\n\n        if (pX != hX || pY != hY) {\n          ctx.beginPath();\n          ctx.moveTo(pX, pY);\n          ctx.lineTo(hX, hY);\n          ctx.stroke();\n          ctx.beginPath();\n          ctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n          ctx.fill();\n        }\n      }\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i],\n            selection = segment._selection;\n\n        segment._transformCoordinates(matrix, coords);\n\n        pX = coords[0];\n        pY = coords[1];\n        if (selection & 2) drawHandle(2);\n        if (selection & 4) drawHandle(4);\n        ctx.fillRect(pX - half, pY - half, size, size);\n\n        if (miniSize > 0 && !(selection & 1)) {\n          var fillStyle = ctx.fillStyle;\n          ctx.fillStyle = '#ffffff';\n          ctx.fillRect(pX - miniHalf, pY - miniHalf, miniSize, miniSize);\n          ctx.fillStyle = fillStyle;\n        }\n      }\n    }\n\n    function drawSegments(ctx, path, matrix) {\n      var segments = path._segments,\n          length = segments.length,\n          coords = new Array(6),\n          first = true,\n          curX,\n          curY,\n          prevX,\n          prevY,\n          inX,\n          inY,\n          outX,\n          outY;\n\n      function drawSegment(segment) {\n        if (matrix) {\n          segment._transformCoordinates(matrix, coords);\n\n          curX = coords[0];\n          curY = coords[1];\n        } else {\n          var point = segment._point;\n          curX = point._x;\n          curY = point._y;\n        }\n\n        if (first) {\n          ctx.moveTo(curX, curY);\n          first = false;\n        } else {\n          if (matrix) {\n            inX = coords[2];\n            inY = coords[3];\n          } else {\n            var handle = segment._handleIn;\n            inX = curX + handle._x;\n            inY = curY + handle._y;\n          }\n\n          if (inX === curX && inY === curY && outX === prevX && outY === prevY) {\n            ctx.lineTo(curX, curY);\n          } else {\n            ctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n          }\n        }\n\n        prevX = curX;\n        prevY = curY;\n\n        if (matrix) {\n          outX = coords[4];\n          outY = coords[5];\n        } else {\n          var handle = segment._handleOut;\n          outX = prevX + handle._x;\n          outY = prevY + handle._y;\n        }\n      }\n\n      for (var i = 0; i < length; i++) {\n        drawSegment(segments[i]);\n      }\n\n      if (path._closed && length > 0) drawSegment(segments[0]);\n    }\n\n    return {\n      _draw: function _draw(ctx, param, viewMatrix, strokeMatrix) {\n        var dontStart = param.dontStart,\n            dontPaint = param.dontFinish || param.clip,\n            style = this.getStyle(),\n            hasFill = style.hasFill(),\n            hasStroke = style.hasStroke(),\n            dashArray = style.getDashArray(),\n            dashLength = !paper.support.nativeDash && hasStroke && dashArray && dashArray.length;\n        if (!dontStart) ctx.beginPath();\n\n        if (hasFill || hasStroke && !dashLength || dontPaint) {\n          drawSegments(ctx, this, strokeMatrix);\n          if (this._closed) ctx.closePath();\n        }\n\n        function getOffset(i) {\n          return dashArray[(i % dashLength + dashLength) % dashLength];\n        }\n\n        if (!dontPaint && (hasFill || hasStroke)) {\n          this._setStyles(ctx, param, viewMatrix);\n\n          if (hasFill) {\n            ctx.fill(style.getFillRule());\n            ctx.shadowColor = 'rgba(0,0,0,0)';\n          }\n\n          if (hasStroke) {\n            if (dashLength) {\n              if (!dontStart) ctx.beginPath();\n              var flattener = new PathFlattener(this, 0.25, 32, false, strokeMatrix),\n                  length = flattener.length,\n                  from = -style.getDashOffset(),\n                  to,\n                  i = 0;\n              from = from % length;\n\n              while (from > 0) {\n                from -= getOffset(i--) + getOffset(i--);\n              }\n\n              while (from < length) {\n                to = from + getOffset(i++);\n                if (from > 0 || to > 0) flattener.drawPart(ctx, Math.max(from, 0), Math.max(to, 0));\n                from = to + getOffset(i++);\n              }\n            }\n\n            ctx.stroke();\n          }\n        }\n      },\n      _drawSelected: function _drawSelected(ctx, matrix) {\n        ctx.beginPath();\n        drawSegments(ctx, this, matrix);\n        ctx.stroke();\n        drawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n      }\n    };\n  }(), new function () {\n    function getCurrentSegment(that) {\n      var segments = that._segments;\n      if (!segments.length) throw new Error('Use a moveTo() command first');\n      return segments[segments.length - 1];\n    }\n\n    return {\n      moveTo: function moveTo() {\n        var segments = this._segments;\n        if (segments.length === 1) this.removeSegment(0);\n        if (!segments.length) this._add([new Segment(Point.read(arguments))]);\n      },\n      moveBy: function moveBy() {\n        throw new Error('moveBy() is unsupported on Path items.');\n      },\n      lineTo: function lineTo() {\n        this._add([new Segment(Point.read(arguments))]);\n      },\n      cubicCurveTo: function cubicCurveTo() {\n        var args = arguments,\n            handle1 = Point.read(args),\n            handle2 = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this);\n        current.setHandleOut(handle1.subtract(current._point));\n\n        this._add([new Segment(to, handle2.subtract(to))]);\n      },\n      quadraticCurveTo: function quadraticCurveTo() {\n        var args = arguments,\n            handle = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.cubicCurveTo(handle.add(current.subtract(handle).multiply(1 / 3)), handle.add(to.subtract(handle).multiply(1 / 3)), to);\n      },\n      curveTo: function curveTo() {\n        var args = arguments,\n            through = Point.read(args),\n            to = Point.read(args),\n            t = Base.pick(Base.read(args), 0.5),\n            t1 = 1 - t,\n            current = getCurrentSegment(this)._point,\n            handle = through.subtract(current.multiply(t1 * t1)).subtract(to.multiply(t * t)).divide(2 * t * t1);\n\n        if (handle.isNaN()) throw new Error('Cannot put a curve through points with parameter = ' + t);\n        this.quadraticCurveTo(handle, to);\n      },\n      arcTo: function arcTo() {\n        var args = arguments,\n            abs = Math.abs,\n            sqrt = Math.sqrt,\n            current = getCurrentSegment(this),\n            from = current._point,\n            to = Point.read(args),\n            through,\n            peek = Base.peek(args),\n            clockwise = Base.pick(peek, true),\n            center,\n            extent,\n            vector,\n            matrix;\n\n        if (typeof clockwise === 'boolean') {\n          var middle = from.add(to).divide(2),\n              through = middle.add(middle.subtract(from).rotate(clockwise ? -90 : 90));\n        } else if (Base.remain(args) <= 2) {\n          through = to;\n          to = Point.read(args);\n        } else if (!from.equals(to)) {\n          var radius = Size.read(args),\n              isZero = Numerical.isZero;\n          if (isZero(radius.width) || isZero(radius.height)) return this.lineTo(to);\n          var rotation = Base.read(args),\n              clockwise = !!Base.read(args),\n              large = !!Base.read(args),\n              middle = from.add(to).divide(2),\n              pt = from.subtract(middle).rotate(-rotation),\n              x = pt.x,\n              y = pt.y,\n              rx = abs(radius.width),\n              ry = abs(radius.height),\n              rxSq = rx * rx,\n              rySq = ry * ry,\n              xSq = x * x,\n              ySq = y * y;\n          var factor = sqrt(xSq / rxSq + ySq / rySq);\n\n          if (factor > 1) {\n            rx *= factor;\n            ry *= factor;\n            rxSq = rx * rx;\n            rySq = ry * ry;\n          }\n\n          factor = (rxSq * rySq - rxSq * ySq - rySq * xSq) / (rxSq * ySq + rySq * xSq);\n          if (abs(factor) < 1e-12) factor = 0;\n          if (factor < 0) throw new Error('Cannot create an arc with the given arguments');\n          center = new Point(rx * y / ry, -ry * x / rx).multiply((large === clockwise ? -1 : 1) * sqrt(factor)).rotate(rotation).add(middle);\n          matrix = new Matrix().translate(center).rotate(rotation).scale(rx, ry);\n          vector = matrix._inverseTransform(from);\n          extent = vector.getDirectedAngle(matrix._inverseTransform(to));\n          if (!clockwise && extent > 0) extent -= 360;else if (clockwise && extent < 0) extent += 360;\n        }\n\n        if (through) {\n          var l1 = new Line(from.add(through).divide(2), through.subtract(from).rotate(90), true),\n              l2 = new Line(through.add(to).divide(2), to.subtract(through).rotate(90), true),\n              line = new Line(from, to),\n              throughSide = line.getSide(through);\n          center = l1.intersect(l2, true);\n\n          if (!center) {\n            if (!throughSide) return this.lineTo(to);\n            throw new Error('Cannot create an arc with the given arguments');\n          }\n\n          vector = from.subtract(center);\n          extent = vector.getDirectedAngle(to.subtract(center));\n          var centerSide = line.getSide(center, true);\n\n          if (centerSide === 0) {\n            extent = throughSide * abs(extent);\n          } else if (throughSide === centerSide) {\n            extent += extent < 0 ? 360 : -360;\n          }\n        }\n\n        if (extent) {\n          var epsilon = 1e-7,\n              ext = abs(extent),\n              count = ext >= 360 ? 4 : Math.ceil((ext - epsilon) / 90),\n              inc = extent / count,\n              half = inc * Math.PI / 360,\n              z = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n              segments = [];\n\n          for (var i = 0; i <= count; i++) {\n            var pt = to,\n                out = null;\n\n            if (i < count) {\n              out = vector.rotate(90).multiply(z);\n\n              if (matrix) {\n                pt = matrix._transformPoint(vector);\n                out = matrix._transformPoint(vector.add(out)).subtract(pt);\n              } else {\n                pt = center.add(vector);\n              }\n            }\n\n            if (!i) {\n              current.setHandleOut(out);\n            } else {\n              var _in = vector.rotate(-90).multiply(z);\n\n              if (matrix) {\n                _in = matrix._transformPoint(vector.add(_in)).subtract(pt);\n              }\n\n              segments.push(new Segment(pt, _in, out));\n            }\n\n            vector = vector.rotate(inc);\n          }\n\n          this._add(segments);\n        }\n      },\n      lineBy: function lineBy() {\n        var to = Point.read(arguments),\n            current = getCurrentSegment(this)._point;\n\n        this.lineTo(current.add(to));\n      },\n      curveBy: function curveBy() {\n        var args = arguments,\n            through = Point.read(args),\n            to = Point.read(args),\n            parameter = Base.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.curveTo(current.add(through), current.add(to), parameter);\n      },\n      cubicCurveBy: function cubicCurveBy() {\n        var args = arguments,\n            handle1 = Point.read(args),\n            handle2 = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.cubicCurveTo(current.add(handle1), current.add(handle2), current.add(to));\n      },\n      quadraticCurveBy: function quadraticCurveBy() {\n        var args = arguments,\n            handle = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.quadraticCurveTo(current.add(handle), current.add(to));\n      },\n      arcBy: function arcBy() {\n        var args = arguments,\n            current = getCurrentSegment(this)._point,\n            point = current.add(Point.read(args)),\n            clockwise = Base.pick(Base.peek(args), true);\n\n        if (typeof clockwise === 'boolean') {\n          this.arcTo(point, clockwise);\n        } else {\n          this.arcTo(point, current.add(Point.read(args)));\n        }\n      },\n      closePath: function closePath(tolerance) {\n        this.setClosed(true);\n        this.join(this, tolerance);\n      }\n    };\n  }(), {\n    _getBounds: function _getBounds(matrix, options) {\n      var method = options.handle ? 'getHandleBounds' : options.stroke ? 'getStrokeBounds' : 'getBounds';\n      return Path[method](this._segments, this._closed, this, matrix, options);\n    },\n    statics: {\n      getBounds: function getBounds(segments, closed, path, matrix, options, strokePadding) {\n        var first = segments[0];\n        if (!first) return new _Rectangle();\n\n        var coords = new Array(6),\n            prevCoords = first._transformCoordinates(matrix, new Array(6)),\n            min = prevCoords.slice(0, 2),\n            max = min.slice(),\n            roots = new Array(2);\n\n        function processSegment(segment) {\n          segment._transformCoordinates(matrix, coords);\n\n          for (var i = 0; i < 2; i++) {\n            Curve._addBounds(prevCoords[i], prevCoords[i + 4], coords[i + 2], coords[i], i, strokePadding ? strokePadding[i] : 0, min, max, roots);\n          }\n\n          var tmp = prevCoords;\n          prevCoords = coords;\n          coords = tmp;\n        }\n\n        for (var i = 1, l = segments.length; i < l; i++) {\n          processSegment(segments[i]);\n        }\n\n        if (closed) processSegment(first);\n        return new _Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n      },\n      getStrokeBounds: function getStrokeBounds(segments, closed, path, matrix, options) {\n        var style = path.getStyle(),\n            stroke = style.hasStroke(),\n            strokeWidth = style.getStrokeWidth(),\n            strokeMatrix = stroke && path._getStrokeMatrix(matrix, options),\n            strokePadding = stroke && Path._getStrokePadding(strokeWidth, strokeMatrix),\n            bounds = Path.getBounds(segments, closed, path, matrix, options, strokePadding);\n\n        if (!stroke) return bounds;\n        var strokeRadius = strokeWidth / 2,\n            join = style.getStrokeJoin(),\n            cap = style.getStrokeCap(),\n            miterLimit = style.getMiterLimit(),\n            joinBounds = new _Rectangle(new Size(strokePadding));\n\n        function addPoint(point) {\n          bounds = bounds.include(point);\n        }\n\n        function addRound(segment) {\n          bounds = bounds.unite(joinBounds.setCenter(segment._point.transform(matrix)));\n        }\n\n        function addJoin(segment, join) {\n          if (join === 'round' || segment.isSmooth()) {\n            addRound(segment);\n          } else {\n            Path._addBevelJoin(segment, join, strokeRadius, miterLimit, matrix, strokeMatrix, addPoint);\n          }\n        }\n\n        function addCap(segment, cap) {\n          if (cap === 'round') {\n            addRound(segment);\n          } else {\n            Path._addSquareCap(segment, cap, strokeRadius, matrix, strokeMatrix, addPoint);\n          }\n        }\n\n        var length = segments.length - (closed ? 0 : 1);\n\n        for (var i = 1; i < length; i++) {\n          addJoin(segments[i], join);\n        }\n\n        if (closed) {\n          addJoin(segments[0], join);\n        } else if (length > 0) {\n          addCap(segments[0], cap);\n          addCap(segments[segments.length - 1], cap);\n        }\n\n        return bounds;\n      },\n      _getStrokePadding: function _getStrokePadding(radius, matrix) {\n        if (!matrix) return [radius, radius];\n        var hor = new Point(radius, 0).transform(matrix),\n            ver = new Point(0, radius).transform(matrix),\n            phi = hor.getAngleInRadians(),\n            a = hor.getLength(),\n            b = ver.getLength();\n        var sin = Math.sin(phi),\n            cos = Math.cos(phi),\n            tan = Math.tan(phi),\n            tx = Math.atan2(b * tan, a),\n            ty = Math.atan2(b, tan * a);\n        return [Math.abs(a * Math.cos(tx) * cos + b * Math.sin(tx) * sin), Math.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n      },\n      _addBevelJoin: function _addBevelJoin(segment, join, radius, miterLimit, matrix, strokeMatrix, addPoint, isArea) {\n        var curve2 = segment.getCurve(),\n            curve1 = curve2.getPrevious(),\n            point = curve2.getPoint1().transform(matrix),\n            normal1 = curve1.getNormalAtTime(1).multiply(radius).transform(strokeMatrix),\n            normal2 = curve2.getNormalAtTime(0).multiply(radius).transform(strokeMatrix),\n            angle = normal1.getDirectedAngle(normal2);\n\n        if (angle < 0 || angle >= 180) {\n          normal1 = normal1.negate();\n          normal2 = normal2.negate();\n        }\n\n        if (isArea) addPoint(point);\n        addPoint(point.add(normal1));\n\n        if (join === 'miter') {\n          var corner = new Line(point.add(normal1), new Point(-normal1.y, normal1.x), true).intersect(new Line(point.add(normal2), new Point(-normal2.y, normal2.x), true), true);\n\n          if (corner && point.getDistance(corner) <= miterLimit * radius) {\n            addPoint(corner);\n          }\n        }\n\n        addPoint(point.add(normal2));\n      },\n      _addSquareCap: function _addSquareCap(segment, cap, radius, matrix, strokeMatrix, addPoint, isArea) {\n        var point = segment._point.transform(matrix),\n            loc = segment.getLocation(),\n            normal = loc.getNormal().multiply(loc.getTime() === 0 ? radius : -radius).transform(strokeMatrix);\n\n        if (cap === 'square') {\n          if (isArea) {\n            addPoint(point.subtract(normal));\n            addPoint(point.add(normal));\n          }\n\n          point = point.add(normal.rotate(-90));\n        }\n\n        addPoint(point.add(normal));\n        addPoint(point.subtract(normal));\n      },\n      getHandleBounds: function getHandleBounds(segments, closed, path, matrix, options) {\n        var style = path.getStyle(),\n            stroke = options.stroke && style.hasStroke(),\n            strokePadding,\n            joinPadding;\n\n        if (stroke) {\n          var strokeMatrix = path._getStrokeMatrix(matrix, options),\n              strokeRadius = style.getStrokeWidth() / 2,\n              joinRadius = strokeRadius;\n\n          if (style.getStrokeJoin() === 'miter') joinRadius = strokeRadius * style.getMiterLimit();\n          if (style.getStrokeCap() === 'square') joinRadius = Math.max(joinRadius, strokeRadius * Math.SQRT2);\n          strokePadding = Path._getStrokePadding(strokeRadius, strokeMatrix);\n          joinPadding = Path._getStrokePadding(joinRadius, strokeMatrix);\n        }\n\n        var coords = new Array(6),\n            x1 = Infinity,\n            x2 = -x1,\n            y1 = x1,\n            y2 = x2;\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          var segment = segments[i];\n\n          segment._transformCoordinates(matrix, coords);\n\n          for (var j = 0; j < 6; j += 2) {\n            var padding = !j ? joinPadding : strokePadding,\n                paddingX = padding ? padding[0] : 0,\n                paddingY = padding ? padding[1] : 0,\n                x = coords[j],\n                y = coords[j + 1],\n                xn = x - paddingX,\n                xx = x + paddingX,\n                yn = y - paddingY,\n                yx = y + paddingY;\n            if (xn < x1) x1 = xn;\n            if (xx > x2) x2 = xx;\n            if (yn < y1) y1 = yn;\n            if (yx > y2) y2 = yx;\n          }\n        }\n\n        return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n      }\n    }\n  });\n  Path.inject({\n    statics: new function () {\n      var kappa = 0.5522847498307936,\n          ellipseSegments = [new Segment([-1, 0], [0, kappa], [0, -kappa]), new Segment([0, -1], [-kappa, 0], [kappa, 0]), new Segment([1, 0], [0, -kappa], [0, kappa]), new Segment([0, 1], [kappa, 0], [-kappa, 0])];\n\n      function createPath(segments, closed, args) {\n        var props = Base.getNamed(args),\n            path = new Path(props && props.insert == false && Item.NO_INSERT);\n\n        path._add(segments);\n\n        path._closed = closed;\n        return path.set(props, {\n          insert: true\n        });\n      }\n\n      function createEllipse(center, radius, args) {\n        var segments = new Array(4);\n\n        for (var i = 0; i < 4; i++) {\n          var segment = ellipseSegments[i];\n          segments[i] = new Segment(segment._point.multiply(radius).add(center), segment._handleIn.multiply(radius), segment._handleOut.multiply(radius));\n        }\n\n        return createPath(segments, true, args);\n      }\n\n      return {\n        Line: function Line() {\n          var args = arguments;\n          return createPath([new Segment(Point.readNamed(args, 'from')), new Segment(Point.readNamed(args, 'to'))], false, args);\n        },\n        Circle: function Circle() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              radius = Base.readNamed(args, 'radius');\n          return createEllipse(center, new Size(radius), args);\n        },\n        Rectangle: function Rectangle() {\n          var args = arguments,\n              rect = _Rectangle.readNamed(args, 'rectangle'),\n              radius = Size.readNamed(args, 'radius', 0, {\n            readNull: true\n          }),\n              bl = rect.getBottomLeft(true),\n              tl = rect.getTopLeft(true),\n              tr = rect.getTopRight(true),\n              br = rect.getBottomRight(true),\n              segments;\n\n          if (!radius || radius.isZero()) {\n            segments = [new Segment(bl), new Segment(tl), new Segment(tr), new Segment(br)];\n          } else {\n            radius = Size.min(radius, rect.getSize(true).divide(2));\n            var rx = radius.width,\n                ry = radius.height,\n                hx = rx * kappa,\n                hy = ry * kappa;\n            segments = [new Segment(bl.add(rx, 0), null, [-hx, 0]), new Segment(bl.subtract(0, ry), [0, hy]), new Segment(tl.add(0, ry), null, [0, -hy]), new Segment(tl.add(rx, 0), [-hx, 0], null), new Segment(tr.subtract(rx, 0), null, [hx, 0]), new Segment(tr.add(0, ry), [0, -hy], null), new Segment(br.subtract(0, ry), null, [0, hy]), new Segment(br.subtract(rx, 0), [hx, 0])];\n          }\n\n          return createPath(segments, true, args);\n        },\n        RoundRectangle: '#Rectangle',\n        Ellipse: function Ellipse() {\n          var args = arguments,\n              ellipse = Shape._readEllipse(args);\n\n          return createEllipse(ellipse.center, ellipse.radius, args);\n        },\n        Oval: '#Ellipse',\n        Arc: function Arc() {\n          var args = arguments,\n              from = Point.readNamed(args, 'from'),\n              through = Point.readNamed(args, 'through'),\n              to = Point.readNamed(args, 'to'),\n              props = Base.getNamed(args),\n              path = new Path(props && props.insert == false && Item.NO_INSERT);\n          path.moveTo(from);\n          path.arcTo(through, to);\n          return path.set(props);\n        },\n        RegularPolygon: function RegularPolygon() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              sides = Base.readNamed(args, 'sides'),\n              radius = Base.readNamed(args, 'radius'),\n              step = 360 / sides,\n              three = sides % 3 === 0,\n              vector = new Point(0, three ? -radius : radius),\n              offset = three ? -1 : 0.5,\n              segments = new Array(sides);\n\n          for (var i = 0; i < sides; i++) {\n            segments[i] = new Segment(center.add(vector.rotate((i + offset) * step)));\n          }\n\n          return createPath(segments, true, args);\n        },\n        Star: function Star() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              points = Base.readNamed(args, 'points') * 2,\n              radius1 = Base.readNamed(args, 'radius1'),\n              radius2 = Base.readNamed(args, 'radius2'),\n              step = 360 / points,\n              vector = new Point(0, -1),\n              segments = new Array(points);\n\n          for (var i = 0; i < points; i++) {\n            segments[i] = new Segment(center.add(vector.rotate(step * i).multiply(i % 2 ? radius2 : radius1)));\n          }\n\n          return createPath(segments, true, args);\n        }\n      };\n    }()\n  });\n  var CompoundPath = PathItem.extend({\n    _class: 'CompoundPath',\n    _serializeFields: {\n      children: []\n    },\n    beans: true,\n    initialize: function CompoundPath(arg) {\n      this._children = [];\n      this._namedChildren = {};\n\n      if (!this._initialize(arg)) {\n        if (typeof arg === 'string') {\n          this.setPathData(arg);\n        } else {\n          this.addChildren(Array.isArray(arg) ? arg : arguments);\n        }\n      }\n    },\n    insertChildren: function insertChildren(index, items) {\n      var list = items,\n          first = list[0];\n      if (first && typeof first[0] === 'number') list = [list];\n\n      for (var i = items.length - 1; i >= 0; i--) {\n        var item = list[i];\n        if (list === items && !(item instanceof Path)) list = Base.slice(list);\n\n        if (Array.isArray(item)) {\n          list[i] = new Path({\n            segments: item,\n            insert: false\n          });\n        } else if (item instanceof CompoundPath) {\n          list.splice.apply(list, [i, 1].concat(item.removeChildren()));\n          item.remove();\n        }\n      }\n\n      return insertChildren.base.call(this, index, list);\n    },\n    reduce: function reduce(options) {\n      var children = this._children;\n\n      for (var i = children.length - 1; i >= 0; i--) {\n        var path = children[i].reduce(options);\n        if (path.isEmpty()) path.remove();\n      }\n\n      if (!children.length) {\n        var path = new Path(Item.NO_INSERT);\n        path.copyAttributes(this);\n        path.insertAbove(this);\n        this.remove();\n        return path;\n      }\n\n      return reduce.base.call(this);\n    },\n    isClosed: function isClosed() {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        if (!children[i]._closed) return false;\n      }\n\n      return true;\n    },\n    setClosed: function setClosed(closed) {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].setClosed(closed);\n      }\n    },\n    getFirstSegment: function getFirstSegment() {\n      var first = this.getFirstChild();\n      return first && first.getFirstSegment();\n    },\n    getLastSegment: function getLastSegment() {\n      var last = this.getLastChild();\n      return last && last.getLastSegment();\n    },\n    getCurves: function getCurves() {\n      var children = this._children,\n          curves = [];\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        Base.push(curves, children[i].getCurves());\n      }\n\n      return curves;\n    },\n    getFirstCurve: function getFirstCurve() {\n      var first = this.getFirstChild();\n      return first && first.getFirstCurve();\n    },\n    getLastCurve: function getLastCurve() {\n      var last = this.getLastChild();\n      return last && last.getLastCurve();\n    },\n    getArea: function getArea() {\n      var children = this._children,\n          area = 0;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        area += children[i].getArea();\n      }\n\n      return area;\n    },\n    getLength: function getLength() {\n      var children = this._children,\n          length = 0;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        length += children[i].getLength();\n      }\n\n      return length;\n    },\n    getPathData: function getPathData(_matrix, _precision) {\n      var children = this._children,\n          paths = [];\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i],\n            mx = child._matrix;\n        paths.push(child.getPathData(_matrix && !mx.isIdentity() ? _matrix.appended(mx) : _matrix, _precision));\n      }\n\n      return paths.join('');\n    },\n    _hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n      return _hitTestChildren.base.call(this, point, options.class === Path || options.type === 'path' ? options : Base.set({}, options, {\n        fill: false\n      }), viewMatrix);\n    },\n    _draw: function _draw(ctx, param, viewMatrix, strokeMatrix) {\n      var children = this._children;\n      if (!children.length) return;\n      param = param.extend({\n        dontStart: true,\n        dontFinish: true\n      });\n      ctx.beginPath();\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].draw(ctx, param, strokeMatrix);\n      }\n\n      if (!param.clip) {\n        this._setStyles(ctx, param, viewMatrix);\n\n        var style = this._style;\n\n        if (style.hasFill()) {\n          ctx.fill(style.getFillRule());\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n        }\n\n        if (style.hasStroke()) ctx.stroke();\n      }\n    },\n    _drawSelected: function _drawSelected(ctx, matrix, selectionItems) {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i],\n            mx = child._matrix;\n\n        if (!selectionItems[child._id]) {\n          child._drawSelected(ctx, mx.isIdentity() ? matrix : matrix.appended(mx));\n        }\n      }\n    }\n  }, new function () {\n    function getCurrentPath(that, check) {\n      var children = that._children;\n      if (check && !children.length) throw new Error('Use a moveTo() command first');\n      return children[children.length - 1];\n    }\n\n    return Base.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo', 'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'], function (key) {\n      this[key] = function () {\n        var path = getCurrentPath(this, true);\n        path[key].apply(path, arguments);\n      };\n    }, {\n      moveTo: function moveTo() {\n        var current = getCurrentPath(this),\n            path = current && current.isEmpty() ? current : new Path(Item.NO_INSERT);\n        if (path !== current) this.addChild(path);\n        path.moveTo.apply(path, arguments);\n      },\n      moveBy: function moveBy() {\n        var current = getCurrentPath(this, true),\n            last = current && current.getLastSegment(),\n            point = Point.read(arguments);\n        this.moveTo(last ? point.add(last._point) : point);\n      },\n      closePath: function closePath(tolerance) {\n        getCurrentPath(this, true).closePath(tolerance);\n      }\n    });\n  }(), Base.each(['reverse', 'flatten', 'simplify', 'smooth'], function (key) {\n    this[key] = function (param) {\n      var children = this._children,\n          res;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        res = children[i][key](param) || res;\n      }\n\n      return res;\n    };\n  }, {}));\n  PathItem.inject(new function () {\n    var min = Math.min,\n        max = Math.max,\n        abs = Math.abs,\n        operators = {\n      unite: {\n        '1': true,\n        '2': true\n      },\n      intersect: {\n        '2': true\n      },\n      subtract: {\n        '1': true\n      },\n      exclude: {\n        '1': true,\n        '-1': true\n      }\n    };\n\n    function getPaths(path) {\n      return path._children || [path];\n    }\n\n    function preparePath(path, resolve) {\n      var res = path.clone(false).reduce({\n        simplify: true\n      }).transform(null, true, true);\n\n      if (resolve) {\n        var paths = getPaths(res);\n\n        for (var i = 0, l = paths.length; i < l; i++) {\n          var path = paths[i];\n\n          if (!path._closed && !path.isEmpty()) {\n            path.closePath(1e-12);\n            path.getFirstSegment().setHandleIn(0, 0);\n            path.getLastSegment().setHandleOut(0, 0);\n          }\n        }\n\n        res = res.resolveCrossings().reorient(res.getFillRule() === 'nonzero', true);\n      }\n\n      return res;\n    }\n\n    function createResult(paths, simplify, path1, path2, options) {\n      var result = new CompoundPath(Item.NO_INSERT);\n      result.addChildren(paths, true);\n      result = result.reduce({\n        simplify: simplify\n      });\n\n      if (!(options && options.insert == false)) {\n        result.insertAbove(path2 && path1.isSibling(path2) && path1.getIndex() < path2.getIndex() ? path2 : path1);\n      }\n\n      result.copyAttributes(path1, true);\n      return result;\n    }\n\n    function filterIntersection(inter) {\n      return inter.hasOverlap() || inter.isCrossing();\n    }\n\n    function traceBoolean(path1, path2, operation, options) {\n      if (options && (options.trace == false || options.stroke) && /^(subtract|intersect)$/.test(operation)) return splitBoolean(path1, path2, operation);\n\n      var _path1 = preparePath(path1, true),\n          _path2 = path2 && path1 !== path2 && preparePath(path2, true),\n          operator = operators[operation];\n\n      operator[operation] = true;\n      if (_path2 && (operator.subtract || operator.exclude) ^ (_path2.isClockwise() ^ _path1.isClockwise())) _path2.reverse();\n\n      var crossings = divideLocations(CurveLocation.expand(_path1.getIntersections(_path2, filterIntersection))),\n          paths1 = getPaths(_path1),\n          paths2 = _path2 && getPaths(_path2),\n          segments = [],\n          curves = [],\n          paths;\n\n      function collectPaths(paths) {\n        for (var i = 0, l = paths.length; i < l; i++) {\n          var path = paths[i];\n          Base.push(segments, path._segments);\n          Base.push(curves, path.getCurves());\n          path._overlapsOnly = true;\n        }\n      }\n\n      function getCurves(indices) {\n        var list = [];\n\n        for (var i = 0, l = indices && indices.length; i < l; i++) {\n          list.push(curves[indices[i]]);\n        }\n\n        return list;\n      }\n\n      if (crossings.length) {\n        collectPaths(paths1);\n        if (paths2) collectPaths(paths2);\n        var curvesValues = new Array(curves.length);\n\n        for (var i = 0, l = curves.length; i < l; i++) {\n          curvesValues[i] = curves[i].getValues();\n        }\n\n        var curveCollisions = CollisionDetection.findCurveBoundsCollisions(curvesValues, curvesValues, 0, true);\n        var curveCollisionsMap = {};\n\n        for (var i = 0; i < curves.length; i++) {\n          var curve = curves[i],\n              id = curve._path._id,\n              map = curveCollisionsMap[id] = curveCollisionsMap[id] || {};\n          map[curve.getIndex()] = {\n            hor: getCurves(curveCollisions[i].hor),\n            ver: getCurves(curveCollisions[i].ver)\n          };\n        }\n\n        for (var i = 0, l = crossings.length; i < l; i++) {\n          propagateWinding(crossings[i]._segment, _path1, _path2, curveCollisionsMap, operator);\n        }\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          var segment = segments[i],\n              inter = segment._intersection;\n\n          if (!segment._winding) {\n            propagateWinding(segment, _path1, _path2, curveCollisionsMap, operator);\n          }\n\n          if (!(inter && inter._overlap)) segment._path._overlapsOnly = false;\n        }\n\n        paths = tracePaths(segments, operator);\n      } else {\n        paths = reorientPaths(paths2 ? paths1.concat(paths2) : paths1.slice(), function (w) {\n          return !!operator[w];\n        });\n      }\n\n      return createResult(paths, true, path1, path2, options);\n    }\n\n    function splitBoolean(path1, path2, operation) {\n      var _path1 = preparePath(path1),\n          _path2 = preparePath(path2),\n          crossings = _path1.getIntersections(_path2, filterIntersection),\n          subtract = operation === 'subtract',\n          divide = operation === 'divide',\n          added = {},\n          paths = [];\n\n      function addPath(path) {\n        if (!added[path._id] && (divide || _path2.contains(path.getPointAt(path.getLength() / 2)) ^ subtract)) {\n          paths.unshift(path);\n          return added[path._id] = true;\n        }\n      }\n\n      for (var i = crossings.length - 1; i >= 0; i--) {\n        var path = crossings[i].split();\n\n        if (path) {\n          if (addPath(path)) path.getFirstSegment().setHandleIn(0, 0);\n\n          _path1.getLastSegment().setHandleOut(0, 0);\n        }\n      }\n\n      addPath(_path1);\n      return createResult(paths, false, path1, path2);\n    }\n\n    function linkIntersections(from, to) {\n      var prev = from;\n\n      while (prev) {\n        if (prev === to) return;\n        prev = prev._previous;\n      }\n\n      while (from._next && from._next !== to) {\n        from = from._next;\n      }\n\n      if (!from._next) {\n        while (to._previous) {\n          to = to._previous;\n        }\n\n        from._next = to;\n        to._previous = from;\n      }\n    }\n\n    function clearCurveHandles(curves) {\n      for (var i = curves.length - 1; i >= 0; i--) {\n        curves[i].clearHandles();\n      }\n    }\n\n    function reorientPaths(paths, isInside, clockwise) {\n      var length = paths && paths.length;\n\n      if (length) {\n        var lookup = Base.each(paths, function (path, i) {\n          this[path._id] = {\n            container: null,\n            winding: path.isClockwise() ? 1 : -1,\n            index: i\n          };\n        }, {}),\n            sorted = paths.slice().sort(function (a, b) {\n          return abs(b.getArea()) - abs(a.getArea());\n        }),\n            first = sorted[0];\n        var collisions = CollisionDetection.findItemBoundsCollisions(sorted, null, Numerical.GEOMETRIC_EPSILON);\n        if (clockwise == null) clockwise = first.isClockwise();\n\n        for (var i = 0; i < length; i++) {\n          var path1 = sorted[i],\n              entry1 = lookup[path1._id],\n              containerWinding = 0,\n              indices = collisions[i];\n\n          if (indices) {\n            var point = null;\n\n            for (var j = indices.length - 1; j >= 0; j--) {\n              if (indices[j] < i) {\n                point = point || path1.getInteriorPoint();\n                var path2 = sorted[indices[j]];\n\n                if (path2.contains(point)) {\n                  var entry2 = lookup[path2._id];\n                  containerWinding = entry2.winding;\n                  entry1.winding += containerWinding;\n                  entry1.container = entry2.exclude ? entry2.container : path2;\n                  break;\n                }\n              }\n            }\n          }\n\n          if (isInside(entry1.winding) === isInside(containerWinding)) {\n            entry1.exclude = true;\n            paths[entry1.index] = null;\n          } else {\n            var container = entry1.container;\n            path1.setClockwise(container ? !container.isClockwise() : clockwise);\n          }\n        }\n      }\n\n      return paths;\n    }\n\n    function divideLocations(locations, include, clearLater) {\n      var results = include && [],\n          tMin = 1e-8,\n          tMax = 1 - tMin,\n          clearHandles = false,\n          clearCurves = clearLater || [],\n          clearLookup = clearLater && {},\n          renormalizeLocs,\n          prevCurve,\n          prevTime;\n\n      function getId(curve) {\n        return curve._path._id + '.' + curve._segment1._index;\n      }\n\n      for (var i = (clearLater && clearLater.length) - 1; i >= 0; i--) {\n        var curve = clearLater[i];\n        if (curve._path) clearLookup[getId(curve)] = true;\n      }\n\n      for (var i = locations.length - 1; i >= 0; i--) {\n        var loc = locations[i],\n            time = loc._time,\n            origTime = time,\n            exclude = include && !include(loc),\n            curve = loc._curve,\n            segment;\n\n        if (curve) {\n          if (curve !== prevCurve) {\n            clearHandles = !curve.hasHandles() || clearLookup && clearLookup[getId(curve)];\n            renormalizeLocs = [];\n            prevTime = null;\n            prevCurve = curve;\n          } else if (prevTime >= tMin) {\n            time /= prevTime;\n          }\n        }\n\n        if (exclude) {\n          if (renormalizeLocs) renormalizeLocs.push(loc);\n          continue;\n        } else if (include) {\n          results.unshift(loc);\n        }\n\n        prevTime = origTime;\n\n        if (time < tMin) {\n          segment = curve._segment1;\n        } else if (time > tMax) {\n          segment = curve._segment2;\n        } else {\n          var newCurve = curve.divideAtTime(time, true);\n          if (clearHandles) clearCurves.push(curve, newCurve);\n          segment = newCurve._segment1;\n\n          for (var j = renormalizeLocs.length - 1; j >= 0; j--) {\n            var l = renormalizeLocs[j];\n            l._time = (l._time - time) / (1 - time);\n          }\n        }\n\n        loc._setSegment(segment);\n\n        var inter = segment._intersection,\n            dest = loc._intersection;\n\n        if (inter) {\n          linkIntersections(inter, dest);\n          var other = inter;\n\n          while (other) {\n            linkIntersections(other._intersection, inter);\n            other = other._next;\n          }\n        } else {\n          segment._intersection = dest;\n        }\n      }\n\n      if (!clearLater) clearCurveHandles(clearCurves);\n      return results || locations;\n    }\n\n    function getWinding(point, curves, dir, closed, dontFlip) {\n      var curvesList = Array.isArray(curves) ? curves : curves[dir ? 'hor' : 'ver'];\n      var ia = dir ? 1 : 0,\n          io = ia ^ 1,\n          pv = [point.x, point.y],\n          pa = pv[ia],\n          po = pv[io],\n          windingEpsilon = 1e-9,\n          qualityEpsilon = 1e-6,\n          paL = pa - windingEpsilon,\n          paR = pa + windingEpsilon,\n          windingL = 0,\n          windingR = 0,\n          pathWindingL = 0,\n          pathWindingR = 0,\n          onPath = false,\n          onAnyPath = false,\n          quality = 1,\n          roots = [],\n          vPrev,\n          vClose;\n\n      function addWinding(v) {\n        var o0 = v[io + 0],\n            o3 = v[io + 6];\n\n        if (po < min(o0, o3) || po > max(o0, o3)) {\n          return;\n        }\n\n        var a0 = v[ia + 0],\n            a1 = v[ia + 2],\n            a2 = v[ia + 4],\n            a3 = v[ia + 6];\n\n        if (o0 === o3) {\n          if (a0 < paR && a3 > paL || a3 < paR && a0 > paL) {\n            onPath = true;\n          }\n\n          return;\n        }\n\n        var t = po === o0 ? 0 : po === o3 ? 1 : paL > max(a0, a1, a2, a3) || paR < min(a0, a1, a2, a3) ? 1 : Curve.solveCubic(v, io, po, roots, 0, 1) > 0 ? roots[0] : 1,\n            a = t === 0 ? a0 : t === 1 ? a3 : Curve.getPoint(v, t)[dir ? 'y' : 'x'],\n            winding = o0 > o3 ? 1 : -1,\n            windingPrev = vPrev[io] > vPrev[io + 6] ? 1 : -1,\n            a3Prev = vPrev[ia + 6];\n\n        if (po !== o0) {\n          if (a < paL) {\n            pathWindingL += winding;\n          } else if (a > paR) {\n            pathWindingR += winding;\n          } else {\n            onPath = true;\n          }\n\n          if (a > pa - qualityEpsilon && a < pa + qualityEpsilon) quality /= 2;\n        } else {\n          if (winding !== windingPrev) {\n            if (a0 < paL) {\n              pathWindingL += winding;\n            } else if (a0 > paR) {\n              pathWindingR += winding;\n            }\n          } else if (a0 != a3Prev) {\n            if (a3Prev < paR && a > paR) {\n              pathWindingR += winding;\n              onPath = true;\n            } else if (a3Prev > paL && a < paL) {\n              pathWindingL += winding;\n              onPath = true;\n            }\n          }\n\n          quality /= 4;\n        }\n\n        vPrev = v;\n        return !dontFlip && a > paL && a < paR && Curve.getTangent(v, t)[dir ? 'x' : 'y'] === 0 && getWinding(point, curves, !dir, closed, true);\n      }\n\n      function handleCurve(v) {\n        var o0 = v[io + 0],\n            o1 = v[io + 2],\n            o2 = v[io + 4],\n            o3 = v[io + 6];\n\n        if (po <= max(o0, o1, o2, o3) && po >= min(o0, o1, o2, o3)) {\n          var a0 = v[ia + 0],\n              a1 = v[ia + 2],\n              a2 = v[ia + 4],\n              a3 = v[ia + 6],\n              monoCurves = paL > max(a0, a1, a2, a3) || paR < min(a0, a1, a2, a3) ? [v] : Curve.getMonoCurves(v, dir),\n              res;\n\n          for (var i = 0, l = monoCurves.length; i < l; i++) {\n            if (res = addWinding(monoCurves[i])) return res;\n          }\n        }\n      }\n\n      for (var i = 0, l = curvesList.length; i < l; i++) {\n        var curve = curvesList[i],\n            path = curve._path,\n            v = curve.getValues(),\n            res;\n\n        if (!i || curvesList[i - 1]._path !== path) {\n          vPrev = null;\n\n          if (!path._closed) {\n            vClose = Curve.getValues(path.getLastCurve().getSegment2(), curve.getSegment1(), null, !closed);\n\n            if (vClose[io] !== vClose[io + 6]) {\n              vPrev = vClose;\n            }\n          }\n\n          if (!vPrev) {\n            vPrev = v;\n            var prev = path.getLastCurve();\n\n            while (prev && prev !== curve) {\n              var v2 = prev.getValues();\n\n              if (v2[io] !== v2[io + 6]) {\n                vPrev = v2;\n                break;\n              }\n\n              prev = prev.getPrevious();\n            }\n          }\n        }\n\n        if (res = handleCurve(v)) return res;\n\n        if (i + 1 === l || curvesList[i + 1]._path !== path) {\n          if (vClose && (res = handleCurve(vClose))) return res;\n\n          if (onPath && !pathWindingL && !pathWindingR) {\n            pathWindingL = pathWindingR = path.isClockwise(closed) ^ dir ? 1 : -1;\n          }\n\n          windingL += pathWindingL;\n          windingR += pathWindingR;\n          pathWindingL = pathWindingR = 0;\n\n          if (onPath) {\n            onAnyPath = true;\n            onPath = false;\n          }\n\n          vClose = null;\n        }\n      }\n\n      windingL = abs(windingL);\n      windingR = abs(windingR);\n      return {\n        winding: max(windingL, windingR),\n        windingL: windingL,\n        windingR: windingR,\n        quality: quality,\n        onPath: onAnyPath\n      };\n    }\n\n    function propagateWinding(segment, path1, path2, curveCollisionsMap, operator) {\n      var chain = [],\n          start = segment,\n          totalLength = 0,\n          winding;\n\n      do {\n        var curve = segment.getCurve();\n\n        if (curve) {\n          var length = curve.getLength();\n          chain.push({\n            segment: segment,\n            curve: curve,\n            length: length\n          });\n          totalLength += length;\n        }\n\n        segment = segment.getNext();\n      } while (segment && !segment._intersection && segment !== start);\n\n      var offsets = [0.5, 0.25, 0.75],\n          winding = {\n        winding: 0,\n        quality: -1\n      },\n          tMin = 1e-3,\n          tMax = 1 - tMin;\n\n      for (var i = 0; i < offsets.length && winding.quality < 0.5; i++) {\n        var length = totalLength * offsets[i];\n\n        for (var j = 0, l = chain.length; j < l; j++) {\n          var entry = chain[j],\n              curveLength = entry.length;\n\n          if (length <= curveLength) {\n            var curve = entry.curve,\n                path = curve._path,\n                parent = path._parent,\n                operand = parent instanceof CompoundPath ? parent : path,\n                t = Numerical.clamp(curve.getTimeAt(length), tMin, tMax),\n                pt = curve.getPointAtTime(t),\n                dir = abs(curve.getTangentAtTime(t).y) < Math.SQRT1_2;\n            var wind = null;\n\n            if (operator.subtract && path2) {\n              var otherPath = operand === path1 ? path2 : path1,\n                  pathWinding = otherPath._getWinding(pt, dir, true);\n\n              if (operand === path1 && pathWinding.winding || operand === path2 && !pathWinding.winding) {\n                if (pathWinding.quality < 1) {\n                  continue;\n                } else {\n                  wind = {\n                    winding: 0,\n                    quality: 1\n                  };\n                }\n              }\n            }\n\n            wind = wind || getWinding(pt, curveCollisionsMap[path._id][curve.getIndex()], dir, true);\n            if (wind.quality > winding.quality) winding = wind;\n            break;\n          }\n\n          length -= curveLength;\n        }\n      }\n\n      for (var j = chain.length - 1; j >= 0; j--) {\n        chain[j].segment._winding = winding;\n      }\n    }\n\n    function tracePaths(segments, operator) {\n      var paths = [],\n          starts;\n\n      function isValid(seg) {\n        var winding;\n        return !!(seg && !seg._visited && (!operator || operator[(winding = seg._winding || {}).winding] && !(operator.unite && winding.winding === 2 && winding.windingL && winding.windingR)));\n      }\n\n      function isStart(seg) {\n        if (seg) {\n          for (var i = 0, l = starts.length; i < l; i++) {\n            if (seg === starts[i]) return true;\n          }\n        }\n\n        return false;\n      }\n\n      function visitPath(path) {\n        var segments = path._segments;\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          segments[i]._visited = true;\n        }\n      }\n\n      function getCrossingSegments(segment, collectStarts) {\n        var inter = segment._intersection,\n            start = inter,\n            crossings = [];\n        if (collectStarts) starts = [segment];\n\n        function collect(inter, end) {\n          while (inter && inter !== end) {\n            var other = inter._segment,\n                path = other && other._path;\n\n            if (path) {\n              var next = other.getNext() || path.getFirstSegment(),\n                  nextInter = next._intersection;\n\n              if (other !== segment && (isStart(other) || isStart(next) || next && isValid(other) && (isValid(next) || nextInter && isValid(nextInter._segment)))) {\n                crossings.push(other);\n              }\n\n              if (collectStarts) starts.push(other);\n            }\n\n            inter = inter._next;\n          }\n        }\n\n        if (inter) {\n          collect(inter);\n\n          while (inter && inter._prev) {\n            inter = inter._prev;\n          }\n\n          collect(inter, start);\n        }\n\n        return crossings;\n      }\n\n      segments.sort(function (seg1, seg2) {\n        var inter1 = seg1._intersection,\n            inter2 = seg2._intersection,\n            over1 = !!(inter1 && inter1._overlap),\n            over2 = !!(inter2 && inter2._overlap),\n            path1 = seg1._path,\n            path2 = seg2._path;\n        return over1 ^ over2 ? over1 ? 1 : -1 : !inter1 ^ !inter2 ? inter1 ? 1 : -1 : path1 !== path2 ? path1._id - path2._id : seg1._index - seg2._index;\n      });\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var seg = segments[i],\n            valid = isValid(seg),\n            path = null,\n            finished = false,\n            closed = true,\n            branches = [],\n            branch,\n            visited,\n            handleIn;\n\n        if (valid && seg._path._overlapsOnly) {\n          var path1 = seg._path,\n              path2 = seg._intersection._segment._path;\n\n          if (path1.compare(path2)) {\n            if (path1.getArea()) paths.push(path1.clone(false));\n            visitPath(path1);\n            visitPath(path2);\n            valid = false;\n          }\n        }\n\n        while (valid) {\n          var first = !path,\n              crossings = getCrossingSegments(seg, first),\n              other = crossings.shift(),\n              finished = !first && (isStart(seg) || isStart(other)),\n              cross = !finished && other;\n\n          if (first) {\n            path = new Path(Item.NO_INSERT);\n            branch = null;\n          }\n\n          if (finished) {\n            if (seg.isFirst() || seg.isLast()) closed = seg._path._closed;\n            seg._visited = true;\n            break;\n          }\n\n          if (cross && branch) {\n            branches.push(branch);\n            branch = null;\n          }\n\n          if (!branch) {\n            if (cross) crossings.push(seg);\n            branch = {\n              start: path._segments.length,\n              crossings: crossings,\n              visited: visited = [],\n              handleIn: handleIn\n            };\n          }\n\n          if (cross) seg = other;\n\n          if (!isValid(seg)) {\n            path.removeSegments(branch.start);\n\n            for (var j = 0, k = visited.length; j < k; j++) {\n              visited[j]._visited = false;\n            }\n\n            visited.length = 0;\n\n            do {\n              seg = branch && branch.crossings.shift();\n\n              if (!seg || !seg._path) {\n                seg = null;\n                branch = branches.pop();\n\n                if (branch) {\n                  visited = branch.visited;\n                  handleIn = branch.handleIn;\n                }\n              }\n            } while (branch && !isValid(seg));\n\n            if (!seg) break;\n          }\n\n          var next = seg.getNext();\n          path.add(new Segment(seg._point, handleIn, next && seg._handleOut));\n          seg._visited = true;\n          visited.push(seg);\n          seg = next || seg._path.getFirstSegment();\n          handleIn = next && next._handleIn;\n        }\n\n        if (finished) {\n          if (closed) {\n            path.getFirstSegment().setHandleIn(handleIn);\n            path.setClosed(closed);\n          }\n\n          if (path.getArea() !== 0) {\n            paths.push(path);\n          }\n        }\n      }\n\n      return paths;\n    }\n\n    return {\n      _getWinding: function _getWinding(point, dir, closed) {\n        return getWinding(point, this.getCurves(), dir, closed);\n      },\n      unite: function unite(path, options) {\n        return traceBoolean(this, path, 'unite', options);\n      },\n      intersect: function intersect(path, options) {\n        return traceBoolean(this, path, 'intersect', options);\n      },\n      subtract: function subtract(path, options) {\n        return traceBoolean(this, path, 'subtract', options);\n      },\n      exclude: function exclude(path, options) {\n        return traceBoolean(this, path, 'exclude', options);\n      },\n      divide: function divide(path, options) {\n        return options && (options.trace == false || options.stroke) ? splitBoolean(this, path, 'divide') : createResult([this.subtract(path, options), this.intersect(path, options)], true, this, path, options);\n      },\n      resolveCrossings: function resolveCrossings() {\n        var children = this._children,\n            paths = children || [this];\n\n        function hasOverlap(seg, path) {\n          var inter = seg && seg._intersection;\n          return inter && inter._overlap && inter._path === path;\n        }\n\n        var hasOverlaps = false,\n            hasCrossings = false,\n            intersections = this.getIntersections(null, function (inter) {\n          return inter.hasOverlap() && (hasOverlaps = true) || inter.isCrossing() && (hasCrossings = true);\n        }),\n            clearCurves = hasOverlaps && hasCrossings && [];\n        intersections = CurveLocation.expand(intersections);\n\n        if (hasOverlaps) {\n          var overlaps = divideLocations(intersections, function (inter) {\n            return inter.hasOverlap();\n          }, clearCurves);\n\n          for (var i = overlaps.length - 1; i >= 0; i--) {\n            var overlap = overlaps[i],\n                path = overlap._path,\n                seg = overlap._segment,\n                prev = seg.getPrevious(),\n                next = seg.getNext();\n\n            if (hasOverlap(prev, path) && hasOverlap(next, path)) {\n              seg.remove();\n\n              prev._handleOut._set(0, 0);\n\n              next._handleIn._set(0, 0);\n\n              if (prev !== seg && !prev.getCurve().hasLength()) {\n                next._handleIn.set(prev._handleIn);\n\n                prev.remove();\n              }\n            }\n          }\n        }\n\n        if (hasCrossings) {\n          divideLocations(intersections, hasOverlaps && function (inter) {\n            var curve1 = inter.getCurve(),\n                seg1 = inter.getSegment(),\n                other = inter._intersection,\n                curve2 = other._curve,\n                seg2 = other._segment;\n            if (curve1 && curve2 && curve1._path && curve2._path) return true;\n            if (seg1) seg1._intersection = null;\n            if (seg2) seg2._intersection = null;\n          }, clearCurves);\n          if (clearCurves) clearCurveHandles(clearCurves);\n          paths = tracePaths(Base.each(paths, function (path) {\n            Base.push(this, path._segments);\n          }, []));\n        }\n\n        var length = paths.length,\n            item;\n\n        if (length > 1 && children) {\n          if (paths !== children) this.setChildren(paths);\n          item = this;\n        } else if (length === 1 && !children) {\n          if (paths[0] !== this) this.setSegments(paths[0].removeSegments());\n          item = this;\n        }\n\n        if (!item) {\n          item = new CompoundPath(Item.NO_INSERT);\n          item.addChildren(paths);\n          item = item.reduce();\n          item.copyAttributes(this);\n          this.replaceWith(item);\n        }\n\n        return item;\n      },\n      reorient: function reorient(nonZero, clockwise) {\n        var children = this._children;\n\n        if (children && children.length) {\n          this.setChildren(reorientPaths(this.removeChildren(), function (w) {\n            return !!(nonZero ? w : w & 1);\n          }, clockwise));\n        } else if (clockwise !== undefined) {\n          this.setClockwise(clockwise);\n        }\n\n        return this;\n      },\n      getInteriorPoint: function getInteriorPoint() {\n        var bounds = this.getBounds(),\n            point = bounds.getCenter(true);\n\n        if (!this.contains(point)) {\n          var curves = this.getCurves(),\n              y = point.y,\n              intercepts = [],\n              roots = [];\n\n          for (var i = 0, l = curves.length; i < l; i++) {\n            var v = curves[i].getValues(),\n                o0 = v[1],\n                o1 = v[3],\n                o2 = v[5],\n                o3 = v[7];\n\n            if (y >= min(o0, o1, o2, o3) && y <= max(o0, o1, o2, o3)) {\n              var monoCurves = Curve.getMonoCurves(v);\n\n              for (var j = 0, m = monoCurves.length; j < m; j++) {\n                var mv = monoCurves[j],\n                    mo0 = mv[1],\n                    mo3 = mv[7];\n\n                if (mo0 !== mo3 && (y >= mo0 && y <= mo3 || y >= mo3 && y <= mo0)) {\n                  var x = y === mo0 ? mv[0] : y === mo3 ? mv[6] : Curve.solveCubic(mv, 1, y, roots, 0, 1) === 1 ? Curve.getPoint(mv, roots[0]).x : (mv[0] + mv[6]) / 2;\n                  intercepts.push(x);\n                }\n              }\n            }\n          }\n\n          if (intercepts.length > 1) {\n            intercepts.sort(function (a, b) {\n              return a - b;\n            });\n            point.x = (intercepts[0] + intercepts[1]) / 2;\n          }\n        }\n\n        return point;\n      }\n    };\n  }());\n  var PathFlattener = Base.extend({\n    _class: 'PathFlattener',\n    initialize: function initialize(path, flatness, maxRecursion, ignoreStraight, matrix) {\n      var curves = [],\n          parts = [],\n          length = 0,\n          minSpan = 1 / (maxRecursion || 32),\n          segments = path._segments,\n          segment1 = segments[0],\n          segment2;\n\n      function addCurve(segment1, segment2) {\n        var curve = Curve.getValues(segment1, segment2, matrix);\n        curves.push(curve);\n        computeParts(curve, segment1._index, 0, 1);\n      }\n\n      function computeParts(curve, index, t1, t2) {\n        if (t2 - t1 > minSpan && !(ignoreStraight && Curve.isStraight(curve)) && !Curve.isFlatEnough(curve, flatness || 0.25)) {\n          var halves = Curve.subdivide(curve, 0.5),\n              tMid = (t1 + t2) / 2;\n          computeParts(halves[0], index, t1, tMid);\n          computeParts(halves[1], index, tMid, t2);\n        } else {\n          var dx = curve[6] - curve[0],\n              dy = curve[7] - curve[1],\n              dist = Math.sqrt(dx * dx + dy * dy);\n\n          if (dist > 0) {\n            length += dist;\n            parts.push({\n              offset: length,\n              curve: curve,\n              index: index,\n              time: t2\n            });\n          }\n        }\n      }\n\n      for (var i = 1, l = segments.length; i < l; i++) {\n        segment2 = segments[i];\n        addCurve(segment1, segment2);\n        segment1 = segment2;\n      }\n\n      if (path._closed) addCurve(segment2 || segment1, segments[0]);\n      this.curves = curves;\n      this.parts = parts;\n      this.length = length;\n      this.index = 0;\n    },\n    _get: function _get(offset) {\n      var parts = this.parts,\n          length = parts.length,\n          start,\n          i,\n          j = this.index;\n\n      for (;;) {\n        i = j;\n        if (!j || parts[--j].offset < offset) break;\n      }\n\n      for (; i < length; i++) {\n        var part = parts[i];\n\n        if (part.offset >= offset) {\n          this.index = i;\n          var prev = parts[i - 1],\n              prevTime = prev && prev.index === part.index ? prev.time : 0,\n              prevOffset = prev ? prev.offset : 0;\n          return {\n            index: part.index,\n            time: prevTime + (part.time - prevTime) * (offset - prevOffset) / (part.offset - prevOffset)\n          };\n        }\n      }\n\n      return {\n        index: parts[length - 1].index,\n        time: 1\n      };\n    },\n    drawPart: function drawPart(ctx, from, to) {\n      var start = this._get(from),\n          end = this._get(to);\n\n      for (var i = start.index, l = end.index; i <= l; i++) {\n        var curve = Curve.getPart(this.curves[i], i === start.index ? start.time : 0, i === end.index ? end.time : 1);\n        if (i === start.index) ctx.moveTo(curve[0], curve[1]);\n        ctx.bezierCurveTo.apply(ctx, curve.slice(2));\n      }\n    }\n  }, Base.each(Curve._evaluateMethods, function (name) {\n    this[name + 'At'] = function (offset) {\n      var param = this._get(offset);\n\n      return Curve[name](this.curves[param.index], param.time);\n    };\n  }, {}));\n  var PathFitter = Base.extend({\n    initialize: function initialize(path) {\n      var points = this.points = [],\n          segments = path._segments,\n          closed = path._closed;\n\n      for (var i = 0, prev, l = segments.length; i < l; i++) {\n        var point = segments[i].point;\n\n        if (!prev || !prev.equals(point)) {\n          points.push(prev = point.clone());\n        }\n      }\n\n      if (closed) {\n        points.unshift(points[points.length - 1]);\n        points.push(points[1]);\n      }\n\n      this.closed = closed;\n    },\n    fit: function fit(error) {\n      var points = this.points,\n          length = points.length,\n          segments = null;\n\n      if (length > 0) {\n        segments = [new Segment(points[0])];\n\n        if (length > 1) {\n          this.fitCubic(segments, error, 0, length - 1, points[1].subtract(points[0]), points[length - 2].subtract(points[length - 1]));\n\n          if (this.closed) {\n            segments.shift();\n            segments.pop();\n          }\n        }\n      }\n\n      return segments;\n    },\n    fitCubic: function fitCubic(segments, error, first, last, tan1, tan2) {\n      var points = this.points;\n\n      if (last - first === 1) {\n        var pt1 = points[first],\n            pt2 = points[last],\n            dist = pt1.getDistance(pt2) / 3;\n        this.addCurve(segments, [pt1, pt1.add(tan1.normalize(dist)), pt2.add(tan2.normalize(dist)), pt2]);\n        return;\n      }\n\n      var uPrime = this.chordLengthParameterize(first, last),\n          maxError = Math.max(error, error * error),\n          split,\n          parametersInOrder = true;\n\n      for (var i = 0; i <= 4; i++) {\n        var curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n        var max = this.findMaxError(first, last, curve, uPrime);\n\n        if (max.error < error && parametersInOrder) {\n          this.addCurve(segments, curve);\n          return;\n        }\n\n        split = max.index;\n        if (max.error >= maxError) break;\n        parametersInOrder = this.reparameterize(first, last, uPrime, curve);\n        maxError = max.error;\n      }\n\n      var tanCenter = points[split - 1].subtract(points[split + 1]);\n      this.fitCubic(segments, error, first, split, tan1, tanCenter);\n      this.fitCubic(segments, error, split, last, tanCenter.negate(), tan2);\n    },\n    addCurve: function addCurve(segments, curve) {\n      var prev = segments[segments.length - 1];\n      prev.setHandleOut(curve[1].subtract(curve[0]));\n      segments.push(new Segment(curve[3], curve[2].subtract(curve[3])));\n    },\n    generateBezier: function generateBezier(first, last, uPrime, tan1, tan2) {\n      var epsilon = 1e-12,\n          abs = Math.abs,\n          points = this.points,\n          pt1 = points[first],\n          pt2 = points[last],\n          C = [[0, 0], [0, 0]],\n          X = [0, 0];\n\n      for (var i = 0, l = last - first + 1; i < l; i++) {\n        var u = uPrime[i],\n            t = 1 - u,\n            b = 3 * u * t,\n            b0 = t * t * t,\n            b1 = b * t,\n            b2 = b * u,\n            b3 = u * u * u,\n            a1 = tan1.normalize(b1),\n            a2 = tan2.normalize(b2),\n            tmp = points[first + i].subtract(pt1.multiply(b0 + b1)).subtract(pt2.multiply(b2 + b3));\n        C[0][0] += a1.dot(a1);\n        C[0][1] += a1.dot(a2);\n        C[1][0] = C[0][1];\n        C[1][1] += a2.dot(a2);\n        X[0] += a1.dot(tmp);\n        X[1] += a2.dot(tmp);\n      }\n\n      var detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n          alpha1,\n          alpha2;\n\n      if (abs(detC0C1) > epsilon) {\n        var detC0X = C[0][0] * X[1] - C[1][0] * X[0],\n            detXC1 = X[0] * C[1][1] - X[1] * C[0][1];\n        alpha1 = detXC1 / detC0C1;\n        alpha2 = detC0X / detC0C1;\n      } else {\n        var c0 = C[0][0] + C[0][1],\n            c1 = C[1][0] + C[1][1];\n        alpha1 = alpha2 = abs(c0) > epsilon ? X[0] / c0 : abs(c1) > epsilon ? X[1] / c1 : 0;\n      }\n\n      var segLength = pt2.getDistance(pt1),\n          eps = epsilon * segLength,\n          handle1,\n          handle2;\n\n      if (alpha1 < eps || alpha2 < eps) {\n        alpha1 = alpha2 = segLength / 3;\n      } else {\n        var line = pt2.subtract(pt1);\n        handle1 = tan1.normalize(alpha1);\n        handle2 = tan2.normalize(alpha2);\n\n        if (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n          alpha1 = alpha2 = segLength / 3;\n          handle1 = handle2 = null;\n        }\n      }\n\n      return [pt1, pt1.add(handle1 || tan1.normalize(alpha1)), pt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n    },\n    reparameterize: function reparameterize(first, last, u, curve) {\n      for (var i = first; i <= last; i++) {\n        u[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n      }\n\n      for (var i = 1, l = u.length; i < l; i++) {\n        if (u[i] <= u[i - 1]) return false;\n      }\n\n      return true;\n    },\n    findRoot: function findRoot(curve, point, u) {\n      var curve1 = [],\n          curve2 = [];\n\n      for (var i = 0; i <= 2; i++) {\n        curve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n      }\n\n      for (var i = 0; i <= 1; i++) {\n        curve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n      }\n\n      var pt = this.evaluate(3, curve, u),\n          pt1 = this.evaluate(2, curve1, u),\n          pt2 = this.evaluate(1, curve2, u),\n          diff = pt.subtract(point),\n          df = pt1.dot(pt1) + diff.dot(pt2);\n      return Numerical.isMachineZero(df) ? u : u - diff.dot(pt1) / df;\n    },\n    evaluate: function evaluate(degree, curve, t) {\n      var tmp = curve.slice();\n\n      for (var i = 1; i <= degree; i++) {\n        for (var j = 0; j <= degree - i; j++) {\n          tmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n        }\n      }\n\n      return tmp[0];\n    },\n    chordLengthParameterize: function chordLengthParameterize(first, last) {\n      var u = [0];\n\n      for (var i = first + 1; i <= last; i++) {\n        u[i - first] = u[i - first - 1] + this.points[i].getDistance(this.points[i - 1]);\n      }\n\n      for (var i = 1, m = last - first; i <= m; i++) {\n        u[i] /= u[m];\n      }\n\n      return u;\n    },\n    findMaxError: function findMaxError(first, last, curve, u) {\n      var index = Math.floor((last - first + 1) / 2),\n          maxDist = 0;\n\n      for (var i = first + 1; i < last; i++) {\n        var P = this.evaluate(3, curve, u[i - first]);\n        var v = P.subtract(this.points[i]);\n        var dist = v.x * v.x + v.y * v.y;\n\n        if (dist >= maxDist) {\n          maxDist = dist;\n          index = i;\n        }\n      }\n\n      return {\n        error: maxDist,\n        index: index\n      };\n    }\n  });\n  var TextItem = Item.extend({\n    _class: 'TextItem',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _serializeFields: {\n      content: null\n    },\n    _boundsOptions: {\n      stroke: false,\n      handle: false\n    },\n    initialize: function TextItem(arg) {\n      this._content = '';\n      this._lines = [];\n      var hasProps = arg && Base.isPlainObject(arg) && arg.x === undefined && arg.y === undefined;\n\n      this._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n    },\n    _equals: function _equals(item) {\n      return this._content === item._content;\n    },\n    copyContent: function copyContent(source) {\n      this.setContent(source._content);\n    },\n    getContent: function getContent() {\n      return this._content;\n    },\n    setContent: function setContent(content) {\n      this._content = '' + content;\n      this._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\n      this._changed(521);\n    },\n    isEmpty: function isEmpty() {\n      return !this._content;\n    },\n    getCharacterStyle: '#getStyle',\n    setCharacterStyle: '#setStyle',\n    getParagraphStyle: '#getStyle',\n    setParagraphStyle: '#setStyle'\n  });\n  var PointText = TextItem.extend({\n    _class: 'PointText',\n    initialize: function PointText() {\n      TextItem.apply(this, arguments);\n    },\n    getPoint: function getPoint() {\n      var point = this._matrix.getTranslation();\n\n      return new LinkedPoint(point.x, point.y, this, 'setPoint');\n    },\n    setPoint: function setPoint() {\n      var point = Point.read(arguments);\n      this.translate(point.subtract(this._matrix.getTranslation()));\n    },\n    _draw: function _draw(ctx, param, viewMatrix) {\n      if (!this._content) return;\n\n      this._setStyles(ctx, param, viewMatrix);\n\n      var lines = this._lines,\n          style = this._style,\n          hasFill = style.hasFill(),\n          hasStroke = style.hasStroke(),\n          leading = style.getLeading(),\n          shadowColor = ctx.shadowColor;\n      ctx.font = style.getFontStyle();\n      ctx.textAlign = style.getJustification();\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        ctx.shadowColor = shadowColor;\n        var line = lines[i];\n\n        if (hasFill) {\n          ctx.fillText(line, 0, 0);\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n        }\n\n        if (hasStroke) ctx.strokeText(line, 0, 0);\n        ctx.translate(0, leading);\n      }\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var style = this._style,\n          lines = this._lines,\n          numLines = lines.length,\n          justification = style.getJustification(),\n          leading = style.getLeading(),\n          width = this.getView().getTextWidth(style.getFontStyle(), lines),\n          x = 0;\n      if (justification !== 'left') x -= width / (justification === 'center' ? 2 : 1);\n      var rect = new _Rectangle(x, numLines ? -0.75 * leading : 0, width, numLines * leading);\n      return matrix ? matrix._transformBounds(rect, rect) : rect;\n    }\n  });\n  var Color = Base.extend(new function () {\n    var types = {\n      gray: ['gray'],\n      rgb: ['red', 'green', 'blue'],\n      hsb: ['hue', 'saturation', 'brightness'],\n      hsl: ['hue', 'saturation', 'lightness'],\n      gradient: ['gradient', 'origin', 'destination', 'highlight']\n    };\n    var componentParsers = {},\n        namedColors = {\n      transparent: [0, 0, 0, 0]\n    },\n        colorCtx;\n\n    function fromCSS(string) {\n      var match = string.match(/^#([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})?$/i) || string.match(/^#([\\da-f])([\\da-f])([\\da-f])([\\da-f])?$/i),\n          type = 'rgb',\n          components;\n\n      if (match) {\n        var amount = match[4] ? 4 : 3;\n        components = new Array(amount);\n\n        for (var i = 0; i < amount; i++) {\n          var value = match[i + 1];\n          components[i] = parseInt(value.length == 1 ? value + value : value, 16) / 255;\n        }\n      } else if (match = string.match(/^(rgb|hsl)a?\\((.*)\\)$/)) {\n        type = match[1];\n        components = match[2].trim().split(/[,\\s]+/g);\n        var isHSL = type === 'hsl';\n\n        for (var i = 0, l = Math.min(components.length, 4); i < l; i++) {\n          var component = components[i];\n          var value = parseFloat(component);\n\n          if (isHSL) {\n            if (i === 0) {\n              var unit = component.match(/([a-z]*)$/)[1];\n              value *= {\n                turn: 360,\n                rad: 180 / Math.PI,\n                grad: 0.9\n              }[unit] || 1;\n            } else if (i < 3) {\n              value /= 100;\n            }\n          } else if (i < 3) {\n            value /= /%$/.test(component) ? 100 : 255;\n          }\n\n          components[i] = value;\n        }\n      } else {\n        var color = namedColors[string];\n\n        if (!color) {\n          if (window) {\n            if (!colorCtx) {\n              colorCtx = CanvasProvider.getContext(1, 1);\n              colorCtx.globalCompositeOperation = 'copy';\n            }\n\n            colorCtx.fillStyle = 'rgba(0,0,0,0)';\n            colorCtx.fillStyle = string;\n            colorCtx.fillRect(0, 0, 1, 1);\n            var data = colorCtx.getImageData(0, 0, 1, 1).data;\n            color = namedColors[string] = [data[0] / 255, data[1] / 255, data[2] / 255];\n          } else {\n            color = [0, 0, 0];\n          }\n        }\n\n        components = color.slice();\n      }\n\n      return [type, components];\n    }\n\n    var hsbIndices = [[0, 3, 1], [2, 0, 1], [1, 0, 3], [1, 2, 0], [3, 1, 0], [0, 1, 2]];\n    var converters = {\n      'rgb-hsb': function rgbHsb(r, g, b) {\n        var max = Math.max(r, g, b),\n            min = Math.min(r, g, b),\n            delta = max - min,\n            h = delta === 0 ? 0 : (max == r ? (g - b) / delta + (g < b ? 6 : 0) : max == g ? (b - r) / delta + 2 : (r - g) / delta + 4) * 60;\n        return [h, max === 0 ? 0 : delta / max, max];\n      },\n      'hsb-rgb': function hsbRgb(h, s, b) {\n        h = (h / 60 % 6 + 6) % 6;\n        var i = Math.floor(h),\n            f = h - i,\n            i = hsbIndices[i],\n            v = [b, b * (1 - s), b * (1 - s * f), b * (1 - s * (1 - f))];\n        return [v[i[0]], v[i[1]], v[i[2]]];\n      },\n      'rgb-hsl': function rgbHsl(r, g, b) {\n        var max = Math.max(r, g, b),\n            min = Math.min(r, g, b),\n            delta = max - min,\n            achromatic = delta === 0,\n            h = achromatic ? 0 : (max == r ? (g - b) / delta + (g < b ? 6 : 0) : max == g ? (b - r) / delta + 2 : (r - g) / delta + 4) * 60,\n            l = (max + min) / 2,\n            s = achromatic ? 0 : l < 0.5 ? delta / (max + min) : delta / (2 - max - min);\n        return [h, s, l];\n      },\n      'hsl-rgb': function hslRgb(h, s, l) {\n        h = (h / 360 % 1 + 1) % 1;\n        if (s === 0) return [l, l, l];\n        var t3s = [h + 1 / 3, h, h - 1 / 3],\n            t2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n            t1 = 2 * l - t2,\n            c = [];\n\n        for (var i = 0; i < 3; i++) {\n          var t3 = t3s[i];\n          if (t3 < 0) t3 += 1;\n          if (t3 > 1) t3 -= 1;\n          c[i] = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 : 2 * t3 < 1 ? t2 : 3 * t3 < 2 ? t1 + (t2 - t1) * (2 / 3 - t3) * 6 : t1;\n        }\n\n        return c;\n      },\n      'rgb-gray': function rgbGray(r, g, b) {\n        return [r * 0.2989 + g * 0.587 + b * 0.114];\n      },\n      'gray-rgb': function grayRgb(g) {\n        return [g, g, g];\n      },\n      'gray-hsb': function grayHsb(g) {\n        return [0, 0, g];\n      },\n      'gray-hsl': function grayHsl(g) {\n        return [0, 0, g];\n      },\n      'gradient-rgb': function gradientRgb() {\n        return [];\n      },\n      'rgb-gradient': function rgbGradient() {\n        return [];\n      }\n    };\n    return Base.each(types, function (properties, type) {\n      componentParsers[type] = [];\n      Base.each(properties, function (name, index) {\n        var part = Base.capitalize(name),\n            hasOverlap = /^(hue|saturation)$/.test(name),\n            parser = componentParsers[type][index] = type === 'gradient' ? name === 'gradient' ? function (value) {\n          var current = this._components[0];\n          value = Gradient.read(Array.isArray(value) ? value : arguments, 0, {\n            readNull: true\n          });\n\n          if (current !== value) {\n            if (current) current._removeOwner(this);\n            if (value) value._addOwner(this);\n          }\n\n          return value;\n        } : function () {\n          return Point.read(arguments, 0, {\n            readNull: name === 'highlight',\n            clone: true\n          });\n        } : function (value) {\n          return value == null || isNaN(value) ? 0 : +value;\n        };\n\n        this['get' + part] = function () {\n          return this._type === type || hasOverlap && /^hs[bl]$/.test(this._type) ? this._components[index] : this._convert(type)[index];\n        };\n\n        this['set' + part] = function (value) {\n          if (this._type !== type && !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n            this._components = this._convert(type);\n            this._properties = types[type];\n            this._type = type;\n          }\n\n          this._components[index] = parser.call(this, value);\n\n          this._changed();\n        };\n      }, this);\n    }, {\n      _class: 'Color',\n      _readIndex: true,\n      initialize: function Color(arg) {\n        var args = arguments,\n            reading = this.__read,\n            read = 0,\n            type,\n            components,\n            alpha,\n            values;\n\n        if (Array.isArray(arg)) {\n          args = arg;\n          arg = args[0];\n        }\n\n        var argType = arg != null && typeof arg;\n\n        if (argType === 'string' && arg in types) {\n          type = arg;\n          arg = args[1];\n\n          if (Array.isArray(arg)) {\n            components = arg;\n            alpha = args[2];\n          } else {\n            if (reading) read = 1;\n            args = Base.slice(args, 1);\n            argType = typeof arg;\n          }\n        }\n\n        if (!components) {\n          values = argType === 'number' ? args : argType === 'object' && arg.length != null ? arg : null;\n\n          if (values) {\n            if (!type) type = values.length >= 3 ? 'rgb' : 'gray';\n            var length = types[type].length;\n            alpha = values[length];\n\n            if (reading) {\n              read += values === arguments ? length + (alpha != null ? 1 : 0) : 1;\n            }\n\n            if (values.length > length) values = Base.slice(values, 0, length);\n          } else if (argType === 'string') {\n            var converted = fromCSS(arg);\n            type = converted[0];\n            components = converted[1];\n\n            if (components.length === 4) {\n              alpha = components[3];\n              components.length--;\n            }\n          } else if (argType === 'object') {\n            if (arg.constructor === Color) {\n              type = arg._type;\n              components = arg._components.slice();\n              alpha = arg._alpha;\n\n              if (type === 'gradient') {\n                for (var i = 1, l = components.length; i < l; i++) {\n                  var point = components[i];\n                  if (point) components[i] = point.clone();\n                }\n              }\n            } else if (arg.constructor === Gradient) {\n              type = 'gradient';\n              values = args;\n            } else {\n              type = 'hue' in arg ? 'lightness' in arg ? 'hsl' : 'hsb' : 'gradient' in arg || 'stops' in arg || 'radial' in arg ? 'gradient' : 'gray' in arg ? 'gray' : 'rgb';\n              var properties = types[type],\n                  parsers = componentParsers[type];\n              this._components = components = [];\n\n              for (var i = 0, l = properties.length; i < l; i++) {\n                var value = arg[properties[i]];\n\n                if (value == null && !i && type === 'gradient' && 'stops' in arg) {\n                  value = {\n                    stops: arg.stops,\n                    radial: arg.radial\n                  };\n                }\n\n                value = parsers[i].call(this, value);\n                if (value != null) components[i] = value;\n              }\n\n              alpha = arg.alpha;\n            }\n          }\n\n          if (reading && type) read = 1;\n        }\n\n        this._type = type || 'rgb';\n\n        if (!components) {\n          this._components = components = [];\n          var parsers = componentParsers[this._type];\n\n          for (var i = 0, l = parsers.length; i < l; i++) {\n            var value = parsers[i].call(this, values && values[i]);\n            if (value != null) components[i] = value;\n          }\n        }\n\n        this._components = components;\n        this._properties = types[this._type];\n        this._alpha = alpha;\n        if (reading) this.__read = read;\n        return this;\n      },\n      set: '#initialize',\n      _serialize: function _serialize(options, dictionary) {\n        var components = this.getComponents();\n        return Base.serialize(/^(gray|rgb)$/.test(this._type) ? components : [this._type].concat(components), options, true, dictionary);\n      },\n      _changed: function _changed() {\n        this._canvasStyle = null;\n\n        if (this._owner) {\n          if (this._setter) {\n            this._owner[this._setter](this);\n          } else {\n            this._owner._changed(129);\n          }\n        }\n      },\n      _convert: function _convert(type) {\n        var converter;\n        return this._type === type ? this._components.slice() : (converter = converters[this._type + '-' + type]) ? converter.apply(this, this._components) : converters['rgb-' + type].apply(this, converters[this._type + '-rgb'].apply(this, this._components));\n      },\n      convert: function convert(type) {\n        return new Color(type, this._convert(type), this._alpha);\n      },\n      getType: function getType() {\n        return this._type;\n      },\n      setType: function setType(type) {\n        this._components = this._convert(type);\n        this._properties = types[type];\n        this._type = type;\n      },\n      getComponents: function getComponents() {\n        var components = this._components.slice();\n\n        if (this._alpha != null) components.push(this._alpha);\n        return components;\n      },\n      getAlpha: function getAlpha() {\n        return this._alpha != null ? this._alpha : 1;\n      },\n      setAlpha: function setAlpha(alpha) {\n        this._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\n        this._changed();\n      },\n      hasAlpha: function hasAlpha() {\n        return this._alpha != null;\n      },\n      equals: function equals(color) {\n        var col = Base.isPlainValue(color, true) ? Color.read(arguments) : color;\n        return col === this || col && this._class === col._class && this._type === col._type && this.getAlpha() === col.getAlpha() && Base.equals(this._components, col._components) || false;\n      },\n      toString: function toString() {\n        var properties = this._properties,\n            parts = [],\n            isGradient = this._type === 'gradient',\n            f = Formatter.instance;\n\n        for (var i = 0, l = properties.length; i < l; i++) {\n          var value = this._components[i];\n          if (value != null) parts.push(properties[i] + ': ' + (isGradient ? value : f.number(value)));\n        }\n\n        if (this._alpha != null) parts.push('alpha: ' + f.number(this._alpha));\n        return '{ ' + parts.join(', ') + ' }';\n      },\n      toCSS: function toCSS(hex) {\n        var components = this._convert('rgb'),\n            alpha = hex || this._alpha == null ? 1 : this._alpha;\n\n        function convert(val) {\n          return Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n        }\n\n        components = [convert(components[0]), convert(components[1]), convert(components[2])];\n        if (alpha < 1) components.push(alpha < 0 ? 0 : alpha);\n        return hex ? '#' + ((1 << 24) + (components[0] << 16) + (components[1] << 8) + components[2]).toString(16).slice(1) : (components.length == 4 ? 'rgba(' : 'rgb(') + components.join(',') + ')';\n      },\n      toCanvasStyle: function toCanvasStyle(ctx, matrix) {\n        if (this._canvasStyle) return this._canvasStyle;\n        if (this._type !== 'gradient') return this._canvasStyle = this.toCSS();\n        var components = this._components,\n            gradient = components[0],\n            stops = gradient._stops,\n            origin = components[1],\n            destination = components[2],\n            highlight = components[3],\n            inverse = matrix && matrix.inverted(),\n            canvasGradient;\n\n        if (inverse) {\n          origin = inverse._transformPoint(origin);\n          destination = inverse._transformPoint(destination);\n          if (highlight) highlight = inverse._transformPoint(highlight);\n        }\n\n        if (gradient._radial) {\n          var radius = destination.getDistance(origin);\n\n          if (highlight) {\n            var vector = highlight.subtract(origin);\n            if (vector.getLength() > radius) highlight = origin.add(vector.normalize(radius - 0.1));\n          }\n\n          var start = highlight || origin;\n          canvasGradient = ctx.createRadialGradient(start.x, start.y, 0, origin.x, origin.y, radius);\n        } else {\n          canvasGradient = ctx.createLinearGradient(origin.x, origin.y, destination.x, destination.y);\n        }\n\n        for (var i = 0, l = stops.length; i < l; i++) {\n          var stop = stops[i],\n              offset = stop._offset;\n          canvasGradient.addColorStop(offset == null ? i / (l - 1) : offset, stop._color.toCanvasStyle());\n        }\n\n        return this._canvasStyle = canvasGradient;\n      },\n      transform: function transform(matrix) {\n        if (this._type === 'gradient') {\n          var components = this._components;\n\n          for (var i = 1, l = components.length; i < l; i++) {\n            var point = components[i];\n\n            matrix._transformPoint(point, point, true);\n          }\n\n          this._changed();\n        }\n      },\n      statics: {\n        _types: types,\n        random: function random() {\n          var random = Math.random;\n          return new Color(random(), random(), random());\n        },\n        _setOwner: function _setOwner(color, owner, setter) {\n          if (color) {\n            if (color._owner && owner && color._owner !== owner) {\n              color = color.clone();\n            }\n\n            if (!color._owner ^ !owner) {\n              color._owner = owner || null;\n              color._setter = setter || null;\n            }\n          }\n\n          return color;\n        }\n      }\n    });\n  }(), new function () {\n    var operators = {\n      add: function add(a, b) {\n        return a + b;\n      },\n      subtract: function subtract(a, b) {\n        return a - b;\n      },\n      multiply: function multiply(a, b) {\n        return a * b;\n      },\n      divide: function divide(a, b) {\n        return a / b;\n      }\n    };\n    return Base.each(operators, function (operator, name) {\n      this[name] = function (color) {\n        color = Color.read(arguments);\n\n        var type = this._type,\n            components1 = this._components,\n            components2 = color._convert(type);\n\n        for (var i = 0, l = components1.length; i < l; i++) {\n          components2[i] = operator(components1[i], components2[i]);\n        }\n\n        return new Color(type, components2, this._alpha != null ? operator(this._alpha, color.getAlpha()) : null);\n      };\n    }, {});\n  }());\n  var Gradient = Base.extend({\n    _class: 'Gradient',\n    initialize: function Gradient(stops, radial) {\n      this._id = UID.get();\n\n      if (stops && Base.isPlainObject(stops)) {\n        this.set(stops);\n        stops = radial = null;\n      }\n\n      if (this._stops == null) {\n        this.setStops(stops || ['white', 'black']);\n      }\n\n      if (this._radial == null) {\n        this.setRadial(typeof radial === 'string' && radial === 'radial' || radial || false);\n      }\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return dictionary.add(this, function () {\n        return Base.serialize([this._stops, this._radial], options, true, dictionary);\n      });\n    },\n    _changed: function _changed() {\n      for (var i = 0, l = this._owners && this._owners.length; i < l; i++) {\n        this._owners[i]._changed();\n      }\n    },\n    _addOwner: function _addOwner(color) {\n      if (!this._owners) this._owners = [];\n\n      this._owners.push(color);\n    },\n    _removeOwner: function _removeOwner(color) {\n      var index = this._owners ? this._owners.indexOf(color) : -1;\n\n      if (index != -1) {\n        this._owners.splice(index, 1);\n\n        if (!this._owners.length) this._owners = undefined;\n      }\n    },\n    clone: function clone() {\n      var stops = [];\n\n      for (var i = 0, l = this._stops.length; i < l; i++) {\n        stops[i] = this._stops[i].clone();\n      }\n\n      return new Gradient(stops, this._radial);\n    },\n    getStops: function getStops() {\n      return this._stops;\n    },\n    setStops: function setStops(stops) {\n      if (stops.length < 2) {\n        throw new Error('Gradient stop list needs to contain at least two stops.');\n      }\n\n      var _stops = this._stops;\n\n      if (_stops) {\n        for (var i = 0, l = _stops.length; i < l; i++) {\n          _stops[i]._owner = undefined;\n        }\n      }\n\n      _stops = this._stops = GradientStop.readList(stops, 0, {\n        clone: true\n      });\n\n      for (var i = 0, l = _stops.length; i < l; i++) {\n        _stops[i]._owner = this;\n      }\n\n      this._changed();\n    },\n    getRadial: function getRadial() {\n      return this._radial;\n    },\n    setRadial: function setRadial(radial) {\n      this._radial = radial;\n\n      this._changed();\n    },\n    equals: function equals(gradient) {\n      if (gradient === this) return true;\n\n      if (gradient && this._class === gradient._class) {\n        var stops1 = this._stops,\n            stops2 = gradient._stops,\n            length = stops1.length;\n\n        if (length === stops2.length) {\n          for (var i = 0; i < length; i++) {\n            if (!stops1[i].equals(stops2[i])) return false;\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var GradientStop = Base.extend({\n    _class: 'GradientStop',\n    initialize: function GradientStop(arg0, arg1) {\n      var color = arg0,\n          offset = arg1;\n\n      if (typeof arg0 === 'object' && arg1 === undefined) {\n        if (Array.isArray(arg0) && typeof arg0[0] !== 'number') {\n          color = arg0[0];\n          offset = arg0[1];\n        } else if ('color' in arg0 || 'offset' in arg0 || 'rampPoint' in arg0) {\n          color = arg0.color;\n          offset = arg0.offset || arg0.rampPoint || 0;\n        }\n      }\n\n      this.setColor(color);\n      this.setOffset(offset);\n    },\n    clone: function clone() {\n      return new GradientStop(this._color.clone(), this._offset);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      var color = this._color,\n          offset = this._offset;\n      return Base.serialize(offset == null ? [color] : [color, offset], options, true, dictionary);\n    },\n    _changed: function _changed() {\n      if (this._owner) this._owner._changed(129);\n    },\n    getOffset: function getOffset() {\n      return this._offset;\n    },\n    setOffset: function setOffset(offset) {\n      this._offset = offset;\n\n      this._changed();\n    },\n    getRampPoint: '#getOffset',\n    setRampPoint: '#setOffset',\n    getColor: function getColor() {\n      return this._color;\n    },\n    setColor: function setColor() {\n      Color._setOwner(this._color, null);\n\n      this._color = Color._setOwner(Color.read(arguments, 0), this, 'setColor');\n\n      this._changed();\n    },\n    equals: function equals(stop) {\n      return stop === this || stop && this._class === stop._class && this._color.equals(stop._color) && this._offset == stop._offset || false;\n    }\n  });\n  var Style = Base.extend(new function () {\n    var itemDefaults = {\n      fillColor: null,\n      fillRule: 'nonzero',\n      strokeColor: null,\n      strokeWidth: 1,\n      strokeCap: 'butt',\n      strokeJoin: 'miter',\n      strokeScaling: true,\n      miterLimit: 10,\n      dashOffset: 0,\n      dashArray: [],\n      shadowColor: null,\n      shadowBlur: 0,\n      shadowOffset: new Point(),\n      selectedColor: null\n    },\n        groupDefaults = Base.set({}, itemDefaults, {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal',\n      fontSize: 12,\n      leading: null,\n      justification: 'left'\n    }),\n        textDefaults = Base.set({}, groupDefaults, {\n      fillColor: new Color()\n    }),\n        flags = {\n      strokeWidth: 193,\n      strokeCap: 193,\n      strokeJoin: 193,\n      strokeScaling: 201,\n      miterLimit: 193,\n      fontFamily: 9,\n      fontWeight: 9,\n      fontSize: 9,\n      font: 9,\n      leading: 9,\n      justification: 9\n    },\n        item = {\n      beans: true\n    },\n        fields = {\n      _class: 'Style',\n      beans: true,\n      initialize: function Style(style, _owner, _project) {\n        this._values = {};\n        this._owner = _owner;\n        this._project = _owner && _owner._project || _project || paper.project;\n        this._defaults = !_owner || _owner instanceof Group ? groupDefaults : _owner instanceof TextItem ? textDefaults : itemDefaults;\n        if (style) this.set(style);\n      }\n    };\n    Base.each(groupDefaults, function (value, key) {\n      var isColor = /Color$/.test(key),\n          isPoint = key === 'shadowOffset',\n          part = Base.capitalize(key),\n          flag = flags[key],\n          set = 'set' + part,\n          get = 'get' + part;\n\n      fields[set] = function (value) {\n        var owner = this._owner,\n            children = owner && owner._children,\n            applyToChildren = children && children.length > 0 && !(owner instanceof CompoundPath);\n\n        if (applyToChildren) {\n          for (var i = 0, l = children.length; i < l; i++) {\n            children[i]._style[set](value);\n          }\n        }\n\n        if ((key === 'selectedColor' || !applyToChildren) && key in this._defaults) {\n          var old = this._values[key];\n\n          if (old !== value) {\n            if (isColor) {\n              if (old) {\n                Color._setOwner(old, null);\n\n                old._canvasStyle = null;\n              }\n\n              if (value && value.constructor === Color) {\n                value = Color._setOwner(value, owner, applyToChildren && set);\n              }\n            }\n\n            this._values[key] = value;\n            if (owner) owner._changed(flag || 129);\n          }\n        }\n      };\n\n      fields[get] = function (_dontMerge) {\n        var owner = this._owner,\n            children = owner && owner._children,\n            applyToChildren = children && children.length > 0 && !(owner instanceof CompoundPath),\n            value;\n\n        if (applyToChildren && !_dontMerge) {\n          for (var i = 0, l = children.length; i < l; i++) {\n            var childValue = children[i]._style[get]();\n\n            if (!i) {\n              value = childValue;\n            } else if (!Base.equals(value, childValue)) {\n              return undefined;\n            }\n          }\n        } else if (key in this._defaults) {\n          var value = this._values[key];\n\n          if (value === undefined) {\n            value = this._defaults[key];\n\n            if (value && value.clone) {\n              value = value.clone();\n            }\n          } else {\n            var ctor = isColor ? Color : isPoint ? Point : null;\n\n            if (ctor && !(value && value.constructor === ctor)) {\n              this._values[key] = value = ctor.read([value], 0, {\n                readNull: true,\n                clone: true\n              });\n            }\n          }\n        }\n\n        if (value && isColor) {\n          value = Color._setOwner(value, owner, applyToChildren && set);\n        }\n\n        return value;\n      };\n\n      item[get] = function (_dontMerge) {\n        return this._style[get](_dontMerge);\n      };\n\n      item[set] = function (value) {\n        this._style[set](value);\n      };\n    });\n    Base.each({\n      Font: 'FontFamily',\n      WindingRule: 'FillRule'\n    }, function (value, key) {\n      var get = 'get' + key,\n          set = 'set' + key;\n      fields[get] = item[get] = '#get' + value;\n      fields[set] = item[set] = '#set' + value;\n    });\n    Item.inject(item);\n    return fields;\n  }(), {\n    set: function set(style) {\n      var isStyle = style instanceof Style,\n          values = isStyle ? style._values : style;\n\n      if (values) {\n        for (var key in values) {\n          if (key in this._defaults) {\n            var value = values[key];\n            this[key] = value && isStyle && value.clone ? value.clone() : value;\n          }\n        }\n      }\n    },\n    equals: function equals(style) {\n      function compare(style1, style2, secondary) {\n        var values1 = style1._values,\n            values2 = style2._values,\n            defaults2 = style2._defaults;\n\n        for (var key in values1) {\n          var value1 = values1[key],\n              value2 = values2[key];\n          if (!(secondary && key in values2) && !Base.equals(value1, value2 === undefined ? defaults2[key] : value2)) return false;\n        }\n\n        return true;\n      }\n\n      return style === this || style && this._class === style._class && compare(this, style) && compare(style, this, true) || false;\n    },\n    _dispose: function _dispose() {\n      var color;\n      color = this.getFillColor();\n      if (color) color._canvasStyle = null;\n      color = this.getStrokeColor();\n      if (color) color._canvasStyle = null;\n      color = this.getShadowColor();\n      if (color) color._canvasStyle = null;\n    },\n    hasFill: function hasFill() {\n      var color = this.getFillColor();\n      return !!color && color.alpha > 0;\n    },\n    hasStroke: function hasStroke() {\n      var color = this.getStrokeColor();\n      return !!color && color.alpha > 0 && this.getStrokeWidth() > 0;\n    },\n    hasShadow: function hasShadow() {\n      var color = this.getShadowColor();\n      return !!color && color.alpha > 0 && (this.getShadowBlur() > 0 || !this.getShadowOffset().isZero());\n    },\n    getView: function getView() {\n      return this._project._view;\n    },\n    getFontStyle: function getFontStyle() {\n      var fontSize = this.getFontSize();\n      return this.getFontWeight() + ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ') + this.getFontFamily();\n    },\n    getFont: '#getFontFamily',\n    setFont: '#setFontFamily',\n    getLeading: function getLeading() {\n      var leading = getLeading.base.call(this),\n          fontSize = this.getFontSize();\n      if (/pt|em|%|px/.test(fontSize)) fontSize = this.getView().getPixelSize(fontSize);\n      return leading != null ? leading : fontSize * 1.2;\n    }\n  });\n  var DomElement = new function () {\n    function handlePrefix(el, name, set, value) {\n      var prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n          suffix = name[0].toUpperCase() + name.substring(1);\n\n      for (var i = 0; i < 6; i++) {\n        var prefix = prefixes[i],\n            key = prefix ? prefix + suffix : name;\n\n        if (key in el) {\n          if (set) {\n            el[key] = value;\n          } else {\n            return el[key];\n          }\n\n          break;\n        }\n      }\n    }\n\n    return {\n      getStyles: function getStyles(el) {\n        var doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n            view = doc && doc.defaultView;\n        return view && view.getComputedStyle(el, '');\n      },\n      getBounds: function getBounds(el, viewport) {\n        var doc = el.ownerDocument,\n            body = doc.body,\n            html = doc.documentElement,\n            rect;\n\n        try {\n          rect = el.getBoundingClientRect();\n        } catch (e) {\n          rect = {\n            left: 0,\n            top: 0,\n            width: 0,\n            height: 0\n          };\n        }\n\n        var x = rect.left - (html.clientLeft || body.clientLeft || 0),\n            y = rect.top - (html.clientTop || body.clientTop || 0);\n\n        if (!viewport) {\n          var view = doc.defaultView;\n          x += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n          y += view.pageYOffset || html.scrollTop || body.scrollTop;\n        }\n\n        return new _Rectangle(x, y, rect.width, rect.height);\n      },\n      getViewportBounds: function getViewportBounds(el) {\n        var doc = el.ownerDocument,\n            view = doc.defaultView,\n            html = doc.documentElement;\n        return new _Rectangle(0, 0, view.innerWidth || html.clientWidth, view.innerHeight || html.clientHeight);\n      },\n      getOffset: function getOffset(el, viewport) {\n        return DomElement.getBounds(el, viewport).getPoint();\n      },\n      getSize: function getSize(el) {\n        return DomElement.getBounds(el, true).getSize();\n      },\n      isInvisible: function isInvisible(el) {\n        return DomElement.getSize(el).equals(new Size(0, 0));\n      },\n      isInView: function isInView(el) {\n        return !DomElement.isInvisible(el) && DomElement.getViewportBounds(el).intersects(DomElement.getBounds(el, true));\n      },\n      isInserted: function isInserted(el) {\n        return document.body.contains(el);\n      },\n      getPrefixed: function getPrefixed(el, name) {\n        return el && handlePrefix(el, name);\n      },\n      setPrefixed: function setPrefixed(el, name, value) {\n        if (typeof name === 'object') {\n          for (var key in name) {\n            handlePrefix(el, key, true, name[key]);\n          }\n        } else {\n          handlePrefix(el, name, true, value);\n        }\n      }\n    };\n  }();\n  var DomEvent = {\n    add: function add(el, events) {\n      if (el) {\n        for (var type in events) {\n          var func = events[type],\n              parts = type.split(/[\\s,]+/g);\n\n          for (var i = 0, l = parts.length; i < l; i++) {\n            var name = parts[i];\n            var options = el === document && (name === 'touchstart' || name === 'touchmove') ? {\n              passive: false\n            } : false;\n            el.addEventListener(name, func, options);\n          }\n        }\n      }\n    },\n    remove: function remove(el, events) {\n      if (el) {\n        for (var type in events) {\n          var func = events[type],\n              parts = type.split(/[\\s,]+/g);\n\n          for (var i = 0, l = parts.length; i < l; i++) {\n            el.removeEventListener(parts[i], func, false);\n          }\n        }\n      }\n    },\n    getPoint: function getPoint(event) {\n      var pos = event.targetTouches ? event.targetTouches.length ? event.targetTouches[0] : event.changedTouches[0] : event;\n      return new Point(pos.pageX || pos.clientX + document.documentElement.scrollLeft, pos.pageY || pos.clientY + document.documentElement.scrollTop);\n    },\n    getTarget: function getTarget(event) {\n      return event.target || event.srcElement;\n    },\n    getRelatedTarget: function getRelatedTarget(event) {\n      return event.relatedTarget || event.toElement;\n    },\n    getOffset: function getOffset(event, target) {\n      return DomEvent.getPoint(event).subtract(DomElement.getOffset(target || DomEvent.getTarget(event)));\n    }\n  };\n  DomEvent.requestAnimationFrame = new function () {\n    var nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n        requested = false,\n        callbacks = [],\n        timer;\n\n    function handleCallbacks() {\n      var functions = callbacks;\n      callbacks = [];\n\n      for (var i = 0, l = functions.length; i < l; i++) {\n        functions[i]();\n      }\n\n      requested = nativeRequest && callbacks.length;\n      if (requested) nativeRequest(handleCallbacks);\n    }\n\n    return function (callback) {\n      callbacks.push(callback);\n\n      if (nativeRequest) {\n        if (!requested) {\n          nativeRequest(handleCallbacks);\n          requested = true;\n        }\n      } else if (!timer) {\n        timer = setInterval(handleCallbacks, 1000 / 60);\n      }\n    };\n  }();\n  var View = Base.extend(Emitter, {\n    _class: 'View',\n    initialize: function View(project, element) {\n      function getSize(name) {\n        return element[name] || parseInt(element.getAttribute(name), 10);\n      }\n\n      function getCanvasSize() {\n        var size = DomElement.getSize(element);\n        return size.isNaN() || size.isZero() ? new Size(getSize('width'), getSize('height')) : size;\n      }\n\n      var size;\n\n      if (window && element) {\n        this._id = element.getAttribute('id');\n        if (this._id == null) element.setAttribute('id', this._id = 'view-' + View._id++);\n        DomEvent.add(element, this._viewEvents);\n        var none = 'none';\n        DomElement.setPrefixed(element.style, {\n          userDrag: none,\n          userSelect: none,\n          touchCallout: none,\n          contentZooming: none,\n          tapHighlightColor: 'rgba(0,0,0,0)'\n        });\n\n        if (PaperScope.hasAttribute(element, 'resize')) {\n          var that = this;\n          DomEvent.add(window, this._windowEvents = {\n            resize: function resize() {\n              that.setViewSize(getCanvasSize());\n            }\n          });\n        }\n\n        size = getCanvasSize();\n\n        if (PaperScope.hasAttribute(element, 'stats') && typeof Stats !== 'undefined') {\n          this._stats = new Stats();\n          var stats = this._stats.domElement,\n              style = stats.style,\n              offset = DomElement.getOffset(element);\n          style.position = 'absolute';\n          style.left = offset.x + 'px';\n          style.top = offset.y + 'px';\n          document.body.appendChild(stats);\n        }\n      } else {\n        size = new Size(element);\n        element = null;\n      }\n\n      this._project = project;\n      this._scope = project._scope;\n      this._element = element;\n      if (!this._pixelRatio) this._pixelRatio = window && window.devicePixelRatio || 1;\n\n      this._setElementSize(size.width, size.height);\n\n      this._viewSize = size;\n\n      View._views.push(this);\n\n      View._viewsById[this._id] = this;\n      (this._matrix = new Matrix())._owner = this;\n      if (!View._focused) View._focused = this;\n      this._frameItems = {};\n      this._frameItemCount = 0;\n      this._itemEvents = {\n        native: {},\n        virtual: {}\n      };\n      this._autoUpdate = !paper.agent.node;\n      this._needsUpdate = false;\n    },\n    remove: function remove() {\n      if (!this._project) return false;\n      if (View._focused === this) View._focused = null;\n\n      View._views.splice(View._views.indexOf(this), 1);\n\n      delete View._viewsById[this._id];\n      var project = this._project;\n      if (project._view === this) project._view = null;\n      DomEvent.remove(this._element, this._viewEvents);\n      DomEvent.remove(window, this._windowEvents);\n      this._element = this._project = null;\n      this.off('frame');\n      this._animate = false;\n      this._frameItems = {};\n      return true;\n    },\n    _events: Base.each(Item._itemHandlers.concat(['onResize', 'onKeyDown', 'onKeyUp']), function (name) {\n      this[name] = {};\n    }, {\n      onFrame: {\n        install: function install() {\n          this.play();\n        },\n        uninstall: function uninstall() {\n          this.pause();\n        }\n      }\n    }),\n    _animate: false,\n    _time: 0,\n    _count: 0,\n    getAutoUpdate: function getAutoUpdate() {\n      return this._autoUpdate;\n    },\n    setAutoUpdate: function setAutoUpdate(autoUpdate) {\n      this._autoUpdate = autoUpdate;\n      if (autoUpdate) this.requestUpdate();\n    },\n    update: function update() {},\n    draw: function draw() {\n      this.update();\n    },\n    requestUpdate: function requestUpdate() {\n      if (!this._requested) {\n        var that = this;\n        DomEvent.requestAnimationFrame(function () {\n          that._requested = false;\n\n          if (that._animate) {\n            that.requestUpdate();\n            var element = that._element;\n\n            if ((!DomElement.getPrefixed(document, 'hidden') || PaperScope.getAttribute(element, 'keepalive') === 'true') && DomElement.isInView(element)) {\n              that._handleFrame();\n            }\n          }\n\n          if (that._autoUpdate) that.update();\n        });\n        this._requested = true;\n      }\n    },\n    play: function play() {\n      this._animate = true;\n      this.requestUpdate();\n    },\n    pause: function pause() {\n      this._animate = false;\n    },\n    _handleFrame: function _handleFrame() {\n      paper = this._scope;\n      var now = Date.now() / 1000,\n          delta = this._last ? now - this._last : 0;\n      this._last = now;\n      this.emit('frame', new Base({\n        delta: delta,\n        time: this._time += delta,\n        count: this._count++\n      }));\n      if (this._stats) this._stats.update();\n    },\n    _animateItem: function _animateItem(item, animate) {\n      var items = this._frameItems;\n\n      if (animate) {\n        items[item._id] = {\n          item: item,\n          time: 0,\n          count: 0\n        };\n        if (++this._frameItemCount === 1) this.on('frame', this._handleFrameItems);\n      } else {\n        delete items[item._id];\n\n        if (--this._frameItemCount === 0) {\n          this.off('frame', this._handleFrameItems);\n        }\n      }\n    },\n    _handleFrameItems: function _handleFrameItems(event) {\n      for (var i in this._frameItems) {\n        var entry = this._frameItems[i];\n        entry.item.emit('frame', new Base(event, {\n          time: entry.time += event.delta,\n          count: entry.count++\n        }));\n      }\n    },\n    _changed: function _changed() {\n      this._project._changed(4097);\n\n      this._bounds = this._decomposed = undefined;\n    },\n    getElement: function getElement() {\n      return this._element;\n    },\n    getPixelRatio: function getPixelRatio() {\n      return this._pixelRatio;\n    },\n    getResolution: function getResolution() {\n      return this._pixelRatio * 72;\n    },\n    getViewSize: function getViewSize() {\n      var size = this._viewSize;\n      return new LinkedSize(size.width, size.height, this, 'setViewSize');\n    },\n    setViewSize: function setViewSize() {\n      var size = Size.read(arguments),\n          delta = size.subtract(this._viewSize);\n      if (delta.isZero()) return;\n\n      this._setElementSize(size.width, size.height);\n\n      this._viewSize.set(size);\n\n      this._changed();\n\n      this.emit('resize', {\n        size: size,\n        delta: delta\n      });\n\n      if (this._autoUpdate) {\n        this.update();\n      }\n    },\n    _setElementSize: function _setElementSize(width, height) {\n      var element = this._element;\n\n      if (element) {\n        if (element.width !== width) element.width = width;\n        if (element.height !== height) element.height = height;\n      }\n    },\n    getBounds: function getBounds() {\n      if (!this._bounds) this._bounds = this._matrix.inverted()._transformBounds(new _Rectangle(new Point(), this._viewSize));\n      return this._bounds;\n    },\n    getSize: function getSize() {\n      return this.getBounds().getSize();\n    },\n    isVisible: function isVisible() {\n      return DomElement.isInView(this._element);\n    },\n    isInserted: function isInserted() {\n      return DomElement.isInserted(this._element);\n    },\n    getPixelSize: function getPixelSize(size) {\n      var element = this._element,\n          pixels;\n\n      if (element) {\n        var parent = element.parentNode,\n            temp = document.createElement('div');\n        temp.style.fontSize = size;\n        parent.appendChild(temp);\n        pixels = parseFloat(DomElement.getStyles(temp).fontSize);\n        parent.removeChild(temp);\n      } else {\n        pixels = parseFloat(pixels);\n      }\n\n      return pixels;\n    },\n    getTextWidth: function getTextWidth(font, lines) {\n      return 0;\n    }\n  }, Base.each(['rotate', 'scale', 'shear', 'skew'], function (key) {\n    var rotate = key === 'rotate';\n\n    this[key] = function () {\n      var args = arguments,\n          value = (rotate ? Base : Point).read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      return this.transform(new Matrix()[key](value, center || this.getCenter(true)));\n    };\n  }, {\n    _decompose: function _decompose() {\n      return this._decomposed || (this._decomposed = this._matrix.decompose());\n    },\n    translate: function translate() {\n      var mx = new Matrix();\n      return this.transform(mx.translate.apply(mx, arguments));\n    },\n    getCenter: function getCenter() {\n      return this.getBounds().getCenter();\n    },\n    setCenter: function setCenter() {\n      var center = Point.read(arguments);\n      this.translate(this.getCenter().subtract(center));\n    },\n    getZoom: function getZoom() {\n      var scaling = this._decompose().scaling;\n\n      return (scaling.x + scaling.y) / 2;\n    },\n    setZoom: function setZoom(zoom) {\n      this.transform(new Matrix().scale(zoom / this.getZoom(), this.getCenter()));\n    },\n    getRotation: function getRotation() {\n      return this._decompose().rotation;\n    },\n    setRotation: function setRotation(rotation) {\n      var current = this.getRotation();\n\n      if (current != null && rotation != null) {\n        this.rotate(rotation - current);\n      }\n    },\n    getScaling: function getScaling() {\n      var scaling = this._decompose().scaling;\n\n      return new LinkedPoint(scaling.x, scaling.y, this, 'setScaling');\n    },\n    setScaling: function setScaling() {\n      var current = this.getScaling(),\n          scaling = Point.read(arguments, 0, {\n        clone: true,\n        readNull: true\n      });\n\n      if (current && scaling) {\n        this.scale(scaling.x / current.x, scaling.y / current.y);\n      }\n    },\n    getMatrix: function getMatrix() {\n      return this._matrix;\n    },\n    setMatrix: function setMatrix() {\n      var matrix = this._matrix;\n      matrix.initialize.apply(matrix, arguments);\n    },\n    transform: function transform(matrix) {\n      this._matrix.append(matrix);\n    },\n    scrollBy: function scrollBy() {\n      this.translate(Point.read(arguments).negate());\n    }\n  }), {\n    projectToView: function projectToView() {\n      return this._matrix._transformPoint(Point.read(arguments));\n    },\n    viewToProject: function viewToProject() {\n      return this._matrix._inverseTransform(Point.read(arguments));\n    },\n    getEventPoint: function getEventPoint(event) {\n      return this.viewToProject(DomEvent.getOffset(event, this._element));\n    }\n  }, {\n    statics: {\n      _views: [],\n      _viewsById: {},\n      _id: 0,\n      create: function create(project, element) {\n        if (document && typeof element === 'string') element = document.getElementById(element);\n        var ctor = window ? CanvasView : View;\n        return new ctor(project, element);\n      }\n    }\n  }, new function () {\n    if (!window) return;\n    var prevFocus,\n        tempFocus,\n        dragging = false,\n        mouseDown = false;\n\n    function getView(event) {\n      var target = DomEvent.getTarget(event);\n      return target.getAttribute && View._viewsById[target.getAttribute('id')];\n    }\n\n    function updateFocus() {\n      var view = View._focused;\n\n      if (!view || !view.isVisible()) {\n        for (var i = 0, l = View._views.length; i < l; i++) {\n          if ((view = View._views[i]).isVisible()) {\n            View._focused = tempFocus = view;\n            break;\n          }\n        }\n      }\n    }\n\n    function handleMouseMove(view, event, point) {\n      view._handleMouseEvent('mousemove', event, point);\n    }\n\n    var navigator = window.navigator,\n        mousedown,\n        mousemove,\n        mouseup;\n\n    if (navigator.pointerEnabled || navigator.msPointerEnabled) {\n      mousedown = 'pointerdown MSPointerDown';\n      mousemove = 'pointermove MSPointerMove';\n      mouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n    } else {\n      mousedown = 'touchstart';\n      mousemove = 'touchmove';\n      mouseup = 'touchend touchcancel';\n\n      if (!('ontouchstart' in window && navigator.userAgent.match(/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n        mousedown += ' mousedown';\n        mousemove += ' mousemove';\n        mouseup += ' mouseup';\n      }\n    }\n\n    var viewEvents = {},\n        docEvents = {\n      mouseout: function mouseout(event) {\n        var view = View._focused,\n            target = DomEvent.getRelatedTarget(event);\n\n        if (view && (!target || target.nodeName === 'HTML')) {\n          var offset = DomEvent.getOffset(event, view._element),\n              x = offset.x,\n              abs = Math.abs,\n              ax = abs(x),\n              max = 1 << 25,\n              diff = ax - max;\n          offset.x = abs(diff) < ax ? diff * (x < 0 ? -1 : 1) : x;\n          handleMouseMove(view, event, view.viewToProject(offset));\n        }\n      },\n      scroll: updateFocus\n    };\n\n    viewEvents[mousedown] = function (event) {\n      var view = View._focused = getView(event);\n\n      if (!dragging) {\n        dragging = true;\n\n        view._handleMouseEvent('mousedown', event);\n      }\n    };\n\n    docEvents[mousemove] = function (event) {\n      var view = View._focused;\n\n      if (!mouseDown) {\n        var target = getView(event);\n\n        if (target) {\n          if (view !== target) {\n            if (view) handleMouseMove(view, event);\n            if (!prevFocus) prevFocus = view;\n            view = View._focused = tempFocus = target;\n          }\n        } else if (tempFocus && tempFocus === view) {\n          if (prevFocus && !prevFocus.isInserted()) prevFocus = null;\n          view = View._focused = prevFocus;\n          prevFocus = null;\n          updateFocus();\n        }\n      }\n\n      if (view) handleMouseMove(view, event);\n    };\n\n    docEvents[mousedown] = function () {\n      mouseDown = true;\n    };\n\n    docEvents[mouseup] = function (event) {\n      var view = View._focused;\n      if (view && dragging) view._handleMouseEvent('mouseup', event);\n      mouseDown = dragging = false;\n    };\n\n    DomEvent.add(document, docEvents);\n    DomEvent.add(window, {\n      load: updateFocus\n    });\n    var called = false,\n        prevented = false,\n        fallbacks = {\n      doubleclick: 'click',\n      mousedrag: 'mousemove'\n    },\n        wasInView = false,\n        overView,\n        downPoint,\n        lastPoint,\n        downItem,\n        overItem,\n        dragItem,\n        clickItem,\n        clickTime,\n        dblClick;\n\n    function emitMouseEvent(obj, target, type, event, point, prevPoint, stopItem) {\n      var stopped = false,\n          mouseEvent;\n\n      function emit(obj, type) {\n        if (obj.responds(type)) {\n          if (!mouseEvent) {\n            mouseEvent = new MouseEvent(type, event, point, target || obj, prevPoint ? point.subtract(prevPoint) : null);\n          }\n\n          if (obj.emit(type, mouseEvent)) {\n            called = true;\n            if (mouseEvent.prevented) prevented = true;\n            if (mouseEvent.stopped) return stopped = true;\n          }\n        } else {\n          var fallback = fallbacks[type];\n          if (fallback) return emit(obj, fallback);\n        }\n      }\n\n      while (obj && obj !== stopItem) {\n        if (emit(obj, type)) break;\n        obj = obj._parent;\n      }\n\n      return stopped;\n    }\n\n    function emitMouseEvents(view, hitItem, type, event, point, prevPoint) {\n      view._project.removeOn(type);\n\n      prevented = called = false;\n      return dragItem && emitMouseEvent(dragItem, null, type, event, point, prevPoint) || hitItem && hitItem !== dragItem && !hitItem.isDescendant(dragItem) && emitMouseEvent(hitItem, null, type === 'mousedrag' ? 'mousemove' : type, event, point, prevPoint, dragItem) || emitMouseEvent(view, dragItem || hitItem || view, type, event, point, prevPoint);\n    }\n\n    var itemEventsMap = {\n      mousedown: {\n        mousedown: 1,\n        mousedrag: 1,\n        click: 1,\n        doubleclick: 1\n      },\n      mouseup: {\n        mouseup: 1,\n        mousedrag: 1,\n        click: 1,\n        doubleclick: 1\n      },\n      mousemove: {\n        mousedrag: 1,\n        mousemove: 1,\n        mouseenter: 1,\n        mouseleave: 1\n      }\n    };\n    return {\n      _viewEvents: viewEvents,\n      _handleMouseEvent: function _handleMouseEvent(type, event, point) {\n        var itemEvents = this._itemEvents,\n            hitItems = itemEvents.native[type],\n            nativeMove = type === 'mousemove',\n            tool = this._scope.tool,\n            view = this;\n\n        function responds(type) {\n          return itemEvents.virtual[type] || view.responds(type) || tool && tool.responds(type);\n        }\n\n        if (nativeMove && dragging && responds('mousedrag')) type = 'mousedrag';\n        if (!point) point = this.getEventPoint(event);\n\n        var inView = this.getBounds().contains(point),\n            hit = hitItems && inView && view._project.hitTest(point, {\n          tolerance: 0,\n          fill: true,\n          stroke: true\n        }),\n            hitItem = hit && hit.item || null,\n            handle = false,\n            mouse = {};\n\n        mouse[type.substr(5)] = true;\n\n        if (hitItems && hitItem !== overItem) {\n          if (overItem) {\n            emitMouseEvent(overItem, null, 'mouseleave', event, point);\n          }\n\n          if (hitItem) {\n            emitMouseEvent(hitItem, null, 'mouseenter', event, point);\n          }\n\n          overItem = hitItem;\n        }\n\n        if (wasInView ^ inView) {\n          emitMouseEvent(this, null, inView ? 'mouseenter' : 'mouseleave', event, point);\n          overView = inView ? this : null;\n          handle = true;\n        }\n\n        if ((inView || mouse.drag) && !point.equals(lastPoint)) {\n          emitMouseEvents(this, hitItem, nativeMove ? type : 'mousemove', event, point, lastPoint);\n          handle = true;\n        }\n\n        wasInView = inView;\n\n        if (mouse.down && inView || mouse.up && downPoint) {\n          emitMouseEvents(this, hitItem, type, event, point, downPoint);\n\n          if (mouse.down) {\n            dblClick = hitItem === clickItem && Date.now() - clickTime < 300;\n            downItem = clickItem = hitItem;\n\n            if (!prevented && hitItem) {\n              var item = hitItem;\n\n              while (item && !item.responds('mousedrag')) {\n                item = item._parent;\n              }\n\n              if (item) dragItem = hitItem;\n            }\n\n            downPoint = point;\n          } else if (mouse.up) {\n            if (!prevented && hitItem === downItem) {\n              clickTime = Date.now();\n              emitMouseEvents(this, hitItem, dblClick ? 'doubleclick' : 'click', event, point, downPoint);\n              dblClick = false;\n            }\n\n            downItem = dragItem = null;\n          }\n\n          wasInView = false;\n          handle = true;\n        }\n\n        lastPoint = point;\n\n        if (handle && tool) {\n          called = tool._handleMouseEvent(type, event, point, mouse) || called;\n        }\n\n        if (event.cancelable !== false && (called && !mouse.move || mouse.down && responds('mouseup'))) {\n          event.preventDefault();\n        }\n      },\n      _handleKeyEvent: function _handleKeyEvent(type, event, key, character) {\n        var scope = this._scope,\n            tool = scope.tool,\n            keyEvent;\n\n        function emit(obj) {\n          if (obj.responds(type)) {\n            paper = scope;\n            obj.emit(type, keyEvent = keyEvent || new KeyEvent(type, event, key, character));\n          }\n        }\n\n        if (this.isVisible()) {\n          emit(this);\n          if (tool && tool.responds(type)) emit(tool);\n        }\n      },\n      _countItemEvent: function _countItemEvent(type, sign) {\n        var itemEvents = this._itemEvents,\n            native = itemEvents.native,\n            virtual = itemEvents.virtual;\n\n        for (var key in itemEventsMap) {\n          native[key] = (native[key] || 0) + (itemEventsMap[key][type] || 0) * sign;\n        }\n\n        virtual[type] = (virtual[type] || 0) + sign;\n      },\n      statics: {\n        updateFocus: updateFocus,\n        _resetState: function _resetState() {\n          dragging = mouseDown = called = wasInView = false;\n          prevFocus = tempFocus = overView = downPoint = lastPoint = downItem = overItem = dragItem = clickItem = clickTime = dblClick = null;\n        }\n      }\n    };\n  }());\n  var CanvasView = View.extend({\n    _class: 'CanvasView',\n    initialize: function CanvasView(project, canvas) {\n      if (!(canvas instanceof window.HTMLCanvasElement)) {\n        var size = Size.read(arguments, 1);\n        if (size.isZero()) throw new Error('Cannot create CanvasView with the provided argument: ' + Base.slice(arguments, 1));\n        canvas = CanvasProvider.getCanvas(size);\n      }\n\n      var ctx = this._context = canvas.getContext('2d');\n      ctx.save();\n      this._pixelRatio = 1;\n\n      if (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n        var deviceRatio = window.devicePixelRatio || 1,\n            backingStoreRatio = DomElement.getPrefixed(ctx, 'backingStorePixelRatio') || 1;\n        this._pixelRatio = deviceRatio / backingStoreRatio;\n      }\n\n      View.call(this, project, canvas);\n      this._needsUpdate = true;\n    },\n    remove: function remove() {\n      this._context.restore();\n\n      return remove.base.call(this);\n    },\n    _setElementSize: function _setElementSize(width, height) {\n      var pixelRatio = this._pixelRatio;\n\n      _setElementSize.base.call(this, width * pixelRatio, height * pixelRatio);\n\n      if (pixelRatio !== 1) {\n        var element = this._element,\n            ctx = this._context;\n\n        if (!PaperScope.hasAttribute(element, 'resize')) {\n          var style = element.style;\n          style.width = width + 'px';\n          style.height = height + 'px';\n        }\n\n        ctx.restore();\n        ctx.save();\n        ctx.scale(pixelRatio, pixelRatio);\n      }\n    },\n    getContext: function getContext() {\n      return this._context;\n    },\n    getPixelSize: function getPixelSize(size) {\n      var agent = paper.agent,\n          pixels;\n\n      if (agent && agent.firefox) {\n        pixels = getPixelSize.base.call(this, size);\n      } else {\n        var ctx = this._context,\n            prevFont = ctx.font;\n        ctx.font = size + ' serif';\n        pixels = parseFloat(ctx.font);\n        ctx.font = prevFont;\n      }\n\n      return pixels;\n    },\n    getTextWidth: function getTextWidth(font, lines) {\n      var ctx = this._context,\n          prevFont = ctx.font,\n          width = 0;\n      ctx.font = font;\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        width = Math.max(width, ctx.measureText(lines[i]).width);\n      }\n\n      ctx.font = prevFont;\n      return width;\n    },\n    update: function update() {\n      if (!this._needsUpdate) return false;\n      var project = this._project,\n          ctx = this._context,\n          size = this._viewSize;\n      ctx.clearRect(0, 0, size.width + 1, size.height + 1);\n      if (project) project.draw(ctx, this._matrix, this._pixelRatio);\n      this._needsUpdate = false;\n      return true;\n    }\n  });\n  var Event = Base.extend({\n    _class: 'Event',\n    initialize: function Event(event) {\n      this.event = event;\n      this.type = event && event.type;\n    },\n    prevented: false,\n    stopped: false,\n    preventDefault: function preventDefault() {\n      this.prevented = true;\n      this.event.preventDefault();\n    },\n    stopPropagation: function stopPropagation() {\n      this.stopped = true;\n      this.event.stopPropagation();\n    },\n    stop: function stop() {\n      this.stopPropagation();\n      this.preventDefault();\n    },\n    getTimeStamp: function getTimeStamp() {\n      return this.event.timeStamp;\n    },\n    getModifiers: function getModifiers() {\n      return Key.modifiers;\n    }\n  });\n  var KeyEvent = Event.extend({\n    _class: 'KeyEvent',\n    initialize: function KeyEvent(type, event, key, character) {\n      this.type = type;\n      this.event = event;\n      this.key = key;\n      this.character = character;\n    },\n    toString: function toString() {\n      return \"{ type: '\" + this.type + \"', key: '\" + this.key + \"', character: '\" + this.character + \"', modifiers: \" + this.getModifiers() + \" }\";\n    }\n  });\n  var Key = new function () {\n    var keyLookup = {\n      '\\t': 'tab',\n      ' ': 'space',\n      '\\b': 'backspace',\n      '\\x7f': 'delete',\n      'Spacebar': 'space',\n      'Del': 'delete',\n      'Win': 'meta',\n      'Esc': 'escape'\n    },\n        charLookup = {\n      'tab': '\\t',\n      'space': ' ',\n      'enter': '\\r'\n    },\n        keyMap = {},\n        charMap = {},\n        metaFixMap,\n        downKey,\n        modifiers = new Base({\n      shift: false,\n      control: false,\n      alt: false,\n      meta: false,\n      capsLock: false,\n      space: false\n    }).inject({\n      option: {\n        get: function get() {\n          return this.alt;\n        }\n      },\n      command: {\n        get: function get() {\n          var agent = paper && paper.agent;\n          return agent && agent.mac ? this.meta : this.control;\n        }\n      }\n    });\n\n    function getKey(event) {\n      var key = event.key || event.keyIdentifier;\n      key = /^U\\+/.test(key) ? String.fromCharCode(parseInt(key.substr(2), 16)) : /^Arrow[A-Z]/.test(key) ? key.substr(5) : key === 'Unidentified' || key === undefined ? String.fromCharCode(event.keyCode) : key;\n      return keyLookup[key] || (key.length > 1 ? Base.hyphenate(key) : key.toLowerCase());\n    }\n\n    function handleKey(down, key, character, event) {\n      var type = down ? 'keydown' : 'keyup',\n          view = View._focused,\n          name;\n      keyMap[key] = down;\n\n      if (down) {\n        charMap[key] = character;\n      } else {\n        delete charMap[key];\n      }\n\n      if (key.length > 1 && (name = Base.camelize(key)) in modifiers) {\n        modifiers[name] = down;\n        var agent = paper && paper.agent;\n\n        if (name === 'meta' && agent && agent.mac) {\n          if (down) {\n            metaFixMap = {};\n          } else {\n            for (var k in metaFixMap) {\n              if (k in charMap) handleKey(false, k, metaFixMap[k], event);\n            }\n\n            metaFixMap = null;\n          }\n        }\n      } else if (down && metaFixMap) {\n        metaFixMap[key] = character;\n      }\n\n      if (view) {\n        view._handleKeyEvent(down ? 'keydown' : 'keyup', event, key, character);\n      }\n    }\n\n    DomEvent.add(document, {\n      keydown: function keydown(event) {\n        var key = getKey(event),\n            agent = paper && paper.agent;\n\n        if (key.length > 1 || agent && agent.chrome && (event.altKey || agent.mac && event.metaKey || !agent.mac && event.ctrlKey)) {\n          handleKey(true, key, charLookup[key] || (key.length > 1 ? '' : key), event);\n        } else {\n          downKey = key;\n        }\n      },\n      keypress: function keypress(event) {\n        if (downKey) {\n          var key = getKey(event),\n              code = event.charCode,\n              character = code >= 32 ? String.fromCharCode(code) : key.length > 1 ? '' : key;\n\n          if (key !== downKey) {\n            key = character.toLowerCase();\n          }\n\n          handleKey(true, key, character, event);\n          downKey = null;\n        }\n      },\n      keyup: function keyup(event) {\n        var key = getKey(event);\n        if (key in charMap) handleKey(false, key, charMap[key], event);\n      }\n    });\n    DomEvent.add(window, {\n      blur: function blur(event) {\n        for (var key in charMap) {\n          handleKey(false, key, charMap[key], event);\n        }\n      }\n    });\n    return {\n      modifiers: modifiers,\n      isDown: function isDown(key) {\n        return !!keyMap[key];\n      }\n    };\n  }();\n  var MouseEvent = Event.extend({\n    _class: 'MouseEvent',\n    initialize: function MouseEvent(type, event, point, target, delta) {\n      this.type = type;\n      this.event = event;\n      this.point = point;\n      this.target = target;\n      this.delta = delta;\n    },\n    toString: function toString() {\n      return \"{ type: '\" + this.type + \"', point: \" + this.point + ', target: ' + this.target + (this.delta ? ', delta: ' + this.delta : '') + ', modifiers: ' + this.getModifiers() + ' }';\n    }\n  });\n  var ToolEvent = Event.extend({\n    _class: 'ToolEvent',\n    _item: null,\n    initialize: function ToolEvent(tool, type, event) {\n      this.tool = tool;\n      this.type = type;\n      this.event = event;\n    },\n    _choosePoint: function _choosePoint(point, toolPoint) {\n      return point ? point : toolPoint ? toolPoint.clone() : null;\n    },\n    getPoint: function getPoint() {\n      return this._choosePoint(this._point, this.tool._point);\n    },\n    setPoint: function setPoint(point) {\n      this._point = point;\n    },\n    getLastPoint: function getLastPoint() {\n      return this._choosePoint(this._lastPoint, this.tool._lastPoint);\n    },\n    setLastPoint: function setLastPoint(lastPoint) {\n      this._lastPoint = lastPoint;\n    },\n    getDownPoint: function getDownPoint() {\n      return this._choosePoint(this._downPoint, this.tool._downPoint);\n    },\n    setDownPoint: function setDownPoint(downPoint) {\n      this._downPoint = downPoint;\n    },\n    getMiddlePoint: function getMiddlePoint() {\n      if (!this._middlePoint && this.tool._lastPoint) {\n        return this.tool._point.add(this.tool._lastPoint).divide(2);\n      }\n\n      return this._middlePoint;\n    },\n    setMiddlePoint: function setMiddlePoint(middlePoint) {\n      this._middlePoint = middlePoint;\n    },\n    getDelta: function getDelta() {\n      return !this._delta && this.tool._lastPoint ? this.tool._point.subtract(this.tool._lastPoint) : this._delta;\n    },\n    setDelta: function setDelta(delta) {\n      this._delta = delta;\n    },\n    getCount: function getCount() {\n      return this.tool[/^mouse(down|up)$/.test(this.type) ? '_downCount' : '_moveCount'];\n    },\n    setCount: function setCount(count) {\n      this.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count'] = count;\n    },\n    getItem: function getItem() {\n      if (!this._item) {\n        var result = this.tool._scope.project.hitTest(this.getPoint());\n\n        if (result) {\n          var item = result.item,\n              parent = item._parent;\n\n          while (/^(Group|CompoundPath)$/.test(parent._class)) {\n            item = parent;\n            parent = parent._parent;\n          }\n\n          this._item = item;\n        }\n      }\n\n      return this._item;\n    },\n    setItem: function setItem(item) {\n      this._item = item;\n    },\n    toString: function toString() {\n      return '{ type: ' + this.type + ', point: ' + this.getPoint() + ', count: ' + this.getCount() + ', modifiers: ' + this.getModifiers() + ' }';\n    }\n  });\n  var Tool = PaperScopeItem.extend({\n    _class: 'Tool',\n    _list: 'tools',\n    _reference: 'tool',\n    _events: ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove', 'onActivate', 'onDeactivate', 'onEditOptions', 'onKeyDown', 'onKeyUp'],\n    initialize: function Tool(props) {\n      PaperScopeItem.call(this);\n      this._moveCount = -1;\n      this._downCount = -1;\n      this.set(props);\n    },\n    getMinDistance: function getMinDistance() {\n      return this._minDistance;\n    },\n    setMinDistance: function setMinDistance(minDistance) {\n      this._minDistance = minDistance;\n\n      if (minDistance != null && this._maxDistance != null && minDistance > this._maxDistance) {\n        this._maxDistance = minDistance;\n      }\n    },\n    getMaxDistance: function getMaxDistance() {\n      return this._maxDistance;\n    },\n    setMaxDistance: function setMaxDistance(maxDistance) {\n      this._maxDistance = maxDistance;\n\n      if (this._minDistance != null && maxDistance != null && maxDistance < this._minDistance) {\n        this._minDistance = maxDistance;\n      }\n    },\n    getFixedDistance: function getFixedDistance() {\n      return this._minDistance == this._maxDistance ? this._minDistance : null;\n    },\n    setFixedDistance: function setFixedDistance(distance) {\n      this._minDistance = this._maxDistance = distance;\n    },\n    _handleMouseEvent: function _handleMouseEvent(type, event, point, mouse) {\n      paper = this._scope;\n      if (mouse.drag && !this.responds(type)) type = 'mousemove';\n      var move = mouse.move || mouse.drag,\n          responds = this.responds(type),\n          minDistance = this.minDistance,\n          maxDistance = this.maxDistance,\n          called = false,\n          tool = this;\n\n      function update(minDistance, maxDistance) {\n        var pt = point,\n            toolPoint = move ? tool._point : tool._downPoint || pt;\n\n        if (move) {\n          if (tool._moveCount >= 0 && pt.equals(toolPoint)) {\n            return false;\n          }\n\n          if (toolPoint && (minDistance != null || maxDistance != null)) {\n            var vector = pt.subtract(toolPoint),\n                distance = vector.getLength();\n            if (distance < (minDistance || 0)) return false;\n\n            if (maxDistance) {\n              pt = toolPoint.add(vector.normalize(Math.min(distance, maxDistance)));\n            }\n          }\n\n          tool._moveCount++;\n        }\n\n        tool._point = pt;\n        tool._lastPoint = toolPoint || pt;\n\n        if (mouse.down) {\n          tool._moveCount = -1;\n          tool._downPoint = pt;\n          tool._downCount++;\n        }\n\n        return true;\n      }\n\n      function emit() {\n        if (responds) {\n          called = tool.emit(type, new ToolEvent(tool, type, event)) || called;\n        }\n      }\n\n      if (mouse.down) {\n        update();\n        emit();\n      } else if (mouse.up) {\n        update(null, maxDistance);\n        emit();\n      } else if (responds) {\n        while (update(minDistance, maxDistance)) {\n          emit();\n        }\n      }\n\n      return called;\n    }\n  });\n  var Tween = Base.extend(Emitter, {\n    _class: 'Tween',\n    statics: {\n      easings: {\n        linear: function linear(t) {\n          return t;\n        },\n        easeInQuad: function easeInQuad(t) {\n          return t * t;\n        },\n        easeOutQuad: function easeOutQuad(t) {\n          return t * (2 - t);\n        },\n        easeInOutQuad: function easeInOutQuad(t) {\n          return t < 0.5 ? 2 * t * t : -1 + 2 * (2 - t) * t;\n        },\n        easeInCubic: function easeInCubic(t) {\n          return t * t * t;\n        },\n        easeOutCubic: function easeOutCubic(t) {\n          return --t * t * t + 1;\n        },\n        easeInOutCubic: function easeInOutCubic(t) {\n          return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n        },\n        easeInQuart: function easeInQuart(t) {\n          return t * t * t * t;\n        },\n        easeOutQuart: function easeOutQuart(t) {\n          return 1 - --t * t * t * t;\n        },\n        easeInOutQuart: function easeInOutQuart(t) {\n          return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n        },\n        easeInQuint: function easeInQuint(t) {\n          return t * t * t * t * t;\n        },\n        easeOutQuint: function easeOutQuint(t) {\n          return 1 + --t * t * t * t * t;\n        },\n        easeInOutQuint: function easeInOutQuint(t) {\n          return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n        }\n      }\n    },\n    initialize: function Tween(object, from, to, duration, easing, start) {\n      this.object = object;\n      var type = typeof easing;\n      var isFunction = type === 'function';\n      this.type = isFunction ? type : type === 'string' ? easing : 'linear';\n      this.easing = isFunction ? easing : Tween.easings[this.type];\n      this.duration = duration;\n      this.running = false;\n      this._then = null;\n      this._startTime = null;\n      var state = from || to;\n      this._keys = state ? Object.keys(state) : [];\n      this._parsedKeys = this._parseKeys(this._keys);\n      this._from = state && this._getState(from);\n      this._to = state && this._getState(to);\n\n      if (start !== false) {\n        this.start();\n      }\n    },\n    then: function then(_then) {\n      this._then = _then;\n      return this;\n    },\n    start: function start() {\n      this._startTime = null;\n      this.running = true;\n      return this;\n    },\n    stop: function stop() {\n      this.running = false;\n      return this;\n    },\n    update: function update(progress) {\n      if (this.running) {\n        if (progress > 1) {\n          progress = 1;\n          this.running = false;\n        }\n\n        var factor = this.easing(progress),\n            keys = this._keys,\n            getValue = function getValue(value) {\n          return typeof value === 'function' ? value(factor, progress) : value;\n        };\n\n        for (var i = 0, l = keys && keys.length; i < l; i++) {\n          var key = keys[i],\n              from = getValue(this._from[key]),\n              to = getValue(this._to[key]),\n              value = from && to && from.__add && to.__add ? to.__subtract(from).__multiply(factor).__add(from) : (to - from) * factor + from;\n\n          this._setProperty(this._parsedKeys[key], value);\n        }\n\n        if (!this.running && this._then) {\n          this._then(this.object);\n        }\n\n        if (this.responds('update')) {\n          this.emit('update', new Base({\n            progress: progress,\n            factor: factor\n          }));\n        }\n      }\n\n      return this;\n    },\n    _events: {\n      onUpdate: {}\n    },\n    _handleFrame: function _handleFrame(time) {\n      var startTime = this._startTime,\n          progress = startTime ? (time - startTime) / this.duration : 0;\n\n      if (!startTime) {\n        this._startTime = time;\n      }\n\n      this.update(progress);\n    },\n    _getState: function _getState(state) {\n      var keys = this._keys,\n          result = {};\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i],\n            path = this._parsedKeys[key],\n            current = this._getProperty(path),\n            value;\n\n        if (state) {\n          var resolved = this._resolveValue(current, state[key]);\n\n          this._setProperty(path, resolved);\n\n          value = this._getProperty(path);\n          value = value && value.clone ? value.clone() : value;\n\n          this._setProperty(path, current);\n        } else {\n          value = current && current.clone ? current.clone() : current;\n        }\n\n        result[key] = value;\n      }\n\n      return result;\n    },\n    _resolveValue: function _resolveValue(current, value) {\n      if (value) {\n        if (Array.isArray(value) && value.length === 2) {\n          var operator = value[0];\n          return operator && operator.match && operator.match(/^[+\\-\\*\\/]=/) ? this._calculate(current, operator[0], value[1]) : value;\n        } else if (typeof value === 'string') {\n          var match = value.match(/^[+\\-*/]=(.*)/);\n\n          if (match) {\n            var parsed = JSON.parse(match[1].replace(/(['\"])?([a-zA-Z0-9_]+)(['\"])?:/g, '\"$2\": '));\n            return this._calculate(current, value[0], parsed);\n          }\n        }\n      }\n\n      return value;\n    },\n    _calculate: function _calculate(left, operator, right) {\n      return paper.PaperScript.calculateBinary(left, operator, right);\n    },\n    _parseKeys: function _parseKeys(keys) {\n      var parsed = {};\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i],\n            path = key.replace(/\\.([^.]*)/g, '/$1').replace(/\\[['\"]?([^'\"\\]]*)['\"]?\\]/g, '/$1');\n        parsed[key] = path.split('/');\n      }\n\n      return parsed;\n    },\n    _getProperty: function _getProperty(path, offset) {\n      var obj = this.object;\n\n      for (var i = 0, l = path.length - (offset || 0); i < l && obj; i++) {\n        obj = obj[path[i]];\n      }\n\n      return obj;\n    },\n    _setProperty: function _setProperty(path, value) {\n      var dest = this._getProperty(path, 1);\n\n      if (dest) {\n        dest[path[path.length - 1]] = value;\n      }\n    }\n  });\n  var Http = {\n    request: function request(options) {\n      var xhr = new self.XMLHttpRequest();\n      xhr.open((options.method || 'get').toUpperCase(), options.url, Base.pick(options.async, true));\n      if (options.mimeType) xhr.overrideMimeType(options.mimeType);\n\n      xhr.onload = function () {\n        var status = xhr.status;\n\n        if (status === 0 || status === 200) {\n          if (options.onLoad) {\n            options.onLoad.call(xhr, xhr.responseText);\n          }\n        } else {\n          xhr.onerror();\n        }\n      };\n\n      xhr.onerror = function () {\n        var status = xhr.status,\n            message = 'Could not load \"' + options.url + '\" (Status: ' + status + ')';\n\n        if (options.onError) {\n          options.onError(message, status);\n        } else {\n          throw new Error(message);\n        }\n      };\n\n      return xhr.send(null);\n    }\n  };\n  var CanvasProvider = {\n    canvases: [],\n    getCanvas: function getCanvas(width, height) {\n      if (!window) return null;\n      var canvas,\n          clear = true;\n\n      if (typeof width === 'object') {\n        height = width.height;\n        width = width.width;\n      }\n\n      if (this.canvases.length) {\n        canvas = this.canvases.pop();\n      } else {\n        canvas = document.createElement('canvas');\n        clear = false;\n      }\n\n      var ctx = canvas.getContext('2d');\n\n      if (!ctx) {\n        throw new Error('Canvas ' + canvas + ' is unable to provide a 2D context.');\n      }\n\n      if (canvas.width === width && canvas.height === height) {\n        if (clear) ctx.clearRect(0, 0, width + 1, height + 1);\n      } else {\n        canvas.width = width;\n        canvas.height = height;\n      }\n\n      ctx.save();\n      return canvas;\n    },\n    getContext: function getContext(width, height) {\n      var canvas = this.getCanvas(width, height);\n      return canvas ? canvas.getContext('2d') : null;\n    },\n    release: function release(obj) {\n      var canvas = obj && obj.canvas ? obj.canvas : obj;\n\n      if (canvas && canvas.getContext) {\n        canvas.getContext('2d').restore();\n        this.canvases.push(canvas);\n      }\n    }\n  };\n  var BlendMode = new function () {\n    var min = Math.min,\n        max = Math.max,\n        abs = Math.abs,\n        sr,\n        sg,\n        sb,\n        sa,\n        br,\n        bg,\n        bb,\n        ba,\n        dr,\n        dg,\n        db;\n\n    function getLum(r, g, b) {\n      return 0.2989 * r + 0.587 * g + 0.114 * b;\n    }\n\n    function setLum(r, g, b, l) {\n      var d = l - getLum(r, g, b);\n      dr = r + d;\n      dg = g + d;\n      db = b + d;\n      var l = getLum(dr, dg, db),\n          mn = min(dr, dg, db),\n          mx = max(dr, dg, db);\n\n      if (mn < 0) {\n        var lmn = l - mn;\n        dr = l + (dr - l) * l / lmn;\n        dg = l + (dg - l) * l / lmn;\n        db = l + (db - l) * l / lmn;\n      }\n\n      if (mx > 255) {\n        var ln = 255 - l,\n            mxl = mx - l;\n        dr = l + (dr - l) * ln / mxl;\n        dg = l + (dg - l) * ln / mxl;\n        db = l + (db - l) * ln / mxl;\n      }\n    }\n\n    function getSat(r, g, b) {\n      return max(r, g, b) - min(r, g, b);\n    }\n\n    function setSat(r, g, b, s) {\n      var col = [r, g, b],\n          mx = max(r, g, b),\n          mn = min(r, g, b),\n          md;\n      mn = mn === r ? 0 : mn === g ? 1 : 2;\n      mx = mx === r ? 0 : mx === g ? 1 : 2;\n      md = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\n      if (col[mx] > col[mn]) {\n        col[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n        col[mx] = s;\n      } else {\n        col[md] = col[mx] = 0;\n      }\n\n      col[mn] = 0;\n      dr = col[0];\n      dg = col[1];\n      db = col[2];\n    }\n\n    var modes = {\n      multiply: function multiply() {\n        dr = br * sr / 255;\n        dg = bg * sg / 255;\n        db = bb * sb / 255;\n      },\n      screen: function screen() {\n        dr = br + sr - br * sr / 255;\n        dg = bg + sg - bg * sg / 255;\n        db = bb + sb - bb * sb / 255;\n      },\n      overlay: function overlay() {\n        dr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n        dg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n        db = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n      },\n      'soft-light': function softLight() {\n        var t = sr * br / 255;\n        dr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n        t = sg * bg / 255;\n        dg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n        t = sb * bb / 255;\n        db = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n      },\n      'hard-light': function hardLight() {\n        dr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n        dg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n        db = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n      },\n      'color-dodge': function colorDodge() {\n        dr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n        dg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n        db = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n      },\n      'color-burn': function colorBurn() {\n        dr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n        dg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n        db = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n      },\n      darken: function darken() {\n        dr = br < sr ? br : sr;\n        dg = bg < sg ? bg : sg;\n        db = bb < sb ? bb : sb;\n      },\n      lighten: function lighten() {\n        dr = br > sr ? br : sr;\n        dg = bg > sg ? bg : sg;\n        db = bb > sb ? bb : sb;\n      },\n      difference: function difference() {\n        dr = br - sr;\n        if (dr < 0) dr = -dr;\n        dg = bg - sg;\n        if (dg < 0) dg = -dg;\n        db = bb - sb;\n        if (db < 0) db = -db;\n      },\n      exclusion: function exclusion() {\n        dr = br + sr * (255 - br - br) / 255;\n        dg = bg + sg * (255 - bg - bg) / 255;\n        db = bb + sb * (255 - bb - bb) / 255;\n      },\n      hue: function hue() {\n        setSat(sr, sg, sb, getSat(br, bg, bb));\n        setLum(dr, dg, db, getLum(br, bg, bb));\n      },\n      saturation: function saturation() {\n        setSat(br, bg, bb, getSat(sr, sg, sb));\n        setLum(dr, dg, db, getLum(br, bg, bb));\n      },\n      luminosity: function luminosity() {\n        setLum(br, bg, bb, getLum(sr, sg, sb));\n      },\n      color: function color() {\n        setLum(sr, sg, sb, getLum(br, bg, bb));\n      },\n      add: function add() {\n        dr = min(br + sr, 255);\n        dg = min(bg + sg, 255);\n        db = min(bb + sb, 255);\n      },\n      subtract: function subtract() {\n        dr = max(br - sr, 0);\n        dg = max(bg - sg, 0);\n        db = max(bb - sb, 0);\n      },\n      average: function average() {\n        dr = (br + sr) / 2;\n        dg = (bg + sg) / 2;\n        db = (bb + sb) / 2;\n      },\n      negation: function negation() {\n        dr = 255 - abs(255 - sr - br);\n        dg = 255 - abs(255 - sg - bg);\n        db = 255 - abs(255 - sb - bb);\n      }\n    };\n    var nativeModes = this.nativeModes = Base.each(['source-over', 'source-in', 'source-out', 'source-atop', 'destination-over', 'destination-in', 'destination-out', 'destination-atop', 'lighter', 'darker', 'copy', 'xor'], function (mode) {\n      this[mode] = true;\n    }, {});\n    var ctx = CanvasProvider.getContext(1, 1);\n\n    if (ctx) {\n      Base.each(modes, function (func, mode) {\n        var darken = mode === 'darken',\n            ok = false;\n        ctx.save();\n\n        try {\n          ctx.fillStyle = darken ? '#300' : '#a00';\n          ctx.fillRect(0, 0, 1, 1);\n          ctx.globalCompositeOperation = mode;\n\n          if (ctx.globalCompositeOperation === mode) {\n            ctx.fillStyle = darken ? '#a00' : '#300';\n            ctx.fillRect(0, 0, 1, 1);\n            ok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n          }\n        } catch (e) {}\n\n        ctx.restore();\n        nativeModes[mode] = ok;\n      });\n      CanvasProvider.release(ctx);\n    }\n\n    this.process = function (mode, srcContext, dstContext, alpha, offset) {\n      var srcCanvas = srcContext.canvas,\n          normal = mode === 'normal';\n\n      if (normal || nativeModes[mode]) {\n        dstContext.save();\n        dstContext.setTransform(1, 0, 0, 1, 0, 0);\n        dstContext.globalAlpha = alpha;\n        if (!normal) dstContext.globalCompositeOperation = mode;\n        dstContext.drawImage(srcCanvas, offset.x, offset.y);\n        dstContext.restore();\n      } else {\n        var process = modes[mode];\n        if (!process) return;\n        var dstData = dstContext.getImageData(offset.x, offset.y, srcCanvas.width, srcCanvas.height),\n            dst = dstData.data,\n            src = srcContext.getImageData(0, 0, srcCanvas.width, srcCanvas.height).data;\n\n        for (var i = 0, l = dst.length; i < l; i += 4) {\n          sr = src[i];\n          br = dst[i];\n          sg = src[i + 1];\n          bg = dst[i + 1];\n          sb = src[i + 2];\n          bb = dst[i + 2];\n          sa = src[i + 3];\n          ba = dst[i + 3];\n          process();\n          var a1 = sa * alpha / 255,\n              a2 = 1 - a1;\n          dst[i] = a1 * dr + a2 * br;\n          dst[i + 1] = a1 * dg + a2 * bg;\n          dst[i + 2] = a1 * db + a2 * bb;\n          dst[i + 3] = sa * alpha + a2 * ba;\n        }\n\n        dstContext.putImageData(dstData, offset.x, offset.y);\n      }\n    };\n  }();\n  var SvgElement = new function () {\n    var svg = 'http://www.w3.org/2000/svg',\n        xmlns = 'http://www.w3.org/2000/xmlns',\n        xlink = 'http://www.w3.org/1999/xlink',\n        attributeNamespace = {\n      href: xlink,\n      xlink: xmlns,\n      xmlns: xmlns + '/',\n      'xmlns:xlink': xmlns + '/'\n    };\n\n    function create(tag, attributes, formatter) {\n      return set(document.createElementNS(svg, tag), attributes, formatter);\n    }\n\n    function get(node, name) {\n      var namespace = attributeNamespace[name],\n          value = namespace ? node.getAttributeNS(namespace, name) : node.getAttribute(name);\n      return value === 'null' ? null : value;\n    }\n\n    function set(node, attributes, formatter) {\n      for (var name in attributes) {\n        var value = attributes[name],\n            namespace = attributeNamespace[name];\n        if (typeof value === 'number' && formatter) value = formatter.number(value);\n\n        if (namespace) {\n          node.setAttributeNS(namespace, name, value);\n        } else {\n          node.setAttribute(name, value);\n        }\n      }\n\n      return node;\n    }\n\n    return {\n      svg: svg,\n      xmlns: xmlns,\n      xlink: xlink,\n      create: create,\n      get: get,\n      set: set\n    };\n  }();\n  var SvgStyles = Base.each({\n    fillColor: ['fill', 'color'],\n    fillRule: ['fill-rule', 'string'],\n    strokeColor: ['stroke', 'color'],\n    strokeWidth: ['stroke-width', 'number'],\n    strokeCap: ['stroke-linecap', 'string'],\n    strokeJoin: ['stroke-linejoin', 'string'],\n    strokeScaling: ['vector-effect', 'lookup', {\n      true: 'none',\n      false: 'non-scaling-stroke'\n    }, function (item, value) {\n      return !value && (item instanceof PathItem || item instanceof Shape || item instanceof TextItem);\n    }],\n    miterLimit: ['stroke-miterlimit', 'number'],\n    dashArray: ['stroke-dasharray', 'array'],\n    dashOffset: ['stroke-dashoffset', 'number'],\n    fontFamily: ['font-family', 'string'],\n    fontWeight: ['font-weight', 'string'],\n    fontSize: ['font-size', 'number'],\n    justification: ['text-anchor', 'lookup', {\n      left: 'start',\n      center: 'middle',\n      right: 'end'\n    }],\n    opacity: ['opacity', 'number'],\n    blendMode: ['mix-blend-mode', 'style']\n  }, function (entry, key) {\n    var part = Base.capitalize(key),\n        lookup = entry[2];\n    this[key] = {\n      type: entry[1],\n      property: key,\n      attribute: entry[0],\n      toSVG: lookup,\n      fromSVG: lookup && Base.each(lookup, function (value, name) {\n        this[value] = name;\n      }, {}),\n      exportFilter: entry[3],\n      get: 'get' + part,\n      set: 'set' + part\n    };\n  }, {});\n  new function () {\n    var formatter;\n\n    function getTransform(matrix, coordinates, center) {\n      var attrs = new Base(),\n          trans = matrix.getTranslation();\n\n      if (coordinates) {\n        var point;\n\n        if (matrix.isInvertible()) {\n          matrix = matrix._shiftless();\n          point = matrix._inverseTransform(trans);\n          trans = null;\n        } else {\n          point = new Point();\n        }\n\n        attrs[center ? 'cx' : 'x'] = point.x;\n        attrs[center ? 'cy' : 'y'] = point.y;\n      }\n\n      if (!matrix.isIdentity()) {\n        var decomposed = matrix.decompose();\n\n        if (decomposed) {\n          var parts = [],\n              angle = decomposed.rotation,\n              scale = decomposed.scaling,\n              skew = decomposed.skewing;\n          if (trans && !trans.isZero()) parts.push('translate(' + formatter.point(trans) + ')');\n          if (angle) parts.push('rotate(' + formatter.number(angle) + ')');\n          if (!Numerical.isZero(scale.x - 1) || !Numerical.isZero(scale.y - 1)) parts.push('scale(' + formatter.point(scale) + ')');\n          if (skew.x) parts.push('skewX(' + formatter.number(skew.x) + ')');\n          if (skew.y) parts.push('skewY(' + formatter.number(skew.y) + ')');\n          attrs.transform = parts.join(' ');\n        } else {\n          attrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n        }\n      }\n\n      return attrs;\n    }\n\n    function exportGroup(item, options) {\n      var attrs = getTransform(item._matrix),\n          children = item._children;\n      var node = SvgElement.create('g', attrs, formatter);\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n\n        var childNode = _exportSVG(child, options);\n\n        if (childNode) {\n          if (child.isClipMask()) {\n            var clip = SvgElement.create('clipPath');\n            clip.appendChild(childNode);\n            setDefinition(child, clip, 'clip');\n            SvgElement.set(node, {\n              'clip-path': 'url(#' + clip.id + ')'\n            });\n          } else {\n            node.appendChild(childNode);\n          }\n        }\n      }\n\n      return node;\n    }\n\n    function exportRaster(item, options) {\n      var attrs = getTransform(item._matrix, true),\n          size = item.getSize(),\n          image = item.getImage();\n      attrs.x -= size.width / 2;\n      attrs.y -= size.height / 2;\n      attrs.width = size.width;\n      attrs.height = size.height;\n      attrs.href = options.embedImages == false && image && image.src || item.toDataURL();\n      return SvgElement.create('image', attrs, formatter);\n    }\n\n    function exportPath(item, options) {\n      var matchShapes = options.matchShapes;\n\n      if (matchShapes) {\n        var shape = item.toShape(false);\n        if (shape) return exportShape(shape, options);\n      }\n\n      var segments = item._segments,\n          length = segments.length,\n          type,\n          attrs = getTransform(item._matrix);\n\n      if (matchShapes && length >= 2 && !item.hasHandles()) {\n        if (length > 2) {\n          type = item._closed ? 'polygon' : 'polyline';\n          var parts = [];\n\n          for (var i = 0; i < length; i++) {\n            parts.push(formatter.point(segments[i]._point));\n          }\n\n          attrs.points = parts.join(' ');\n        } else {\n          type = 'line';\n          var start = segments[0]._point,\n              end = segments[1]._point;\n          attrs.set({\n            x1: start.x,\n            y1: start.y,\n            x2: end.x,\n            y2: end.y\n          });\n        }\n      } else {\n        type = 'path';\n        attrs.d = item.getPathData(null, options.precision);\n      }\n\n      return SvgElement.create(type, attrs, formatter);\n    }\n\n    function exportShape(item) {\n      var type = item._type,\n          radius = item._radius,\n          attrs = getTransform(item._matrix, true, type !== 'rectangle');\n\n      if (type === 'rectangle') {\n        type = 'rect';\n        var size = item._size,\n            width = size.width,\n            height = size.height;\n        attrs.x -= width / 2;\n        attrs.y -= height / 2;\n        attrs.width = width;\n        attrs.height = height;\n        if (radius.isZero()) radius = null;\n      }\n\n      if (radius) {\n        if (type === 'circle') {\n          attrs.r = radius;\n        } else {\n          attrs.rx = radius.width;\n          attrs.ry = radius.height;\n        }\n      }\n\n      return SvgElement.create(type, attrs, formatter);\n    }\n\n    function exportCompoundPath(item, options) {\n      var attrs = getTransform(item._matrix);\n      var data = item.getPathData(null, options.precision);\n      if (data) attrs.d = data;\n      return SvgElement.create('path', attrs, formatter);\n    }\n\n    function exportSymbolItem(item, options) {\n      var attrs = getTransform(item._matrix, true),\n          definition = item._definition,\n          node = getDefinition(definition, 'symbol'),\n          definitionItem = definition._item,\n          bounds = definitionItem.getStrokeBounds();\n\n      if (!node) {\n        node = SvgElement.create('symbol', {\n          viewBox: formatter.rectangle(bounds)\n        });\n        node.appendChild(_exportSVG(definitionItem, options));\n        setDefinition(definition, node, 'symbol');\n      }\n\n      attrs.href = '#' + node.id;\n      attrs.x += bounds.x;\n      attrs.y += bounds.y;\n      attrs.width = bounds.width;\n      attrs.height = bounds.height;\n      attrs.overflow = 'visible';\n      return SvgElement.create('use', attrs, formatter);\n    }\n\n    function exportGradient(color) {\n      var gradientNode = getDefinition(color, 'color');\n\n      if (!gradientNode) {\n        var gradient = color.getGradient(),\n            radial = gradient._radial,\n            origin = color.getOrigin(),\n            destination = color.getDestination(),\n            attrs;\n\n        if (radial) {\n          attrs = {\n            cx: origin.x,\n            cy: origin.y,\n            r: origin.getDistance(destination)\n          };\n          var highlight = color.getHighlight();\n\n          if (highlight) {\n            attrs.fx = highlight.x;\n            attrs.fy = highlight.y;\n          }\n        } else {\n          attrs = {\n            x1: origin.x,\n            y1: origin.y,\n            x2: destination.x,\n            y2: destination.y\n          };\n        }\n\n        attrs.gradientUnits = 'userSpaceOnUse';\n        gradientNode = SvgElement.create((radial ? 'radial' : 'linear') + 'Gradient', attrs, formatter);\n        var stops = gradient._stops;\n\n        for (var i = 0, l = stops.length; i < l; i++) {\n          var stop = stops[i],\n              stopColor = stop._color,\n              alpha = stopColor.getAlpha(),\n              offset = stop._offset;\n          attrs = {\n            offset: offset == null ? i / (l - 1) : offset\n          };\n          if (stopColor) attrs['stop-color'] = stopColor.toCSS(true);\n          if (alpha < 1) attrs['stop-opacity'] = alpha;\n          gradientNode.appendChild(SvgElement.create('stop', attrs, formatter));\n        }\n\n        setDefinition(color, gradientNode, 'color');\n      }\n\n      return 'url(#' + gradientNode.id + ')';\n    }\n\n    function exportText(item) {\n      var node = SvgElement.create('text', getTransform(item._matrix, true), formatter);\n      node.textContent = item._content;\n      return node;\n    }\n\n    var exporters = {\n      Group: exportGroup,\n      Layer: exportGroup,\n      Raster: exportRaster,\n      Path: exportPath,\n      Shape: exportShape,\n      CompoundPath: exportCompoundPath,\n      SymbolItem: exportSymbolItem,\n      PointText: exportText\n    };\n\n    function applyStyle(item, node, isRoot) {\n      var attrs = {},\n          parent = !isRoot && item.getParent(),\n          style = [];\n      if (item._name != null) attrs.id = item._name;\n      Base.each(SvgStyles, function (entry) {\n        var get = entry.get,\n            type = entry.type,\n            value = item[get]();\n\n        if (entry.exportFilter ? entry.exportFilter(item, value) : !parent || !Base.equals(parent[get](), value)) {\n          if (type === 'color' && value != null) {\n            var alpha = value.getAlpha();\n            if (alpha < 1) attrs[entry.attribute + '-opacity'] = alpha;\n          }\n\n          if (type === 'style') {\n            style.push(entry.attribute + ': ' + value);\n          } else {\n            attrs[entry.attribute] = value == null ? 'none' : type === 'color' ? value.gradient ? exportGradient(value, item) : value.toCSS(true) : type === 'array' ? value.join(',') : type === 'lookup' ? entry.toSVG[value] : value;\n          }\n        }\n      });\n      if (style.length) attrs.style = style.join(';');\n      if (attrs.opacity === 1) delete attrs.opacity;\n      if (!item._visible) attrs.visibility = 'hidden';\n      return SvgElement.set(node, attrs, formatter);\n    }\n\n    var definitions;\n\n    function getDefinition(item, type) {\n      if (!definitions) definitions = {\n        ids: {},\n        svgs: {}\n      };\n      return item && definitions.svgs[type + '-' + (item._id || item.__id || (item.__id = UID.get('svg')))];\n    }\n\n    function setDefinition(item, node, type) {\n      if (!definitions) getDefinition();\n      var typeId = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n      node.id = type + '-' + typeId;\n      definitions.svgs[type + '-' + (item._id || item.__id)] = node;\n    }\n\n    function exportDefinitions(node, options) {\n      var svg = node,\n          defs = null;\n\n      if (definitions) {\n        svg = node.nodeName.toLowerCase() === 'svg' && node;\n\n        for (var i in definitions.svgs) {\n          if (!defs) {\n            if (!svg) {\n              svg = SvgElement.create('svg');\n              svg.appendChild(node);\n            }\n\n            defs = svg.insertBefore(SvgElement.create('defs'), svg.firstChild);\n          }\n\n          defs.appendChild(definitions.svgs[i]);\n        }\n\n        definitions = null;\n      }\n\n      return options.asString ? new self.XMLSerializer().serializeToString(svg) : svg;\n    }\n\n    function _exportSVG(item, options, isRoot) {\n      var exporter = exporters[item._class],\n          node = exporter && exporter(item, options);\n\n      if (node) {\n        var onExport = options.onExport;\n        if (onExport) node = onExport(item, node, options) || node;\n        var data = JSON.stringify(item._data);\n        if (data && data !== '{}' && data !== 'null') node.setAttribute('data-paper-data', data);\n      }\n\n      return node && applyStyle(item, node, isRoot);\n    }\n\n    function setOptions(options) {\n      if (!options) options = {};\n      formatter = new Formatter(options.precision);\n      return options;\n    }\n\n    Item.inject({\n      exportSVG: function exportSVG(options) {\n        options = setOptions(options);\n        return exportDefinitions(_exportSVG(this, options, true), options);\n      }\n    });\n    Project.inject({\n      exportSVG: function exportSVG(options) {\n        options = setOptions(options);\n        var children = this._children,\n            view = this.getView(),\n            bounds = Base.pick(options.bounds, 'view'),\n            mx = options.matrix || bounds === 'view' && view._matrix,\n            matrix = mx && Matrix.read([mx]),\n            rect = bounds === 'view' ? new _Rectangle([0, 0], view.getViewSize()) : bounds === 'content' ? Item._getBounds(children, matrix, {\n          stroke: true\n        }).rect : _Rectangle.read([bounds], 0, {\n          readNull: true\n        }),\n            attrs = {\n          version: '1.1',\n          xmlns: SvgElement.svg,\n          'xmlns:xlink': SvgElement.xlink\n        };\n\n        if (rect) {\n          attrs.width = rect.width;\n          attrs.height = rect.height;\n          if (rect.x || rect.x === 0 || rect.y || rect.y === 0) attrs.viewBox = formatter.rectangle(rect);\n        }\n\n        var node = SvgElement.create('svg', attrs, formatter),\n            parent = node;\n\n        if (matrix && !matrix.isIdentity()) {\n          parent = node.appendChild(SvgElement.create('g', getTransform(matrix), formatter));\n        }\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          parent.appendChild(_exportSVG(children[i], options, true));\n        }\n\n        return exportDefinitions(node, options);\n      }\n    });\n  }();\n  new function () {\n    var definitions = {},\n        rootSize;\n\n    function getValue(node, name, isString, allowNull, allowPercent, defaultValue) {\n      var value = SvgElement.get(node, name) || defaultValue,\n          res = value == null ? allowNull ? null : isString ? '' : 0 : isString ? value : parseFloat(value);\n      return /%\\s*$/.test(value) ? res / 100 * (allowPercent ? 1 : rootSize[/x|^width/.test(name) ? 'width' : 'height']) : res;\n    }\n\n    function getPoint(node, x, y, allowNull, allowPercent, defaultX, defaultY) {\n      x = getValue(node, x || 'x', false, allowNull, allowPercent, defaultX);\n      y = getValue(node, y || 'y', false, allowNull, allowPercent, defaultY);\n      return allowNull && (x == null || y == null) ? null : new Point(x, y);\n    }\n\n    function getSize(node, w, h, allowNull, allowPercent) {\n      w = getValue(node, w || 'width', false, allowNull, allowPercent);\n      h = getValue(node, h || 'height', false, allowNull, allowPercent);\n      return allowNull && (w == null || h == null) ? null : new Size(w, h);\n    }\n\n    function convertValue(value, type, lookup) {\n      return value === 'none' ? null : type === 'number' ? parseFloat(value) : type === 'array' ? value ? value.split(/[\\s,]+/g).map(parseFloat) : [] : type === 'color' ? getDefinition(value) || value : type === 'lookup' ? lookup[value] : value;\n    }\n\n    function importGroup(node, type, options, isRoot) {\n      var nodes = node.childNodes,\n          isClip = type === 'clippath',\n          isDefs = type === 'defs',\n          item = new Group(),\n          project = item._project,\n          currentStyle = project._currentStyle,\n          children = [];\n\n      if (!isClip && !isDefs) {\n        item = applyAttributes(item, node, isRoot);\n        project._currentStyle = item._style.clone();\n      }\n\n      if (isRoot) {\n        var defs = node.querySelectorAll('defs');\n\n        for (var i = 0, l = defs.length; i < l; i++) {\n          importNode(defs[i], options, false);\n        }\n      }\n\n      for (var i = 0, l = nodes.length; i < l; i++) {\n        var childNode = nodes[i],\n            child;\n        if (childNode.nodeType === 1 && !/^defs$/i.test(childNode.nodeName) && (child = importNode(childNode, options, false)) && !(child instanceof SymbolDefinition)) children.push(child);\n      }\n\n      item.addChildren(children);\n      if (isClip) item = applyAttributes(item.reduce(), node, isRoot);\n      project._currentStyle = currentStyle;\n\n      if (isClip || isDefs) {\n        item.remove();\n        item = null;\n      }\n\n      return item;\n    }\n\n    function importPoly(node, type) {\n      var coords = node.getAttribute('points').match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n          points = [];\n\n      for (var i = 0, l = coords.length; i < l; i += 2) {\n        points.push(new Point(parseFloat(coords[i]), parseFloat(coords[i + 1])));\n      }\n\n      var path = new Path(points);\n      if (type === 'polygon') path.closePath();\n      return path;\n    }\n\n    function importPath(node) {\n      return PathItem.create(node.getAttribute('d'));\n    }\n\n    function importGradient(node, type) {\n      var id = (getValue(node, 'href', true) || '').substring(1),\n          radial = type === 'radialgradient',\n          gradient;\n\n      if (id) {\n        gradient = definitions[id].getGradient();\n\n        if (gradient._radial ^ radial) {\n          gradient = gradient.clone();\n          gradient._radial = radial;\n        }\n      } else {\n        var nodes = node.childNodes,\n            stops = [];\n\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          var child = nodes[i];\n          if (child.nodeType === 1) stops.push(applyAttributes(new GradientStop(), child));\n        }\n\n        gradient = new Gradient(stops, radial);\n      }\n\n      var origin,\n          destination,\n          highlight,\n          scaleToBounds = getValue(node, 'gradientUnits', true) !== 'userSpaceOnUse';\n\n      if (radial) {\n        origin = getPoint(node, 'cx', 'cy', false, scaleToBounds, '50%', '50%');\n        destination = origin.add(getValue(node, 'r', false, false, scaleToBounds, '50%'), 0);\n        highlight = getPoint(node, 'fx', 'fy', true, scaleToBounds);\n      } else {\n        origin = getPoint(node, 'x1', 'y1', false, scaleToBounds, '0%', '0%');\n        destination = getPoint(node, 'x2', 'y2', false, scaleToBounds, '100%', '0%');\n      }\n\n      var color = applyAttributes(new Color(gradient, origin, destination, highlight), node);\n      color._scaleToBounds = scaleToBounds;\n      return null;\n    }\n\n    var importers = {\n      '#document': function document(node, type, options, isRoot) {\n        var nodes = node.childNodes;\n\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          var child = nodes[i];\n          if (child.nodeType === 1) return importNode(child, options, isRoot);\n        }\n      },\n      g: importGroup,\n      svg: importGroup,\n      clippath: importGroup,\n      polygon: importPoly,\n      polyline: importPoly,\n      path: importPath,\n      lineargradient: importGradient,\n      radialgradient: importGradient,\n      image: function image(node) {\n        var raster = new Raster(getValue(node, 'href', true));\n        raster.on('load', function () {\n          var size = getSize(node);\n          this.setSize(size);\n          var center = getPoint(node).add(size.divide(2));\n\n          this._matrix.append(new Matrix().translate(center));\n        });\n        return raster;\n      },\n      symbol: function symbol(node, type, options, isRoot) {\n        return new SymbolDefinition(importGroup(node, type, options, isRoot), true);\n      },\n      defs: importGroup,\n      use: function use(node) {\n        var id = (getValue(node, 'href', true) || '').substring(1),\n            definition = definitions[id],\n            point = getPoint(node);\n        return definition ? definition instanceof SymbolDefinition ? definition.place(point) : definition.clone().translate(point) : null;\n      },\n      circle: function circle(node) {\n        return new Shape.Circle(getPoint(node, 'cx', 'cy'), getValue(node, 'r'));\n      },\n      ellipse: function ellipse(node) {\n        return new Shape.Ellipse({\n          center: getPoint(node, 'cx', 'cy'),\n          radius: getSize(node, 'rx', 'ry')\n        });\n      },\n      rect: function rect(node) {\n        return new Shape.Rectangle(new _Rectangle(getPoint(node), getSize(node)), getSize(node, 'rx', 'ry'));\n      },\n      line: function line(node) {\n        return new Path.Line(getPoint(node, 'x1', 'y1'), getPoint(node, 'x2', 'y2'));\n      },\n      text: function text(node) {\n        var text = new PointText(getPoint(node).add(getPoint(node, 'dx', 'dy')));\n        text.setContent(node.textContent.trim() || '');\n        return text;\n      },\n      switch: importGroup\n    };\n\n    function applyTransform(item, value, name, node) {\n      if (item.transform) {\n        var transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n            matrix = new Matrix();\n\n        for (var i = 0, l = transforms.length; i < l; i++) {\n          var transform = transforms[i];\n          if (!transform) break;\n          var parts = transform.split(/\\(\\s*/),\n              command = parts[0],\n              v = parts[1].split(/[\\s,]+/g);\n\n          for (var j = 0, m = v.length; j < m; j++) {\n            v[j] = parseFloat(v[j]);\n          }\n\n          switch (command) {\n            case 'matrix':\n              matrix.append(new Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n              break;\n\n            case 'rotate':\n              matrix.rotate(v[0], v[1] || 0, v[2] || 0);\n              break;\n\n            case 'translate':\n              matrix.translate(v[0], v[1] || 0);\n              break;\n\n            case 'scale':\n              matrix.scale(v);\n              break;\n\n            case 'skewX':\n              matrix.skew(v[0], 0);\n              break;\n\n            case 'skewY':\n              matrix.skew(0, v[0]);\n              break;\n          }\n        }\n\n        item.transform(matrix);\n      }\n    }\n\n    function applyOpacity(item, value, name) {\n      var key = name === 'fill-opacity' ? 'getFillColor' : 'getStrokeColor',\n          color = item[key] && item[key]();\n      if (color) color.setAlpha(parseFloat(value));\n    }\n\n    var attributes = Base.set(Base.each(SvgStyles, function (entry) {\n      this[entry.attribute] = function (item, value) {\n        if (item[entry.set]) {\n          item[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\n          if (entry.type === 'color') {\n            var color = item[entry.get]();\n\n            if (color) {\n              if (color._scaleToBounds) {\n                var bounds = item.getBounds();\n                color.transform(new Matrix().translate(bounds.getPoint()).scale(bounds.getSize()));\n              }\n            }\n          }\n        }\n      };\n    }, {}), {\n      id: function id(item, value) {\n        definitions[value] = item;\n        if (item.setName) item.setName(value);\n      },\n      'clip-path': function clipPath(item, value) {\n        var clip = getDefinition(value);\n\n        if (clip) {\n          clip = clip.clone();\n          clip.setClipMask(true);\n\n          if (item instanceof Group) {\n            item.insertChild(0, clip);\n          } else {\n            return new Group(clip, item);\n          }\n        }\n      },\n      gradientTransform: applyTransform,\n      transform: applyTransform,\n      'fill-opacity': applyOpacity,\n      'stroke-opacity': applyOpacity,\n      visibility: function visibility(item, value) {\n        if (item.setVisible) item.setVisible(value === 'visible');\n      },\n      display: function display(item, value) {\n        if (item.setVisible) item.setVisible(value !== null);\n      },\n      'stop-color': function stopColor(item, value) {\n        if (item.setColor) item.setColor(value);\n      },\n      'stop-opacity': function stopOpacity(item, value) {\n        if (item._color) item._color.setAlpha(parseFloat(value));\n      },\n      offset: function offset(item, value) {\n        if (item.setOffset) {\n          var percent = value.match(/(.*)%$/);\n          item.setOffset(percent ? percent[1] / 100 : parseFloat(value));\n        }\n      },\n      viewBox: function viewBox(item, value, name, node, styles) {\n        var rect = new _Rectangle(convertValue(value, 'array')),\n            size = getSize(node, null, null, true),\n            group,\n            matrix;\n\n        if (item instanceof Group) {\n          var scale = size ? size.divide(rect.getSize()) : 1,\n              matrix = new Matrix().scale(scale).translate(rect.getPoint().negate());\n          group = item;\n        } else if (item instanceof SymbolDefinition) {\n          if (size) rect.setSize(size);\n          group = item._item;\n        }\n\n        if (group) {\n          if (getAttribute(node, 'overflow', styles) !== 'visible') {\n            var clip = new Shape.Rectangle(rect);\n            clip.setClipMask(true);\n            group.addChild(clip);\n          }\n\n          if (matrix) group.transform(matrix);\n        }\n      }\n    });\n\n    function getAttribute(node, name, styles) {\n      var attr = node.attributes[name],\n          value = attr && attr.value;\n\n      if (!value && node.style) {\n        var style = Base.camelize(name);\n        value = node.style[style];\n        if (!value && styles.node[style] !== styles.parent[style]) value = styles.node[style];\n      }\n\n      return !value ? undefined : value === 'none' ? null : value;\n    }\n\n    function applyAttributes(item, node, isRoot) {\n      var parent = node.parentNode,\n          styles = {\n        node: DomElement.getStyles(node) || {},\n        parent: !isRoot && !/^defs$/i.test(parent.tagName) && DomElement.getStyles(parent) || {}\n      };\n      Base.each(attributes, function (apply, name) {\n        var value = getAttribute(node, name, styles);\n        item = value !== undefined && apply(item, value, name, node, styles) || item;\n      });\n      return item;\n    }\n\n    function getDefinition(value) {\n      var match = value && value.match(/\\((?:[\"'#]*)([^\"')]+)/),\n          name = match && match[1],\n          res = name && definitions[window ? name.replace(window.location.href.split('#')[0] + '#', '') : name];\n\n      if (res && res._scaleToBounds) {\n        res = res.clone();\n        res._scaleToBounds = true;\n      }\n\n      return res;\n    }\n\n    function importNode(node, options, isRoot) {\n      var type = node.nodeName.toLowerCase(),\n          isElement = type !== '#document',\n          body = document.body,\n          container,\n          parent,\n          next;\n\n      if (isRoot && isElement) {\n        rootSize = paper.getView().getSize();\n        rootSize = getSize(node, null, null, true) || rootSize;\n        container = SvgElement.create('svg', {\n          style: 'stroke-width: 1px; stroke-miterlimit: 10'\n        });\n        parent = node.parentNode;\n        next = node.nextSibling;\n        container.appendChild(node);\n        body.appendChild(container);\n      }\n\n      var settings = paper.settings,\n          applyMatrix = settings.applyMatrix,\n          insertItems = settings.insertItems;\n      settings.applyMatrix = false;\n      settings.insertItems = false;\n      var importer = importers[type],\n          item = importer && importer(node, type, options, isRoot) || null;\n      settings.insertItems = insertItems;\n      settings.applyMatrix = applyMatrix;\n\n      if (item) {\n        if (isElement && !(item instanceof Group)) item = applyAttributes(item, node, isRoot);\n        var onImport = options.onImport,\n            data = isElement && node.getAttribute('data-paper-data');\n        if (onImport) item = onImport(node, item, options) || item;\n\n        if (options.expandShapes && item instanceof Shape) {\n          item.remove();\n          item = item.toPath();\n        }\n\n        if (data) item._data = JSON.parse(data);\n      }\n\n      if (container) {\n        body.removeChild(container);\n\n        if (parent) {\n          if (next) {\n            parent.insertBefore(node, next);\n          } else {\n            parent.appendChild(node);\n          }\n        }\n      }\n\n      if (isRoot) {\n        definitions = {};\n        if (item && Base.pick(options.applyMatrix, applyMatrix)) item.matrix.apply(true, true);\n      }\n\n      return item;\n    }\n\n    function _importSVG(source, options, owner) {\n      if (!source) return null;\n      options = typeof options === 'function' ? {\n        onLoad: options\n      } : options || {};\n      var scope = paper,\n          item = null;\n\n      function onLoad(svg) {\n        try {\n          var node = typeof svg === 'object' ? svg : new self.DOMParser().parseFromString(svg, 'image/svg+xml');\n\n          if (!node.nodeName) {\n            node = null;\n            throw new Error('Unsupported SVG source: ' + source);\n          }\n\n          paper = scope;\n          item = importNode(node, options, true);\n\n          if (!options || options.insert !== false) {\n            owner._insertItem(undefined, item);\n          }\n\n          var onLoad = options.onLoad;\n          if (onLoad) onLoad(item, svg);\n        } catch (e) {\n          onError(e);\n        }\n      }\n\n      function onError(message, status) {\n        var onError = options.onError;\n\n        if (onError) {\n          onError(message, status);\n        } else {\n          throw new Error(message);\n        }\n      }\n\n      if (typeof source === 'string' && !/^.*</.test(source)) {\n        var node = document.getElementById(source);\n\n        if (node) {\n          onLoad(node);\n        } else {\n          Http.request({\n            url: source,\n            async: true,\n            onLoad: onLoad,\n            onError: onError\n          });\n        }\n      } else if (typeof File !== 'undefined' && source instanceof File) {\n        var reader = new FileReader();\n\n        reader.onload = function () {\n          onLoad(reader.result);\n        };\n\n        reader.onerror = function () {\n          onError(reader.error);\n        };\n\n        return reader.readAsText(source);\n      } else {\n        onLoad(source);\n      }\n\n      return item;\n    }\n\n    Item.inject({\n      importSVG: function importSVG(node, options) {\n        return _importSVG(node, options, this);\n      }\n    });\n    Project.inject({\n      importSVG: function importSVG(node, options) {\n        this.activate();\n        return _importSVG(node, options, this);\n      }\n    });\n  }();\n  var paper = new (PaperScope.inject(Base.exports, {\n    Base: Base,\n    Numerical: Numerical,\n    Key: Key,\n    DomEvent: DomEvent,\n    DomElement: DomElement,\n    document: document,\n    window: window,\n    Symbol: SymbolDefinition,\n    PlacedSymbol: SymbolItem\n  }))();\n\n  if (paper.agent.node) {\n    require('./node/extend.js')(paper);\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define('paper', paper);\n  } else if (typeof module === 'object' && module) {\n    module.exports = paper;\n  }\n\n  return paper;\n}.call(this, typeof self === 'object' ? self : null);","/**\n * Module dependencies.\n */\nvar url = require('./url');\n\nvar parser = require('socket.io-parser');\n\nvar Manager = require('./manager');\n\nvar debug = require('debug')('socket.io-client');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n\n    io = cache[id];\n  }\n\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n\n  return io.socket(parsed.path, opts);\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = parser.protocol;\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');","/**\n * Module dependencies.\n */\nvar parseuri = require('parseuri');\n\nvar debug = require('debug')('socket.io-client:url');\n/**\n * Module exports.\n */\n\n\nmodule.exports = url;\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc) {\n  var obj = uri; // default to window.location\n\n  loc = loc || typeof location !== 'undefined' && location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host; // relative path support\n\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    } // parse\n\n\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  } // make sure we treat `localhost:80` and `localhost` equally\n\n\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host; // define unique id\n\n  obj.id = obj.protocol + '://' + host + ':' + obj.port; // define href\n\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n  return obj;\n}","var _toConsumableArray = require(\"D:\\\\Projects\\\\my_page\\\\About-me-React-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n\n\n  function disable() {\n    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n      return '-' + namespace;\n    }))).join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n\n\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n\n  return ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * Active `debug` instances.\n */\n\nexports.instances = [];\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/*global Blob,File*/\n\n/**\n * Module requirements\n */\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function (packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n\n  return {\n    packet: pack,\n    buffers: buffers\n  };\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = {\n      _placeholder: true,\n      num: buffers.length\n    };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n\n    return newData;\n  }\n\n  return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\n\nexports.reconstructPacket = function (packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\n\nexports.removeBlobs = function (data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj; // convert any blob\n\n    if (withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n      pendingBlobs++; // async filereader\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function () {\n        // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        } else {\n          bloblessData = this.result;\n        } // if nothing pending its callback time\n\n\n        if (! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) {\n      // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) {\n      // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n\n  _removeBlobs(bloblessData);\n\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","module.exports = require('./socket');\n/**\n * Exports parser\n *\n * @api public\n *\n */\n\nmodule.exports.parser = require('engine.io-parser');","/**\n * Module dependencies.\n */\nvar transports = require('./transports/index');\n\nvar Emitter = require('component-emitter');\n\nvar debug = require('debug')('engine.io-client:socket');\n\nvar index = require('indexof');\n\nvar parser = require('engine.io-parser');\n\nvar parseuri = require('parseuri');\n\nvar parseqs = require('parseqs');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Socket;\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure : typeof location !== 'undefined' && 'https:' === location.protocol;\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname || (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port ? location.port : this.secure ? 443 : 80);\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.withCredentials = false !== opts.withCredentials;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  } // SSL options for Node.js client\n\n\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode; // detect ReactNative environment\n\n  this.isReactNative = typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative'; // other options for Node.js or ReactNative client\n\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  } // set on handshake\n\n\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null; // set on heartbeat\n\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query); // append engine.io protocol identifier\n\n  query.EIO = parser.protocol; // transport name\n\n  query.transport = name; // per-transport options\n\n  var options = this.transportOptions[name] || {}; // session id if we already have one\n\n  if (this.id) query.sid = this.id;\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    withCredentials: options.withCredentials || this.withCredentials,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void 0,\n    isReactNative: this.isReactNative\n  });\n  return transport;\n};\n\nfunction clone(obj) {\n  var o = {};\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n\n  return o;\n}\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\n\n\nSocket.prototype.open = function () {\n  var transport;\n\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n\n  this.readyState = 'opening'; // Retry with the next transport if the transport is disabled (jsonp: false)\n\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  } // set up transport\n\n\n  this.transport = transport; // set up transport listeners\n\n  transport.on('drain', function () {\n    self.onDrain();\n  }).on('packet', function (packet) {\n    self.onPacket(packet);\n  }).on('error', function (e) {\n    self.onError(e);\n  }).on('close', function () {\n    self.onClose('transport close');\n  });\n};\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, {\n    probe: 1\n  });\n  var failed = false;\n  var self = this;\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n\n    if (failed) return;\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{\n      type: 'ping',\n      data: 'probe'\n    }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n          cleanup();\n          self.setTransport(transport);\n          transport.send([{\n            type: 'upgrade'\n          }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return; // Any callback called by transport should be ignored since now\n\n    failed = true;\n    cleanup();\n    transport.close();\n    transport = null;\n  } // Handle any error that happens while probing\n\n\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n    freezeTransport();\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose() {\n    onerror('transport closed');\n  } // When the socket is closed while we're probing\n\n\n  function onclose() {\n    onerror('socket closed');\n  } // When the socket is upgraded while we're probing\n\n\n  function onupgrade(to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  } // Remove all listeners on the transport and on self\n\n\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n  transport.open();\n};\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush(); // we check for `readyState` in case an `open`\n  // listener already closed the socket\n\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n/**\n * Handles a packet.\n *\n * @api private\n */\n\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n    this.emit('packet', packet); // Socket is live - any packet counts\n\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen(); // In case open handler closes socket\n\n  if ('closed' === this.readyState) return;\n  this.setPing(); // Prolong liveness of socket on heartbeat\n\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || self.pingInterval + self.pingTimeout);\n};\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\n\nSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n/**\n * Closes the connection.\n *\n * @api private\n */\n\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n/**\n * Called upon transport error\n *\n * @api private\n */\n\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this; // clear timers\n\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer); // stop event from firing again for transport\n\n    this.transport.removeAllListeners('close'); // ensure transport won't stay open\n\n    this.transport.close(); // ignore further transport communication\n\n    this.transport.removeAllListeners(); // set ready state\n\n    this.readyState = 'closed'; // clear session id\n\n    this.id = null; // emit close event\n\n    this.emit('close', reason, desc); // clean buffers after, so users can still\n    // grab the buffers on `close` event\n\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n\n  return filteredUpgrades;\n};","/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}","/* global attachEvent */\n\n/**\n * Module requirements.\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar Polling = require('./polling');\n\nvar Emitter = require('component-emitter');\n\nvar inherit = require('component-inherit');\n\nvar debug = require('debug')('engine.io-client:polling-xhr');\n/**\n * Module exports.\n */\n\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n/**\n * Empty function\n */\n\nfunction empty() {}\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\n\nfunction XHR(opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname || port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(XHR, Polling);\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n  opts.withCredentials = this.withCredentials; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout; // other options for Node.js client\n\n  opts.extraHeaders = this.extraHeaders;\n  return new Request(opts);\n};\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({\n    method: 'POST',\n    data: data,\n    isBinary: isBinary\n  });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\n\nfunction Request(opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n  this.requestTimeout = opts.requestTimeout; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.create();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Request.prototype);\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = {\n    agent: this.agent,\n    xdomain: this.xd,\n    xscheme: this.xs,\n    enablesXDR: this.enablesXDR\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {} // ie6 check\n\n\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = this.withCredentials;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n/**\n * Called if we have data.\n *\n * @api private\n */\n\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n/**\n * Called upon error.\n *\n * @api private\n */\n\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n/**\n * Cleans up house.\n *\n * @api private\n */\n\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  } // xmlhttprequest\n\n\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n/**\n * Called upon load.\n *\n * @api private\n */\n\n\nRequest.prototype.onLoad = function () {\n  var data;\n\n  try {\n    var contentType;\n\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n\n  if (null != data) {\n    this.onData(data);\n  }\n};\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n/**\n * Aborts the request.\n *\n * @api public\n */\n\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\nmodule.exports = Object.keys || function keys(obj) {\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n\n  return arr;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\nmodule.exports = function (arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) {\n    return arraybuffer.slice(start, end);\n  }\n\n  if (start < 0) {\n    start += bytes;\n  }\n\n  if (end < 0) {\n    end += bytes;\n  }\n\n  if (end > bytes) {\n    end = bytes;\n  }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n\n  return result.buffer;\n};","module.exports = after;\n\nfunction after(count, callback, err_cb) {\n  var bail = false;\n  err_cb = err_cb || noop;\n  proxy.count = count;\n  return count === 0 ? callback() : proxy;\n\n  function proxy(err, result) {\n    if (proxy.count <= 0) {\n      throw new Error('after called too many times');\n    }\n\n    --proxy.count; // after first error, rest are passed to err_cb\n\n    if (err) {\n      bail = true;\n      callback(err); // future error callbacks will go to error handler\n\n      callback = err_cb;\n    } else if (proxy.count === 0 && !bail) {\n      callback(null, result);\n    }\n  }\n}\n\nfunction noop() {}","/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\n\nfunction ucs2decode(string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  var value;\n  var extra;\n\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n\n      if ((extra & 0xFC00) == 0xDC00) {\n        // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n\n  return output;\n} // Taken from https://mths.be/punycode\n\n\nfunction ucs2encode(array) {\n  var length = array.length;\n  var index = -1;\n  var value;\n  var output = '';\n\n  while (++index < length) {\n    value = array[index];\n\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n\n    output += stringFromCharCode(value);\n  }\n\n  return output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n  if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n    if (strict) {\n      throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n    }\n\n    return false;\n  }\n\n  return true;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction createByte(codePoint, shift) {\n  return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n  if ((codePoint & 0xFFFFFF80) == 0) {\n    // 1-byte sequence\n    return stringFromCharCode(codePoint);\n  }\n\n  var symbol = '';\n\n  if ((codePoint & 0xFFFFF800) == 0) {\n    // 2-byte sequence\n    symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n  } else if ((codePoint & 0xFFFF0000) == 0) {\n    // 3-byte sequence\n    if (!checkScalarValue(codePoint, strict)) {\n      codePoint = 0xFFFD;\n    }\n\n    symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n    symbol += createByte(codePoint, 6);\n  } else if ((codePoint & 0xFFE00000) == 0) {\n    // 4-byte sequence\n    symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n    symbol += createByte(codePoint, 12);\n    symbol += createByte(codePoint, 6);\n  }\n\n  symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n  return symbol;\n}\n\nfunction utf8encode(string, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  var codePoints = ucs2decode(string);\n  var length = codePoints.length;\n  var index = -1;\n  var codePoint;\n  var byteString = '';\n\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint, strict);\n  }\n\n  return byteString;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction readContinuationByte() {\n  if (byteIndex >= byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  var continuationByte = byteArray[byteIndex] & 0xFF;\n  byteIndex++;\n\n  if ((continuationByte & 0xC0) == 0x80) {\n    return continuationByte & 0x3F;\n  } // If we end up here, it’s not a continuation byte\n\n\n  throw Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n  var byte1;\n  var byte2;\n  var byte3;\n  var byte4;\n  var codePoint;\n\n  if (byteIndex > byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  if (byteIndex == byteCount) {\n    return false;\n  } // Read first byte\n\n\n  byte1 = byteArray[byteIndex] & 0xFF;\n  byteIndex++; // 1-byte sequence (no continuation bytes)\n\n  if ((byte1 & 0x80) == 0) {\n    return byte1;\n  } // 2-byte sequence\n\n\n  if ((byte1 & 0xE0) == 0xC0) {\n    byte2 = readContinuationByte();\n    codePoint = (byte1 & 0x1F) << 6 | byte2;\n\n    if (codePoint >= 0x80) {\n      return codePoint;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 3-byte sequence (may include unpaired surrogates)\n\n\n  if ((byte1 & 0xF0) == 0xE0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n\n    if (codePoint >= 0x0800) {\n      return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 4-byte sequence\n\n\n  if ((byte1 & 0xF8) == 0xF0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    byte4 = readContinuationByte();\n    codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n\n    if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n      return codePoint;\n    }\n  }\n\n  throw Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\n\nfunction utf8decode(byteString, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  byteArray = ucs2decode(byteString);\n  byteCount = byteArray.length;\n  byteIndex = 0;\n  var codePoints = [];\n  var tmp;\n\n  while ((tmp = decodeSymbol(strict)) !== false) {\n    codePoints.push(tmp);\n  }\n\n  return ucs2encode(codePoints);\n}\n\nmodule.exports = {\n  version: '2.1.2',\n  encode: utf8encode,\n  decode: utf8decode\n};","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function () {\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"; // Use a lookup table to find the index.\n\n  var lookup = new Uint8Array(256);\n\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = \"\";\n\n    for (i = 0; i < len; i += 3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode = function (base64) {\n    var bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i + 1)];\n      encoded3 = lookup[base64.charCodeAt(i + 2)];\n      encoded4 = lookup[base64.charCodeAt(i + 3)];\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n\n    return arraybuffer;\n  };\n})();","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : false;\n/**\r\n * Check if Blob constructor is supported\r\n */\n\nvar blobSupported = function () {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\n\n\nvar blobSupportsArrayBufferView = blobSupported && function () {\n  try {\n    var b = new Blob([new Uint8Array([1, 2])]);\n    return b.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if BlobBuilder is supported\r\n */\n\n\nvar blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\n\nfunction mapArrayBufferViews(ary) {\n  return ary.map(function (chunk) {\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer; // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      return buf;\n    }\n\n    return chunk;\n  });\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary).forEach(function (part) {\n    bb.append(part);\n  });\n  return options.type ? bb.getBlob(options.type) : bb.getBlob();\n}\n\n;\n\nfunction BlobConstructor(ary, options) {\n  return new Blob(mapArrayBufferViews(ary), options || {});\n}\n\n;\n\nif (typeof Blob !== 'undefined') {\n  BlobBuilderConstructor.prototype = Blob.prototype;\n  BlobConstructor.prototype = Blob.prototype;\n}\n\nmodule.exports = function () {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n}();","var _toConsumableArray = require(\"D:\\\\Projects\\\\my_page\\\\About-me-React-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n\n\n  function disable() {\n    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n      return '-' + namespace;\n    }))).join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n\n\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n\n  return ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}","/**\n * Module requirements.\n */\nvar Polling = require('./polling');\n\nvar inherit = require('component-inherit');\n/**\n * Module exports.\n */\n\n\nmodule.exports = JSONPPolling;\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n/**\n * Noop.\n */\n\nfunction empty() {}\n/**\n * Until https://github.com/tc39/proposal-global is shipped.\n */\n\n\nfunction glob() {\n  return typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n}\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\n\nfunction JSONPPolling(opts) {\n  Polling.call(this, opts);\n  this.query = this.query || {}; // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    var global = glob();\n    callbacks = global.___eio = global.___eio || [];\n  } // callback identifier\n\n\n  this.index = callbacks.length; // add callback to jsonp global\n\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  }); // append to query string\n\n  this.query.j = this.index; // prevent spurious errors from being emitted when the window is unloaded\n\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(JSONPPolling, Polling);\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n\n  this.script = script;\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete() {\n    initIframe();\n    fn();\n  }\n\n  function initIframe() {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe(); // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parser = require('engine.io-parser');\n\nvar parseqs = require('parseqs');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) {}\n}\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(WS, Transport);\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocketImpl(uri, protocols) : new WebSocketImpl(uri) : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false; // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n\n  var total = packets.length;\n\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        } // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n\n\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done() {\n    self.emit('flush'); // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n/**\n * Called upon close\n *\n * @api private\n */\n\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Closes socket.\n *\n * @api private\n */\n\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = ''; // avoid port if default for schema\n\n  if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // append timestamp to URI\n\n\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  } // communicate binary support capabilities\n\n\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // prepend ? to query\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};","module.exports = toArray;\n\nfunction toArray(list, index) {\n  var array = [];\n  index = index || 0;\n\n  for (var i = index || 0; i < list.length; i++) {\n    array[i - index] = list[i];\n  }\n\n  return array;\n}","/**\n * Expose `Backoff`.\n */\nmodule.exports = Backoff;\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\n\nBackoff.prototype.duration = function () {\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\n  if (this.jitter) {\n    var rand = Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n  }\n\n  return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\n\nBackoff.prototype.reset = function () {\n  this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMin = function (min) {\n  this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMax = function (max) {\n  this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\n\n\nBackoff.prototype.setJitter = function (jitter) {\n  this.jitter = jitter;\n};"],"sourceRoot":""}