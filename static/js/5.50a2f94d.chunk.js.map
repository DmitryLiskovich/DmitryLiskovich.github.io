{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/component-emitter/index.js","../node_modules/engine.io-parser/lib/browser.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/socket.io-client/node_modules/debug/src/browser.js","../node_modules/parseqs/index.js","../node_modules/component-inherit/index.js","../node_modules/engine.io-client/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/index.js","../node_modules/buffer/index.js","../node_modules/engine.io-client/lib/xmlhttprequest.js","../node_modules/engine.io-client/lib/transport.js","../node_modules/parseuri/index.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/socket.io-parser/node_modules/isarray/index.js","../node_modules/socket.io-parser/is-buffer.js","../node_modules/socket.io-client/lib/manager.js","../node_modules/engine.io-client/lib/transports/index.js","../node_modules/engine.io-client/lib/transports/polling.js","../node_modules/has-binary2/index.js","../node_modules/yeast/index.js","../node_modules/indexof/index.js","../node_modules/socket.io-client/lib/socket.js","../node_modules/socket.io-client/lib/on.js","../node_modules/component-bind/index.js","../node_modules/peerjs/dist/peerjs.min.js","../node_modules/paper/dist/paper-core.js","../node_modules/socket.io-client/lib/index.js","../node_modules/socket.io-client/lib/url.js","../node_modules/socket.io-client/node_modules/debug/src/common.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/socket.io-client/node_modules/ms/index.js","../node_modules/socket.io-parser/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/node_modules/debug/src/debug.js","../node_modules/ms/index.js","../node_modules/socket.io-parser/binary.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/engine.io-client/lib/index.js","../node_modules/engine.io-client/lib/socket.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/lib/transports/polling-xhr.js","../node_modules/engine.io-parser/lib/keys.js","../node_modules/has-binary2/node_modules/isarray/index.js","../node_modules/arraybuffer.slice/index.js","../node_modules/after/index.js","../node_modules/engine.io-parser/lib/utf8.js","../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../node_modules/blob/index.js","../node_modules/engine.io-client/node_modules/debug/src/common.js","../node_modules/engine.io-client/node_modules/ms/index.js","../node_modules/engine.io-client/lib/transports/polling-jsonp.js","../node_modules/engine.io-client/lib/transports/websocket.js","../node_modules/to-array/index.js","../node_modules/backo2/index.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","__webpack_require__","d","__webpack_exports__","Emitter","prototype","mixin","module","exports","on","addEventListener","event","fn","this","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","slice","call","len","listeners","hasListeners","base64encoder","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","navigator","test","userAgent","isPhantomJS","dontSendBlobs","protocol","packets","open","close","ping","pong","message","upgrade","noop","packetslist","err","type","data","Blob","map","ary","each","done","result","Array","next","eachWithIndex","el","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","e","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","n","l","chr","encodedPackets","totalLength","reduce","acc","p","toString","resultArray","bufferIndex","isString","ab","view","charCodeAt","lenStr","parseInt","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","total","_toConsumableArray","arr","isArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","TypeError","_nonIterableSpread","process","log","_console","console","formatArgs","useColors","namespace","humanize","diff","c","color","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","load","r","getItem","NODE_ENV","PUBLIC_URL","DEBUG","window","__nwjs","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","RegExp","$1","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","str","hasOwnProperty","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","a","b","constructor","debug","binary","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","id","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","Error","parse","tryParse","isPayloadValid","decodeString","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","global","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","array","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","isBuffer","checked","copy","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","hasCORS","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","self","parser","Transport","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","withCredentials","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","isReactNative","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","send","onOpen","onData","onPacket","re","parts","exec","uri","host","authority","ipv6uri","arrayWithoutHoles","iterableToArray","nonIterableSpread","withNativeBuffer","withNativeArrayBuffer","eio","Socket","bind","Backoff","has","Manager","nsps","subs","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","jitter","timeout","connecting","lastPing","packetBuffer","_parser","encoder","decoder","autoConnect","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","connect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","options","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","location","isSSL","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","name","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","withNativeBlob","withNativeFile","File","prev","alphabet","seed","num","now","decoded","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","ev","compress","pop","onpacket","sameNamespace","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","parcelRequire","t","o","f","resolve","cache","Module","isParcelRequire","bundle","modules","parent","register","EgBh","require","useBlobBuilder","useArrayBufferView","binaryFeatures","BlobBuilder","_pieces","_parts","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","flush","getBuffer","u","getBlob","BufferBuilder","kdPp","unpack","dataBuffer","dataView","bufferBuilder","unpack_uint8","unpack_raw","unpack_string","unpack_array","unpack_map","unpack_float","unpack_double","unpack_uint16","unpack_uint32","unpack_uint64","unpack_int8","unpack_int16","unpack_int32","unpack_int64","pack_string","pack_integer","pack_double","pack_array","pack_bin","startsWith","pack_object","toBinaryPack","pack_uint8","pack_uint16","pack_uint32","pack_int8","pack_int16","pack_int32","pack_int64","pack_uint64","LN2","./bufferbuilder","iSxC","extractVersion","wrapPeerConnectionEvent","RTCPeerConnection","_eventMap","get","disableLog","disableWarnings","deprecated","warn","detectBrowser","browser","version","mozGetUserMedia","webkitGetUserMedia","isSecureContext","webkitRTCPeerConnection","RTCIceGatherer","mediaDevices","supportsUnifiedPlan","RTCRtpTransceiver","compactObject","s","assign","walkStats","filterStats","Map","trackIdentifier","trackId","endsWith","s6SN","shimGetUserMedia","mandatory","optional","ideal","exact","toUpperCase","advanced","audio","video","facingMode","getSupportedConstraints","enumerateDevices","then","kind","find","some","label","deviceId","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","constraint","constraintName","getUserMedia","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","Promise","reject","__esModule","default","WeakMap","../utils.js","VHa8","shimGetDisplayMedia","getDisplayMedia","width","height","frameRate","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","uI5X","shimMediaStream","MediaStream","webkitMediaStream","shimOnTrack","transceiver","receiver","_ontrack","setRemoteDescription","_ontrackpoly","stream","getReceivers","track","Event","streams","dispatchEvent","shimGetSendersWithDtmf","_t","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","addTrack","removeTrack","addStream","removeStream","RTCRtpSender","shimGetStats","getStats","_arguments","timestamp","localcandidate","remotecandidate","names","stat","shimSenderReceiverGetStats","RTCRtpReceiver","srcElement","MediaStreamTrack","shimAddTrackRemoveTrackWithNative","shimAddTrackRemoveTrack","getLocalStreams","_reverseStreams","_streams","signalingState","setLocalDescription","sdp","RTCSessionDescription","shimPeerConnection","RTCIceCandidate","addIceCandidate","candidate","fixNegotiationNeeded","_shimmedLocalStreams","./getusermedia","./getdisplaymedia","NZ1C","filterIceServers","urls","url","../utils","YHvh","generateIdentifier","random","localCName","splitLines","splitSections","getDescription","getMediaSections","matchPrefix","parseCandidate","foundation","component","priority","ip","address","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","parseIceOptions","parseRtpMap","payloadType","clockRate","channels","numChannels","writeRtpMap","preferredPayloadType","parseExtmap","direction","writeExtmap","preferredId","parseFmtp","writeFmtp","parameters","parseRtcpFb","parameter","writeRtcpFb","rtcpFeedback","parseSsrcMedia","ssrc","attribute","parseSsrcGroup","semantics","ssrcs","getMid","parseFingerprint","algorithm","getDtlsParameters","role","fingerprints","writeDtlsParameters","getIceParameters","password","writeIceParameters","parseRtpParameters","codecs","headerExtensions","fecMechanisms","rtcp","writeRtpDescription","maxptime","parseRtpEncodingParameters","apt","codecPayloadType","rtx","fec","mechanism","maxBitrate","parseRtcpParameters","cname","reducedSize","compound","mux","parseMsid","parseSctpDescription","parseMLine","fmt","maxMessageSize","writeSctpDescription","generateSessionId","writeSessionBoilerplate","writeMediaSection","iceGatherer","getLocalParameters","dtlsTransport","mid","rtpSender","rtpReceiver","sendEncodingParameters","getDirection","getKind","isRejected","parseOLine","username","sessionId","sessionVersion","netType","addressType","isValidSDP","NJ2u","_initialTrackId","_a","offer","answer","getRemoteCandidates","addRemoteCandidate","NotSupportedError","InvalidAccessError","OperationError","MediaStreamTrackEvent","_dispatchEvent","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","iceServers","_iceGatherers","iceCandidatePoolSize","gatherPolicy","_config","transceivers","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","getConfiguration","getRemoteStreams","_createTransceiver","iceTransport","localCapabilities","remoteCapabilities","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","clone","enabled","_createIceGatherer","bufferedCandidateEvents","bufferCandidates","state","_gather","onlocalcandidate","sdpMid","sdpMLineIndex","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","_disposeIceAndDtlsTransports","_transceive","encodings","rtcpParameters","receive","rejected","h","_updateSignalingState","g","S","T","E","C","P","w","R","_","k","D","I","L","M","O","G","setTransport","setRemoteCandidates","getCapabilities","N","A","new","closed","checking","completed","failed","createOffer","offerToReceiveAudio","offerToReceiveVideo","getLocalCandidates","createAnswer","all","inboundrtp","outboundrtp","candidatepair","YdKx","catch","P3bV","XRic","RTCDtmfSender","RTCDTMFSender","shimReplaceTrack","replaceTrack","setTrack","./filtericeservers","rtcpeerconnection-shim","GzSv","getSettings","applyConstraints","UuGU","mediaSource","Fzdr","RTCTrackEvent","mozRTCPeerConnection","_arguments2","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","addTransceiver","setParametersPromises","sendEncodings","rid","parseFloat","scaleResolutionDownBy","maxFramerate","sender","getParameters","setParameters","shimCreateOffer","finally","shimCreateAnswer","t1lL","shimLocalStreamsAPI","_localStreams","shimRemoteStreamsAPI","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","shimConstraints","shimRTCIceServerUrls","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","getTransceivers","setDirection","GOQK","shimRTCIceCandidate","shimMaxMessageSize","_sctp","_this$getConfiguratio","sdpSemantics","POSITIVE_INFINITY","shimSendThrowTypeError","createDataChannel","channel","sctp","shimConnectionState","_onconnectionstatechange","_connectionstatechangepoly","_lastConnectionState","removeAllowExtmapMixed","./utils","KtlG","adapterFactory","shimChrome","shimFirefox","shimEdge","shimSafari","browserDetails","commonShim","browserShim","./chrome/chrome_shim","./edge/edge_shim","./firefox/firefox_shim","./safari/safari_shim","./common_shim","tI1X","./adapter_factory.js","sXtV","__importDefault","webRTCAdapter","webrtc-adapter","I31f","Supports","isIOS","platform","supportedBrowsers","minFirefoxVersion","minChromeVersion","minSafariVersion","isWebRTCSupported","isBrowserSupported","getBrowser","getVersion","isUnifiedPlanSupported","./adapter","BHXf","__importStar","credential","util","CLOUD_HOST","CLOUD_PORT","chunkedBrowsers","Chrome","chrome","chunkedMTU","defaultConfig","browserVersion","supports","webRTC","audioVideo","binaryBlob","reliable","ordered","_dataCount","validateId","chunk","ceil","__peerData","blobToArrayBuffer","binaryStringToArrayBuffer","randomToken","isSecure","peerjs-js-binarypack","./supports","JJlS","context","_events","_eventsCount","create","eventNames","listenerCount","addListener","prefixed","EventEmitter","WOs9","__read","return","__spread","Disabled","Errors","Warnings","All","LogLevel","_logLevel","_print","setLogFunction","ZRYf","Open","Stream","Data","Close","IceStateChanged","ConnectionEventType","Media","ConnectionType","Connection","Call","Disconnected","PeerEventType","BrowserIncompatible","InvalidID","InvalidKey","Network","PeerUnavailable","SslUnavailable","ServerError","SocketError","SocketClosed","UnavailableID","WebRTC","PeerErrorType","Binary","BinaryUTF8","SerializationType","Message","SocketEventType","Heartbeat","Candidate","Offer","Answer","IdTaken","Leave","Expire","ServerMessageType","wJlv","__extends","_e","setPrototypeOf","__values","pingInterval","_disconnected","_messagesQueue","_baseUrl","_id","_socket","WebSocket","onmessage","_cleanup","_sendQueuedMessages","_scheduleHeartbeat","_wsPingTimer","_sendHeartbeat","_wsOpen","eventemitter3","./logger","./enums","HCdX","__assign","__awaiter","throw","__generator","trys","ops","connection","startConnection","_startPeerConnection","peerConnection","_stream","_addTracksToConnection","originator","initialize","_makeOffer","handleSDP","provider","config","_setupListeners","peer","connectionId","getConnection","_addStreamToMediaConnection","dataChannel","constraints","sdpTransform","metadata","serialization","emitError","_makeAnswer","handleCandidate","Negotiator","./util","tQFK","_t2","_open","BaseConnection","dbHP","_e2","_localStream","ID_PREFIX","_negotiator","_remoteStream","handleMessage","_payload","_getMessages","_removeConnection","MediaConnection","./negotiator","./baseconnection","GGp6","_e3","fileReader","_queue","_processing","doNextTask","queue","enque","processing","abort","EncodingQueue","GBTQ","_e4","_buffer","_bufferSize","_buffering","_chunkedData","_encodingQueue","_bufferedSend","_dc","_configureDataChannel","_handleDataMessage","_handleChunk","count","_sendChunks","_trySend","bufferedAmount","MAX_BUFFERED_AMOUNT","_tryBuffer","DataConnection","./encodingQueue","in7L","_options","_buildUrl","getTime","retrieveId","fetch","status","text","listAllPeers","API","Hxpd","_e5","_lastServerId","_destroyed","_connections","_lostMessages","DEFAULT_KEY","token","logFunction","logLevel","_api","_createServerConnection","_delayedAbort","_initialize","_abort","_handleMessage","_cleanupPeer","delete","_addConnection","_storeMessage","destroyed","_e6","Peer","./socket","./mediaconnection","./dataconnection","./api","iTK6","peerjs","./peer","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","Base","hidden","_slice","describe","define","_each","_inject","dest","beans","preserve","beansNames","field","bean","isFunc","base","isPlainObject","part","inject","statics","extend","ctor","proto","pick","begin","_class","_name","Formatter","instance","number","getClassName","importJSON","exportJSON","serialize","props","exclude","_prioritize","obj1","obj2","amount","peek","__index","readIndex","_readIndex","readNull","filtered","__filtered","remain","readList","entry","readNamed","getNamed","hasValue","getSource","__unfiltered","readSupported","__source","hasNamed","prioritize","processed","handleKey","isPlainValue","asString","compact","dictionary","isRoot","formatter","precision","definitions","references","item","ref","_serialize","_compactSerialize","deserialize","_data","_setDictionary","_isRoot","isFirst","hasDictionary","isDictionary","useTarget","Item","Layer","insert","items","itemsLength","startLength","remove","_index","removed","capitalize","camelize","hyphenate","func","_eventTypes","handlers","install","uninstall","handler","setTarget","currentTarget","responds","attach","detach","fire","_installEvents","PaperScope","paper","settings","applyMatrix","insertItems","handleSize","hitTolerance","project","projects","tools","_scopes","support","ctx","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","user","os","v1","v2","rv","versionNumber","trident","jsdom","webkit","atom","getView","_view","getPaper","execute","scope","setup","element","Project","createCanvas","getCanvas","activate","clear","handleAttribute","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","CollisionDetection","findItemBoundsCollisions","items1","items2","tolerance","getBounds","bounds","rect","left","top","right","bottom","bounds1","bounds2","findBoundsCollisions","findCurveBoundsCollisions","curves1","curves2","bothAxis","curves","hor","ver","boundsA","boundsB","sweepVertical","onlySweepAxisCollisions","allBounds","lengthA","lengthAll","binarySearch","indices","coord","pri0","pri1","sec0","sec1","allIndicesByPri0","sort","i1","i2","activeIndicesByPri1","allCollisions","curIndex","curBounds","origIndex","isCurrentA","isCurrentB","curCollisions","pruneCount","activeIndex","curSec1","curSec0","activeBounds","isActiveA","isActiveB","collisions","multiplier","round","val1","val2","separator","point","rectangle","Numerical","abscissas","weights","abs","sqrt","log2","LOG2E","clamp","getDiscriminant","ad","bd","cd","q","getNormalizationFactor","norm","EPSILON","MACHINE_EPSILON","CURVETIME_EPSILON","GEOMETRIC_EPSILON","TRIGONOMETRIC_EPSILON","KAPPA","isZero","isMachineZero","integrate","B","sum","Ax","findRoot","df","fx","dx","nx","solveQuadratic","roots","x1","x2","Q","boundless","minB","maxB","solveCubic","b1","c2","qd","evaluate","x0","tmp","td","rd","UID","_pools","pool","Point","arg0","arg1","reading","hasY","_set","setAngle","angle","getLength","setLength","_angle","cos","sin","scale","getAngle","getAngleInRadians","PI","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","div","NaN","dot","acos","atan2","getQuadrant","getDirectedAngle","cross","getDistance","normalize","current","rotate","center","subtract","transform","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","_Rectangle","contains","isClose","isCollinear","isColinear","isOrthogonal","_isNaN","isInQuadrant","point1","point2","y1","y2","op","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","isSelected","_selection","_getSelection","setSelected","selected","_changeSelection","Size","hasHeight","_isNaN2","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","to","frm","rt","getPoint","_dontLink","setPoint","getSize","_fw","_fh","setSize","sx","_sx","sy","_sy","getLeft","setLeft","getTop","setTop","getRight","setRight","getBottom","setBottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","epsilon","intersect","unite","include","expand","xFirst","LinkedRectangle","internal","Matrix","ok","_b","_c","_d","_tx","_ty","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","a1","c1","d1","a2","b2","d2","tx2","ty2","prepend","tx1","ty1","appended","prepended","invert","det","inverted","concatenate","preConcatenate","chain","_shiftless","_orNullIfIdentity","isInvertible","isSingular","_transformCoordinates","_transformCorners","coords","_transformBounds","inverseTransform","_inverseTransform","decompose","degrees","asin","translation","getTranslation","rotation","scaling","skewing","getScaling","getRotation","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","line","isInfinite","getSide","getSignedDistance","p1x","p1y","v1x","v1y","p2x","p2y","v2x","v2y","dy","u1","u2","px","py","vx","vy","ccw","_children","_namedChildren","_activeLayer","_currentStyle","Style","View","_selectionItems","_selectionCount","_updateVersion","_needsUpdate","_requested","_autoUpdate","requestUpdate","changes","_changes","changesById","_changesById","children","getCurrentStyle","setCurrentStyle","getIndex","getOptions","getLayers","getActiveLayer","getSymbolDefinitions","getItems","class","SymbolItem","definition","_definition","getSymbols","getSelectedItems","selectionItems","selection","isInserted","_updateSelection","selectAll","setFullySelected","deselectAll","addLayer","layer","insertLayer","_remove","_setProject","setName","_insertItem","_created","NO_INSERT","insertChild","_getItems","removeOn","sets","_removeSets","mousedrag","other","draw","pixelRatio","param","viewMatrix","matrices","updateMatrix","restore","strokeWidth","_drawSelection","_serializeFields","_canApplyMatrix","_canScaleStroke","_pivot","_visible","_blendMode","_opacity","_locked","_guide","_clipMask","_selectBounds","_selectChildren","pivot","visible","blendMode","opacity","locked","guide","clipMask","_countItemEvent","onFrame","_animateItem","onLoad","_itemHandlers","hasProps","_matrix","_parent","_style","fields","fontSize","Group","_defaults","symbol","_symbol","cacheParent","_project","_bounds","_position","_decomposed","_globalMatrix","_clearBoundsCache","getId","getName","_removeNamed","_getOwner","namedChildren","getStyle","setStyle","getSelection","setSelection","flag","isFullySelected","isClipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","position","_getPositionFromBounds","setPosition","getPivot","setPivot","getStrokeBounds","stroke","getHandleBounds","handle","getInternalBounds","hasMatrix","_boundsOptions","getStrokeScaling","cacheItem","_getCachedBounds","setBounds","_backup","_getBounds","_updateBoundsCache","_getBoundsCacheKey","noInternal","cacheKey","cached","nonscaling","hasStroke","_getStrokeMatrix","_item","getViewMatrix","_boundsCache","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","parents","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","setParent","addChild","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","deep","copyAttributes","copyContent","insertAbove","orig","excludeMatrix","rasterize","resolution","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","raster","Raster","canvas","setCanvas","_contains","_asPathItem","Path","Rectangle","getIntersections","hitTest","_hitTest","HitResult","hitTestAll","hitTestChildren","_exclude","child","_hitTestChildren","parentViewMatrix","guides","tolerancePadding","_tolerancePadding","_getStrokePadding","checkSelf","hit","checkPoint","pt","checkPosition","checkCenter","checkBounds","points","_hitTestSelf","hasFill","matches","matchObject","firstOnly","overlapping","inside","recursive","childMatrix","insertChildren","inserted","notifySelf","_insertAt","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","addTo","copyTo","namedArray","notifyParent","_dispose","replaceWith","reverseChildren","reverse","numChildren","isEditable","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","transformMatrix","fillColor","getFillColor","strokeColor","getStrokeColor","_transformContent","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","fillStyle","toCanvasStyle","strokeStyle","lineWidth","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","blur","getShadowBlur","getShadowOffset","shadowColor","getShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","mainCtx","itemOffset","prevOffset","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","strokeMatrix","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","getFillRule","_isUpdated","updateVersion","CompoundPath","updated","itemSelected","boundsSelected","positionSelected","_drawSelected","getSelectedColor","half","beginPath","arc","deltas","delta","moveTo","lineTo","closePath","fillRect","hash","tween","easing","Tween","_handleFrame","time","running","tweenTo","tweenFrom","_clipItem","_getClipItem","isClipped","setClipped","clipped","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","toShape","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","bezierCurveTo","getCornerCenter","halfSize","corner","quadrant","isOnEllipseStroke","padding","vector","hitStroke","hitFill","strokeRadius","strokePadding","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","_smoothing","image","getElementById","getContent","naturalHeight","setImage","setSource","_loaded","_image","_canvas","_setImage","copyCanvas","drawImage","_crossOrigin","getElement","getLoaded","getPpi","getImage","DomEvent","complete","naturalWidth","_context","_change","setContext","toDataURL","Image","getCrossOrigin","setCrossOrigin","getSmoothing","setSmoothing","smoothing","getSubCanvas","getSubRaster","getAverageColor","PathItem","_sampleContext","clearRect","sampleSize","pixels","getImageData","alpha","Color","getPixel","setPixel","components","_convert","_alpha","imageData","createImageData","putImageData","setImageData","DomElement","setPrefixed","setDefinition","SymbolDefinition","getDefinition","getSymbol","setSymbol","dontCenter","_dontCenter","place","values","segments","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","_point","hasHandles","_handleIn","_handleOut","_path","curve","_curves","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","isSmooth","clearHandles","oldSelection","getPath","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","getNext","smooth","_first","_last","factor","getPrevious","p0","p1","p2","d1_a","d1_2a","d2_a","d2_2a","isLast","reversed","removeSegment","segment","interpolate","handleIn1","handleIn2","handleOut2","handleOut1","change","Curve","arg6","arg7","seg1","seg2","handle1","handle2","segment1","segment2","_segment2","getPoint1","getHandle1","getHandle2","getPoint2","_length","classify","setPoint1","setPoint2","setHandle1","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","divideAt","divideAtTime","getTimeAt","_setHandles","subdivide","setHandles","splitAt","splitAtTime","getLocationAtTime","isTime","straight","h1","h2","y0","x3","y3","x4","y4","x5","y5","x6","y6","x7","y7","x8","y8","x9","y9","getMonoCurves","o0","o1","o2","o3","isStraight","v0","v3","getTimeOf","p3","getNearestTime","minDist","minT","refine","dist","step","flip","isFlatEnough","flatness","ux","uy","_addBounds","minPad","maxPad","s1","s2","isLinear","third","hasLength","isHorizontal","getTangentAtTime","isVertical","getLocationAt","_isTime","getParameterAt","getTimesWithTangent","tangent","getOffsetAtTime","getLocationOf","getOffsetOf","loc","getOffset","getParameterOf","getNearestLocation","getNearestPoint","methods","_evaluateMethods","getLengthIntegrand","ax","bx","ay","by","getIterations","normalized","d3","t1","t2","hasRoots","t1Ok","t2Ok","f1","f2","ds","forward","rangeLength","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","getPeaks","addLocation","locations","overlap","excludeStart","excludeEnd","loc1","loc2","_intersection","clipConvexHull","hullTop","hullBottom","dMin","dMax","clipConvexHullPart","threshold","qx","qy","getCurveLineIntersections","getCurveIntersections","overlaps","getOverlaps","straight1","straight2","before","addCurveIntersections","recursion","calls","tMin","tMax","uMin","uMax","tMinClip","tMaxClip","q0x","q0y","q3x","q3y","dp0","dp1","dp2","dp3","hull","dq0","dq1","dq2","dq3","dist1","dist2","distRatio","getConvexHull","tMinNew","tMaxNew","uDiff","getSelfIntersection","info","getSquaredLineLength","straightBoth","l1","l2","matrix1","matrix2","_returnFirst","length1","length2","values1","values2","boundsCollisions","index1","curve1","collisions1","index2","curve2","den","times","t0","_overlap","_distance","_setCurve","_time","getPointAtTime","_next","_previous","_version","_curve","_segment","_setSegment","getSegment","trySegment","_offset","_curveOffset","getParameter","getCurveOffset","getIntersection","getLastSegment","_ignoreOther","isTouching","inter","isCrossing","t1Inside","t2Inside","c4","c3","offsets","addOffsets","isInRange","getPointAt","v4","a3","a4","hasOverlap","merge","search","path1","path2","expanded","pathData","first","isClockwise","setClockwise","clockwise","setPathData","previous","control","relative","getCoord","command","lower","move","cubicCurveTo","quadraticCurveTo","arcTo","winding","_getWinding","onPath","windingL","windingR","getCrossings","minLoc","isPath","itemsFrom","itemsTo","setClosed","paths1","paths2","matched","boundsOverlaps","findBoundsOverlaps","pathBoundsOverlaps","setSegments","_segmentSelection","_area","getSegments","fullySelected","last","_add","getFirstSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","addSegment","skipLine","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newSelection","last1","last2","first2","first1","simplify","flatten","PathFlattener","PathFitter","fit","_default","loop","asymmetric","paddingLeft","paddingRight","knots","n_1","rf","hx","hy","topCenter","seg3","seg4","isArc","pt1","pt2","shape","pos2","end2","pos1","end1","start2","cap","numSegments","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","isJoin","_addBevelJoin","_addSquareCap","getOffsetsWithTangent","curveStart","curveTimes","drawSegments","drawSegment","dashLength","flattener","drawPart","pX","pY","miniSize","miniHalf","drawHandle","hX","hY","drawHandles","getCurrentSegment","moveBy","curveTo","through","extent","middle","large","rxSq","rySq","xSq","ySq","throughSide","centerSide","inc","z","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","method","prevCoords","processSegment","joinBounds","addPoint","addRound","addJoin","addCap","phi","isArea","normal1","getNormalAtTime","normal2","normal","joinPadding","joinRadius","SQRT2","paddingX","paddingY","xn","xx","yn","yx","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tl","tr","getTopRight","br","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","paths","getCurrentPath","check","operators","1","2","-1","getPaths","preparePath","resolveCrossings","reorient","createResult","filterIntersection","traceBoolean","operation","trace","splitBoolean","_path1","_path2","operator","crossings","divideLocations","collectPaths","_overlapsOnly","curvesValues","curveCollisions","curveCollisionsMap","propagateWinding","_winding","tracePaths","reorientPaths","added","addPath","linkIntersections","clearCurveHandles","lookup","container","sorted","entry1","containerWinding","getInteriorPoint","entry2","clearLater","renormalizeLocs","prevCurve","prevTime","clearCurves","clearLookup","origTime","newCurve","getWinding","dontFlip","vPrev","vClose","curvesList","ia","pv","pa","po","qualityEpsilon","paL","paR","pathWindingL","pathWindingR","onAnyPath","quality","addWinding","a0","windingPrev","a3Prev","handleCurve","monoCurves","curveLength","operand","SQRT1_2","wind","pathWinding","starts","isValid","_visited","isStart","visitPath","getCrossingSegments","collectStarts","collect","nextInter","_prev","inter1","inter2","over1","over2","branch","visited","valid","finished","branches","hasOverlaps","hasCrossings","intersections","nonZero","intercepts","mv","mo0","mo3","maxRecursion","ignoreStraight","minSpan","addCurve","computeParts","halves","tMid","_get","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","tanCenter","X","b0","b3","alpha1","alpha2","detC0C1","detC0X","c0","segLength","eps","degree","maxDist","TextItem","content","_content","_lines","setContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","font","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","colorCtx","gray","rgb","hsb","hsl","gradient","componentParsers","namedColors","transparent","hsbIndices","converters","rgb-hsb","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","t3","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","_components","Gradient","_removeOwner","_addOwner","_properties","argType","converted","isHSL","unit","turn","grad","fromCSS","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","canvasGradient","_stops","origin","destination","highlight","inverse","_radial","createRadialGradient","createLinearGradient","addColorStop","_color","_types","_setOwner","components1","components2","setStops","setRadial","_owners","getStops","GradientStop","getRadial","stops1","stops2","rampPoint","setColor","setOffset","getRampPoint","setRampPoint","getColor","itemDefaults","fillRule","strokeScaling","shadowOffset","selectedColor","groupDefaults","fontFamily","fontWeight","textDefaults","_values","isColor","isPoint","applyToChildren","old","_dontMerge","childValue","Font","WindingRule","isStyle","style1","style2","secondary","defaults2","value1","value2","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","passive","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","getRelatedTarget","relatedTarget","toElement","requestAnimationFrame","nativeRequest","requested","handleCallbacks","functions","setInterval","getCanvasSize","setAttribute","_viewEvents","userDrag","userSelect","touchCallout","contentZooming","tapHighlightColor","_windowEvents","resize","setViewSize","Stats","_stats","stats","domElement","appendChild","_element","_pixelRatio","devicePixelRatio","_setElementSize","_viewSize","_views","_viewsById","_focused","_frameItems","_frameItemCount","_itemEvents","native","virtual","node","_animate","play","_count","getAutoUpdate","setAutoUpdate","autoUpdate","update","animate","_handleFrameItems","getPixelRatio","getViewSize","isVisible","parentNode","temp","createElement","removeChild","getZoom","setZoom","zoom","scrollBy","projectToView","viewToProject","getEventPoint","CanvasView","prevFocus","tempFocus","mousedown","mousemove","mouseup","dragging","mouseDown","pointerEnabled","msPointerEnabled","viewEvents","docEvents","mouseout","nodeName","handleMouseMove","scroll","updateFocus","_handleMouseEvent","downPoint","lastPoint","downItem","overItem","dragItem","clickItem","clickTime","dblClick","called","prevented","fallbacks","doubleclick","wasInView","itemEventsMap","click","mouseenter","mouseleave","itemEvents","hitItems","nativeMove","tool","inView","hitItem","mouse","emitMouseEvent","drag","emitMouseEvents","down","up","cancelable","preventDefault","_handleKeyEvent","character","keyEvent","KeyEvent","sign","_resetState","prevPoint","stopItem","mouseEvent","stopped","MouseEvent","fallback","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","prevFont","measureText","stopPropagation","getTimeStamp","timeStamp","getModifiers","Key","modifiers","metaFixMap","downKey","keyLookup","\t"," ","\b","","Spacebar","Del","Win","Esc","charLookup","tab","space","enter","keyMap","charMap","alt","meta","capsLock","option","mac","getKey","keyIdentifier","keyCode","keydown","altKey","metaKey","ctrlKey","keypress","charCode","keyup","isDown","ToolEvent","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","setCount","_moveCount","_downCount","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","maxDistance","getFixedDistance","setFixedDistance","distance","easings","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","isFunction","_then","_startTime","_keys","_parsedKeys","_parseKeys","_from","_getState","_to","progress","getValue","__add","__subtract","__multiply","_setProperty","onUpdate","startTime","_getProperty","resolved","_resolveValue","_calculate","PaperScript","calculateBinary","Http","request","xhr","async","mimeType","overrideMimeType","responseText","canvases","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","average","negation","mode","srcContext","dstContext","srcCanvas","dstData","SvgElement","svg","xmlns","xlink","attributeNamespace","href","xmlns:xlink","attributes","setAttributeNS","tag","createElementNS","getAttributeNS","SvgStyles","true","false","property","toSVG","fromSVG","exportFilter","getTransform","coordinates","attrs","trans","exportGroup","childNode","_exportSVG","clip-path","exportShape","exporters","embedImages","matchShapes","definitionItem","viewBox","overflow","textContent","applyStyle","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","exportGradient","visibility","svgs","__id","typeId","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","exportSVG","rootSize","allowNull","allowPercent","defaultValue","defaultX","defaultY","convertValue","importGroup","nodes","childNodes","isClip","isDefs","currentStyle","applyAttributes","querySelectorAll","importNode","importPoly","importGradient","scaleToBounds","_scaleToBounds","importers","#document","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","switch","applyTransform","transforms","applyOpacity","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-color","stop-opacity","percent","styles","group","tagName","isElement","nextSibling","importer","onImport","expandShapes","_importSVG","DOMParser","parseFromString","reader","readAsText","importSVG","PlacedSymbol","managers","forceNew","multiplex","parseuri","env","selectColor","createDebug","_len","_key","curr","ms","coerce","format","init","instances","delimiter","newDebug","toNamespace","regexp","stack","disable","skips","enable","plural","msAbs","isPlural","long","fmtLong","fmtShort","Function","local","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","product","upgrades","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","EIO","transport","requestTimeout","protocols","onDrain","probe","onTransportOpen","upgradeLosesBinary","upgrading","freezeTransport","onTransportClose","onupgrade","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","Request","req","sendXhr","pollXhr","setDisableHeaderCheck","setRequestHeader","hasXDR","onreadystatechange","contentType","getResponseHeader","requestsCount","requests","onSuccess","fromError","response","attachEvent","unloadHandler","terminationEvent","arraybuffer","abv","ii","err_cb","bail","proxy","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","counter","checkScalarValue","createByte","encodeCodePoint","readContinuationByte","continuationByte","decodeSymbol","byte1","byteString","ucs2encode","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","mapArrayBufferViews","BlobBuilderConstructor","BlobConstructor","JSONPPolling","rNewline","rEscapedNewline","glob","___eio","script","form","iframe","insertAt","getElementsByTagName","head","iframeId","className","initIframe","action","submit","BrowserWebSocket","NodeWebSocket","MozWebSocket","WebSocketImpl","WS","usingBrowserWebSocket","headers","ws","addEventListeners","rand","deviation"],"mappings":"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","file":"static/js/5.50a2f94d.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/**\n * Module dependencies.\n */\nvar keys = require('./keys');\n\nvar hasBinary = require('has-binary2');\n\nvar sliceBuffer = require('arraybuffer.slice');\n\nvar after = require('after');\n\nvar utf8 = require('./utf8');\n\nvar base64encoder;\n\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\n\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\n\nvar dontSendBlobs = isAndroid || isPhantomJS;\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n  open: 0 // non-ws\n  ,\n  close: 1 // non-ws\n  ,\n  ping: 2,\n  pong: 3,\n  message: 4,\n  upgrade: 5,\n  noop: 6\n};\nvar packetslist = keys(packets);\n/**\n * Premade error packet.\n */\n\nvar err = {\n  type: 'error',\n  data: 'parser error'\n};\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  } // might be an object with { base64: true, data: dataAsBase64String }\n\n\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  } // Sending data as a utf-8 string\n\n\n  var encoded = packets[packet.type]; // data fragment is optional\n\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), {\n      strict: false\n    }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n/**\n * Encode packet helpers for binary types\n */\n\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n  resultBuffer[0] = packets[packet.type];\n\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i + 1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    exports.encodePacket({\n      type: packet.type,\n      data: fr.result\n    }, supportsBinary, true, callback);\n  };\n\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n  return callback(blob);\n}\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\n\nexports.encodeBase64Packet = function (packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n\n    fr.onload = function () {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n\n  message += btoa(b64data);\n  return callback(message);\n};\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  } // String data\n\n\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n\n      if (data === false) {\n        return err;\n      }\n    }\n\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return {\n        type: packetslist[type],\n        data: data.substring(1)\n      };\n    } else {\n      return {\n        type: packetslist[type]\n      };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n\n  return {\n    type: packetslist[type],\n    data: rest\n  };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, {\n      strict: false\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return data;\n}\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\n\nexports.decodeBase64Packet = function (msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n\n  if (!base64encoder) {\n    return {\n      type: type,\n      data: {\n        base64: true,\n        data: msg.substr(1)\n      }\n    };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return {\n    type: type,\n    data: data\n  };\n};\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function (message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(results.join(''));\n  });\n};\n/**\n * Async array map using after\n */\n\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function eachWithIndex(i, el, cb) {\n    each(el, function (error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '',\n      n,\n      msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || length != (n = Number(length))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    } // advance cursor\n\n\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n};\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\n\nexports.encodePayloadAsArrayBuffer = function (packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function (err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function (acc, p) {\n      var len;\n\n      if (typeof p === 'string') {\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n    var resultArray = new Uint8Array(totalLength);\n    var bufferIndex = 0;\n    encodedPackets.forEach(function (p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n\n      if (isString) {\n        var view = new Uint8Array(p.length);\n\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n\n        ab = view.buffer;\n      }\n\n      if (isString) {\n        // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else {\n        // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n\n      resultArray[bufferIndex++] = 255;\n      var view = new Uint8Array(ab);\n\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n    return callback(resultArray.buffer);\n  });\n};\n/**\n * Encode as Blob\n */\n\n\nexports.encodePayloadAsBlob = function (packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(new Blob(results));\n  });\n};\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1;; i++) {\n      if (tailArray[i] === 255) break; // 310 = char length of Number.MAX_VALUE\n\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function (buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return typeof console === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\n\n\nexports.decode = function (qs) {\n  var qry = {};\n  var pairs = qs.split('&');\n\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n\n  return qry;\n};","module.exports = function (a, b) {\n  var fn = function fn() {};\n\n  fn.prototype = b.prototype;\n  a.prototype = new fn();\n  a.prototype.constructor = a;\n};","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return typeof console === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};","/**\n * Module dependencies.\n */\nvar debug = require('debug')('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar binary = require('./binary');\n\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = 4;\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function (obj, callback) {\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\n\nfunction encodeAsString(obj) {\n  // first is type\n  var str = '' + obj.type; // attachments if we have them\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  } // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n\n\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  } // immediately followed by the id\n\n\n  if (null != obj.id) {\n    str += obj.id;\n  } // json data\n\n\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\n\nfunction encodeAsBinary(obj, callback) {\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n    buffers.unshift(pack); // add packet info to beginning of data list\n\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n/**\n * Mix in `Emitter` with Decoder.\n */\n\n\nEmitter(Decoder.prototype);\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function (obj) {\n  var packet;\n\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) {\n      // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow\n\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else {\n      // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) {\n    // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n\n      if (packet) {\n        // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\n\nfunction decodeString(str) {\n  var i = 0; // look up type\n\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  } // look up attachments if type binary\n\n\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n\n    p.attachments = Number(buf);\n  } // look up namespace (if any)\n\n\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  } // look up id\n\n\n  var next = str.charAt(i + 1);\n\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n\n    p.id = Number(p.id);\n  } // look up json data\n\n\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\n\nDecoder.prototype.destroy = function () {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\n\nBinaryReconstructor.prototype.takeBinaryData = function (binData) {\n  this.buffers.push(binData);\n\n  if (this.buffers.length === this.reconPack.attachments) {\n    // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n\n  return null;\n};\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\n\nBinaryReconstructor.prototype.finishedReconstruction = function () {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain; // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n  var xscheme = opts.xscheme; // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n\n  var enablesXDR = opts.enablesXDR; // XMLHttpRequest can be disabled on IE\n\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\n\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) {}\n  }\n};","/**\n * Module dependencies.\n */\nvar parser = require('engine.io-parser');\n\nvar Emitter = require('component-emitter');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Transport;\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport(opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode; // results of ReactNative environment detection\n\n  this.isReactNative = opts.isReactNative; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Transport.prototype);\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n/**\n * Opens the transport.\n *\n * @api public\n */\n\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n/**\n * Closes the transport.\n *\n * @api private\n */\n\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n/**\n * Called upon open\n *\n * @api private\n */\n\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n/**\n * Called with a decoded packet.\n */\n\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon close.\n *\n * @api private\n */\n\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nvar parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\nmodule.exports = function parseuri(str) {\n  var src = str,\n      b = str.indexOf('['),\n      e = str.indexOf(']');\n\n  if (b != -1 && e != -1) {\n    str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n  }\n\n  var m = re.exec(str || ''),\n      uri = {},\n      i = 14;\n\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n\n  if (b != -1 && e != -1) {\n    uri.source = src;\n    uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n    uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n    uri.ipv6uri = true;\n  }\n\n  return uri;\n};","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","module.exports = isBuf;\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function isView(obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n};\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\n\nfunction isBuf(obj) {\n  return withNativeBuffer && Buffer.isBuffer(obj) || withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj));\n}","/**\n * Module dependencies.\n */\nvar eio = require('engine.io-client');\n\nvar Socket = require('./socket');\n\nvar Emitter = require('component-emitter');\n\nvar parser = require('socket.io-parser');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:manager');\n\nvar indexOf = require('indexof');\n\nvar Backoff = require('backo2');\n/**\n * IE6+ hasOwnProperty\n */\n\n\nvar has = Object.prototype.hasOwnProperty;\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n\n  var _parser = opts.parser || parser;\n\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n};\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Manager.prototype);\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\n\nManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false; // emit `open`\n\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  }); // emit `connect_error`\n\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  }); // emit `connect_timeout`\n\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout); // set timer\n\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n  return this;\n};\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\n\nManager.prototype.onopen = function () {\n  debug('open'); // clear old subs\n\n  this.cleanup(); // mark as open\n\n  this.readyState = 'open';\n  this.emit('open'); // add new subs\n\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n/**\n * Called with data.\n *\n * @api private\n */\n\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n  this.close();\n};\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else {\n    // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n  var subsLength = this.subs.length;\n\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n  this.decoder.destroy();\n};\n/**\n * Close the current socket.\n *\n * @api private\n */\n\n\nManager.prototype.close = Manager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts); // check again for the case socket closed in above events\n\n      if (self.skipReconnect) return;\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};","/**\n * Module dependencies\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar XHR = require('./polling-xhr');\n\nvar JSONP = require('./polling-jsonp');\n\nvar websocket = require('./websocket');\n/**\n * Export transports.\n */\n\n\nexports.polling = polling;\nexports.websocket = websocket;\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parseqs = require('parseqs');\n\nvar parser = require('engine.io-parser');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:polling');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Polling;\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\n\nfunction Polling(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(Polling, Transport);\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n  this.readyState = 'pausing';\n\n  function pause() {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n\n  var callback = function callback(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    } // if its a close packet, we close the ongoing requests\n\n\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    } // otherwise bypass onData and handle the message\n\n\n    self.onPacket(packet);\n  }; // decode payload\n\n\n  parser.decodePayload(data, this.socket.binaryType, callback); // if an event did not trigger closing\n\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close() {\n    debug('writing close packet');\n    self.write([{\n      type: 'close'\n    }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  var callbackfn = function callbackfn() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = ''; // cache busting is forced\n\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // avoid port if default for schema\n\n  if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // prepend ? to query\n\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};","/* global Blob File */\n\n/*\n * Module requirements.\n */\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj) || typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n    return true;\n  } // see: https://github.com/Automattic/has-binary/pull/4\n\n\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n    length = 64,\n    map = {},\n    seed = 0,\n    i = 0,\n    prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\n\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\n\n\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\n\n\nfunction yeast() {\n  var now = encode(+new Date());\n  if (now !== prev) return seed = 0, prev = now;\n  return now + '.' + encode(seed++);\n} //\n// Map each character to its index.\n//\n\n\nfor (; i < length; i++) {\n  map[alphabet[i]] = i;\n} //\n// Expose the `yeast`, `encode` and `decode` functions.\n//\n\n\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;","var indexOf = [].indexOf;\n\nmodule.exports = function (arr, obj) {\n  if (indexOf) return arr.indexOf(obj);\n\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n\n  return -1;\n};","/**\n * Module dependencies.\n */\nvar parser = require('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar toArray = require('to-array');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:socket');\n\nvar parseqs = require('parseqs');\n\nvar hasBin = require('has-binary2');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Socket;\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n\n  if (this.io.autoConnect) this.open();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Socket.prototype);\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n  var io = this.io;\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n};\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\n\nSocket.prototype.open = Socket.prototype.connect = function () {\n  if (this.connected) return this;\n  this.subEvents();\n  this.io.open(); // ensure open\n\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress; // event ack callback\n\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting'); // write connect packet if necessary\n\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({\n        type: parser.CONNECT,\n        query: query\n      });\n    } else {\n      this.packet({\n        type: parser.CONNECT\n      });\n    }\n  }\n};\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n\n  this.sendBuffer = [];\n};\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.close = Socket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({\n      type: parser.DISCONNECT\n    });\n  } // remove socket from pool\n\n\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};","/**\n * Module exports.\n */\nmodule.exports = on;\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function destroy() {\n      obj.removeListener(ev, fn);\n    }\n  };\n}","/**\n * Slice reference.\n */\nvar slice = [].slice;\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function (obj, fn) {\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function () {\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  };\n};","parcelRequire = function (e, r, t, n) {\n  var i,\n      o = \"function\" == typeof parcelRequire && parcelRequire,\n      u = \"function\" == typeof require && require;\n\n  function f(t, n) {\n    if (!r[t]) {\n      if (!e[t]) {\n        var i = \"function\" == typeof parcelRequire && parcelRequire;\n        if (!n && i) return i(t, !0);\n        if (o) return o(t, !0);\n        if (u && \"string\" == typeof t) return u(t);\n        var c = new Error(\"Cannot find module '\" + t + \"'\");\n        throw c.code = \"MODULE_NOT_FOUND\", c;\n      }\n\n      p.resolve = function (r) {\n        return e[t][1][r] || r;\n      }, p.cache = {};\n      var l = r[t] = new f.Module(t);\n      e[t][0].call(l.exports, p, l, l.exports, this);\n    }\n\n    return r[t].exports;\n\n    function p(e) {\n      return f(p.resolve(e));\n    }\n  }\n\n  f.isParcelRequire = !0, f.Module = function (e) {\n    this.id = e, this.bundle = f, this.exports = {};\n  }, f.modules = e, f.cache = r, f.parent = o, f.register = function (r, t) {\n    e[r] = [function (e, r) {\n      r.exports = t;\n    }, {}];\n  };\n\n  for (var c = 0; c < t.length; c++) {\n    try {\n      f(t[c]);\n    } catch (e) {\n      i || (i = e);\n    }\n  }\n\n  if (t.length) {\n    var l = f(t[t.length - 1]);\n    \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = l : \"function\" == typeof define && define.amd ? define(function () {\n      return l;\n    }) : n && (this[n] = l);\n  }\n\n  if (parcelRequire = f, i) throw i;\n  return f;\n}({\n  \"EgBh\": [function (require, module, exports) {\n    var e = {};\n    e.useBlobBuilder = function () {\n      try {\n        return new Blob([]), !1;\n      } catch (e) {\n        return !0;\n      }\n    }(), e.useArrayBufferView = !e.useBlobBuilder && function () {\n      try {\n        return 0 === new Blob([new Uint8Array([])]).size;\n      } catch (e) {\n        return !0;\n      }\n    }(), module.exports.binaryFeatures = e;\n    var r = module.exports.BlobBuilder;\n\n    function t() {\n      this._pieces = [], this._parts = [];\n    }\n\n    \"undefined\" != typeof window && (r = module.exports.BlobBuilder = window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder), t.prototype.append = function (e) {\n      \"number\" == typeof e ? this._pieces.push(e) : (this.flush(), this._parts.push(e));\n    }, t.prototype.flush = function () {\n      if (this._pieces.length > 0) {\n        var r = new Uint8Array(this._pieces);\n        e.useArrayBufferView || (r = r.buffer), this._parts.push(r), this._pieces = [];\n      }\n    }, t.prototype.getBuffer = function () {\n      if (this.flush(), e.useBlobBuilder) {\n        for (var t = new r(), i = 0, u = this._parts.length; i < u; i++) {\n          t.append(this._parts[i]);\n        }\n\n        return t.getBlob();\n      }\n\n      return new Blob(this._parts);\n    }, module.exports.BufferBuilder = t;\n  }, {}],\n  \"kdPp\": [function (require, module, exports) {\n    var t = require(\"./bufferbuilder\").BufferBuilder,\n        e = require(\"./bufferbuilder\").binaryFeatures,\n        i = {\n      unpack: function unpack(t) {\n        return new r(t).unpack();\n      },\n      pack: function pack(t) {\n        var e = new n();\n        return e.pack(t), e.getBuffer();\n      }\n    };\n\n    function r(t) {\n      this.index = 0, this.dataBuffer = t, this.dataView = new Uint8Array(this.dataBuffer), this.length = this.dataBuffer.byteLength;\n    }\n\n    function n() {\n      this.bufferBuilder = new t();\n    }\n\n    function u(t) {\n      var e = t.charCodeAt(0);\n      return e <= 2047 ? \"00\" : e <= 65535 ? \"000\" : e <= 2097151 ? \"0000\" : e <= 67108863 ? \"00000\" : \"000000\";\n    }\n\n    function a(t) {\n      return t.length > 600 ? new Blob([t]).size : t.replace(/[^\\u0000-\\u007F]/g, u).length;\n    }\n\n    module.exports = i, r.prototype.unpack = function () {\n      var t,\n          e = this.unpack_uint8();\n      if (e < 128) return e;\n      if ((224 ^ e) < 32) return (224 ^ e) - 32;\n      if ((t = 160 ^ e) <= 15) return this.unpack_raw(t);\n      if ((t = 176 ^ e) <= 15) return this.unpack_string(t);\n      if ((t = 144 ^ e) <= 15) return this.unpack_array(t);\n      if ((t = 128 ^ e) <= 15) return this.unpack_map(t);\n\n      switch (e) {\n        case 192:\n          return null;\n\n        case 193:\n          return;\n\n        case 194:\n          return !1;\n\n        case 195:\n          return !0;\n\n        case 202:\n          return this.unpack_float();\n\n        case 203:\n          return this.unpack_double();\n\n        case 204:\n          return this.unpack_uint8();\n\n        case 205:\n          return this.unpack_uint16();\n\n        case 206:\n          return this.unpack_uint32();\n\n        case 207:\n          return this.unpack_uint64();\n\n        case 208:\n          return this.unpack_int8();\n\n        case 209:\n          return this.unpack_int16();\n\n        case 210:\n          return this.unpack_int32();\n\n        case 211:\n          return this.unpack_int64();\n\n        case 212:\n        case 213:\n        case 214:\n        case 215:\n          return;\n\n        case 216:\n          return t = this.unpack_uint16(), this.unpack_string(t);\n\n        case 217:\n          return t = this.unpack_uint32(), this.unpack_string(t);\n\n        case 218:\n          return t = this.unpack_uint16(), this.unpack_raw(t);\n\n        case 219:\n          return t = this.unpack_uint32(), this.unpack_raw(t);\n\n        case 220:\n          return t = this.unpack_uint16(), this.unpack_array(t);\n\n        case 221:\n          return t = this.unpack_uint32(), this.unpack_array(t);\n\n        case 222:\n          return t = this.unpack_uint16(), this.unpack_map(t);\n\n        case 223:\n          return t = this.unpack_uint32(), this.unpack_map(t);\n      }\n    }, r.prototype.unpack_uint8 = function () {\n      var t = 255 & this.dataView[this.index];\n      return this.index++, t;\n    }, r.prototype.unpack_uint16 = function () {\n      var t = this.read(2),\n          e = 256 * (255 & t[0]) + (255 & t[1]);\n      return this.index += 2, e;\n    }, r.prototype.unpack_uint32 = function () {\n      var t = this.read(4),\n          e = 256 * (256 * (256 * t[0] + t[1]) + t[2]) + t[3];\n      return this.index += 4, e;\n    }, r.prototype.unpack_uint64 = function () {\n      var t = this.read(8),\n          e = 256 * (256 * (256 * (256 * (256 * (256 * (256 * t[0] + t[1]) + t[2]) + t[3]) + t[4]) + t[5]) + t[6]) + t[7];\n      return this.index += 8, e;\n    }, r.prototype.unpack_int8 = function () {\n      var t = this.unpack_uint8();\n      return t < 128 ? t : t - 256;\n    }, r.prototype.unpack_int16 = function () {\n      var t = this.unpack_uint16();\n      return t < 32768 ? t : t - 65536;\n    }, r.prototype.unpack_int32 = function () {\n      var t = this.unpack_uint32();\n      return t < Math.pow(2, 31) ? t : t - Math.pow(2, 32);\n    }, r.prototype.unpack_int64 = function () {\n      var t = this.unpack_uint64();\n      return t < Math.pow(2, 63) ? t : t - Math.pow(2, 64);\n    }, r.prototype.unpack_raw = function (t) {\n      if (this.length < this.index + t) throw new Error(\"BinaryPackFailure: index is out of range \" + this.index + \" \" + t + \" \" + this.length);\n      var e = this.dataBuffer.slice(this.index, this.index + t);\n      return this.index += t, e;\n    }, r.prototype.unpack_string = function (t) {\n      for (var e, i, r = this.read(t), n = 0, u = \"\"; n < t;) {\n        (e = r[n]) < 128 ? (u += String.fromCharCode(e), n++) : (192 ^ e) < 32 ? (i = (192 ^ e) << 6 | 63 & r[n + 1], u += String.fromCharCode(i), n += 2) : (i = (15 & e) << 12 | (63 & r[n + 1]) << 6 | 63 & r[n + 2], u += String.fromCharCode(i), n += 3);\n      }\n\n      return this.index += t, u;\n    }, r.prototype.unpack_array = function (t) {\n      for (var e = new Array(t), i = 0; i < t; i++) {\n        e[i] = this.unpack();\n      }\n\n      return e;\n    }, r.prototype.unpack_map = function (t) {\n      for (var e = {}, i = 0; i < t; i++) {\n        var r = this.unpack(),\n            n = this.unpack();\n        e[r] = n;\n      }\n\n      return e;\n    }, r.prototype.unpack_float = function () {\n      var t = this.unpack_uint32(),\n          e = (t >> 23 & 255) - 127;\n      return (0 === t >> 31 ? 1 : -1) * (8388607 & t | 8388608) * Math.pow(2, e - 23);\n    }, r.prototype.unpack_double = function () {\n      var t = this.unpack_uint32(),\n          e = this.unpack_uint32(),\n          i = (t >> 20 & 2047) - 1023;\n      return (0 === t >> 31 ? 1 : -1) * ((1048575 & t | 1048576) * Math.pow(2, i - 20) + e * Math.pow(2, i - 52));\n    }, r.prototype.read = function (t) {\n      var e = this.index;\n      if (e + t <= this.length) return this.dataView.subarray(e, e + t);\n      throw new Error(\"BinaryPackFailure: read index out of range\");\n    }, n.prototype.getBuffer = function () {\n      return this.bufferBuilder.getBuffer();\n    }, n.prototype.pack = function (t) {\n      var i = typeof t;\n      if (\"string\" === i) this.pack_string(t);else if (\"number\" === i) Math.floor(t) === t ? this.pack_integer(t) : this.pack_double(t);else if (\"boolean\" === i) !0 === t ? this.bufferBuilder.append(195) : !1 === t && this.bufferBuilder.append(194);else if (\"undefined\" === i) this.bufferBuilder.append(192);else {\n        if (\"object\" !== i) throw new Error('Type \"' + i + '\" not yet supported');\n        if (null === t) this.bufferBuilder.append(192);else {\n          var r = t.constructor;\n          if (r == Array) this.pack_array(t);else if (r == Blob || r == File || t instanceof Blob || t instanceof File) this.pack_bin(t);else if (r == ArrayBuffer) e.useArrayBufferView ? this.pack_bin(new Uint8Array(t)) : this.pack_bin(t);else if (\"BYTES_PER_ELEMENT\" in t) e.useArrayBufferView ? this.pack_bin(new Uint8Array(t.buffer)) : this.pack_bin(t.buffer);else if (r == Object || r.toString().startsWith(\"class\")) this.pack_object(t);else if (r == Date) this.pack_string(t.toString());else {\n            if (\"function\" != typeof t.toBinaryPack) throw new Error('Type \"' + r.toString() + '\" not yet supported');\n            this.bufferBuilder.append(t.toBinaryPack());\n          }\n        }\n      }\n      this.bufferBuilder.flush();\n    }, n.prototype.pack_bin = function (t) {\n      var e = t.length || t.byteLength || t.size;\n      if (e <= 15) this.pack_uint8(160 + e);else if (e <= 65535) this.bufferBuilder.append(218), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(219), this.pack_uint32(e);\n      }\n      this.bufferBuilder.append(t);\n    }, n.prototype.pack_string = function (t) {\n      var e = a(t);\n      if (e <= 15) this.pack_uint8(176 + e);else if (e <= 65535) this.bufferBuilder.append(216), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(217), this.pack_uint32(e);\n      }\n      this.bufferBuilder.append(t);\n    }, n.prototype.pack_array = function (t) {\n      var e = t.length;\n      if (e <= 15) this.pack_uint8(144 + e);else if (e <= 65535) this.bufferBuilder.append(220), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(221), this.pack_uint32(e);\n      }\n\n      for (var i = 0; i < e; i++) {\n        this.pack(t[i]);\n      }\n    }, n.prototype.pack_integer = function (t) {\n      if (t >= -32 && t <= 127) this.bufferBuilder.append(255 & t);else if (t >= 0 && t <= 255) this.bufferBuilder.append(204), this.pack_uint8(t);else if (t >= -128 && t <= 127) this.bufferBuilder.append(208), this.pack_int8(t);else if (t >= 0 && t <= 65535) this.bufferBuilder.append(205), this.pack_uint16(t);else if (t >= -32768 && t <= 32767) this.bufferBuilder.append(209), this.pack_int16(t);else if (t >= 0 && t <= 4294967295) this.bufferBuilder.append(206), this.pack_uint32(t);else if (t >= -2147483648 && t <= 2147483647) this.bufferBuilder.append(210), this.pack_int32(t);else if (t >= -0x8000000000000000 && t <= 0x8000000000000000) this.bufferBuilder.append(211), this.pack_int64(t);else {\n        if (!(t >= 0 && t <= 0x10000000000000000)) throw new Error(\"Invalid integer\");\n        this.bufferBuilder.append(207), this.pack_uint64(t);\n      }\n    }, n.prototype.pack_double = function (t) {\n      var e = 0;\n      t < 0 && (e = 1, t = -t);\n      var i = Math.floor(Math.log(t) / Math.LN2),\n          r = t / Math.pow(2, i) - 1,\n          n = Math.floor(r * Math.pow(2, 52)),\n          u = Math.pow(2, 32),\n          a = e << 31 | i + 1023 << 20 | n / u & 1048575,\n          p = n % u;\n      this.bufferBuilder.append(203), this.pack_int32(a), this.pack_int32(p);\n    }, n.prototype.pack_object = function (t) {\n      var e = Object.keys(t).length;\n      if (e <= 15) this.pack_uint8(128 + e);else if (e <= 65535) this.bufferBuilder.append(222), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(223), this.pack_uint32(e);\n      }\n\n      for (var i in t) {\n        t.hasOwnProperty(i) && (this.pack(i), this.pack(t[i]));\n      }\n    }, n.prototype.pack_uint8 = function (t) {\n      this.bufferBuilder.append(t);\n    }, n.prototype.pack_uint16 = function (t) {\n      this.bufferBuilder.append(t >> 8), this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_uint32 = function (t) {\n      var e = 4294967295 & t;\n      this.bufferBuilder.append((4278190080 & e) >>> 24), this.bufferBuilder.append((16711680 & e) >>> 16), this.bufferBuilder.append((65280 & e) >>> 8), this.bufferBuilder.append(255 & e);\n    }, n.prototype.pack_uint64 = function (t) {\n      var e = t / Math.pow(2, 32),\n          i = t % Math.pow(2, 32);\n      this.bufferBuilder.append((4278190080 & e) >>> 24), this.bufferBuilder.append((16711680 & e) >>> 16), this.bufferBuilder.append((65280 & e) >>> 8), this.bufferBuilder.append(255 & e), this.bufferBuilder.append((4278190080 & i) >>> 24), this.bufferBuilder.append((16711680 & i) >>> 16), this.bufferBuilder.append((65280 & i) >>> 8), this.bufferBuilder.append(255 & i);\n    }, n.prototype.pack_int8 = function (t) {\n      this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_int16 = function (t) {\n      this.bufferBuilder.append((65280 & t) >> 8), this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_int32 = function (t) {\n      this.bufferBuilder.append(t >>> 24 & 255), this.bufferBuilder.append((16711680 & t) >>> 16), this.bufferBuilder.append((65280 & t) >>> 8), this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_int64 = function (t) {\n      var e = Math.floor(t / Math.pow(2, 32)),\n          i = t % Math.pow(2, 32);\n      this.bufferBuilder.append((4278190080 & e) >>> 24), this.bufferBuilder.append((16711680 & e) >>> 16), this.bufferBuilder.append((65280 & e) >>> 8), this.bufferBuilder.append(255 & e), this.bufferBuilder.append((4278190080 & i) >>> 24), this.bufferBuilder.append((16711680 & i) >>> 16), this.bufferBuilder.append((65280 & i) >>> 8), this.bufferBuilder.append(255 & i);\n    };\n  }, {\n    \"./bufferbuilder\": \"EgBh\"\n  }],\n  \"iSxC\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e, t, n) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = n, e;\n    }\n\n    function t(e) {\n      return (t = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.extractVersion = o, exports.wrapPeerConnectionEvent = i, exports.disableLog = s, exports.disableWarnings = a, exports.log = u, exports.deprecated = c, exports.detectBrowser = p, exports.compactObject = d, exports.walkStats = l, exports.filterStats = b;\n    var n = !0,\n        r = !0;\n\n    function o(e, t, n) {\n      var r = e.match(t);\n      return r && r.length >= n && parseInt(r[n], 10);\n    }\n\n    function i(e, t, n) {\n      if (e.RTCPeerConnection) {\n        var r = e.RTCPeerConnection.prototype,\n            o = r.addEventListener;\n\n        r.addEventListener = function (e, r) {\n          if (e !== t) return o.apply(this, arguments);\n\n          var i = function i(e) {\n            var t = n(e);\n            t && r(t);\n          };\n\n          return this._eventMap = this._eventMap || {}, this._eventMap[r] = i, o.apply(this, [e, i]);\n        };\n\n        var i = r.removeEventListener;\n        r.removeEventListener = function (e, n) {\n          if (e !== t || !this._eventMap || !this._eventMap[n]) return i.apply(this, arguments);\n          var r = this._eventMap[n];\n          return delete this._eventMap[n], i.apply(this, [e, r]);\n        }, Object.defineProperty(r, \"on\" + t, {\n          get: function get() {\n            return this[\"_on\" + t];\n          },\n          set: function set(e) {\n            this[\"_on\" + t] && (this.removeEventListener(t, this[\"_on\" + t]), delete this[\"_on\" + t]), e && this.addEventListener(t, this[\"_on\" + t] = e);\n          },\n          enumerable: !0,\n          configurable: !0\n        });\n      }\n    }\n\n    function s(e) {\n      return \"boolean\" != typeof e ? new Error(\"Argument type: \" + t(e) + \". Please use a boolean.\") : (n = e, e ? \"adapter.js logging disabled\" : \"adapter.js logging enabled\");\n    }\n\n    function a(e) {\n      return \"boolean\" != typeof e ? new Error(\"Argument type: \" + t(e) + \". Please use a boolean.\") : (r = !e, \"adapter.js deprecation warnings \" + (e ? \"disabled\" : \"enabled\"));\n    }\n\n    function u() {\n      if (\"object\" === (\"undefined\" == typeof window ? \"undefined\" : t(window))) {\n        if (n) return;\n        \"undefined\" != typeof console && \"function\" == typeof console.log && console.log.apply(console, arguments);\n      }\n    }\n\n    function c(e, t) {\n      r && console.warn(e + \" is deprecated, please use \" + t + \" instead.\");\n    }\n\n    function p(e) {\n      var t = e.navigator,\n          n = {\n        browser: null,\n        version: null\n      };\n      if (void 0 === e || !e.navigator) return n.browser = \"Not a browser.\", n;\n      if (t.mozGetUserMedia) n.browser = \"firefox\", n.version = o(t.userAgent, /Firefox\\/(\\d+)\\./, 1);else if (t.webkitGetUserMedia || !1 === e.isSecureContext && e.webkitRTCPeerConnection && !e.RTCIceGatherer) n.browser = \"chrome\", n.version = o(t.userAgent, /Chrom(e|ium)\\/(\\d+)\\./, 2);else if (t.mediaDevices && t.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) n.browser = \"edge\", n.version = o(t.userAgent, /Edge\\/(\\d+).(\\d+)$/, 2);else {\n        if (!e.RTCPeerConnection || !t.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) return n.browser = \"Not a supported browser.\", n;\n        n.browser = \"safari\", n.version = o(t.userAgent, /AppleWebKit\\/(\\d+)\\./, 1), n.supportsUnifiedPlan = e.RTCRtpTransceiver && \"currentDirection\" in e.RTCRtpTransceiver.prototype;\n      }\n      return n;\n    }\n\n    function f(e) {\n      return \"[object Object]\" === Object.prototype.toString.call(e);\n    }\n\n    function d(t) {\n      return f(t) ? Object.keys(t).reduce(function (n, r) {\n        var o = f(t[r]),\n            i = o ? d(t[r]) : t[r],\n            s = o && !Object.keys(i).length;\n        return void 0 === i || s ? n : Object.assign(n, e({}, r, i));\n      }, {}) : t;\n    }\n\n    function l(e, t, n) {\n      t && !n.has(t.id) && (n.set(t.id, t), Object.keys(t).forEach(function (r) {\n        r.endsWith(\"Id\") ? l(e, e.get(t[r]), n) : r.endsWith(\"Ids\") && t[r].forEach(function (t) {\n          l(e, e.get(t), n);\n        });\n      }));\n    }\n\n    function b(e, t, n) {\n      var r = n ? \"outbound-rtp\" : \"inbound-rtp\",\n          o = new Map();\n      if (null === t) return o;\n      var i = [];\n      return e.forEach(function (e) {\n        \"track\" === e.type && e.trackIdentifier === t.id && i.push(e);\n      }), i.forEach(function (t) {\n        e.forEach(function (n) {\n          n.type === r && n.trackId === t.id && l(e, n, o);\n        });\n      }), o;\n    }\n  }, {}],\n  \"s6SN\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetUserMedia = i;\n    var e = t(require(\"../utils.js\"));\n\n    function r() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return r = function r() {\n        return e;\n      }, e;\n    }\n\n    function t(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = r();\n      if (t && t.has(e)) return t.get(e);\n      var o = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(o, i, a) : o[i] = e[i];\n        }\n      }\n\n      return o.default = e, t && t.set(e, o), o;\n    }\n\n    function o(e) {\n      return (o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    var n = e.log;\n\n    function i(r) {\n      var t = r && r.navigator;\n\n      if (t.mediaDevices) {\n        var i = e.detectBrowser(r),\n            a = function a(e) {\n          if (\"object\" !== o(e) || e.mandatory || e.optional) return e;\n          var r = {};\n          return Object.keys(e).forEach(function (t) {\n            if (\"require\" !== t && \"advanced\" !== t && \"mediaSource\" !== t) {\n              var n = \"object\" === o(e[t]) ? e[t] : {\n                ideal: e[t]\n              };\n              void 0 !== n.exact && \"number\" == typeof n.exact && (n.min = n.max = n.exact);\n\n              var i = function i(e, r) {\n                return e ? e + r.charAt(0).toUpperCase() + r.slice(1) : \"deviceId\" === r ? \"sourceId\" : r;\n              };\n\n              if (void 0 !== n.ideal) {\n                r.optional = r.optional || [];\n                var a = {};\n                \"number\" == typeof n.ideal ? (a[i(\"min\", t)] = n.ideal, r.optional.push(a), (a = {})[i(\"max\", t)] = n.ideal, r.optional.push(a)) : (a[i(\"\", t)] = n.ideal, r.optional.push(a));\n              }\n\n              void 0 !== n.exact && \"number\" != typeof n.exact ? (r.mandatory = r.mandatory || {}, r.mandatory[i(\"\", t)] = n.exact) : [\"min\", \"max\"].forEach(function (e) {\n                void 0 !== n[e] && (r.mandatory = r.mandatory || {}, r.mandatory[i(e, t)] = n[e]);\n              });\n            }\n          }), e.advanced && (r.optional = (r.optional || []).concat(e.advanced)), r;\n        },\n            c = function c(e, r) {\n          if (i.version >= 61) return r(e);\n\n          if ((e = JSON.parse(JSON.stringify(e))) && \"object\" === o(e.audio)) {\n            var c = function c(e, r, t) {\n              r in e && !(t in e) && (e[t] = e[r], delete e[r]);\n            };\n\n            c((e = JSON.parse(JSON.stringify(e))).audio, \"autoGainControl\", \"googAutoGainControl\"), c(e.audio, \"noiseSuppression\", \"googNoiseSuppression\"), e.audio = a(e.audio);\n          }\n\n          if (e && \"object\" === o(e.video)) {\n            var d = e.video.facingMode;\n            d = d && (\"object\" === o(d) ? d : {\n              ideal: d\n            });\n            var u,\n                s = i.version < 66;\n            if (d && (\"user\" === d.exact || \"environment\" === d.exact || \"user\" === d.ideal || \"environment\" === d.ideal) && (!t.mediaDevices.getSupportedConstraints || !t.mediaDevices.getSupportedConstraints().facingMode || s)) if (delete e.video.facingMode, \"environment\" === d.exact || \"environment\" === d.ideal ? u = [\"back\", \"rear\"] : \"user\" !== d.exact && \"user\" !== d.ideal || (u = [\"front\"]), u) return t.mediaDevices.enumerateDevices().then(function (t) {\n              var o = (t = t.filter(function (e) {\n                return \"videoinput\" === e.kind;\n              })).find(function (e) {\n                return u.some(function (r) {\n                  return e.label.toLowerCase().includes(r);\n                });\n              });\n              return !o && t.length && u.includes(\"back\") && (o = t[t.length - 1]), o && (e.video.deviceId = d.exact ? {\n                exact: o.deviceId\n              } : {\n                ideal: o.deviceId\n              }), e.video = a(e.video), n(\"chrome: \" + JSON.stringify(e)), r(e);\n            });\n            e.video = a(e.video);\n          }\n\n          return n(\"chrome: \" + JSON.stringify(e)), r(e);\n        },\n            d = function d(e) {\n          return i.version >= 64 ? e : {\n            name: {\n              PermissionDeniedError: \"NotAllowedError\",\n              PermissionDismissedError: \"NotAllowedError\",\n              InvalidStateError: \"NotAllowedError\",\n              DevicesNotFoundError: \"NotFoundError\",\n              ConstraintNotSatisfiedError: \"OverconstrainedError\",\n              TrackStartError: \"NotReadableError\",\n              MediaDeviceFailedDueToShutdown: \"NotAllowedError\",\n              MediaDeviceKillSwitchOn: \"NotAllowedError\",\n              TabCaptureError: \"AbortError\",\n              ScreenCaptureError: \"AbortError\",\n              DeviceCaptureError: \"AbortError\"\n            }[e.name] || e.name,\n            message: e.message,\n            constraint: e.constraint || e.constraintName,\n            toString: function toString() {\n              return this.name + (this.message && \": \") + this.message;\n            }\n          };\n        };\n\n        if (t.getUserMedia = function (e, r, o) {\n          c(e, function (e) {\n            t.webkitGetUserMedia(e, r, function (e) {\n              o && o(d(e));\n            });\n          });\n        }.bind(t), t.mediaDevices.getUserMedia) {\n          var u = t.mediaDevices.getUserMedia.bind(t.mediaDevices);\n\n          t.mediaDevices.getUserMedia = function (e) {\n            return c(e, function (e) {\n              return u(e).then(function (r) {\n                if (e.audio && !r.getAudioTracks().length || e.video && !r.getVideoTracks().length) throw r.getTracks().forEach(function (e) {\n                  e.stop();\n                }), new DOMException(\"\", \"NotFoundError\");\n                return r;\n              }, function (e) {\n                return Promise.reject(d(e));\n              });\n            });\n          };\n        }\n      }\n    }\n  }, {\n    \"../utils.js\": \"iSxC\"\n  }],\n  \"VHa8\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e, i) {\n      e.navigator.mediaDevices && \"getDisplayMedia\" in e.navigator.mediaDevices || e.navigator.mediaDevices && (\"function\" == typeof i ? e.navigator.mediaDevices.getDisplayMedia = function (a) {\n        return i(a).then(function (i) {\n          var t = a.video && a.video.width,\n              o = a.video && a.video.height,\n              d = a.video && a.video.frameRate;\n          return a.video = {\n            mandatory: {\n              chromeMediaSource: \"desktop\",\n              chromeMediaSourceId: i,\n              maxFrameRate: d || 3\n            }\n          }, t && (a.video.mandatory.maxWidth = t), o && (a.video.mandatory.maxHeight = o), e.navigator.mediaDevices.getUserMedia(a);\n        });\n      } : console.error(\"shimGetDisplayMedia: getSourceId argument is not a function\"));\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetDisplayMedia = e;\n  }, {}],\n  \"uI5X\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimMediaStream = a, exports.shimOnTrack = c, exports.shimGetSendersWithDtmf = p, exports.shimGetStats = d, exports.shimSenderReceiverGetStats = h, exports.shimAddTrackRemoveTrackWithNative = f, exports.shimAddTrackRemoveTrack = m, exports.shimPeerConnection = u, exports.fixNegotiationNeeded = l, Object.defineProperty(exports, \"shimGetUserMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return t.shimGetUserMedia;\n      }\n    }), Object.defineProperty(exports, \"shimGetDisplayMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return r.shimGetDisplayMedia;\n      }\n    });\n\n    var e = i(require(\"../utils.js\")),\n        t = require(\"./getusermedia\"),\n        r = require(\"./getdisplaymedia\");\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function i(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = n();\n      if (t && t.has(e)) return t.get(e);\n      var r = {},\n          i = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var o in e) {\n        if (Object.prototype.hasOwnProperty.call(e, o)) {\n          var s = i ? Object.getOwnPropertyDescriptor(e, o) : null;\n          s && (s.get || s.set) ? Object.defineProperty(r, o, s) : r[o] = e[o];\n        }\n      }\n\n      return r.default = e, t && t.set(e, r), r;\n    }\n\n    function o(e, t, r) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: r,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = r, e;\n    }\n\n    function s(e) {\n      return (s = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function a(e) {\n      e.MediaStream = e.MediaStream || e.webkitMediaStream;\n    }\n\n    function c(t) {\n      if (\"object\" !== s(t) || !t.RTCPeerConnection || \"ontrack\" in t.RTCPeerConnection.prototype) e.wrapPeerConnectionEvent(t, \"track\", function (e) {\n        return e.transceiver || Object.defineProperty(e, \"transceiver\", {\n          value: {\n            receiver: e.receiver\n          }\n        }), e;\n      });else {\n        Object.defineProperty(t.RTCPeerConnection.prototype, \"ontrack\", {\n          get: function get() {\n            return this._ontrack;\n          },\n          set: function set(e) {\n            this._ontrack && this.removeEventListener(\"track\", this._ontrack), this.addEventListener(\"track\", this._ontrack = e);\n          },\n          enumerable: !0,\n          configurable: !0\n        });\n        var r = t.RTCPeerConnection.prototype.setRemoteDescription;\n\n        t.RTCPeerConnection.prototype.setRemoteDescription = function () {\n          var e = this;\n          return this._ontrackpoly || (this._ontrackpoly = function (r) {\n            r.stream.addEventListener(\"addtrack\", function (n) {\n              var i;\n              i = t.RTCPeerConnection.prototype.getReceivers ? e.getReceivers().find(function (e) {\n                return e.track && e.track.id === n.track.id;\n              }) : {\n                track: n.track\n              };\n              var o = new Event(\"track\");\n              o.track = n.track, o.receiver = i, o.transceiver = {\n                receiver: i\n              }, o.streams = [r.stream], e.dispatchEvent(o);\n            }), r.stream.getTracks().forEach(function (n) {\n              var i;\n              i = t.RTCPeerConnection.prototype.getReceivers ? e.getReceivers().find(function (e) {\n                return e.track && e.track.id === n.id;\n              }) : {\n                track: n\n              };\n              var o = new Event(\"track\");\n              o.track = n, o.receiver = i, o.transceiver = {\n                receiver: i\n              }, o.streams = [r.stream], e.dispatchEvent(o);\n            });\n          }, this.addEventListener(\"addstream\", this._ontrackpoly)), r.apply(this, arguments);\n        };\n      }\n    }\n\n    function p(e) {\n      if (\"object\" === s(e) && e.RTCPeerConnection && !(\"getSenders\" in e.RTCPeerConnection.prototype) && \"createDTMFSender\" in e.RTCPeerConnection.prototype) {\n        var t = function t(e, _t) {\n          return {\n            track: _t,\n\n            get dtmf() {\n              return void 0 === this._dtmf && (\"audio\" === _t.kind ? this._dtmf = e.createDTMFSender(_t) : this._dtmf = null), this._dtmf;\n            },\n\n            _pc: e\n          };\n        };\n\n        if (!e.RTCPeerConnection.prototype.getSenders) {\n          e.RTCPeerConnection.prototype.getSenders = function () {\n            return this._senders = this._senders || [], this._senders.slice();\n          };\n\n          var r = e.RTCPeerConnection.prototype.addTrack;\n\n          e.RTCPeerConnection.prototype.addTrack = function (e, n) {\n            var i = r.apply(this, arguments);\n            return i || (i = t(this, e), this._senders.push(i)), i;\n          };\n\n          var n = e.RTCPeerConnection.prototype.removeTrack;\n\n          e.RTCPeerConnection.prototype.removeTrack = function (e) {\n            n.apply(this, arguments);\n\n            var t = this._senders.indexOf(e);\n\n            -1 !== t && this._senders.splice(t, 1);\n          };\n        }\n\n        var i = e.RTCPeerConnection.prototype.addStream;\n\n        e.RTCPeerConnection.prototype.addStream = function (e) {\n          var r = this;\n          this._senders = this._senders || [], i.apply(this, [e]), e.getTracks().forEach(function (e) {\n            r._senders.push(t(r, e));\n          });\n        };\n\n        var o = e.RTCPeerConnection.prototype.removeStream;\n\n        e.RTCPeerConnection.prototype.removeStream = function (e) {\n          var t = this;\n          this._senders = this._senders || [], o.apply(this, [e]), e.getTracks().forEach(function (e) {\n            var r = t._senders.find(function (t) {\n              return t.track === e;\n            });\n\n            r && t._senders.splice(t._senders.indexOf(r), 1);\n          });\n        };\n      } else if (\"object\" === s(e) && e.RTCPeerConnection && \"getSenders\" in e.RTCPeerConnection.prototype && \"createDTMFSender\" in e.RTCPeerConnection.prototype && e.RTCRtpSender && !(\"dtmf\" in e.RTCRtpSender.prototype)) {\n        var a = e.RTCPeerConnection.prototype.getSenders;\n        e.RTCPeerConnection.prototype.getSenders = function () {\n          var e = this,\n              t = a.apply(this, []);\n          return t.forEach(function (t) {\n            return t._pc = e;\n          }), t;\n        }, Object.defineProperty(e.RTCRtpSender.prototype, \"dtmf\", {\n          get: function get() {\n            return void 0 === this._dtmf && (\"audio\" === this.track.kind ? this._dtmf = this._pc.createDTMFSender(this.track) : this._dtmf = null), this._dtmf;\n          }\n        });\n      }\n    }\n\n    function d(e) {\n      if (e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.getStats;\n\n        e.RTCPeerConnection.prototype.getStats = function () {\n          var e = this,\n              _arguments = Array.prototype.slice.call(arguments),\n              r = _arguments[0],\n              n = _arguments[1],\n              i = _arguments[2];\n\n          if (arguments.length > 0 && \"function\" == typeof r) return t.apply(this, arguments);\n          if (0 === t.length && (0 === arguments.length || \"function\" != typeof r)) return t.apply(this, []);\n\n          var o = function o(e) {\n            var t = {};\n            return e.result().forEach(function (e) {\n              var r = {\n                id: e.id,\n                timestamp: e.timestamp,\n                type: {\n                  localcandidate: \"local-candidate\",\n                  remotecandidate: \"remote-candidate\"\n                }[e.type] || e.type\n              };\n              e.names().forEach(function (t) {\n                r[t] = e.stat(t);\n              }), t[r.id] = r;\n            }), t;\n          },\n              s = function s(e) {\n            return new Map(Object.keys(e).map(function (t) {\n              return [t, e[t]];\n            }));\n          };\n\n          if (arguments.length >= 2) {\n            return t.apply(this, [function (e) {\n              n(s(o(e)));\n            }, r]);\n          }\n\n          return new Promise(function (r, n) {\n            t.apply(e, [function (e) {\n              r(s(o(e)));\n            }, n]);\n          }).then(n, i);\n        };\n      }\n    }\n\n    function h(t) {\n      if (\"object\" === s(t) && t.RTCPeerConnection && t.RTCRtpSender && t.RTCRtpReceiver) {\n        if (!(\"getStats\" in t.RTCRtpSender.prototype)) {\n          var r = t.RTCPeerConnection.prototype.getSenders;\n          r && (t.RTCPeerConnection.prototype.getSenders = function () {\n            var e = this,\n                t = r.apply(this, []);\n            return t.forEach(function (t) {\n              return t._pc = e;\n            }), t;\n          });\n          var n = t.RTCPeerConnection.prototype.addTrack;\n          n && (t.RTCPeerConnection.prototype.addTrack = function () {\n            var e = n.apply(this, arguments);\n            return e._pc = this, e;\n          }), t.RTCRtpSender.prototype.getStats = function () {\n            var t = this;\n            return this._pc.getStats().then(function (r) {\n              return e.filterStats(r, t.track, !0);\n            });\n          };\n        }\n\n        if (!(\"getStats\" in t.RTCRtpReceiver.prototype)) {\n          var i = t.RTCPeerConnection.prototype.getReceivers;\n          i && (t.RTCPeerConnection.prototype.getReceivers = function () {\n            var e = this,\n                t = i.apply(this, []);\n            return t.forEach(function (t) {\n              return t._pc = e;\n            }), t;\n          }), e.wrapPeerConnectionEvent(t, \"track\", function (e) {\n            return e.receiver._pc = e.srcElement, e;\n          }), t.RTCRtpReceiver.prototype.getStats = function () {\n            var t = this;\n            return this._pc.getStats().then(function (r) {\n              return e.filterStats(r, t.track, !1);\n            });\n          };\n        }\n\n        if (\"getStats\" in t.RTCRtpSender.prototype && \"getStats\" in t.RTCRtpReceiver.prototype) {\n          var o = t.RTCPeerConnection.prototype.getStats;\n\n          t.RTCPeerConnection.prototype.getStats = function () {\n            if (arguments.length > 0 && arguments[0] instanceof t.MediaStreamTrack) {\n              var e,\n                  r,\n                  n,\n                  i = arguments[0];\n              return this.getSenders().forEach(function (t) {\n                t.track === i && (e ? n = !0 : e = t);\n              }), this.getReceivers().forEach(function (e) {\n                return e.track === i && (r ? n = !0 : r = e), e.track === i;\n              }), n || e && r ? Promise.reject(new DOMException(\"There are more than one sender or receiver for the track.\", \"InvalidAccessError\")) : e ? e.getStats() : r ? r.getStats() : Promise.reject(new DOMException(\"There is no sender or receiver for the track.\", \"InvalidAccessError\"));\n            }\n\n            return o.apply(this, arguments);\n          };\n        }\n      }\n    }\n\n    function f(e) {\n      e.RTCPeerConnection.prototype.getLocalStreams = function () {\n        var e = this;\n        return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, Object.keys(this._shimmedLocalStreams).map(function (t) {\n          return e._shimmedLocalStreams[t][0];\n        });\n      };\n\n      var t = e.RTCPeerConnection.prototype.addTrack;\n\n      e.RTCPeerConnection.prototype.addTrack = function (e, r) {\n        if (!r) return t.apply(this, arguments);\n        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n        var n = t.apply(this, arguments);\n        return this._shimmedLocalStreams[r.id] ? -1 === this._shimmedLocalStreams[r.id].indexOf(n) && this._shimmedLocalStreams[r.id].push(n) : this._shimmedLocalStreams[r.id] = [r, n], n;\n      };\n\n      var r = e.RTCPeerConnection.prototype.addStream;\n\n      e.RTCPeerConnection.prototype.addStream = function (e) {\n        var t = this;\n        this._shimmedLocalStreams = this._shimmedLocalStreams || {}, e.getTracks().forEach(function (e) {\n          if (t.getSenders().find(function (t) {\n            return t.track === e;\n          })) throw new DOMException(\"Track already exists.\", \"InvalidAccessError\");\n        });\n        var n = this.getSenders();\n        r.apply(this, arguments);\n        var i = this.getSenders().filter(function (e) {\n          return -1 === n.indexOf(e);\n        });\n        this._shimmedLocalStreams[e.id] = [e].concat(i);\n      };\n\n      var n = e.RTCPeerConnection.prototype.removeStream;\n\n      e.RTCPeerConnection.prototype.removeStream = function (e) {\n        return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, delete this._shimmedLocalStreams[e.id], n.apply(this, arguments);\n      };\n\n      var i = e.RTCPeerConnection.prototype.removeTrack;\n\n      e.RTCPeerConnection.prototype.removeTrack = function (e) {\n        var t = this;\n        return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, e && Object.keys(this._shimmedLocalStreams).forEach(function (r) {\n          var n = t._shimmedLocalStreams[r].indexOf(e);\n\n          -1 !== n && t._shimmedLocalStreams[r].splice(n, 1), 1 === t._shimmedLocalStreams[r].length && delete t._shimmedLocalStreams[r];\n        }), i.apply(this, arguments);\n      };\n    }\n\n    function m(t) {\n      if (t.RTCPeerConnection) {\n        var r = e.detectBrowser(t);\n        if (t.RTCPeerConnection.prototype.addTrack && r.version >= 65) return f(t);\n        var n = t.RTCPeerConnection.prototype.getLocalStreams;\n\n        t.RTCPeerConnection.prototype.getLocalStreams = function () {\n          var e = this,\n              t = n.apply(this);\n          return this._reverseStreams = this._reverseStreams || {}, t.map(function (t) {\n            return e._reverseStreams[t.id];\n          });\n        };\n\n        var i = t.RTCPeerConnection.prototype.addStream;\n\n        t.RTCPeerConnection.prototype.addStream = function (e) {\n          var r = this;\n\n          if (this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}, e.getTracks().forEach(function (e) {\n            if (r.getSenders().find(function (t) {\n              return t.track === e;\n            })) throw new DOMException(\"Track already exists.\", \"InvalidAccessError\");\n          }), !this._reverseStreams[e.id]) {\n            var n = new t.MediaStream(e.getTracks());\n            this._streams[e.id] = n, this._reverseStreams[n.id] = e, e = n;\n          }\n\n          i.apply(this, [e]);\n        };\n\n        var s = t.RTCPeerConnection.prototype.removeStream;\n        t.RTCPeerConnection.prototype.removeStream = function (e) {\n          this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}, s.apply(this, [this._streams[e.id] || e]), delete this._reverseStreams[this._streams[e.id] ? this._streams[e.id].id : e.id], delete this._streams[e.id];\n        }, t.RTCPeerConnection.prototype.addTrack = function (e, r) {\n          var n = this;\n          if (\"closed\" === this.signalingState) throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\", \"InvalidStateError\");\n          var i = [].slice.call(arguments, 1);\n          if (1 !== i.length || !i[0].getTracks().find(function (t) {\n            return t === e;\n          })) throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\", \"NotSupportedError\");\n          if (this.getSenders().find(function (t) {\n            return t.track === e;\n          })) throw new DOMException(\"Track already exists.\", \"InvalidAccessError\");\n          this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {};\n          var o = this._streams[r.id];\n          if (o) o.addTrack(e), Promise.resolve().then(function () {\n            n.dispatchEvent(new Event(\"negotiationneeded\"));\n          });else {\n            var s = new t.MediaStream([e]);\n            this._streams[r.id] = s, this._reverseStreams[s.id] = r, this.addStream(s);\n          }\n          return this.getSenders().find(function (t) {\n            return t.track === e;\n          });\n        }, [\"createOffer\", \"createAnswer\"].forEach(function (e) {\n          var r = t.RTCPeerConnection.prototype[e],\n              n = o({}, e, function () {\n            var e = this,\n                t = arguments;\n            return arguments.length && \"function\" == typeof arguments[0] ? r.apply(this, [function (r) {\n              var n = p(e, r);\n              t[0].apply(null, [n]);\n            }, function (e) {\n              t[1] && t[1].apply(null, e);\n            }, arguments[2]]) : r.apply(this, arguments).then(function (t) {\n              return p(e, t);\n            });\n          });\n          t.RTCPeerConnection.prototype[e] = n[e];\n        });\n        var a = t.RTCPeerConnection.prototype.setLocalDescription;\n\n        t.RTCPeerConnection.prototype.setLocalDescription = function () {\n          return arguments.length && arguments[0].type ? (arguments[0] = (e = this, t = arguments[0], r = t.sdp, Object.keys(e._reverseStreams || []).forEach(function (t) {\n            var n = e._reverseStreams[t],\n                i = e._streams[n.id];\n            r = r.replace(new RegExp(n.id, \"g\"), i.id);\n          }), new RTCSessionDescription({\n            type: t.type,\n            sdp: r\n          })), a.apply(this, arguments)) : a.apply(this, arguments);\n          var e, t, r;\n        };\n\n        var c = Object.getOwnPropertyDescriptor(t.RTCPeerConnection.prototype, \"localDescription\");\n        Object.defineProperty(t.RTCPeerConnection.prototype, \"localDescription\", {\n          get: function get() {\n            var e = c.get.apply(this);\n            return \"\" === e.type ? e : p(this, e);\n          }\n        }), t.RTCPeerConnection.prototype.removeTrack = function (e) {\n          var t,\n              r = this;\n          if (\"closed\" === this.signalingState) throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\", \"InvalidStateError\");\n          if (!e._pc) throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\", \"TypeError\");\n          if (!(e._pc === this)) throw new DOMException(\"Sender was not created by this connection.\", \"InvalidAccessError\");\n          this._streams = this._streams || {}, Object.keys(this._streams).forEach(function (n) {\n            r._streams[n].getTracks().find(function (t) {\n              return e.track === t;\n            }) && (t = r._streams[n]);\n          }), t && (1 === t.getTracks().length ? this.removeStream(this._reverseStreams[t.id]) : t.removeTrack(e.track), this.dispatchEvent(new Event(\"negotiationneeded\")));\n        };\n      }\n\n      function p(e, t) {\n        var r = t.sdp;\n        return Object.keys(e._reverseStreams || []).forEach(function (t) {\n          var n = e._reverseStreams[t],\n              i = e._streams[n.id];\n          r = r.replace(new RegExp(i.id, \"g\"), n.id);\n        }), new RTCSessionDescription({\n          type: t.type,\n          sdp: r\n        });\n      }\n    }\n\n    function u(t) {\n      var r = e.detectBrowser(t);\n\n      if (!t.RTCPeerConnection && t.webkitRTCPeerConnection && (t.RTCPeerConnection = t.webkitRTCPeerConnection), t.RTCPeerConnection) {\n        r.version < 53 && [\"setLocalDescription\", \"setRemoteDescription\", \"addIceCandidate\"].forEach(function (e) {\n          var r = t.RTCPeerConnection.prototype[e],\n              n = o({}, e, function () {\n            return arguments[0] = new (\"addIceCandidate\" === e ? t.RTCIceCandidate : t.RTCSessionDescription)(arguments[0]), r.apply(this, arguments);\n          });\n          t.RTCPeerConnection.prototype[e] = n[e];\n        });\n        var n = t.RTCPeerConnection.prototype.addIceCandidate;\n\n        t.RTCPeerConnection.prototype.addIceCandidate = function () {\n          return arguments[0] ? r.version < 78 && arguments[0] && \"\" === arguments[0].candidate ? Promise.resolve() : n.apply(this, arguments) : (arguments[1] && arguments[1].apply(null), Promise.resolve());\n        };\n      }\n    }\n\n    function l(t) {\n      e.wrapPeerConnectionEvent(t, \"negotiationneeded\", function (e) {\n        if (\"stable\" === e.target.signalingState) return e;\n      });\n    }\n  }, {\n    \"../utils.js\": \"iSxC\",\n    \"./getusermedia\": \"s6SN\",\n    \"./getdisplaymedia\": \"VHa8\"\n  }],\n  \"NZ1C\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.filterIceServers = n;\n    var r = t(require(\"../utils\"));\n\n    function e() {\n      if (\"function\" != typeof WeakMap) return null;\n      var r = new WeakMap();\n      return e = function e() {\n        return r;\n      }, r;\n    }\n\n    function t(r) {\n      if (r && r.__esModule) return r;\n      if (null === r || \"object\" != typeof r && \"function\" != typeof r) return {\n        default: r\n      };\n      var t = e();\n      if (t && t.has(r)) return t.get(r);\n      var n = {},\n          u = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in r) {\n        if (Object.prototype.hasOwnProperty.call(r, i)) {\n          var f = u ? Object.getOwnPropertyDescriptor(r, i) : null;\n          f && (f.get || f.set) ? Object.defineProperty(n, i, f) : n[i] = r[i];\n        }\n      }\n\n      return n.default = r, t && t.set(r, n), n;\n    }\n\n    function n(e, t) {\n      var n = !1;\n      return (e = JSON.parse(JSON.stringify(e))).filter(function (e) {\n        if (e && (e.urls || e.url)) {\n          var t = e.urls || e.url;\n          e.url && !e.urls && r.deprecated(\"RTCIceServer.url\", \"RTCIceServer.urls\");\n          var u = \"string\" == typeof t;\n          return u && (t = [t]), t = t.filter(function (r) {\n            if (0 === r.indexOf(\"stun:\")) return !1;\n            var e = r.startsWith(\"turn\") && !r.startsWith(\"turn:[\") && r.includes(\"transport=udp\");\n            return e && !n ? (n = !0, !0) : e && !n;\n          }), delete e.url, e.urls = u ? t[0] : t, !!t.length;\n        }\n      });\n    }\n  }, {\n    \"../utils\": \"iSxC\"\n  }],\n  \"YHvh\": [function (require, module, exports) {\n    \"use strict\";\n\n    var r = {\n      generateIdentifier: function generateIdentifier() {\n        return Math.random().toString(36).substr(2, 10);\n      }\n    };\n    r.localCName = r.generateIdentifier(), r.splitLines = function (r) {\n      return r.trim().split(\"\\n\").map(function (r) {\n        return r.trim();\n      });\n    }, r.splitSections = function (r) {\n      return r.split(\"\\nm=\").map(function (r, e) {\n        return (e > 0 ? \"m=\" + r : r).trim() + \"\\r\\n\";\n      });\n    }, r.getDescription = function (e) {\n      var t = r.splitSections(e);\n      return t && t[0];\n    }, r.getMediaSections = function (e) {\n      var t = r.splitSections(e);\n      return t.shift(), t;\n    }, r.matchPrefix = function (e, t) {\n      return r.splitLines(e).filter(function (r) {\n        return 0 === r.indexOf(t);\n      });\n    }, r.parseCandidate = function (r) {\n      for (var e, t = {\n        foundation: (e = 0 === r.indexOf(\"a=candidate:\") ? r.substring(12).split(\" \") : r.substring(10).split(\" \"))[0],\n        component: parseInt(e[1], 10),\n        protocol: e[2].toLowerCase(),\n        priority: parseInt(e[3], 10),\n        ip: e[4],\n        address: e[4],\n        port: parseInt(e[5], 10),\n        type: e[7]\n      }, n = 8; n < e.length; n += 2) {\n        switch (e[n]) {\n          case \"raddr\":\n            t.relatedAddress = e[n + 1];\n            break;\n\n          case \"rport\":\n            t.relatedPort = parseInt(e[n + 1], 10);\n            break;\n\n          case \"tcptype\":\n            t.tcpType = e[n + 1];\n            break;\n\n          case \"ufrag\":\n            t.ufrag = e[n + 1], t.usernameFragment = e[n + 1];\n            break;\n\n          default:\n            t[e[n]] = e[n + 1];\n        }\n      }\n\n      return t;\n    }, r.writeCandidate = function (r) {\n      var e = [];\n      e.push(r.foundation), e.push(r.component), e.push(r.protocol.toUpperCase()), e.push(r.priority), e.push(r.address || r.ip), e.push(r.port);\n      var t = r.type;\n      return e.push(\"typ\"), e.push(t), \"host\" !== t && r.relatedAddress && r.relatedPort && (e.push(\"raddr\"), e.push(r.relatedAddress), e.push(\"rport\"), e.push(r.relatedPort)), r.tcpType && \"tcp\" === r.protocol.toLowerCase() && (e.push(\"tcptype\"), e.push(r.tcpType)), (r.usernameFragment || r.ufrag) && (e.push(\"ufrag\"), e.push(r.usernameFragment || r.ufrag)), \"candidate:\" + e.join(\" \");\n    }, r.parseIceOptions = function (r) {\n      return r.substr(14).split(\" \");\n    }, r.parseRtpMap = function (r) {\n      var e = r.substr(9).split(\" \"),\n          t = {\n        payloadType: parseInt(e.shift(), 10)\n      };\n      return e = e[0].split(\"/\"), t.name = e[0], t.clockRate = parseInt(e[1], 10), t.channels = 3 === e.length ? parseInt(e[2], 10) : 1, t.numChannels = t.channels, t;\n    }, r.writeRtpMap = function (r) {\n      var e = r.payloadType;\n      void 0 !== r.preferredPayloadType && (e = r.preferredPayloadType);\n      var t = r.channels || r.numChannels || 1;\n      return \"a=rtpmap:\" + e + \" \" + r.name + \"/\" + r.clockRate + (1 !== t ? \"/\" + t : \"\") + \"\\r\\n\";\n    }, r.parseExtmap = function (r) {\n      var e = r.substr(9).split(\" \");\n      return {\n        id: parseInt(e[0], 10),\n        direction: e[0].indexOf(\"/\") > 0 ? e[0].split(\"/\")[1] : \"sendrecv\",\n        uri: e[1]\n      };\n    }, r.writeExtmap = function (r) {\n      return \"a=extmap:\" + (r.id || r.preferredId) + (r.direction && \"sendrecv\" !== r.direction ? \"/\" + r.direction : \"\") + \" \" + r.uri + \"\\r\\n\";\n    }, r.parseFmtp = function (r) {\n      for (var e, t = {}, n = r.substr(r.indexOf(\" \") + 1).split(\";\"), a = 0; a < n.length; a++) {\n        t[(e = n[a].trim().split(\"=\"))[0].trim()] = e[1];\n      }\n\n      return t;\n    }, r.writeFmtp = function (r) {\n      var e = \"\",\n          t = r.payloadType;\n\n      if (void 0 !== r.preferredPayloadType && (t = r.preferredPayloadType), r.parameters && Object.keys(r.parameters).length) {\n        var n = [];\n        Object.keys(r.parameters).forEach(function (e) {\n          r.parameters[e] ? n.push(e + \"=\" + r.parameters[e]) : n.push(e);\n        }), e += \"a=fmtp:\" + t + \" \" + n.join(\";\") + \"\\r\\n\";\n      }\n\n      return e;\n    }, r.parseRtcpFb = function (r) {\n      var e = r.substr(r.indexOf(\" \") + 1).split(\" \");\n      return {\n        type: e.shift(),\n        parameter: e.join(\" \")\n      };\n    }, r.writeRtcpFb = function (r) {\n      var e = \"\",\n          t = r.payloadType;\n      return void 0 !== r.preferredPayloadType && (t = r.preferredPayloadType), r.rtcpFeedback && r.rtcpFeedback.length && r.rtcpFeedback.forEach(function (r) {\n        e += \"a=rtcp-fb:\" + t + \" \" + r.type + (r.parameter && r.parameter.length ? \" \" + r.parameter : \"\") + \"\\r\\n\";\n      }), e;\n    }, r.parseSsrcMedia = function (r) {\n      var e = r.indexOf(\" \"),\n          t = {\n        ssrc: parseInt(r.substr(7, e - 7), 10)\n      },\n          n = r.indexOf(\":\", e);\n      return n > -1 ? (t.attribute = r.substr(e + 1, n - e - 1), t.value = r.substr(n + 1)) : t.attribute = r.substr(e + 1), t;\n    }, r.parseSsrcGroup = function (r) {\n      var e = r.substr(13).split(\" \");\n      return {\n        semantics: e.shift(),\n        ssrcs: e.map(function (r) {\n          return parseInt(r, 10);\n        })\n      };\n    }, r.getMid = function (e) {\n      var t = r.matchPrefix(e, \"a=mid:\")[0];\n      if (t) return t.substr(6);\n    }, r.parseFingerprint = function (r) {\n      var e = r.substr(14).split(\" \");\n      return {\n        algorithm: e[0].toLowerCase(),\n        value: e[1]\n      };\n    }, r.getDtlsParameters = function (e, t) {\n      return {\n        role: \"auto\",\n        fingerprints: r.matchPrefix(e + t, \"a=fingerprint:\").map(r.parseFingerprint)\n      };\n    }, r.writeDtlsParameters = function (r, e) {\n      var t = \"a=setup:\" + e + \"\\r\\n\";\n      return r.fingerprints.forEach(function (r) {\n        t += \"a=fingerprint:\" + r.algorithm + \" \" + r.value + \"\\r\\n\";\n      }), t;\n    }, r.getIceParameters = function (e, t) {\n      var n = r.splitLines(e);\n      return {\n        usernameFragment: (n = n.concat(r.splitLines(t))).filter(function (r) {\n          return 0 === r.indexOf(\"a=ice-ufrag:\");\n        })[0].substr(12),\n        password: n.filter(function (r) {\n          return 0 === r.indexOf(\"a=ice-pwd:\");\n        })[0].substr(10)\n      };\n    }, r.writeIceParameters = function (r) {\n      return \"a=ice-ufrag:\" + r.usernameFragment + \"\\r\\na=ice-pwd:\" + r.password + \"\\r\\n\";\n    }, r.parseRtpParameters = function (e) {\n      for (var t = {\n        codecs: [],\n        headerExtensions: [],\n        fecMechanisms: [],\n        rtcp: []\n      }, n = r.splitLines(e)[0].split(\" \"), a = 3; a < n.length; a++) {\n        var s = n[a],\n            i = r.matchPrefix(e, \"a=rtpmap:\" + s + \" \")[0];\n\n        if (i) {\n          var p = r.parseRtpMap(i),\n              c = r.matchPrefix(e, \"a=fmtp:\" + s + \" \");\n\n          switch (p.parameters = c.length ? r.parseFmtp(c[0]) : {}, p.rtcpFeedback = r.matchPrefix(e, \"a=rtcp-fb:\" + s + \" \").map(r.parseRtcpFb), t.codecs.push(p), p.name.toUpperCase()) {\n            case \"RED\":\n            case \"ULPFEC\":\n              t.fecMechanisms.push(p.name.toUpperCase());\n          }\n        }\n      }\n\n      return r.matchPrefix(e, \"a=extmap:\").forEach(function (e) {\n        t.headerExtensions.push(r.parseExtmap(e));\n      }), t;\n    }, r.writeRtpDescription = function (e, t) {\n      var n = \"\";\n      n += \"m=\" + e + \" \", n += t.codecs.length > 0 ? \"9\" : \"0\", n += \" UDP/TLS/RTP/SAVPF \", n += t.codecs.map(function (r) {\n        return void 0 !== r.preferredPayloadType ? r.preferredPayloadType : r.payloadType;\n      }).join(\" \") + \"\\r\\n\", n += \"c=IN IP4 0.0.0.0\\r\\n\", n += \"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\", t.codecs.forEach(function (e) {\n        n += r.writeRtpMap(e), n += r.writeFmtp(e), n += r.writeRtcpFb(e);\n      });\n      var a = 0;\n      return t.codecs.forEach(function (r) {\n        r.maxptime > a && (a = r.maxptime);\n      }), a > 0 && (n += \"a=maxptime:\" + a + \"\\r\\n\"), n += \"a=rtcp-mux\\r\\n\", t.headerExtensions && t.headerExtensions.forEach(function (e) {\n        n += r.writeExtmap(e);\n      }), n;\n    }, r.parseRtpEncodingParameters = function (e) {\n      var t,\n          n = [],\n          a = r.parseRtpParameters(e),\n          s = -1 !== a.fecMechanisms.indexOf(\"RED\"),\n          i = -1 !== a.fecMechanisms.indexOf(\"ULPFEC\"),\n          p = r.matchPrefix(e, \"a=ssrc:\").map(function (e) {\n        return r.parseSsrcMedia(e);\n      }).filter(function (r) {\n        return \"cname\" === r.attribute;\n      }),\n          c = p.length > 0 && p[0].ssrc,\n          o = r.matchPrefix(e, \"a=ssrc-group:FID\").map(function (r) {\n        return r.substr(17).split(\" \").map(function (r) {\n          return parseInt(r, 10);\n        });\n      });\n      o.length > 0 && o[0].length > 1 && o[0][0] === c && (t = o[0][1]), a.codecs.forEach(function (r) {\n        if (\"RTX\" === r.name.toUpperCase() && r.parameters.apt) {\n          var e = {\n            ssrc: c,\n            codecPayloadType: parseInt(r.parameters.apt, 10)\n          };\n          c && t && (e.rtx = {\n            ssrc: t\n          }), n.push(e), s && ((e = JSON.parse(JSON.stringify(e))).fec = {\n            ssrc: c,\n            mechanism: i ? \"red+ulpfec\" : \"red\"\n          }, n.push(e));\n        }\n      }), 0 === n.length && c && n.push({\n        ssrc: c\n      });\n      var u = r.matchPrefix(e, \"b=\");\n      return u.length && (u = 0 === u[0].indexOf(\"b=TIAS:\") ? parseInt(u[0].substr(7), 10) : 0 === u[0].indexOf(\"b=AS:\") ? 1e3 * parseInt(u[0].substr(5), 10) * .95 - 16e3 : void 0, n.forEach(function (r) {\n        r.maxBitrate = u;\n      })), n;\n    }, r.parseRtcpParameters = function (e) {\n      var t = {},\n          n = r.matchPrefix(e, \"a=ssrc:\").map(function (e) {\n        return r.parseSsrcMedia(e);\n      }).filter(function (r) {\n        return \"cname\" === r.attribute;\n      })[0];\n      n && (t.cname = n.value, t.ssrc = n.ssrc);\n      var a = r.matchPrefix(e, \"a=rtcp-rsize\");\n      t.reducedSize = a.length > 0, t.compound = 0 === a.length;\n      var s = r.matchPrefix(e, \"a=rtcp-mux\");\n      return t.mux = s.length > 0, t;\n    }, r.parseMsid = function (e) {\n      var t,\n          n = r.matchPrefix(e, \"a=msid:\");\n      if (1 === n.length) return {\n        stream: (t = n[0].substr(7).split(\" \"))[0],\n        track: t[1]\n      };\n      var a = r.matchPrefix(e, \"a=ssrc:\").map(function (e) {\n        return r.parseSsrcMedia(e);\n      }).filter(function (r) {\n        return \"msid\" === r.attribute;\n      });\n      return a.length > 0 ? {\n        stream: (t = a[0].value.split(\" \"))[0],\n        track: t[1]\n      } : void 0;\n    }, r.parseSctpDescription = function (e) {\n      var t,\n          n = r.parseMLine(e),\n          a = r.matchPrefix(e, \"a=max-message-size:\");\n      a.length > 0 && (t = parseInt(a[0].substr(19), 10)), isNaN(t) && (t = 65536);\n      var s = r.matchPrefix(e, \"a=sctp-port:\");\n      if (s.length > 0) return {\n        port: parseInt(s[0].substr(12), 10),\n        protocol: n.fmt,\n        maxMessageSize: t\n      };\n\n      if (r.matchPrefix(e, \"a=sctpmap:\").length > 0) {\n        var i = r.matchPrefix(e, \"a=sctpmap:\")[0].substr(10).split(\" \");\n        return {\n          port: parseInt(i[0], 10),\n          protocol: i[1],\n          maxMessageSize: t\n        };\n      }\n    }, r.writeSctpDescription = function (r, e) {\n      var t = [];\n      return t = \"DTLS/SCTP\" !== r.protocol ? [\"m=\" + r.kind + \" 9 \" + r.protocol + \" \" + e.protocol + \"\\r\\n\", \"c=IN IP4 0.0.0.0\\r\\n\", \"a=sctp-port:\" + e.port + \"\\r\\n\"] : [\"m=\" + r.kind + \" 9 \" + r.protocol + \" \" + e.port + \"\\r\\n\", \"c=IN IP4 0.0.0.0\\r\\n\", \"a=sctpmap:\" + e.port + \" \" + e.protocol + \" 65535\\r\\n\"], void 0 !== e.maxMessageSize && t.push(\"a=max-message-size:\" + e.maxMessageSize + \"\\r\\n\"), t.join(\"\");\n    }, r.generateSessionId = function () {\n      return Math.random().toString().substr(2, 21);\n    }, r.writeSessionBoilerplate = function (e, t, n) {\n      var a = void 0 !== t ? t : 2;\n      return \"v=0\\r\\no=\" + (n || \"thisisadapterortc\") + \" \" + (e || r.generateSessionId()) + \" \" + a + \" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\";\n    }, r.writeMediaSection = function (e, t, n, a) {\n      var s = r.writeRtpDescription(e.kind, t);\n\n      if (s += r.writeIceParameters(e.iceGatherer.getLocalParameters()), s += r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), \"offer\" === n ? \"actpass\" : \"active\"), s += \"a=mid:\" + e.mid + \"\\r\\n\", e.direction ? s += \"a=\" + e.direction + \"\\r\\n\" : e.rtpSender && e.rtpReceiver ? s += \"a=sendrecv\\r\\n\" : e.rtpSender ? s += \"a=sendonly\\r\\n\" : e.rtpReceiver ? s += \"a=recvonly\\r\\n\" : s += \"a=inactive\\r\\n\", e.rtpSender) {\n        var i = \"msid:\" + a.id + \" \" + e.rtpSender.track.id + \"\\r\\n\";\n        s += \"a=\" + i, s += \"a=ssrc:\" + e.sendEncodingParameters[0].ssrc + \" \" + i, e.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + e.sendEncodingParameters[0].rtx.ssrc + \" \" + i, s += \"a=ssrc-group:FID \" + e.sendEncodingParameters[0].ssrc + \" \" + e.sendEncodingParameters[0].rtx.ssrc + \"\\r\\n\");\n      }\n\n      return s += \"a=ssrc:\" + e.sendEncodingParameters[0].ssrc + \" cname:\" + r.localCName + \"\\r\\n\", e.rtpSender && e.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + e.sendEncodingParameters[0].rtx.ssrc + \" cname:\" + r.localCName + \"\\r\\n\"), s;\n    }, r.getDirection = function (e, t) {\n      for (var n = r.splitLines(e), a = 0; a < n.length; a++) {\n        switch (n[a]) {\n          case \"a=sendrecv\":\n          case \"a=sendonly\":\n          case \"a=recvonly\":\n          case \"a=inactive\":\n            return n[a].substr(2);\n        }\n      }\n\n      return t ? r.getDirection(t) : \"sendrecv\";\n    }, r.getKind = function (e) {\n      return r.splitLines(e)[0].split(\" \")[0].substr(2);\n    }, r.isRejected = function (r) {\n      return \"0\" === r.split(\" \", 2)[1];\n    }, r.parseMLine = function (e) {\n      var t = r.splitLines(e)[0].substr(2).split(\" \");\n      return {\n        kind: t[0],\n        port: parseInt(t[1], 10),\n        protocol: t[2],\n        fmt: t.slice(3).join(\" \")\n      };\n    }, r.parseOLine = function (e) {\n      var t = r.matchPrefix(e, \"o=\")[0].substr(2).split(\" \");\n      return {\n        username: t[0],\n        sessionId: t[1],\n        sessionVersion: parseInt(t[2], 10),\n        netType: t[3],\n        addressType: t[4],\n        address: t[5]\n      };\n    }, r.isValidSDP = function (e) {\n      if (\"string\" != typeof e || 0 === e.length) return !1;\n\n      for (var t = r.splitLines(e), n = 0; n < t.length; n++) {\n        if (t[n].length < 2 || \"=\" !== t[n].charAt(1)) return !1;\n      }\n\n      return !0;\n    }, \"object\" == typeof module && (module.exports = r);\n  }, {}],\n  \"NJ2u\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = require(\"sdp\");\n\n    function t(e) {\n      return {\n        inboundrtp: \"inbound-rtp\",\n        outboundrtp: \"outbound-rtp\",\n        candidatepair: \"candidate-pair\",\n        localcandidate: \"local-candidate\",\n        remotecandidate: \"remote-candidate\"\n      }[e.type] || e.type;\n    }\n\n    function r(t, r, n, a, i) {\n      var s = e.writeRtpDescription(t.kind, r);\n\n      if (s += e.writeIceParameters(t.iceGatherer.getLocalParameters()), s += e.writeDtlsParameters(t.dtlsTransport.getLocalParameters(), \"offer\" === n ? \"actpass\" : i || \"active\"), s += \"a=mid:\" + t.mid + \"\\r\\n\", t.rtpSender && t.rtpReceiver ? s += \"a=sendrecv\\r\\n\" : t.rtpSender ? s += \"a=sendonly\\r\\n\" : t.rtpReceiver ? s += \"a=recvonly\\r\\n\" : s += \"a=inactive\\r\\n\", t.rtpSender) {\n        var o = t.rtpSender._initialTrackId || t.rtpSender.track.id;\n        t.rtpSender._initialTrackId = o;\n        var c = \"msid:\" + (a ? a.id : \"-\") + \" \" + o + \"\\r\\n\";\n        s += \"a=\" + c, s += \"a=ssrc:\" + t.sendEncodingParameters[0].ssrc + \" \" + c, t.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + t.sendEncodingParameters[0].rtx.ssrc + \" \" + c, s += \"a=ssrc-group:FID \" + t.sendEncodingParameters[0].ssrc + \" \" + t.sendEncodingParameters[0].rtx.ssrc + \"\\r\\n\");\n      }\n\n      return s += \"a=ssrc:\" + t.sendEncodingParameters[0].ssrc + \" cname:\" + e.localCName + \"\\r\\n\", t.rtpSender && t.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + t.sendEncodingParameters[0].rtx.ssrc + \" cname:\" + e.localCName + \"\\r\\n\"), s;\n    }\n\n    function n(e, t) {\n      var r = !1;\n      return (e = JSON.parse(JSON.stringify(e))).filter(function (e) {\n        if (e && (e.urls || e.url)) {\n          var n = e.urls || e.url;\n          e.url && !e.urls && console.warn(\"RTCIceServer.url is deprecated! Use urls instead.\");\n          var a = \"string\" == typeof n;\n          return a && (n = [n]), n = n.filter(function (e) {\n            return 0 === e.indexOf(\"turn:\") && -1 !== e.indexOf(\"transport=udp\") && -1 === e.indexOf(\"turn:[\") && !r ? (r = !0, !0) : 0 === e.indexOf(\"stun:\") && t >= 14393 && -1 === e.indexOf(\"?transport=udp\");\n          }), delete e.url, e.urls = a ? n[0] : n, !!n.length;\n        }\n      });\n    }\n\n    function a(e, t) {\n      var r = {\n        codecs: [],\n        headerExtensions: [],\n        fecMechanisms: []\n      },\n          n = function n(e, t) {\n        e = parseInt(e, 10);\n\n        for (var r = 0; r < t.length; r++) {\n          if (t[r].payloadType === e || t[r].preferredPayloadType === e) return t[r];\n        }\n      },\n          a = function a(e, t, r, _a) {\n        var i = n(e.parameters.apt, r),\n            s = n(t.parameters.apt, _a);\n        return i && s && i.name.toLowerCase() === s.name.toLowerCase();\n      };\n\n      return e.codecs.forEach(function (n) {\n        for (var i = 0; i < t.codecs.length; i++) {\n          var s = t.codecs[i];\n\n          if (n.name.toLowerCase() === s.name.toLowerCase() && n.clockRate === s.clockRate) {\n            if (\"rtx\" === n.name.toLowerCase() && n.parameters && s.parameters.apt && !a(n, s, e.codecs, t.codecs)) continue;\n            (s = JSON.parse(JSON.stringify(s))).numChannels = Math.min(n.numChannels, s.numChannels), r.codecs.push(s), s.rtcpFeedback = s.rtcpFeedback.filter(function (e) {\n              for (var t = 0; t < n.rtcpFeedback.length; t++) {\n                if (n.rtcpFeedback[t].type === e.type && n.rtcpFeedback[t].parameter === e.parameter) return !0;\n              }\n\n              return !1;\n            });\n            break;\n          }\n        }\n      }), e.headerExtensions.forEach(function (e) {\n        for (var n = 0; n < t.headerExtensions.length; n++) {\n          var a = t.headerExtensions[n];\n\n          if (e.uri === a.uri) {\n            r.headerExtensions.push(a);\n            break;\n          }\n        }\n      }), r;\n    }\n\n    function i(e, t, r) {\n      return -1 !== {\n        offer: {\n          setLocalDescription: [\"stable\", \"have-local-offer\"],\n          setRemoteDescription: [\"stable\", \"have-remote-offer\"]\n        },\n        answer: {\n          setLocalDescription: [\"have-remote-offer\", \"have-local-pranswer\"],\n          setRemoteDescription: [\"have-local-offer\", \"have-remote-pranswer\"]\n        }\n      }[t][e].indexOf(r);\n    }\n\n    function s(e, t) {\n      var r = e.getRemoteCandidates().find(function (e) {\n        return t.foundation === e.foundation && t.ip === e.ip && t.port === e.port && t.priority === e.priority && t.protocol === e.protocol && t.type === e.type;\n      });\n      return r || e.addRemoteCandidate(t), !r;\n    }\n\n    function o(e, t) {\n      var r = new Error(t);\n      return r.name = e, r.code = {\n        NotSupportedError: 9,\n        InvalidStateError: 11,\n        InvalidAccessError: 15,\n        TypeError: void 0,\n        OperationError: void 0\n      }[e], r;\n    }\n\n    module.exports = function (c, d) {\n      function p(e, t) {\n        t.addTrack(e), t.dispatchEvent(new c.MediaStreamTrackEvent(\"addtrack\", {\n          track: e\n        }));\n      }\n\n      function l(e, t, r, n) {\n        var a = new Event(\"track\");\n        a.track = t, a.receiver = r, a.transceiver = {\n          receiver: r\n        }, a.streams = n, c.setTimeout(function () {\n          e._dispatchEvent(\"track\", a);\n        });\n      }\n\n      var f = function f(t) {\n        var r = this,\n            a = document.createDocumentFragment();\n        if ([\"addEventListener\", \"removeEventListener\", \"dispatchEvent\"].forEach(function (e) {\n          r[e] = a[e].bind(a);\n        }), this.canTrickleIceCandidates = null, this.needNegotiation = !1, this.localStreams = [], this.remoteStreams = [], this._localDescription = null, this._remoteDescription = null, this.signalingState = \"stable\", this.iceConnectionState = \"new\", this.connectionState = \"new\", this.iceGatheringState = \"new\", t = JSON.parse(JSON.stringify(t || {})), this.usingBundle = \"max-bundle\" === t.bundlePolicy, \"negotiate\" === t.rtcpMuxPolicy) throw o(\"NotSupportedError\", \"rtcpMuxPolicy 'negotiate' is not supported\");\n\n        switch (t.rtcpMuxPolicy || (t.rtcpMuxPolicy = \"require\"), t.iceTransportPolicy) {\n          case \"all\":\n          case \"relay\":\n            break;\n\n          default:\n            t.iceTransportPolicy = \"all\";\n        }\n\n        switch (t.bundlePolicy) {\n          case \"balanced\":\n          case \"max-compat\":\n          case \"max-bundle\":\n            break;\n\n          default:\n            t.bundlePolicy = \"balanced\";\n        }\n\n        if (t.iceServers = n(t.iceServers || [], d), this._iceGatherers = [], t.iceCandidatePoolSize) for (var i = t.iceCandidatePoolSize; i > 0; i--) {\n          this._iceGatherers.push(new c.RTCIceGatherer({\n            iceServers: t.iceServers,\n            gatherPolicy: t.iceTransportPolicy\n          }));\n        } else t.iceCandidatePoolSize = 0;\n        this._config = t, this.transceivers = [], this._sdpSessionId = e.generateSessionId(), this._sdpSessionVersion = 0, this._dtlsRole = void 0, this._isClosed = !1;\n      };\n\n      Object.defineProperty(f.prototype, \"localDescription\", {\n        configurable: !0,\n        get: function get() {\n          return this._localDescription;\n        }\n      }), Object.defineProperty(f.prototype, \"remoteDescription\", {\n        configurable: !0,\n        get: function get() {\n          return this._remoteDescription;\n        }\n      }), f.prototype.onicecandidate = null, f.prototype.onaddstream = null, f.prototype.ontrack = null, f.prototype.onremovestream = null, f.prototype.onsignalingstatechange = null, f.prototype.oniceconnectionstatechange = null, f.prototype.onconnectionstatechange = null, f.prototype.onicegatheringstatechange = null, f.prototype.onnegotiationneeded = null, f.prototype.ondatachannel = null, f.prototype._dispatchEvent = function (e, t) {\n        this._isClosed || (this.dispatchEvent(t), \"function\" == typeof this[\"on\" + e] && this[\"on\" + e](t));\n      }, f.prototype._emitGatheringStateChange = function () {\n        var e = new Event(\"icegatheringstatechange\");\n\n        this._dispatchEvent(\"icegatheringstatechange\", e);\n      }, f.prototype.getConfiguration = function () {\n        return this._config;\n      }, f.prototype.getLocalStreams = function () {\n        return this.localStreams;\n      }, f.prototype.getRemoteStreams = function () {\n        return this.remoteStreams;\n      }, f.prototype._createTransceiver = function (e, t) {\n        var r = this.transceivers.length > 0,\n            n = {\n          track: null,\n          iceGatherer: null,\n          iceTransport: null,\n          dtlsTransport: null,\n          localCapabilities: null,\n          remoteCapabilities: null,\n          rtpSender: null,\n          rtpReceiver: null,\n          kind: e,\n          mid: null,\n          sendEncodingParameters: null,\n          recvEncodingParameters: null,\n          stream: null,\n          associatedRemoteMediaStreams: [],\n          wantReceive: !0\n        };\n        if (this.usingBundle && r) n.iceTransport = this.transceivers[0].iceTransport, n.dtlsTransport = this.transceivers[0].dtlsTransport;else {\n          var a = this._createIceAndDtlsTransports();\n\n          n.iceTransport = a.iceTransport, n.dtlsTransport = a.dtlsTransport;\n        }\n        return t || this.transceivers.push(n), n;\n      }, f.prototype.addTrack = function (e, t) {\n        if (this._isClosed) throw o(\"InvalidStateError\", \"Attempted to call addTrack on a closed peerconnection.\");\n        var r;\n        if (this.transceivers.find(function (t) {\n          return t.track === e;\n        })) throw o(\"InvalidAccessError\", \"Track already exists.\");\n\n        for (var n = 0; n < this.transceivers.length; n++) {\n          this.transceivers[n].track || this.transceivers[n].kind !== e.kind || (r = this.transceivers[n]);\n        }\n\n        return r || (r = this._createTransceiver(e.kind)), this._maybeFireNegotiationNeeded(), -1 === this.localStreams.indexOf(t) && this.localStreams.push(t), r.track = e, r.stream = t, r.rtpSender = new c.RTCRtpSender(e, r.dtlsTransport), r.rtpSender;\n      }, f.prototype.addStream = function (e) {\n        var t = this;\n        if (d >= 15025) e.getTracks().forEach(function (r) {\n          t.addTrack(r, e);\n        });else {\n          var r = e.clone();\n          e.getTracks().forEach(function (e, t) {\n            var n = r.getTracks()[t];\n            e.addEventListener(\"enabled\", function (e) {\n              n.enabled = e.enabled;\n            });\n          }), r.getTracks().forEach(function (e) {\n            t.addTrack(e, r);\n          });\n        }\n      }, f.prototype.removeTrack = function (e) {\n        if (this._isClosed) throw o(\"InvalidStateError\", \"Attempted to call removeTrack on a closed peerconnection.\");\n        if (!(e instanceof c.RTCRtpSender)) throw new TypeError(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\");\n        var t = this.transceivers.find(function (t) {\n          return t.rtpSender === e;\n        });\n        if (!t) throw o(\"InvalidAccessError\", \"Sender was not created by this connection.\");\n        var r = t.stream;\n        t.rtpSender.stop(), t.rtpSender = null, t.track = null, t.stream = null, -1 === this.transceivers.map(function (e) {\n          return e.stream;\n        }).indexOf(r) && this.localStreams.indexOf(r) > -1 && this.localStreams.splice(this.localStreams.indexOf(r), 1), this._maybeFireNegotiationNeeded();\n      }, f.prototype.removeStream = function (e) {\n        var t = this;\n        e.getTracks().forEach(function (e) {\n          var r = t.getSenders().find(function (t) {\n            return t.track === e;\n          });\n          r && t.removeTrack(r);\n        });\n      }, f.prototype.getSenders = function () {\n        return this.transceivers.filter(function (e) {\n          return !!e.rtpSender;\n        }).map(function (e) {\n          return e.rtpSender;\n        });\n      }, f.prototype.getReceivers = function () {\n        return this.transceivers.filter(function (e) {\n          return !!e.rtpReceiver;\n        }).map(function (e) {\n          return e.rtpReceiver;\n        });\n      }, f.prototype._createIceGatherer = function (e, t) {\n        var r = this;\n        if (t && e > 0) return this.transceivers[0].iceGatherer;\n        if (this._iceGatherers.length) return this._iceGatherers.shift();\n        var n = new c.RTCIceGatherer({\n          iceServers: this._config.iceServers,\n          gatherPolicy: this._config.iceTransportPolicy\n        });\n        return Object.defineProperty(n, \"state\", {\n          value: \"new\",\n          writable: !0\n        }), this.transceivers[e].bufferedCandidateEvents = [], this.transceivers[e].bufferCandidates = function (t) {\n          var a = !t.candidate || 0 === Object.keys(t.candidate).length;\n          n.state = a ? \"completed\" : \"gathering\", null !== r.transceivers[e].bufferedCandidateEvents && r.transceivers[e].bufferedCandidateEvents.push(t);\n        }, n.addEventListener(\"localcandidate\", this.transceivers[e].bufferCandidates), n;\n      }, f.prototype._gather = function (t, r) {\n        var n = this,\n            a = this.transceivers[r].iceGatherer;\n\n        if (!a.onlocalcandidate) {\n          var i = this.transceivers[r].bufferedCandidateEvents;\n          this.transceivers[r].bufferedCandidateEvents = null, a.removeEventListener(\"localcandidate\", this.transceivers[r].bufferCandidates), a.onlocalcandidate = function (i) {\n            if (!(n.usingBundle && r > 0)) {\n              var s = new Event(\"icecandidate\");\n              s.candidate = {\n                sdpMid: t,\n                sdpMLineIndex: r\n              };\n              var o = i.candidate,\n                  c = !o || 0 === Object.keys(o).length;\n              if (c) \"new\" !== a.state && \"gathering\" !== a.state || (a.state = \"completed\");else {\n                \"new\" === a.state && (a.state = \"gathering\"), o.component = 1, o.ufrag = a.getLocalParameters().usernameFragment;\n                var d = e.writeCandidate(o);\n                s.candidate = Object.assign(s.candidate, e.parseCandidate(d)), s.candidate.candidate = d, s.candidate.toJSON = function () {\n                  return {\n                    candidate: s.candidate.candidate,\n                    sdpMid: s.candidate.sdpMid,\n                    sdpMLineIndex: s.candidate.sdpMLineIndex,\n                    usernameFragment: s.candidate.usernameFragment\n                  };\n                };\n              }\n              var p = e.getMediaSections(n._localDescription.sdp);\n              p[s.candidate.sdpMLineIndex] += c ? \"a=end-of-candidates\\r\\n\" : \"a=\" + s.candidate.candidate + \"\\r\\n\", n._localDescription.sdp = e.getDescription(n._localDescription.sdp) + p.join(\"\");\n              var l = n.transceivers.every(function (e) {\n                return e.iceGatherer && \"completed\" === e.iceGatherer.state;\n              });\n              \"gathering\" !== n.iceGatheringState && (n.iceGatheringState = \"gathering\", n._emitGatheringStateChange()), c || n._dispatchEvent(\"icecandidate\", s), l && (n._dispatchEvent(\"icecandidate\", new Event(\"icecandidate\")), n.iceGatheringState = \"complete\", n._emitGatheringStateChange());\n            }\n          }, c.setTimeout(function () {\n            i.forEach(function (e) {\n              a.onlocalcandidate(e);\n            });\n          }, 0);\n        }\n      }, f.prototype._createIceAndDtlsTransports = function () {\n        var e = this,\n            t = new c.RTCIceTransport(null);\n\n        t.onicestatechange = function () {\n          e._updateIceConnectionState(), e._updateConnectionState();\n        };\n\n        var r = new c.RTCDtlsTransport(t);\n        return r.ondtlsstatechange = function () {\n          e._updateConnectionState();\n        }, r.onerror = function () {\n          Object.defineProperty(r, \"state\", {\n            value: \"failed\",\n            writable: !0\n          }), e._updateConnectionState();\n        }, {\n          iceTransport: t,\n          dtlsTransport: r\n        };\n      }, f.prototype._disposeIceAndDtlsTransports = function (e) {\n        var t = this.transceivers[e].iceGatherer;\n        t && (delete t.onlocalcandidate, delete this.transceivers[e].iceGatherer);\n        var r = this.transceivers[e].iceTransport;\n        r && (delete r.onicestatechange, delete this.transceivers[e].iceTransport);\n        var n = this.transceivers[e].dtlsTransport;\n        n && (delete n.ondtlsstatechange, delete n.onerror, delete this.transceivers[e].dtlsTransport);\n      }, f.prototype._transceive = function (t, r, n) {\n        var i = a(t.localCapabilities, t.remoteCapabilities);\n        r && t.rtpSender && (i.encodings = t.sendEncodingParameters, i.rtcp = {\n          cname: e.localCName,\n          compound: t.rtcpParameters.compound\n        }, t.recvEncodingParameters.length && (i.rtcp.ssrc = t.recvEncodingParameters[0].ssrc), t.rtpSender.send(i)), n && t.rtpReceiver && i.codecs.length > 0 && (\"video\" === t.kind && t.recvEncodingParameters && d < 15019 && t.recvEncodingParameters.forEach(function (e) {\n          delete e.rtx;\n        }), t.recvEncodingParameters.length ? i.encodings = t.recvEncodingParameters : i.encodings = [{}], i.rtcp = {\n          compound: t.rtcpParameters.compound\n        }, t.rtcpParameters.cname && (i.rtcp.cname = t.rtcpParameters.cname), t.sendEncodingParameters.length && (i.rtcp.ssrc = t.sendEncodingParameters[0].ssrc), t.rtpReceiver.receive(i));\n      }, f.prototype.setLocalDescription = function (t) {\n        var r,\n            n,\n            s = this;\n        if (-1 === [\"offer\", \"answer\"].indexOf(t.type)) return Promise.reject(o(\"TypeError\", 'Unsupported type \"' + t.type + '\"'));\n        if (!i(\"setLocalDescription\", t.type, s.signalingState) || s._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not set local \" + t.type + \" in state \" + s.signalingState));\n        if (\"offer\" === t.type) r = e.splitSections(t.sdp), n = r.shift(), r.forEach(function (t, r) {\n          var n = e.parseRtpParameters(t);\n          s.transceivers[r].localCapabilities = n;\n        }), s.transceivers.forEach(function (e, t) {\n          s._gather(e.mid, t);\n        });else if (\"answer\" === t.type) {\n          r = e.splitSections(s._remoteDescription.sdp), n = r.shift();\n          var c = e.matchPrefix(n, \"a=ice-lite\").length > 0;\n          r.forEach(function (t, r) {\n            var i = s.transceivers[r],\n                o = i.iceGatherer,\n                d = i.iceTransport,\n                p = i.dtlsTransport,\n                l = i.localCapabilities,\n                f = i.remoteCapabilities;\n\n            if (!(e.isRejected(t) && 0 === e.matchPrefix(t, \"a=bundle-only\").length) && !i.rejected) {\n              var u = e.getIceParameters(t, n),\n                  v = e.getDtlsParameters(t, n);\n              c && (v.role = \"server\"), s.usingBundle && 0 !== r || (s._gather(i.mid, r), \"new\" === d.state && d.start(o, u, c ? \"controlling\" : \"controlled\"), \"new\" === p.state && p.start(v));\n              var h = a(l, f);\n\n              s._transceive(i, h.codecs.length > 0, !1);\n            }\n          });\n        }\n        return s._localDescription = {\n          type: t.type,\n          sdp: t.sdp\n        }, \"offer\" === t.type ? s._updateSignalingState(\"have-local-offer\") : s._updateSignalingState(\"stable\"), Promise.resolve();\n      }, f.prototype.setRemoteDescription = function (t) {\n        var r = this;\n        if (-1 === [\"offer\", \"answer\"].indexOf(t.type)) return Promise.reject(o(\"TypeError\", 'Unsupported type \"' + t.type + '\"'));\n        if (!i(\"setRemoteDescription\", t.type, r.signalingState) || r._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not set remote \" + t.type + \" in state \" + r.signalingState));\n        var n = {};\n        r.remoteStreams.forEach(function (e) {\n          n[e.id] = e;\n        });\n        var f = [],\n            u = e.splitSections(t.sdp),\n            v = u.shift(),\n            h = e.matchPrefix(v, \"a=ice-lite\").length > 0,\n            m = e.matchPrefix(v, \"a=group:BUNDLE \").length > 0;\n        r.usingBundle = m;\n        var g = e.matchPrefix(v, \"a=ice-options:\")[0];\n        return r.canTrickleIceCandidates = !!g && g.substr(14).split(\" \").indexOf(\"trickle\") >= 0, u.forEach(function (i, o) {\n          var l = e.splitLines(i),\n              u = e.getKind(i),\n              g = e.isRejected(i) && 0 === e.matchPrefix(i, \"a=bundle-only\").length,\n              y = l[0].substr(2).split(\" \")[2],\n              S = e.getDirection(i, v),\n              T = e.parseMsid(i),\n              E = e.getMid(i) || e.generateIdentifier();\n          if (g || \"application\" === u && (\"DTLS/SCTP\" === y || \"UDP/DTLS/SCTP\" === y)) r.transceivers[o] = {\n            mid: E,\n            kind: u,\n            protocol: y,\n            rejected: !0\n          };else {\n            var C, P, w, R, _, k, b, x, D;\n\n            !g && r.transceivers[o] && r.transceivers[o].rejected && (r.transceivers[o] = r._createTransceiver(u, !0));\n            var I,\n                L,\n                M = e.parseRtpParameters(i);\n            g || (I = e.getIceParameters(i, v), (L = e.getDtlsParameters(i, v)).role = \"client\"), b = e.parseRtpEncodingParameters(i);\n            var O = e.parseRtcpParameters(i),\n                G = e.matchPrefix(i, \"a=end-of-candidates\", v).length > 0,\n                j = e.matchPrefix(i, \"a=candidate:\").map(function (t) {\n              return e.parseCandidate(t);\n            }).filter(function (e) {\n              return 1 === e.component;\n            });\n\n            if ((\"offer\" === t.type || \"answer\" === t.type) && !g && m && o > 0 && r.transceivers[o] && (r._disposeIceAndDtlsTransports(o), r.transceivers[o].iceGatherer = r.transceivers[0].iceGatherer, r.transceivers[o].iceTransport = r.transceivers[0].iceTransport, r.transceivers[o].dtlsTransport = r.transceivers[0].dtlsTransport, r.transceivers[o].rtpSender && r.transceivers[o].rtpSender.setTransport(r.transceivers[0].dtlsTransport), r.transceivers[o].rtpReceiver && r.transceivers[o].rtpReceiver.setTransport(r.transceivers[0].dtlsTransport)), \"offer\" !== t.type || g) {\n              if (\"answer\" === t.type && !g) {\n                P = (C = r.transceivers[o]).iceGatherer, w = C.iceTransport, R = C.dtlsTransport, _ = C.rtpReceiver, k = C.sendEncodingParameters, x = C.localCapabilities, r.transceivers[o].recvEncodingParameters = b, r.transceivers[o].remoteCapabilities = M, r.transceivers[o].rtcpParameters = O, j.length && \"new\" === w.state && (!h && !G || m && 0 !== o ? j.forEach(function (e) {\n                  s(C.iceTransport, e);\n                }) : w.setRemoteCandidates(j)), m && 0 !== o || (\"new\" === w.state && w.start(P, I, \"controlling\"), \"new\" === R.state && R.start(L)), !a(C.localCapabilities, C.remoteCapabilities).codecs.filter(function (e) {\n                  return \"rtx\" === e.name.toLowerCase();\n                }).length && C.sendEncodingParameters[0].rtx && delete C.sendEncodingParameters[0].rtx, r._transceive(C, \"sendrecv\" === S || \"recvonly\" === S, \"sendrecv\" === S || \"sendonly\" === S), !_ || \"sendrecv\" !== S && \"sendonly\" !== S ? delete C.rtpReceiver : (D = _.track, T ? (n[T.stream] || (n[T.stream] = new c.MediaStream()), p(D, n[T.stream]), f.push([D, _, n[T.stream]])) : (n.default || (n.default = new c.MediaStream()), p(D, n.default), f.push([D, _, n.default])));\n              }\n            } else {\n              (C = r.transceivers[o] || r._createTransceiver(u)).mid = E, C.iceGatherer || (C.iceGatherer = r._createIceGatherer(o, m)), j.length && \"new\" === C.iceTransport.state && (!G || m && 0 !== o ? j.forEach(function (e) {\n                s(C.iceTransport, e);\n              }) : C.iceTransport.setRemoteCandidates(j)), x = c.RTCRtpReceiver.getCapabilities(u), d < 15019 && (x.codecs = x.codecs.filter(function (e) {\n                return \"rtx\" !== e.name;\n              })), k = C.sendEncodingParameters || [{\n                ssrc: 1001 * (2 * o + 2)\n              }];\n              var N,\n                  A = !1;\n\n              if (\"sendrecv\" === S || \"sendonly\" === S) {\n                if (A = !C.rtpReceiver, _ = C.rtpReceiver || new c.RTCRtpReceiver(C.dtlsTransport, u), A) D = _.track, T && \"-\" === T.stream || (T ? (n[T.stream] || (n[T.stream] = new c.MediaStream(), Object.defineProperty(n[T.stream], \"id\", {\n                  get: function get() {\n                    return T.stream;\n                  }\n                })), Object.defineProperty(D, \"id\", {\n                  get: function get() {\n                    return T.track;\n                  }\n                }), N = n[T.stream]) : (n.default || (n.default = new c.MediaStream()), N = n.default)), N && (p(D, N), C.associatedRemoteMediaStreams.push(N)), f.push([D, _, N]);\n              } else C.rtpReceiver && C.rtpReceiver.track && (C.associatedRemoteMediaStreams.forEach(function (e) {\n                var t,\n                    r,\n                    n = e.getTracks().find(function (e) {\n                  return e.id === C.rtpReceiver.track.id;\n                });\n                n && (t = n, (r = e).removeTrack(t), r.dispatchEvent(new c.MediaStreamTrackEvent(\"removetrack\", {\n                  track: t\n                })));\n              }), C.associatedRemoteMediaStreams = []);\n\n              C.localCapabilities = x, C.remoteCapabilities = M, C.rtpReceiver = _, C.rtcpParameters = O, C.sendEncodingParameters = k, C.recvEncodingParameters = b, r._transceive(r.transceivers[o], !1, A);\n            }\n          }\n        }), void 0 === r._dtlsRole && (r._dtlsRole = \"offer\" === t.type ? \"active\" : \"passive\"), r._remoteDescription = {\n          type: t.type,\n          sdp: t.sdp\n        }, \"offer\" === t.type ? r._updateSignalingState(\"have-remote-offer\") : r._updateSignalingState(\"stable\"), Object.keys(n).forEach(function (e) {\n          var t = n[e];\n\n          if (t.getTracks().length) {\n            if (-1 === r.remoteStreams.indexOf(t)) {\n              r.remoteStreams.push(t);\n              var a = new Event(\"addstream\");\n              a.stream = t, c.setTimeout(function () {\n                r._dispatchEvent(\"addstream\", a);\n              });\n            }\n\n            f.forEach(function (e) {\n              var n = e[0],\n                  a = e[1];\n              t.id === e[2].id && l(r, n, a, [t]);\n            });\n          }\n        }), f.forEach(function (e) {\n          e[2] || l(r, e[0], e[1], []);\n        }), c.setTimeout(function () {\n          r && r.transceivers && r.transceivers.forEach(function (e) {\n            e.iceTransport && \"new\" === e.iceTransport.state && e.iceTransport.getRemoteCandidates().length > 0 && (console.warn(\"Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification\"), e.iceTransport.addRemoteCandidate({}));\n          });\n        }, 4e3), Promise.resolve();\n      }, f.prototype.close = function () {\n        this.transceivers.forEach(function (e) {\n          e.iceTransport && e.iceTransport.stop(), e.dtlsTransport && e.dtlsTransport.stop(), e.rtpSender && e.rtpSender.stop(), e.rtpReceiver && e.rtpReceiver.stop();\n        }), this._isClosed = !0, this._updateSignalingState(\"closed\");\n      }, f.prototype._updateSignalingState = function (e) {\n        this.signalingState = e;\n        var t = new Event(\"signalingstatechange\");\n\n        this._dispatchEvent(\"signalingstatechange\", t);\n      }, f.prototype._maybeFireNegotiationNeeded = function () {\n        var e = this;\n        \"stable\" === this.signalingState && !0 !== this.needNegotiation && (this.needNegotiation = !0, c.setTimeout(function () {\n          if (e.needNegotiation) {\n            e.needNegotiation = !1;\n            var t = new Event(\"negotiationneeded\");\n\n            e._dispatchEvent(\"negotiationneeded\", t);\n          }\n        }, 0));\n      }, f.prototype._updateIceConnectionState = function () {\n        var e,\n            t = {\n          new: 0,\n          closed: 0,\n          checking: 0,\n          connected: 0,\n          completed: 0,\n          disconnected: 0,\n          failed: 0\n        };\n\n        if (this.transceivers.forEach(function (e) {\n          e.iceTransport && !e.rejected && t[e.iceTransport.state]++;\n        }), e = \"new\", t.failed > 0 ? e = \"failed\" : t.checking > 0 ? e = \"checking\" : t.disconnected > 0 ? e = \"disconnected\" : t.new > 0 ? e = \"new\" : t.connected > 0 ? e = \"connected\" : t.completed > 0 && (e = \"completed\"), e !== this.iceConnectionState) {\n          this.iceConnectionState = e;\n          var r = new Event(\"iceconnectionstatechange\");\n\n          this._dispatchEvent(\"iceconnectionstatechange\", r);\n        }\n      }, f.prototype._updateConnectionState = function () {\n        var e,\n            t = {\n          new: 0,\n          closed: 0,\n          connecting: 0,\n          connected: 0,\n          completed: 0,\n          disconnected: 0,\n          failed: 0\n        };\n\n        if (this.transceivers.forEach(function (e) {\n          e.iceTransport && e.dtlsTransport && !e.rejected && (t[e.iceTransport.state]++, t[e.dtlsTransport.state]++);\n        }), t.connected += t.completed, e = \"new\", t.failed > 0 ? e = \"failed\" : t.connecting > 0 ? e = \"connecting\" : t.disconnected > 0 ? e = \"disconnected\" : t.new > 0 ? e = \"new\" : t.connected > 0 && (e = \"connected\"), e !== this.connectionState) {\n          this.connectionState = e;\n          var r = new Event(\"connectionstatechange\");\n\n          this._dispatchEvent(\"connectionstatechange\", r);\n        }\n      }, f.prototype.createOffer = function () {\n        var t = this;\n        if (t._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not call createOffer after close\"));\n        var n = t.transceivers.filter(function (e) {\n          return \"audio\" === e.kind;\n        }).length,\n            a = t.transceivers.filter(function (e) {\n          return \"video\" === e.kind;\n        }).length,\n            i = arguments[0];\n\n        if (i) {\n          if (i.mandatory || i.optional) throw new TypeError(\"Legacy mandatory/optional constraints not supported.\");\n          void 0 !== i.offerToReceiveAudio && (n = !0 === i.offerToReceiveAudio ? 1 : !1 === i.offerToReceiveAudio ? 0 : i.offerToReceiveAudio), void 0 !== i.offerToReceiveVideo && (a = !0 === i.offerToReceiveVideo ? 1 : !1 === i.offerToReceiveVideo ? 0 : i.offerToReceiveVideo);\n        }\n\n        for (t.transceivers.forEach(function (e) {\n          \"audio\" === e.kind ? --n < 0 && (e.wantReceive = !1) : \"video\" === e.kind && --a < 0 && (e.wantReceive = !1);\n        }); n > 0 || a > 0;) {\n          n > 0 && (t._createTransceiver(\"audio\"), n--), a > 0 && (t._createTransceiver(\"video\"), a--);\n        }\n\n        var s = e.writeSessionBoilerplate(t._sdpSessionId, t._sdpSessionVersion++);\n        t.transceivers.forEach(function (r, n) {\n          var a = r.track,\n              i = r.kind,\n              s = r.mid || e.generateIdentifier();\n          r.mid = s, r.iceGatherer || (r.iceGatherer = t._createIceGatherer(n, t.usingBundle));\n          var o = c.RTCRtpSender.getCapabilities(i);\n          d < 15019 && (o.codecs = o.codecs.filter(function (e) {\n            return \"rtx\" !== e.name;\n          })), o.codecs.forEach(function (e) {\n            \"H264\" === e.name && void 0 === e.parameters[\"level-asymmetry-allowed\"] && (e.parameters[\"level-asymmetry-allowed\"] = \"1\"), r.remoteCapabilities && r.remoteCapabilities.codecs && r.remoteCapabilities.codecs.forEach(function (t) {\n              e.name.toLowerCase() === t.name.toLowerCase() && e.clockRate === t.clockRate && (e.preferredPayloadType = t.payloadType);\n            });\n          }), o.headerExtensions.forEach(function (e) {\n            (r.remoteCapabilities && r.remoteCapabilities.headerExtensions || []).forEach(function (t) {\n              e.uri === t.uri && (e.id = t.id);\n            });\n          });\n          var p = r.sendEncodingParameters || [{\n            ssrc: 1001 * (2 * n + 1)\n          }];\n          a && d >= 15019 && \"video\" === i && !p[0].rtx && (p[0].rtx = {\n            ssrc: p[0].ssrc + 1\n          }), r.wantReceive && (r.rtpReceiver = new c.RTCRtpReceiver(r.dtlsTransport, i)), r.localCapabilities = o, r.sendEncodingParameters = p;\n        }), \"max-compat\" !== t._config.bundlePolicy && (s += \"a=group:BUNDLE \" + t.transceivers.map(function (e) {\n          return e.mid;\n        }).join(\" \") + \"\\r\\n\"), s += \"a=ice-options:trickle\\r\\n\", t.transceivers.forEach(function (n, a) {\n          s += r(n, n.localCapabilities, \"offer\", n.stream, t._dtlsRole), s += \"a=rtcp-rsize\\r\\n\", !n.iceGatherer || \"new\" === t.iceGatheringState || 0 !== a && t.usingBundle || (n.iceGatherer.getLocalCandidates().forEach(function (t) {\n            t.component = 1, s += \"a=\" + e.writeCandidate(t) + \"\\r\\n\";\n          }), \"completed\" === n.iceGatherer.state && (s += \"a=end-of-candidates\\r\\n\"));\n        });\n        var p = new c.RTCSessionDescription({\n          type: \"offer\",\n          sdp: s\n        });\n        return Promise.resolve(p);\n      }, f.prototype.createAnswer = function () {\n        var t = this;\n        if (t._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not call createAnswer after close\"));\n        if (\"have-remote-offer\" !== t.signalingState && \"have-local-pranswer\" !== t.signalingState) return Promise.reject(o(\"InvalidStateError\", \"Can not call createAnswer in signalingState \" + t.signalingState));\n        var n = e.writeSessionBoilerplate(t._sdpSessionId, t._sdpSessionVersion++);\n        t.usingBundle && (n += \"a=group:BUNDLE \" + t.transceivers.map(function (e) {\n          return e.mid;\n        }).join(\" \") + \"\\r\\n\"), n += \"a=ice-options:trickle\\r\\n\";\n        var i = e.getMediaSections(t._remoteDescription.sdp).length;\n        t.transceivers.forEach(function (e, s) {\n          if (!(s + 1 > i)) {\n            if (e.rejected) return \"application\" === e.kind ? \"DTLS/SCTP\" === e.protocol ? n += \"m=application 0 DTLS/SCTP 5000\\r\\n\" : n += \"m=application 0 \" + e.protocol + \" webrtc-datachannel\\r\\n\" : \"audio\" === e.kind ? n += \"m=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\na=rtpmap:0 PCMU/8000\\r\\n\" : \"video\" === e.kind && (n += \"m=video 0 UDP/TLS/RTP/SAVPF 120\\r\\na=rtpmap:120 VP8/90000\\r\\n\"), void (n += \"c=IN IP4 0.0.0.0\\r\\na=inactive\\r\\na=mid:\" + e.mid + \"\\r\\n\");\n            var o;\n            if (e.stream) \"audio\" === e.kind ? o = e.stream.getAudioTracks()[0] : \"video\" === e.kind && (o = e.stream.getVideoTracks()[0]), o && d >= 15019 && \"video\" === e.kind && !e.sendEncodingParameters[0].rtx && (e.sendEncodingParameters[0].rtx = {\n              ssrc: e.sendEncodingParameters[0].ssrc + 1\n            });\n            var c = a(e.localCapabilities, e.remoteCapabilities);\n            !c.codecs.filter(function (e) {\n              return \"rtx\" === e.name.toLowerCase();\n            }).length && e.sendEncodingParameters[0].rtx && delete e.sendEncodingParameters[0].rtx, n += r(e, c, \"answer\", e.stream, t._dtlsRole), e.rtcpParameters && e.rtcpParameters.reducedSize && (n += \"a=rtcp-rsize\\r\\n\");\n          }\n        });\n        var s = new c.RTCSessionDescription({\n          type: \"answer\",\n          sdp: n\n        });\n        return Promise.resolve(s);\n      }, f.prototype.addIceCandidate = function (t) {\n        var r,\n            n = this;\n        return t && void 0 === t.sdpMLineIndex && !t.sdpMid ? Promise.reject(new TypeError(\"sdpMLineIndex or sdpMid required\")) : new Promise(function (a, i) {\n          if (!n._remoteDescription) return i(o(\"InvalidStateError\", \"Can not add ICE candidate without a remote description\"));\n\n          if (t && \"\" !== t.candidate) {\n            var c = t.sdpMLineIndex;\n            if (t.sdpMid) for (var d = 0; d < n.transceivers.length; d++) {\n              if (n.transceivers[d].mid === t.sdpMid) {\n                c = d;\n                break;\n              }\n            }\n            var p = n.transceivers[c];\n            if (!p) return i(o(\"OperationError\", \"Can not add ICE candidate\"));\n            if (p.rejected) return a();\n            var l = Object.keys(t.candidate).length > 0 ? e.parseCandidate(t.candidate) : {};\n            if (\"tcp\" === l.protocol && (0 === l.port || 9 === l.port)) return a();\n            if (l.component && 1 !== l.component) return a();\n            if ((0 === c || c > 0 && p.iceTransport !== n.transceivers[0].iceTransport) && !s(p.iceTransport, l)) return i(o(\"OperationError\", \"Can not add ICE candidate\"));\n            var f = t.candidate.trim();\n            0 === f.indexOf(\"a=\") && (f = f.substr(2)), (r = e.getMediaSections(n._remoteDescription.sdp))[c] += \"a=\" + (l.type ? f : \"end-of-candidates\") + \"\\r\\n\", n._remoteDescription.sdp = e.getDescription(n._remoteDescription.sdp) + r.join(\"\");\n          } else for (var u = 0; u < n.transceivers.length && (n.transceivers[u].rejected || (n.transceivers[u].iceTransport.addRemoteCandidate({}), (r = e.getMediaSections(n._remoteDescription.sdp))[u] += \"a=end-of-candidates\\r\\n\", n._remoteDescription.sdp = e.getDescription(n._remoteDescription.sdp) + r.join(\"\"), !n.usingBundle)); u++) {\n            ;\n          }\n\n          a();\n        });\n      }, f.prototype.getStats = function (e) {\n        if (e && e instanceof c.MediaStreamTrack) {\n          var t = null;\n          if (this.transceivers.forEach(function (r) {\n            r.rtpSender && r.rtpSender.track === e ? t = r.rtpSender : r.rtpReceiver && r.rtpReceiver.track === e && (t = r.rtpReceiver);\n          }), !t) throw o(\"InvalidAccessError\", \"Invalid selector.\");\n          return t.getStats();\n        }\n\n        var r = [];\n        return this.transceivers.forEach(function (e) {\n          [\"rtpSender\", \"rtpReceiver\", \"iceGatherer\", \"iceTransport\", \"dtlsTransport\"].forEach(function (t) {\n            e[t] && r.push(e[t].getStats());\n          });\n        }), Promise.all(r).then(function (e) {\n          var t = new Map();\n          return e.forEach(function (e) {\n            e.forEach(function (e) {\n              t.set(e.id, e);\n            });\n          }), t;\n        });\n      };\n      [\"RTCRtpSender\", \"RTCRtpReceiver\", \"RTCIceGatherer\", \"RTCIceTransport\", \"RTCDtlsTransport\"].forEach(function (e) {\n        var r = c[e];\n\n        if (r && r.prototype && r.prototype.getStats) {\n          var n = r.prototype.getStats;\n\n          r.prototype.getStats = function () {\n            return n.apply(this).then(function (e) {\n              var r = new Map();\n              return Object.keys(e).forEach(function (n) {\n                e[n].type = t(e[n]), r.set(n, e[n]);\n              }), r;\n            });\n          };\n        }\n      });\n      var u = [\"createOffer\", \"createAnswer\"];\n      return u.forEach(function (e) {\n        var t = f.prototype[e];\n\n        f.prototype[e] = function () {\n          var e = arguments;\n          return \"function\" == typeof e[0] || \"function\" == typeof e[1] ? t.apply(this, [arguments[2]]).then(function (t) {\n            \"function\" == typeof e[0] && e[0].apply(null, [t]);\n          }, function (t) {\n            \"function\" == typeof e[1] && e[1].apply(null, [t]);\n          }) : t.apply(this, arguments);\n        };\n      }), (u = [\"setLocalDescription\", \"setRemoteDescription\", \"addIceCandidate\"]).forEach(function (e) {\n        var t = f.prototype[e];\n\n        f.prototype[e] = function () {\n          var e = arguments;\n          return \"function\" == typeof e[1] || \"function\" == typeof e[2] ? t.apply(this, arguments).then(function () {\n            \"function\" == typeof e[1] && e[1].apply(null);\n          }, function (t) {\n            \"function\" == typeof e[2] && e[2].apply(null, [t]);\n          }) : t.apply(this, arguments);\n        };\n      }), [\"getStats\"].forEach(function (e) {\n        var t = f.prototype[e];\n\n        f.prototype[e] = function () {\n          var e = arguments;\n          return \"function\" == typeof e[1] ? t.apply(this, arguments).then(function () {\n            \"function\" == typeof e[1] && e[1].apply(null);\n          }) : t.apply(this, arguments);\n        };\n      }), f;\n    };\n  }, {\n    \"sdp\": \"YHvh\"\n  }],\n  \"YdKx\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e) {\n      var r = e && e.navigator,\n          t = r.mediaDevices.getUserMedia.bind(r.mediaDevices);\n\n      r.mediaDevices.getUserMedia = function (e) {\n        return t(e).catch(function (e) {\n          return Promise.reject(function (e) {\n            return {\n              name: {\n                PermissionDeniedError: \"NotAllowedError\"\n              }[e.name] || e.name,\n              message: e.message,\n              constraint: e.constraint,\n              toString: function toString() {\n                return this.name;\n              }\n            };\n          }(e));\n        });\n      };\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetUserMedia = e;\n  }, {}],\n  \"P3bV\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e) {\n      \"getDisplayMedia\" in e.navigator && e.navigator.mediaDevices && (e.navigator.mediaDevices && \"getDisplayMedia\" in e.navigator.mediaDevices || (e.navigator.mediaDevices.getDisplayMedia = e.navigator.getDisplayMedia.bind(e.navigator)));\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetDisplayMedia = e;\n  }, {}],\n  \"XRic\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimPeerConnection = a, exports.shimReplaceTrack = p, Object.defineProperty(exports, \"shimGetUserMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return n.shimGetUserMedia;\n      }\n    }), Object.defineProperty(exports, \"shimGetDisplayMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return i.shimGetDisplayMedia;\n      }\n    });\n\n    var e = s(require(\"../utils\")),\n        t = require(\"./filtericeservers\"),\n        r = o(require(\"rtcpeerconnection-shim\")),\n        n = require(\"./getusermedia\"),\n        i = require(\"./getdisplaymedia\");\n\n    function o(e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    }\n\n    function c() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return c = function c() {\n        return e;\n      }, e;\n    }\n\n    function s(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = c();\n      if (t && t.has(e)) return t.get(e);\n      var r = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var o = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          o && (o.get || o.set) ? Object.defineProperty(r, i, o) : r[i] = e[i];\n        }\n      }\n\n      return r.default = e, t && t.set(e, r), r;\n    }\n\n    function a(n) {\n      var i = e.detectBrowser(n);\n\n      if (n.RTCIceGatherer && (n.RTCIceCandidate || (n.RTCIceCandidate = function (e) {\n        return e;\n      }), n.RTCSessionDescription || (n.RTCSessionDescription = function (e) {\n        return e;\n      }), i.version < 15025)) {\n        var o = Object.getOwnPropertyDescriptor(n.MediaStreamTrack.prototype, \"enabled\");\n        Object.defineProperty(n.MediaStreamTrack.prototype, \"enabled\", {\n          set: function set(e) {\n            o.set.call(this, e);\n            var t = new Event(\"enabled\");\n            t.enabled = e, this.dispatchEvent(t);\n          }\n        });\n      }\n\n      !n.RTCRtpSender || \"dtmf\" in n.RTCRtpSender.prototype || Object.defineProperty(n.RTCRtpSender.prototype, \"dtmf\", {\n        get: function get() {\n          return void 0 === this._dtmf && (\"audio\" === this.track.kind ? this._dtmf = new n.RTCDtmfSender(this) : \"video\" === this.track.kind && (this._dtmf = null)), this._dtmf;\n        }\n      }), n.RTCDtmfSender && !n.RTCDTMFSender && (n.RTCDTMFSender = n.RTCDtmfSender);\n      var c = (0, r.default)(n, i.version);\n      n.RTCPeerConnection = function (r) {\n        return r && r.iceServers && (r.iceServers = (0, t.filterIceServers)(r.iceServers, i.version), e.log(\"ICE servers after filtering:\", r.iceServers)), new c(r);\n      }, n.RTCPeerConnection.prototype = c.prototype;\n    }\n\n    function p(e) {\n      !e.RTCRtpSender || \"replaceTrack\" in e.RTCRtpSender.prototype || (e.RTCRtpSender.prototype.replaceTrack = e.RTCRtpSender.prototype.setTrack);\n    }\n  }, {\n    \"../utils\": \"iSxC\",\n    \"./filtericeservers\": \"NZ1C\",\n    \"rtcpeerconnection-shim\": \"NJ2u\",\n    \"./getusermedia\": \"YdKx\",\n    \"./getdisplaymedia\": \"P3bV\"\n  }],\n  \"GzSv\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetUserMedia = n;\n    var e = o(require(\"../utils\"));\n\n    function t() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return t = function t() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var o = t();\n      if (o && o.has(e)) return o.get(e);\n      var r = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(r, i, a) : r[i] = e[i];\n        }\n      }\n\n      return r.default = e, o && o.set(e, r), r;\n    }\n\n    function r(e) {\n      return (r = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function n(t) {\n      var o = e.detectBrowser(t),\n          n = t && t.navigator,\n          i = t && t.MediaStreamTrack;\n\n      if (n.getUserMedia = function (t, o, r) {\n        e.deprecated(\"navigator.getUserMedia\", \"navigator.mediaDevices.getUserMedia\"), n.mediaDevices.getUserMedia(t).then(o, r);\n      }, !(o.version > 55 && \"autoGainControl\" in n.mediaDevices.getSupportedConstraints())) {\n        var a = function a(e, t, o) {\n          t in e && !(o in e) && (e[o] = e[t], delete e[t]);\n        },\n            s = n.mediaDevices.getUserMedia.bind(n.mediaDevices);\n\n        if (n.mediaDevices.getUserMedia = function (e) {\n          return \"object\" === r(e) && \"object\" === r(e.audio) && (e = JSON.parse(JSON.stringify(e)), a(e.audio, \"autoGainControl\", \"mozAutoGainControl\"), a(e.audio, \"noiseSuppression\", \"mozNoiseSuppression\")), s(e);\n        }, i && i.prototype.getSettings) {\n          var p = i.prototype.getSettings;\n\n          i.prototype.getSettings = function () {\n            var e = p.apply(this, arguments);\n            return a(e, \"mozAutoGainControl\", \"autoGainControl\"), a(e, \"mozNoiseSuppression\", \"noiseSuppression\"), e;\n          };\n        }\n\n        if (i && i.prototype.applyConstraints) {\n          var u = i.prototype.applyConstraints;\n\n          i.prototype.applyConstraints = function (e) {\n            return \"audio\" === this.kind && \"object\" === r(e) && (e = JSON.parse(JSON.stringify(e)), a(e, \"autoGainControl\", \"mozAutoGainControl\"), a(e, \"noiseSuppression\", \"mozNoiseSuppression\")), u.apply(this, [e]);\n          };\n        }\n      }\n    }\n  }, {\n    \"../utils\": \"iSxC\"\n  }],\n  \"UuGU\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e, i) {\n      e.navigator.mediaDevices && \"getDisplayMedia\" in e.navigator.mediaDevices || e.navigator.mediaDevices && (e.navigator.mediaDevices.getDisplayMedia = function (a) {\n        if (!a || !a.video) {\n          var t = new DOMException(\"getDisplayMedia without video constraints is undefined\");\n          return t.name = \"NotFoundError\", t.code = 8, Promise.reject(t);\n        }\n\n        return !0 === a.video ? a.video = {\n          mediaSource: i\n        } : a.video.mediaSource = i, e.navigator.mediaDevices.getUserMedia(a);\n      });\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetDisplayMedia = e;\n  }, {}],\n  \"Fzdr\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimOnTrack = c, exports.shimPeerConnection = s, exports.shimSenderGetStats = p, exports.shimReceiverGetStats = u, exports.shimRemoveStream = f, exports.shimRTCDataChannel = C, exports.shimAddTransceiver = d, exports.shimCreateOffer = y, exports.shimCreateAnswer = l, Object.defineProperty(exports, \"shimGetUserMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return t.shimGetUserMedia;\n      }\n    }), Object.defineProperty(exports, \"shimGetDisplayMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return r.shimGetDisplayMedia;\n      }\n    });\n\n    var e = o(require(\"../utils\")),\n        t = require(\"./getusermedia\"),\n        r = require(\"./getdisplaymedia\");\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = n();\n      if (t && t.has(e)) return t.get(e);\n      var r = {},\n          o = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = o ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(r, i, a) : r[i] = e[i];\n        }\n      }\n\n      return r.default = e, t && t.set(e, r), r;\n    }\n\n    function i(e, t, r) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: r,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = r, e;\n    }\n\n    function a(e) {\n      return (a = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function c(e) {\n      \"object\" === a(e) && e.RTCTrackEvent && \"receiver\" in e.RTCTrackEvent.prototype && !(\"transceiver\" in e.RTCTrackEvent.prototype) && Object.defineProperty(e.RTCTrackEvent.prototype, \"transceiver\", {\n        get: function get() {\n          return {\n            receiver: this.receiver\n          };\n        }\n      });\n    }\n\n    function s(t) {\n      var r = e.detectBrowser(t);\n\n      if (\"object\" === a(t) && (t.RTCPeerConnection || t.mozRTCPeerConnection)) {\n        if (!t.RTCPeerConnection && t.mozRTCPeerConnection && (t.RTCPeerConnection = t.mozRTCPeerConnection), r.version < 53 && [\"setLocalDescription\", \"setRemoteDescription\", \"addIceCandidate\"].forEach(function (e) {\n          var r = t.RTCPeerConnection.prototype[e],\n              n = i({}, e, function () {\n            return arguments[0] = new (\"addIceCandidate\" === e ? t.RTCIceCandidate : t.RTCSessionDescription)(arguments[0]), r.apply(this, arguments);\n          });\n          t.RTCPeerConnection.prototype[e] = n[e];\n        }), r.version < 68) {\n          var n = t.RTCPeerConnection.prototype.addIceCandidate;\n\n          t.RTCPeerConnection.prototype.addIceCandidate = function () {\n            return arguments[0] ? arguments[0] && \"\" === arguments[0].candidate ? Promise.resolve() : n.apply(this, arguments) : (arguments[1] && arguments[1].apply(null), Promise.resolve());\n          };\n        }\n\n        var o = {\n          inboundrtp: \"inbound-rtp\",\n          outboundrtp: \"outbound-rtp\",\n          candidatepair: \"candidate-pair\",\n          localcandidate: \"local-candidate\",\n          remotecandidate: \"remote-candidate\"\n        },\n            c = t.RTCPeerConnection.prototype.getStats;\n\n        t.RTCPeerConnection.prototype.getStats = function () {\n          var _arguments2 = Array.prototype.slice.call(arguments),\n              e = _arguments2[0],\n              t = _arguments2[1],\n              n = _arguments2[2];\n\n          return c.apply(this, [e || null]).then(function (e) {\n            if (r.version < 53 && !t) try {\n              e.forEach(function (e) {\n                e.type = o[e.type] || e.type;\n              });\n            } catch (n) {\n              if (\"TypeError\" !== n.name) throw n;\n              e.forEach(function (t, r) {\n                e.set(r, Object.assign({}, t, {\n                  type: o[t.type] || t.type\n                }));\n              });\n            }\n            return e;\n          }).then(t, n);\n        };\n      }\n    }\n\n    function p(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection && e.RTCRtpSender && !(e.RTCRtpSender && \"getStats\" in e.RTCRtpSender.prototype)) {\n        var t = e.RTCPeerConnection.prototype.getSenders;\n        t && (e.RTCPeerConnection.prototype.getSenders = function () {\n          var e = this,\n              r = t.apply(this, []);\n          return r.forEach(function (t) {\n            return t._pc = e;\n          }), r;\n        });\n        var r = e.RTCPeerConnection.prototype.addTrack;\n        r && (e.RTCPeerConnection.prototype.addTrack = function () {\n          var e = r.apply(this, arguments);\n          return e._pc = this, e;\n        }), e.RTCRtpSender.prototype.getStats = function () {\n          return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map());\n        };\n      }\n    }\n\n    function u(t) {\n      if (\"object\" === a(t) && t.RTCPeerConnection && t.RTCRtpSender && !(t.RTCRtpSender && \"getStats\" in t.RTCRtpReceiver.prototype)) {\n        var r = t.RTCPeerConnection.prototype.getReceivers;\n        r && (t.RTCPeerConnection.prototype.getReceivers = function () {\n          var e = this,\n              t = r.apply(this, []);\n          return t.forEach(function (t) {\n            return t._pc = e;\n          }), t;\n        }), e.wrapPeerConnectionEvent(t, \"track\", function (e) {\n          return e.receiver._pc = e.srcElement, e;\n        }), t.RTCRtpReceiver.prototype.getStats = function () {\n          return this._pc.getStats(this.track);\n        };\n      }\n    }\n\n    function f(t) {\n      !t.RTCPeerConnection || \"removeStream\" in t.RTCPeerConnection.prototype || (t.RTCPeerConnection.prototype.removeStream = function (t) {\n        var r = this;\n        e.deprecated(\"removeStream\", \"removeTrack\"), this.getSenders().forEach(function (e) {\n          e.track && t.getTracks().includes(e.track) && r.removeTrack(e);\n        });\n      });\n    }\n\n    function C(e) {\n      e.DataChannel && !e.RTCDataChannel && (e.RTCDataChannel = e.DataChannel);\n    }\n\n    function d(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.addTransceiver;\n        t && (e.RTCPeerConnection.prototype.addTransceiver = function () {\n          this.setParametersPromises = [];\n          var e = arguments[1],\n              r = e && \"sendEncodings\" in e;\n          r && e.sendEncodings.forEach(function (e) {\n            if (\"rid\" in e) {\n              if (!/^[a-z0-9]{0,16}$/i.test(e.rid)) throw new TypeError(\"Invalid RID value provided.\");\n            }\n\n            if (\"scaleResolutionDownBy\" in e && !(parseFloat(e.scaleResolutionDownBy) >= 1)) throw new RangeError(\"scale_resolution_down_by must be >= 1.0\");\n            if (\"maxFramerate\" in e && !(parseFloat(e.maxFramerate) >= 0)) throw new RangeError(\"max_framerate must be >= 0.0\");\n          });\n          var n = t.apply(this, arguments);\n\n          if (r) {\n            var o = n.sender,\n                i = o.getParameters();\n            \"encodings\" in i || (i.encodings = e.sendEncodings, this.setParametersPromises.push(o.setParameters(i).catch(function () {})));\n          }\n\n          return n;\n        });\n      }\n    }\n\n    function y(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.createOffer;\n\n        e.RTCPeerConnection.prototype.createOffer = function () {\n          var e = arguments,\n              r = this;\n          return this.setParametersPromises && this.setParametersPromises.length ? Promise.all(this.setParametersPromises).then(function () {\n            return t.apply(r, e);\n          }).finally(function () {\n            r.setParametersPromises = [];\n          }) : t.apply(this, arguments);\n        };\n      }\n    }\n\n    function l(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.createAnswer;\n\n        e.RTCPeerConnection.prototype.createAnswer = function () {\n          var e = arguments,\n              r = this;\n          return this.setParametersPromises && this.setParametersPromises.length ? Promise.all(this.setParametersPromises).then(function () {\n            return t.apply(r, e);\n          }).finally(function () {\n            r.setParametersPromises = [];\n          }) : t.apply(this, arguments);\n        };\n      }\n    }\n  }, {\n    \"../utils\": \"iSxC\",\n    \"./getusermedia\": \"GzSv\",\n    \"./getdisplaymedia\": \"UuGU\"\n  }],\n  \"t1lL\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimLocalStreamsAPI = n, exports.shimRemoteStreamsAPI = i, exports.shimCallbacksAPI = a, exports.shimGetUserMedia = s, exports.shimConstraints = c, exports.shimRTCIceServerUrls = d, exports.shimTrackEventTransceiver = f, exports.shimCreateOfferLegacy = p;\n    var e = r(require(\"../utils\"));\n\n    function t() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return t = function t() {\n        return e;\n      }, e;\n    }\n\n    function r(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var r = t();\n      if (r && r.has(e)) return r.get(e);\n      var o = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(o, i, a) : o[i] = e[i];\n        }\n      }\n\n      return o.default = e, r && r.set(e, o), o;\n    }\n\n    function o(e) {\n      return (o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function n(e) {\n      if (\"object\" === o(e) && e.RTCPeerConnection) {\n        if (\"getLocalStreams\" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.getLocalStreams = function () {\n          return this._localStreams || (this._localStreams = []), this._localStreams;\n        }), !(\"addStream\" in e.RTCPeerConnection.prototype)) {\n          var t = e.RTCPeerConnection.prototype.addTrack;\n          e.RTCPeerConnection.prototype.addStream = function (e) {\n            var r = this;\n            this._localStreams || (this._localStreams = []), this._localStreams.includes(e) || this._localStreams.push(e), e.getAudioTracks().forEach(function (o) {\n              return t.call(r, o, e);\n            }), e.getVideoTracks().forEach(function (o) {\n              return t.call(r, o, e);\n            });\n          }, e.RTCPeerConnection.prototype.addTrack = function (e) {\n            var r = arguments[1];\n            return r && (this._localStreams ? this._localStreams.includes(r) || this._localStreams.push(r) : this._localStreams = [r]), t.apply(this, arguments);\n          };\n        }\n\n        \"removeStream\" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.removeStream = function (e) {\n          var t = this;\n          this._localStreams || (this._localStreams = []);\n\n          var r = this._localStreams.indexOf(e);\n\n          if (-1 !== r) {\n            this._localStreams.splice(r, 1);\n\n            var o = e.getTracks();\n            this.getSenders().forEach(function (e) {\n              o.includes(e.track) && t.removeTrack(e);\n            });\n          }\n        });\n      }\n    }\n\n    function i(e) {\n      if (\"object\" === o(e) && e.RTCPeerConnection && (\"getRemoteStreams\" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.getRemoteStreams = function () {\n        return this._remoteStreams ? this._remoteStreams : [];\n      }), !(\"onaddstream\" in e.RTCPeerConnection.prototype))) {\n        Object.defineProperty(e.RTCPeerConnection.prototype, \"onaddstream\", {\n          get: function get() {\n            return this._onaddstream;\n          },\n          set: function set(e) {\n            var t = this;\n            this._onaddstream && (this.removeEventListener(\"addstream\", this._onaddstream), this.removeEventListener(\"track\", this._onaddstreampoly)), this.addEventListener(\"addstream\", this._onaddstream = e), this.addEventListener(\"track\", this._onaddstreampoly = function (e) {\n              e.streams.forEach(function (e) {\n                if (t._remoteStreams || (t._remoteStreams = []), !t._remoteStreams.includes(e)) {\n                  t._remoteStreams.push(e);\n\n                  var r = new Event(\"addstream\");\n                  r.stream = e, t.dispatchEvent(r);\n                }\n              });\n            });\n          }\n        });\n        var t = e.RTCPeerConnection.prototype.setRemoteDescription;\n\n        e.RTCPeerConnection.prototype.setRemoteDescription = function () {\n          var e = this;\n          return this._onaddstreampoly || this.addEventListener(\"track\", this._onaddstreampoly = function (t) {\n            t.streams.forEach(function (t) {\n              if (e._remoteStreams || (e._remoteStreams = []), !(e._remoteStreams.indexOf(t) >= 0)) {\n                e._remoteStreams.push(t);\n\n                var r = new Event(\"addstream\");\n                r.stream = t, e.dispatchEvent(r);\n              }\n            });\n          }), t.apply(e, arguments);\n        };\n      }\n    }\n\n    function a(e) {\n      if (\"object\" === o(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype,\n            r = t.createOffer,\n            n = t.createAnswer,\n            i = t.setLocalDescription,\n            a = t.setRemoteDescription,\n            s = t.addIceCandidate;\n        t.createOffer = function (e, t) {\n          var o = arguments.length >= 2 ? arguments[2] : arguments[0],\n              n = r.apply(this, [o]);\n          return t ? (n.then(e, t), Promise.resolve()) : n;\n        }, t.createAnswer = function (e, t) {\n          var r = arguments.length >= 2 ? arguments[2] : arguments[0],\n              o = n.apply(this, [r]);\n          return t ? (o.then(e, t), Promise.resolve()) : o;\n        };\n\n        var c = function c(e, t, r) {\n          var o = i.apply(this, [e]);\n          return r ? (o.then(t, r), Promise.resolve()) : o;\n        };\n\n        t.setLocalDescription = c, c = function c(e, t, r) {\n          var o = a.apply(this, [e]);\n          return r ? (o.then(t, r), Promise.resolve()) : o;\n        }, t.setRemoteDescription = c, c = function c(e, t, r) {\n          var o = s.apply(this, [e]);\n          return r ? (o.then(t, r), Promise.resolve()) : o;\n        }, t.addIceCandidate = c;\n      }\n    }\n\n    function s(e) {\n      var t = e && e.navigator;\n\n      if (t.mediaDevices && t.mediaDevices.getUserMedia) {\n        var r = t.mediaDevices,\n            o = r.getUserMedia.bind(r);\n\n        t.mediaDevices.getUserMedia = function (e) {\n          return o(c(e));\n        };\n      }\n\n      !t.getUserMedia && t.mediaDevices && t.mediaDevices.getUserMedia && (t.getUserMedia = function (e, r, o) {\n        t.mediaDevices.getUserMedia(e).then(r, o);\n      }.bind(t));\n    }\n\n    function c(t) {\n      return t && void 0 !== t.video ? Object.assign({}, t, {\n        video: e.compactObject(t.video)\n      }) : t;\n    }\n\n    function d(t) {\n      var r = t.RTCPeerConnection;\n      t.RTCPeerConnection = function (t, o) {\n        if (t && t.iceServers) {\n          for (var n = [], i = 0; i < t.iceServers.length; i++) {\n            var a = t.iceServers[i];\n            !a.hasOwnProperty(\"urls\") && a.hasOwnProperty(\"url\") ? (e.deprecated(\"RTCIceServer.url\", \"RTCIceServer.urls\"), (a = JSON.parse(JSON.stringify(a))).urls = a.url, delete a.url, n.push(a)) : n.push(t.iceServers[i]);\n          }\n\n          t.iceServers = n;\n        }\n\n        return new r(t, o);\n      }, t.RTCPeerConnection.prototype = r.prototype, \"generateCertificate\" in t.RTCPeerConnection && Object.defineProperty(t.RTCPeerConnection, \"generateCertificate\", {\n        get: function get() {\n          return r.generateCertificate;\n        }\n      });\n    }\n\n    function f(e) {\n      \"object\" === o(e) && e.RTCTrackEvent && \"receiver\" in e.RTCTrackEvent.prototype && !(\"transceiver\" in e.RTCTrackEvent.prototype) && Object.defineProperty(e.RTCTrackEvent.prototype, \"transceiver\", {\n        get: function get() {\n          return {\n            receiver: this.receiver\n          };\n        }\n      });\n    }\n\n    function p(e) {\n      var t = e.RTCPeerConnection.prototype.createOffer;\n\n      e.RTCPeerConnection.prototype.createOffer = function (e) {\n        if (e) {\n          void 0 !== e.offerToReceiveAudio && (e.offerToReceiveAudio = !!e.offerToReceiveAudio);\n          var r = this.getTransceivers().find(function (e) {\n            return \"audio\" === e.receiver.track.kind;\n          });\n          !1 === e.offerToReceiveAudio && r ? \"sendrecv\" === r.direction ? r.setDirection ? r.setDirection(\"sendonly\") : r.direction = \"sendonly\" : \"recvonly\" === r.direction && (r.setDirection ? r.setDirection(\"inactive\") : r.direction = \"inactive\") : !0 !== e.offerToReceiveAudio || r || this.addTransceiver(\"audio\"), void 0 !== e.offerToReceiveVideo && (e.offerToReceiveVideo = !!e.offerToReceiveVideo);\n          var o = this.getTransceivers().find(function (e) {\n            return \"video\" === e.receiver.track.kind;\n          });\n          !1 === e.offerToReceiveVideo && o ? \"sendrecv\" === o.direction ? o.setDirection ? o.setDirection(\"sendonly\") : o.direction = \"sendonly\" : \"recvonly\" === o.direction && (o.setDirection ? o.setDirection(\"inactive\") : o.direction = \"inactive\") : !0 !== e.offerToReceiveVideo || o || this.addTransceiver(\"video\");\n        }\n\n        return t.apply(this, arguments);\n      };\n    }\n  }, {\n    \"../utils\": \"iSxC\"\n  }],\n  \"GOQK\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimRTCIceCandidate = a, exports.shimMaxMessageSize = c, exports.shimSendThrowTypeError = s, exports.shimConnectionState = p, exports.removeAllowExtmapMixed = u;\n    var e = r(require(\"sdp\")),\n        t = o(require(\"./utils\"));\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = n();\n      if (t && t.has(e)) return t.get(e);\n      var o = {},\n          r = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = r ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(o, i, a) : o[i] = e[i];\n        }\n      }\n\n      return o.default = e, t && t.set(e, o), o;\n    }\n\n    function r(e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    }\n\n    function i(e) {\n      return (i = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function a(n) {\n      if (n.RTCIceCandidate && !(n.RTCIceCandidate && \"foundation\" in n.RTCIceCandidate.prototype)) {\n        var o = n.RTCIceCandidate;\n        n.RTCIceCandidate = function (t) {\n          if (\"object\" === i(t) && t.candidate && 0 === t.candidate.indexOf(\"a=\") && ((t = JSON.parse(JSON.stringify(t))).candidate = t.candidate.substr(2)), t.candidate && t.candidate.length) {\n            var n = new o(t),\n                r = e.default.parseCandidate(t.candidate),\n                a = Object.assign(n, r);\n            return a.toJSON = function () {\n              return {\n                candidate: a.candidate,\n                sdpMid: a.sdpMid,\n                sdpMLineIndex: a.sdpMLineIndex,\n                usernameFragment: a.usernameFragment\n              };\n            }, a;\n          }\n\n          return new o(t);\n        }, n.RTCIceCandidate.prototype = o.prototype, t.wrapPeerConnectionEvent(n, \"icecandidate\", function (e) {\n          return e.candidate && Object.defineProperty(e, \"candidate\", {\n            value: new n.RTCIceCandidate(e.candidate),\n            writable: \"false\"\n          }), e;\n        });\n      }\n    }\n\n    function c(n) {\n      if (n.RTCPeerConnection) {\n        var o = t.detectBrowser(n);\n        \"sctp\" in n.RTCPeerConnection.prototype || Object.defineProperty(n.RTCPeerConnection.prototype, \"sctp\", {\n          get: function get() {\n            return void 0 === this._sctp ? null : this._sctp;\n          }\n        });\n        var r = n.RTCPeerConnection.prototype.setRemoteDescription;\n\n        n.RTCPeerConnection.prototype.setRemoteDescription = function () {\n          if (this._sctp = null, \"chrome\" === o.browser && o.version >= 76) {\n            var _this$getConfiguratio = this.getConfiguration(),\n                t = _this$getConfiguratio.sdpSemantics;\n\n            \"plan-b\" === t && Object.defineProperty(this, \"sctp\", {\n              get: function get() {\n                return void 0 === this._sctp ? null : this._sctp;\n              },\n              enumerable: !0,\n              configurable: !0\n            });\n          }\n\n          if (function (t) {\n            if (!t || !t.sdp) return !1;\n            var n = e.default.splitSections(t.sdp);\n            return n.shift(), n.some(function (t) {\n              var n = e.default.parseMLine(t);\n              return n && \"application\" === n.kind && -1 !== n.protocol.indexOf(\"SCTP\");\n            });\n          }(arguments[0])) {\n            var n,\n                i = function (e) {\n              var t = e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n              if (null === t || t.length < 2) return -1;\n              var n = parseInt(t[1], 10);\n              return n != n ? -1 : n;\n            }(arguments[0]),\n                a = (p = i, u = 65536, \"firefox\" === o.browser && (u = o.version < 57 ? -1 === p ? 16384 : 2147483637 : o.version < 60 ? 57 === o.version ? 65535 : 65536 : 2147483637), u),\n                c = function (t, n) {\n              var r = 65536;\n              \"firefox\" === o.browser && 57 === o.version && (r = 65535);\n              var i = e.default.matchPrefix(t.sdp, \"a=max-message-size:\");\n              return i.length > 0 ? r = parseInt(i[0].substr(19), 10) : \"firefox\" === o.browser && -1 !== n && (r = 2147483637), r;\n            }(arguments[0], i);\n\n            n = 0 === a && 0 === c ? Number.POSITIVE_INFINITY : 0 === a || 0 === c ? Math.max(a, c) : Math.min(a, c);\n            var s = {};\n            Object.defineProperty(s, \"maxMessageSize\", {\n              get: function get() {\n                return n;\n              }\n            }), this._sctp = s;\n          }\n\n          var p, u;\n          return r.apply(this, arguments);\n        };\n      }\n    }\n\n    function s(e) {\n      if (e.RTCPeerConnection && \"createDataChannel\" in e.RTCPeerConnection.prototype) {\n        var n = e.RTCPeerConnection.prototype.createDataChannel;\n        e.RTCPeerConnection.prototype.createDataChannel = function () {\n          var e = n.apply(this, arguments);\n          return o(e, this), e;\n        }, t.wrapPeerConnectionEvent(e, \"datachannel\", function (e) {\n          return o(e.channel, e.target), e;\n        });\n      }\n\n      function o(e, t) {\n        var n = e.send;\n\n        e.send = function () {\n          var o = arguments[0],\n              r = o.length || o.size || o.byteLength;\n          if (\"open\" === e.readyState && t.sctp && r > t.sctp.maxMessageSize) throw new TypeError(\"Message too large (can send a maximum of \" + t.sctp.maxMessageSize + \" bytes)\");\n          return n.apply(e, arguments);\n        };\n      }\n    }\n\n    function p(e) {\n      if (e.RTCPeerConnection && !(\"connectionState\" in e.RTCPeerConnection.prototype)) {\n        var t = e.RTCPeerConnection.prototype;\n        Object.defineProperty(t, \"connectionState\", {\n          get: function get() {\n            return {\n              completed: \"connected\",\n              checking: \"connecting\"\n            }[this.iceConnectionState] || this.iceConnectionState;\n          },\n          enumerable: !0,\n          configurable: !0\n        }), Object.defineProperty(t, \"onconnectionstatechange\", {\n          get: function get() {\n            return this._onconnectionstatechange || null;\n          },\n          set: function set(e) {\n            this._onconnectionstatechange && (this.removeEventListener(\"connectionstatechange\", this._onconnectionstatechange), delete this._onconnectionstatechange), e && this.addEventListener(\"connectionstatechange\", this._onconnectionstatechange = e);\n          },\n          enumerable: !0,\n          configurable: !0\n        }), [\"setLocalDescription\", \"setRemoteDescription\"].forEach(function (e) {\n          var n = t[e];\n\n          t[e] = function () {\n            return this._connectionstatechangepoly || (this._connectionstatechangepoly = function (e) {\n              var t = e.target;\n\n              if (t._lastConnectionState !== t.connectionState) {\n                t._lastConnectionState = t.connectionState;\n                var n = new Event(\"connectionstatechange\", e);\n                t.dispatchEvent(n);\n              }\n\n              return e;\n            }, this.addEventListener(\"iceconnectionstatechange\", this._connectionstatechangepoly)), n.apply(this, arguments);\n          };\n        });\n      }\n    }\n\n    function u(e) {\n      if (e.RTCPeerConnection) {\n        var n = t.detectBrowser(e);\n\n        if (!(\"chrome\" === n.browser && n.version >= 71)) {\n          var o = e.RTCPeerConnection.prototype.setRemoteDescription;\n\n          e.RTCPeerConnection.prototype.setRemoteDescription = function (e) {\n            return e && e.sdp && -1 !== e.sdp.indexOf(\"\\na=extmap-allow-mixed\") && (e.sdp = e.sdp.split(\"\\n\").filter(function (e) {\n              return \"a=extmap-allow-mixed\" !== e.trim();\n            }).join(\"\\n\")), o.apply(this, arguments);\n          };\n        }\n      }\n    }\n  }, {\n    \"sdp\": \"YHvh\",\n    \"./utils\": \"iSxC\"\n  }],\n  \"KtlG\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.adapterFactory = m;\n    var e = o(require(\"./utils\")),\n        r = o(require(\"./chrome/chrome_shim\")),\n        i = o(require(\"./edge/edge_shim\")),\n        s = o(require(\"./firefox/firefox_shim\")),\n        t = o(require(\"./safari/safari_shim\")),\n        a = o(require(\"./common_shim\"));\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var r = n();\n      if (r && r.has(e)) return r.get(e);\n      var i = {},\n          s = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var t in e) {\n        if (Object.prototype.hasOwnProperty.call(e, t)) {\n          var a = s ? Object.getOwnPropertyDescriptor(e, t) : null;\n          a && (a.get || a.set) ? Object.defineProperty(i, t, a) : i[t] = e[t];\n        }\n      }\n\n      return i.default = e, r && r.set(e, i), i;\n    }\n\n    function m() {\n      var _ref = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n          n = _ref.window,\n          o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {\n        shimChrome: !0,\n        shimFirefox: !0,\n        shimEdge: !0,\n        shimSafari: !0\n      },\n          m = e.log,\n          h = e.detectBrowser(n),\n          d = {\n        browserDetails: h,\n        commonShim: a,\n        extractVersion: e.extractVersion,\n        disableLog: e.disableLog,\n        disableWarnings: e.disableWarnings\n      };\n\n      switch (h.browser) {\n        case \"chrome\":\n          if (!r || !r.shimPeerConnection || !o.shimChrome) return m(\"Chrome shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming chrome.\"), d.browserShim = r, r.shimGetUserMedia(n), r.shimMediaStream(n), r.shimPeerConnection(n), r.shimOnTrack(n), r.shimAddTrackRemoveTrack(n), r.shimGetSendersWithDtmf(n), r.shimGetStats(n), r.shimSenderReceiverGetStats(n), r.fixNegotiationNeeded(n), a.shimRTCIceCandidate(n), a.shimConnectionState(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n), a.removeAllowExtmapMixed(n);\n          break;\n\n        case \"firefox\":\n          if (!s || !s.shimPeerConnection || !o.shimFirefox) return m(\"Firefox shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming firefox.\"), d.browserShim = s, s.shimGetUserMedia(n), s.shimPeerConnection(n), s.shimOnTrack(n), s.shimRemoveStream(n), s.shimSenderGetStats(n), s.shimReceiverGetStats(n), s.shimRTCDataChannel(n), s.shimAddTransceiver(n), s.shimCreateOffer(n), s.shimCreateAnswer(n), a.shimRTCIceCandidate(n), a.shimConnectionState(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n);\n          break;\n\n        case \"edge\":\n          if (!i || !i.shimPeerConnection || !o.shimEdge) return m(\"MS edge shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming edge.\"), d.browserShim = i, i.shimGetUserMedia(n), i.shimGetDisplayMedia(n), i.shimPeerConnection(n), i.shimReplaceTrack(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n);\n          break;\n\n        case \"safari\":\n          if (!t || !o.shimSafari) return m(\"Safari shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming safari.\"), d.browserShim = t, t.shimRTCIceServerUrls(n), t.shimCreateOfferLegacy(n), t.shimCallbacksAPI(n), t.shimLocalStreamsAPI(n), t.shimRemoteStreamsAPI(n), t.shimTrackEventTransceiver(n), t.shimGetUserMedia(n), a.shimRTCIceCandidate(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n), a.removeAllowExtmapMixed(n);\n          break;\n\n        default:\n          m(\"Unsupported browser!\");\n      }\n\n      return d;\n    }\n  }, {\n    \"./utils\": \"iSxC\",\n    \"./chrome/chrome_shim\": \"uI5X\",\n    \"./edge/edge_shim\": \"XRic\",\n    \"./firefox/firefox_shim\": \"Fzdr\",\n    \"./safari/safari_shim\": \"t1lL\",\n    \"./common_shim\": \"GOQK\"\n  }],\n  \"tI1X\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.default = void 0;\n\n    var e = require(\"./adapter_factory.js\"),\n        r = (0, e.adapterFactory)({\n      window: window\n    }),\n        t = r;\n\n    exports.default = t;\n  }, {\n    \"./adapter_factory.js\": \"KtlG\"\n  }],\n  \"sXtV\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n    var t = e(require(\"webrtc-adapter\"));\n    exports.webRTCAdapter = t.default;\n  }, {\n    \"webrtc-adapter\": \"tI1X\"\n  }],\n  \"I31f\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var r = require(\"./adapter\");\n\n    exports.Supports = new (function () {\n      function e() {\n        this.isIOS = [\"iPad\", \"iPhone\", \"iPod\"].includes(navigator.platform), this.supportedBrowsers = [\"firefox\", \"chrome\", \"safari\"], this.minFirefoxVersion = 59, this.minChromeVersion = 72, this.minSafariVersion = 605;\n      }\n\n      return e.prototype.isWebRTCSupported = function () {\n        return \"undefined\" != typeof RTCPeerConnection;\n      }, e.prototype.isBrowserSupported = function () {\n        var r = this.getBrowser(),\n            e = this.getVersion();\n        return !!this.supportedBrowsers.includes(r) && (\"chrome\" === r ? e >= this.minChromeVersion : \"firefox\" === r ? e >= this.minFirefoxVersion : \"safari\" === r && !this.isIOS && e >= this.minSafariVersion);\n      }, e.prototype.getBrowser = function () {\n        return r.webRTCAdapter.browserDetails.browser;\n      }, e.prototype.getVersion = function () {\n        return r.webRTCAdapter.browserDetails.version || 0;\n      }, e.prototype.isUnifiedPlanSupported = function () {\n        var e,\n            i = this.getBrowser(),\n            t = r.webRTCAdapter.browserDetails.version || 0;\n        if (\"chrome\" === i && t < 72) return !1;\n        if (\"firefox\" === i && t >= 59) return !0;\n        if (!(window.RTCRtpTransceiver && \"currentDirection\" in RTCRtpTransceiver.prototype)) return !1;\n        var o = !1;\n\n        try {\n          (e = new RTCPeerConnection()).addTransceiver(\"audio\"), o = !0;\n        } catch (n) {} finally {\n          e && e.close();\n        }\n\n        return o;\n      }, e.prototype.toString = function () {\n        return \"Supports: \\n    browser:\" + this.getBrowser() + \" \\n    version:\" + this.getVersion() + \" \\n    isIOS:\" + this.isIOS + \" \\n    isWebRTCSupported:\" + this.isWebRTCSupported() + \" \\n    isBrowserSupported:\" + this.isBrowserSupported() + \" \\n    isUnifiedPlanSupported:\" + this.isUnifiedPlanSupported();\n      }, e;\n    }())();\n  }, {\n    \"./adapter\": \"sXtV\"\n  }],\n  \"BHXf\": [function (require, module, exports) {\n    \"use strict\";\n\n    var r = this && this.__importStar || function (r) {\n      if (r && r.__esModule) return r;\n      var t = {};\n      if (null != r) for (var e in r) {\n        Object.hasOwnProperty.call(r, e) && (t[e] = r[e]);\n      }\n      return t.default = r, t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var t = r(require(\"peerjs-js-binarypack\")),\n        e = require(\"./supports\"),\n        o = {\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }, {\n        urls: \"turn:0.peerjs.com:3478\",\n        username: \"peerjs\",\n        credential: \"peerjsp\"\n      }],\n      sdpSemantics: \"unified-plan\"\n    };\n\n    exports.util = new (function () {\n      function r() {\n        this.CLOUD_HOST = \"0.peerjs.com\", this.CLOUD_PORT = 443, this.chunkedBrowsers = {\n          Chrome: 1,\n          chrome: 1\n        }, this.chunkedMTU = 16300, this.defaultConfig = o, this.browser = e.Supports.getBrowser(), this.browserVersion = e.Supports.getVersion(), this.supports = function () {\n          var r,\n              t = {\n            browser: e.Supports.isBrowserSupported(),\n            webRTC: e.Supports.isWebRTCSupported(),\n            audioVideo: !1,\n            data: !1,\n            binaryBlob: !1,\n            reliable: !1\n          };\n          if (!t.webRTC) return t;\n\n          try {\n            r = new RTCPeerConnection(o), t.audioVideo = !0;\n            var n = void 0;\n\n            try {\n              n = r.createDataChannel(\"_PEERJSTEST\", {\n                ordered: !0\n              }), t.data = !0, t.reliable = !!n.ordered;\n\n              try {\n                n.binaryType = \"blob\", t.binaryBlob = !e.Supports.isIOS;\n              } catch (a) {}\n            } catch (a) {} finally {\n              n && n.close();\n            }\n          } catch (a) {} finally {\n            r && r.close();\n          }\n\n          return t;\n        }(), this.pack = t.pack, this.unpack = t.unpack, this._dataCount = 1;\n      }\n\n      return r.prototype.noop = function () {}, r.prototype.validateId = function (r) {\n        return !r || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(r);\n      }, r.prototype.chunk = function (r) {\n        for (var t = [], e = r.size, o = Math.ceil(e / exports.util.chunkedMTU), n = 0, a = 0; a < e;) {\n          var i = Math.min(e, a + exports.util.chunkedMTU),\n              s = r.slice(a, i),\n              u = {\n            __peerData: this._dataCount,\n            n: n,\n            data: s,\n            total: o\n          };\n          t.push(u), a = i, n++;\n        }\n\n        return this._dataCount++, t;\n      }, r.prototype.blobToArrayBuffer = function (r, t) {\n        var e = new FileReader();\n        return e.onload = function (r) {\n          r.target && t(r.target.result);\n        }, e.readAsArrayBuffer(r), e;\n      }, r.prototype.binaryStringToArrayBuffer = function (r) {\n        for (var t = new Uint8Array(r.length), e = 0; e < r.length; e++) {\n          t[e] = 255 & r.charCodeAt(e);\n        }\n\n        return t.buffer;\n      }, r.prototype.randomToken = function () {\n        return Math.random().toString(36).substr(2);\n      }, r.prototype.isSecure = function () {\n        return \"https:\" === location.protocol;\n      }, r;\n    }())();\n  }, {\n    \"peerjs-js-binarypack\": \"kdPp\",\n    \"./supports\": \"I31f\"\n  }],\n  \"JJlS\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = Object.prototype.hasOwnProperty,\n        t = \"~\";\n\n    function n() {}\n\n    function r(e, t, n) {\n      this.fn = e, this.context = t, this.once = n || !1;\n    }\n\n    function o(e, n, o, s, i) {\n      if (\"function\" != typeof o) throw new TypeError(\"The listener must be a function\");\n      var c = new r(o, s || e, i),\n          f = t ? t + n : n;\n      return e._events[f] ? e._events[f].fn ? e._events[f] = [e._events[f], c] : e._events[f].push(c) : (e._events[f] = c, e._eventsCount++), e;\n    }\n\n    function s(e, t) {\n      0 == --e._eventsCount ? e._events = new n() : delete e._events[t];\n    }\n\n    function i() {\n      this._events = new n(), this._eventsCount = 0;\n    }\n\n    Object.create && (n.prototype = Object.create(null), new n().__proto__ || (t = !1)), i.prototype.eventNames = function () {\n      var n,\n          r,\n          o = [];\n      if (0 === this._eventsCount) return o;\n\n      for (r in n = this._events) {\n        e.call(n, r) && o.push(t ? r.slice(1) : r);\n      }\n\n      return Object.getOwnPropertySymbols ? o.concat(Object.getOwnPropertySymbols(n)) : o;\n    }, i.prototype.listeners = function (e) {\n      var n = t ? t + e : e,\n          r = this._events[n];\n      if (!r) return [];\n      if (r.fn) return [r.fn];\n\n      for (var o = 0, s = r.length, i = new Array(s); o < s; o++) {\n        i[o] = r[o].fn;\n      }\n\n      return i;\n    }, i.prototype.listenerCount = function (e) {\n      var n = t ? t + e : e,\n          r = this._events[n];\n      return r ? r.fn ? 1 : r.length : 0;\n    }, i.prototype.emit = function (e, n, r, o, s, i) {\n      var c = t ? t + e : e;\n      if (!this._events[c]) return !1;\n      var f,\n          u,\n          a = this._events[c],\n          l = arguments.length;\n\n      if (a.fn) {\n        switch (a.once && this.removeListener(e, a.fn, void 0, !0), l) {\n          case 1:\n            return a.fn.call(a.context), !0;\n\n          case 2:\n            return a.fn.call(a.context, n), !0;\n\n          case 3:\n            return a.fn.call(a.context, n, r), !0;\n\n          case 4:\n            return a.fn.call(a.context, n, r, o), !0;\n\n          case 5:\n            return a.fn.call(a.context, n, r, o, s), !0;\n\n          case 6:\n            return a.fn.call(a.context, n, r, o, s, i), !0;\n        }\n\n        for (u = 1, f = new Array(l - 1); u < l; u++) {\n          f[u - 1] = arguments[u];\n        }\n\n        a.fn.apply(a.context, f);\n      } else {\n        var v,\n            h = a.length;\n\n        for (u = 0; u < h; u++) {\n          switch (a[u].once && this.removeListener(e, a[u].fn, void 0, !0), l) {\n            case 1:\n              a[u].fn.call(a[u].context);\n              break;\n\n            case 2:\n              a[u].fn.call(a[u].context, n);\n              break;\n\n            case 3:\n              a[u].fn.call(a[u].context, n, r);\n              break;\n\n            case 4:\n              a[u].fn.call(a[u].context, n, r, o);\n              break;\n\n            default:\n              if (!f) for (v = 1, f = new Array(l - 1); v < l; v++) {\n                f[v - 1] = arguments[v];\n              }\n              a[u].fn.apply(a[u].context, f);\n          }\n        }\n      }\n\n      return !0;\n    }, i.prototype.on = function (e, t, n) {\n      return o(this, e, t, n, !1);\n    }, i.prototype.once = function (e, t, n) {\n      return o(this, e, t, n, !0);\n    }, i.prototype.removeListener = function (e, n, r, o) {\n      var i = t ? t + e : e;\n      if (!this._events[i]) return this;\n      if (!n) return s(this, i), this;\n      var c = this._events[i];\n      if (c.fn) c.fn !== n || o && !c.once || r && c.context !== r || s(this, i);else {\n        for (var f = 0, u = [], a = c.length; f < a; f++) {\n          (c[f].fn !== n || o && !c[f].once || r && c[f].context !== r) && u.push(c[f]);\n        }\n\n        u.length ? this._events[i] = 1 === u.length ? u[0] : u : s(this, i);\n      }\n      return this;\n    }, i.prototype.removeAllListeners = function (e) {\n      var r;\n      return e ? (r = t ? t + e : e, this._events[r] && s(this, r)) : (this._events = new n(), this._eventsCount = 0), this;\n    }, i.prototype.off = i.prototype.removeListener, i.prototype.addListener = i.prototype.on, i.prefixed = t, i.EventEmitter = i, \"undefined\" != typeof module && (module.exports = i);\n  }, {}],\n  \"WOs9\": [function (require, module, exports) {\n    \"use strict\";\n\n    var r = this && this.__read || function (r, e) {\n      var o = \"function\" == typeof Symbol && r[Symbol.iterator];\n      if (!o) return r;\n      var t,\n          n,\n          l = o.call(r),\n          i = [];\n\n      try {\n        for (; (void 0 === e || e-- > 0) && !(t = l.next()).done;) {\n          i.push(t.value);\n        }\n      } catch (s) {\n        n = {\n          error: s\n        };\n      } finally {\n        try {\n          t && !t.done && (o = l.return) && o.call(l);\n        } finally {\n          if (n) throw n.error;\n        }\n      }\n\n      return i;\n    },\n        e = this && this.__spread || function () {\n      for (var e = [], o = 0; o < arguments.length; o++) {\n        e = e.concat(r(arguments[o]));\n      }\n\n      return e;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n    var o,\n        t = \"PeerJS: \";\n    !function (r) {\n      r[r.Disabled = 0] = \"Disabled\", r[r.Errors = 1] = \"Errors\", r[r.Warnings = 2] = \"Warnings\", r[r.All = 3] = \"All\";\n    }(o = exports.LogLevel || (exports.LogLevel = {}));\n\n    var n = function () {\n      function r() {\n        this._logLevel = o.Disabled;\n      }\n\n      return Object.defineProperty(r.prototype, \"logLevel\", {\n        get: function get() {\n          return this._logLevel;\n        },\n        set: function set(r) {\n          this._logLevel = r;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), r.prototype.log = function () {\n        for (var r = [], t = 0; t < arguments.length; t++) {\n          r[t] = arguments[t];\n        }\n\n        this._logLevel >= o.All && this._print.apply(this, e([o.All], r));\n      }, r.prototype.warn = function () {\n        for (var r = [], t = 0; t < arguments.length; t++) {\n          r[t] = arguments[t];\n        }\n\n        this._logLevel >= o.Warnings && this._print.apply(this, e([o.Warnings], r));\n      }, r.prototype.error = function () {\n        for (var r = [], t = 0; t < arguments.length; t++) {\n          r[t] = arguments[t];\n        }\n\n        this._logLevel >= o.Errors && this._print.apply(this, e([o.Errors], r));\n      }, r.prototype.setLogFunction = function (r) {\n        this._print = r;\n      }, r.prototype._print = function (r) {\n        for (var n = [], l = 1; l < arguments.length; l++) {\n          n[l - 1] = arguments[l];\n        }\n\n        var i = e([t], n);\n\n        for (var s in i) {\n          i[s] instanceof Error && (i[s] = \"(\" + i[s].name + \") \" + i[s].message);\n        }\n\n        r >= o.All ? console.log.apply(console, e(i)) : r >= o.Warnings ? console.warn.apply(console, e([\"WARNING\"], i)) : r >= o.Errors && console.error.apply(console, e([\"ERROR\"], i));\n      }, r;\n    }();\n\n    exports.default = new n();\n  }, {}],\n  \"ZRYf\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e, r, n, o, t, a, i;\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), function (e) {\n      e.Open = \"open\", e.Stream = \"stream\", e.Data = \"data\", e.Close = \"close\", e.Error = \"error\", e.IceStateChanged = \"iceStateChanged\";\n    }(e = exports.ConnectionEventType || (exports.ConnectionEventType = {})), function (e) {\n      e.Data = \"data\", e.Media = \"media\";\n    }(r = exports.ConnectionType || (exports.ConnectionType = {})), function (e) {\n      e.Open = \"open\", e.Close = \"close\", e.Connection = \"connection\", e.Call = \"call\", e.Disconnected = \"disconnected\", e.Error = \"error\";\n    }(n = exports.PeerEventType || (exports.PeerEventType = {})), function (e) {\n      e.BrowserIncompatible = \"browser-incompatible\", e.Disconnected = \"disconnected\", e.InvalidID = \"invalid-id\", e.InvalidKey = \"invalid-key\", e.Network = \"network\", e.PeerUnavailable = \"peer-unavailable\", e.SslUnavailable = \"ssl-unavailable\", e.ServerError = \"server-error\", e.SocketError = \"socket-error\", e.SocketClosed = \"socket-closed\", e.UnavailableID = \"unavailable-id\", e.WebRTC = \"webrtc\";\n    }(o = exports.PeerErrorType || (exports.PeerErrorType = {})), function (e) {\n      e.Binary = \"binary\", e.BinaryUTF8 = \"binary-utf8\", e.JSON = \"json\";\n    }(t = exports.SerializationType || (exports.SerializationType = {})), function (e) {\n      e.Message = \"message\", e.Disconnected = \"disconnected\", e.Error = \"error\", e.Close = \"close\";\n    }(a = exports.SocketEventType || (exports.SocketEventType = {})), function (e) {\n      e.Heartbeat = \"HEARTBEAT\", e.Candidate = \"CANDIDATE\", e.Offer = \"OFFER\", e.Answer = \"ANSWER\", e.Open = \"OPEN\", e.Error = \"ERROR\", e.IdTaken = \"ID-TAKEN\", e.InvalidKey = \"INVALID-KEY\", e.Leave = \"LEAVE\", e.Expire = \"EXPIRE\";\n    }(i = exports.ServerMessageType || (exports.ServerMessageType = {}));\n  }, {}],\n  \"wJlv\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e = function e(t, n) {\n        return (_e = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var n in t) {\n            t.hasOwnProperty(n) && (e[n] = t[n]);\n          }\n        })(t, n);\n      };\n\n      return function (t, n) {\n        function s() {\n          this.constructor = t;\n        }\n\n        _e(t, n), t.prototype = null === n ? Object.create(n) : (s.prototype = n.prototype, new s());\n      };\n    }(),\n        t = this && this.__read || function (e, t) {\n      var n = \"function\" == typeof Symbol && e[Symbol.iterator];\n      if (!n) return e;\n      var s,\n          o,\n          r = n.call(e),\n          i = [];\n\n      try {\n        for (; (void 0 === t || t-- > 0) && !(s = r.next()).done;) {\n          i.push(s.value);\n        }\n      } catch (c) {\n        o = {\n          error: c\n        };\n      } finally {\n        try {\n          s && !s.done && (n = r.return) && n.call(r);\n        } finally {\n          if (o) throw o.error;\n        }\n      }\n\n      return i;\n    },\n        n = this && this.__spread || function () {\n      for (var e = [], n = 0; n < arguments.length; n++) {\n        e = e.concat(t(arguments[n]));\n      }\n\n      return e;\n    },\n        s = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          n = t && e[t],\n          s = 0;\n      if (n) return n.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && s >= e.length && (e = void 0), {\n            value: e && e[s++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        o = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var r = require(\"eventemitter3\"),\n        i = o(require(\"./logger\")),\n        c = require(\"./enums\"),\n        a = function (t) {\n      function o(e, n, s, o, r, i) {\n        void 0 === i && (i = 5e3);\n        var c = t.call(this) || this;\n        c.pingInterval = i, c._disconnected = !0, c._messagesQueue = [];\n        var a = e ? \"wss://\" : \"ws://\";\n        return c._baseUrl = a + n + \":\" + s + o + \"peerjs?key=\" + r, c;\n      }\n\n      return e(o, t), o.prototype.start = function (e, t) {\n        var n = this;\n        this._id = e;\n        var s = this._baseUrl + \"&id=\" + e + \"&token=\" + t;\n        !this._socket && this._disconnected && (this._socket = new WebSocket(s), this._disconnected = !1, this._socket.onmessage = function (e) {\n          var t;\n\n          try {\n            t = JSON.parse(e.data), i.default.log(\"Server message received:\", t);\n          } catch (s) {\n            return void i.default.log(\"Invalid server message\", e.data);\n          }\n\n          n.emit(c.SocketEventType.Message, t);\n        }, this._socket.onclose = function (e) {\n          n._disconnected || (i.default.log(\"Socket closed.\", e), n._cleanup(), n._disconnected = !0, n.emit(c.SocketEventType.Disconnected));\n        }, this._socket.onopen = function () {\n          n._disconnected || (n._sendQueuedMessages(), i.default.log(\"Socket open\"), n._scheduleHeartbeat());\n        });\n      }, o.prototype._scheduleHeartbeat = function () {\n        var e = this;\n        this._wsPingTimer = setTimeout(function () {\n          e._sendHeartbeat();\n        }, this.pingInterval);\n      }, o.prototype._sendHeartbeat = function () {\n        if (this._wsOpen()) {\n          var e = JSON.stringify({\n            type: c.ServerMessageType.Heartbeat\n          });\n          this._socket.send(e), this._scheduleHeartbeat();\n        } else i.default.log(\"Cannot send heartbeat, because socket closed\");\n      }, o.prototype._wsOpen = function () {\n        return !!this._socket && 1 === this._socket.readyState;\n      }, o.prototype._sendQueuedMessages = function () {\n        var e,\n            t,\n            o = n(this._messagesQueue);\n        this._messagesQueue = [];\n\n        try {\n          for (var r = s(o), i = r.next(); !i.done; i = r.next()) {\n            var c = i.value;\n            this.send(c);\n          }\n        } catch (a) {\n          e = {\n            error: a\n          };\n        } finally {\n          try {\n            i && !i.done && (t = r.return) && t.call(r);\n          } finally {\n            if (e) throw e.error;\n          }\n        }\n      }, o.prototype.send = function (e) {\n        if (!this._disconnected) if (this._id) {\n          if (e.type) {\n            if (this._wsOpen()) {\n              var t = JSON.stringify(e);\n\n              this._socket.send(t);\n            }\n          } else this.emit(c.SocketEventType.Error, \"Invalid message\");\n        } else this._messagesQueue.push(e);\n      }, o.prototype.close = function () {\n        this._disconnected || (this._cleanup(), this._disconnected = !0);\n      }, o.prototype._cleanup = function () {\n        this._socket && (this._socket.onopen = this._socket.onmessage = this._socket.onclose = null, this._socket.close(), this._socket = void 0), clearTimeout(this._wsPingTimer);\n      }, o;\n    }(r.EventEmitter);\n\n    exports.Socket = a;\n  }, {\n    \"eventemitter3\": \"JJlS\",\n    \"./logger\": \"WOs9\",\n    \"./enums\": \"ZRYf\"\n  }],\n  \"HCdX\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__assign || function () {\n      return (e = Object.assign || function (e) {\n        for (var n, t = 1, o = arguments.length; t < o; t++) {\n          for (var i in n = arguments[t]) {\n            Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);\n          }\n        }\n\n        return e;\n      }).apply(this, arguments);\n    },\n        n = this && this.__awaiter || function (e, n, t, o) {\n      return new (t || (t = Promise))(function (i, r) {\n        function c(e) {\n          try {\n            s(o.next(e));\n          } catch (n) {\n            r(n);\n          }\n        }\n\n        function a(e) {\n          try {\n            s(o.throw(e));\n          } catch (n) {\n            r(n);\n          }\n        }\n\n        function s(e) {\n          var n;\n          e.done ? i(e.value) : (n = e.value, n instanceof t ? n : new t(function (e) {\n            e(n);\n          })).then(c, a);\n        }\n\n        s((o = o.apply(e, n || [])).next());\n      });\n    },\n        t = this && this.__generator || function (e, n) {\n      var t,\n          o,\n          i,\n          r,\n          c = {\n        label: 0,\n        sent: function sent() {\n          if (1 & i[0]) throw i[1];\n          return i[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return r = {\n        next: a(0),\n        throw: a(1),\n        return: a(2)\n      }, \"function\" == typeof Symbol && (r[Symbol.iterator] = function () {\n        return this;\n      }), r;\n\n      function a(r) {\n        return function (a) {\n          return function (r) {\n            if (t) throw new TypeError(\"Generator is already executing.\");\n\n            for (; c;) {\n              try {\n                if (t = 1, o && (i = 2 & r[0] ? o.return : r[0] ? o.throw || ((i = o.return) && i.call(o), 0) : o.next) && !(i = i.call(o, r[1])).done) return i;\n\n                switch (o = 0, i && (r = [2 & r[0], i.value]), r[0]) {\n                  case 0:\n                  case 1:\n                    i = r;\n                    break;\n\n                  case 4:\n                    return c.label++, {\n                      value: r[1],\n                      done: !1\n                    };\n\n                  case 5:\n                    c.label++, o = r[1], r = [0];\n                    continue;\n\n                  case 7:\n                    r = c.ops.pop(), c.trys.pop();\n                    continue;\n\n                  default:\n                    if (!(i = (i = c.trys).length > 0 && i[i.length - 1]) && (6 === r[0] || 2 === r[0])) {\n                      c = 0;\n                      continue;\n                    }\n\n                    if (3 === r[0] && (!i || r[1] > i[0] && r[1] < i[3])) {\n                      c.label = r[1];\n                      break;\n                    }\n\n                    if (6 === r[0] && c.label < i[1]) {\n                      c.label = i[1], i = r;\n                      break;\n                    }\n\n                    if (i && c.label < i[2]) {\n                      c.label = i[2], c.ops.push(r);\n                      break;\n                    }\n\n                    i[2] && c.ops.pop(), c.trys.pop();\n                    continue;\n                }\n\n                r = n.call(e, c);\n              } catch (a) {\n                r = [6, a], o = 0;\n              } finally {\n                t = i = 0;\n              }\n            }\n\n            if (5 & r[0]) throw r[1];\n            return {\n              value: r[0] ? r[1] : void 0,\n              done: !0\n            };\n          }([r, a]);\n        };\n      }\n    },\n        o = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var i = require(\"./util\"),\n        r = o(require(\"./logger\")),\n        c = require(\"./enums\"),\n        a = function () {\n      function o(e) {\n        this.connection = e;\n      }\n\n      return o.prototype.startConnection = function (e) {\n        var n = this._startPeerConnection();\n\n        if (this.connection.peerConnection = n, this.connection.type === c.ConnectionType.Media && e._stream && this._addTracksToConnection(e._stream, n), e.originator) {\n          if (this.connection.type === c.ConnectionType.Data) {\n            var t = this.connection,\n                o = {\n              ordered: !!e.reliable\n            },\n                i = n.createDataChannel(t.label, o);\n            t.initialize(i);\n          }\n\n          this._makeOffer();\n        } else this.handleSDP(\"OFFER\", e.sdp);\n      }, o.prototype._startPeerConnection = function () {\n        r.default.log(\"Creating RTCPeerConnection.\");\n        var e = new RTCPeerConnection(this.connection.provider.options.config);\n        return this._setupListeners(e), e;\n      }, o.prototype._setupListeners = function (e) {\n        var n = this,\n            t = this.connection.peer,\n            o = this.connection.connectionId,\n            a = this.connection.type,\n            s = this.connection.provider;\n        r.default.log(\"Listening for ICE candidates.\"), e.onicecandidate = function (e) {\n          e.candidate && e.candidate.candidate && (r.default.log(\"Received ICE candidates for \" + t + \":\", e.candidate), s.socket.send({\n            type: c.ServerMessageType.Candidate,\n            payload: {\n              candidate: e.candidate,\n              type: a,\n              connectionId: o\n            },\n            dst: t\n          }));\n        }, e.oniceconnectionstatechange = function () {\n          switch (e.iceConnectionState) {\n            case \"failed\":\n              r.default.log(\"iceConnectionState is failed, closing connections to \" + t), n.connection.emit(c.ConnectionEventType.Error, new Error(\"Negotiation of connection to \" + t + \" failed.\")), n.connection.close();\n              break;\n\n            case \"closed\":\n              r.default.log(\"iceConnectionState is closed, closing connections to \" + t), n.connection.emit(c.ConnectionEventType.Error, new Error(\"Connection to \" + t + \" closed.\")), n.connection.close();\n              break;\n\n            case \"disconnected\":\n              r.default.log(\"iceConnectionState is disconnected, closing connections to \" + t), n.connection.emit(c.ConnectionEventType.Error, new Error(\"Connection to \" + t + \" disconnected.\")), n.connection.close();\n              break;\n\n            case \"completed\":\n              e.onicecandidate = i.util.noop;\n          }\n\n          n.connection.emit(c.ConnectionEventType.IceStateChanged, e.iceConnectionState);\n        }, r.default.log(\"Listening for data channel\"), e.ondatachannel = function (e) {\n          r.default.log(\"Received data channel\");\n          var n = e.channel;\n          s.getConnection(t, o).initialize(n);\n        }, r.default.log(\"Listening for remote stream\"), e.ontrack = function (e) {\n          r.default.log(\"Received remote stream\");\n          var i = e.streams[0],\n              a = s.getConnection(t, o);\n\n          if (a.type === c.ConnectionType.Media) {\n            var d = a;\n\n            n._addStreamToMediaConnection(i, d);\n          }\n        };\n      }, o.prototype.cleanup = function () {\n        r.default.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n        var e = this.connection.peerConnection;\n\n        if (e) {\n          this.connection.peerConnection = null, e.onicecandidate = e.oniceconnectionstatechange = e.ondatachannel = e.ontrack = function () {};\n          var n = \"closed\" !== e.signalingState,\n              t = !1;\n\n          if (this.connection.type === c.ConnectionType.Data) {\n            var o = this.connection.dataChannel;\n            o && (t = !!o.readyState && \"closed\" !== o.readyState);\n          }\n\n          (n || t) && e.close();\n        }\n      }, o.prototype._makeOffer = function () {\n        return n(this, void 0, Promise, function () {\n          var n, o, a, s, d, l, u;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                n = this.connection.peerConnection, o = this.connection.provider, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 7,, 8]), [4, n.createOffer(this.connection.options.constraints)];\n\n              case 2:\n                a = t.sent(), r.default.log(\"Created offer.\"), this.connection.options.sdpTransform && \"function\" == typeof this.connection.options.sdpTransform && (a.sdp = this.connection.options.sdpTransform(a.sdp) || a.sdp), t.label = 3;\n\n              case 3:\n                return t.trys.push([3, 5,, 6]), [4, n.setLocalDescription(a)];\n\n              case 4:\n                return t.sent(), r.default.log(\"Set localDescription:\", a, \"for:\" + this.connection.peer), s = {\n                  sdp: a,\n                  type: this.connection.type,\n                  connectionId: this.connection.connectionId,\n                  metadata: this.connection.metadata,\n                  browser: i.util.browser\n                }, this.connection.type === c.ConnectionType.Data && (d = this.connection, s = e(e({}, s), {\n                  label: d.label,\n                  reliable: d.reliable,\n                  serialization: d.serialization\n                })), o.socket.send({\n                  type: c.ServerMessageType.Offer,\n                  payload: s,\n                  dst: this.connection.peer\n                }), [3, 6];\n\n              case 5:\n                return \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\" != (l = t.sent()) && (o.emitError(c.PeerErrorType.WebRTC, l), r.default.log(\"Failed to setLocalDescription, \", l)), [3, 6];\n\n              case 6:\n                return [3, 8];\n\n              case 7:\n                return u = t.sent(), o.emitError(c.PeerErrorType.WebRTC, u), r.default.log(\"Failed to createOffer, \", u), [3, 8];\n\n              case 8:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype._makeAnswer = function () {\n        return n(this, void 0, Promise, function () {\n          var e, n, o, a, s;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                e = this.connection.peerConnection, n = this.connection.provider, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 7,, 8]), [4, e.createAnswer()];\n\n              case 2:\n                o = t.sent(), r.default.log(\"Created answer.\"), this.connection.options.sdpTransform && \"function\" == typeof this.connection.options.sdpTransform && (o.sdp = this.connection.options.sdpTransform(o.sdp) || o.sdp), t.label = 3;\n\n              case 3:\n                return t.trys.push([3, 5,, 6]), [4, e.setLocalDescription(o)];\n\n              case 4:\n                return t.sent(), r.default.log(\"Set localDescription:\", o, \"for:\" + this.connection.peer), n.socket.send({\n                  type: c.ServerMessageType.Answer,\n                  payload: {\n                    sdp: o,\n                    type: this.connection.type,\n                    connectionId: this.connection.connectionId,\n                    browser: i.util.browser\n                  },\n                  dst: this.connection.peer\n                }), [3, 6];\n\n              case 5:\n                return a = t.sent(), n.emitError(c.PeerErrorType.WebRTC, a), r.default.log(\"Failed to setLocalDescription, \", a), [3, 6];\n\n              case 6:\n                return [3, 8];\n\n              case 7:\n                return s = t.sent(), n.emitError(c.PeerErrorType.WebRTC, s), r.default.log(\"Failed to create answer, \", s), [3, 8];\n\n              case 8:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype.handleSDP = function (e, o) {\n        return n(this, void 0, Promise, function () {\n          var n, i, a, s;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                o = new RTCSessionDescription(o), n = this.connection.peerConnection, i = this.connection.provider, r.default.log(\"Setting remote description\", o), a = this, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 5,, 6]), [4, n.setRemoteDescription(o)];\n\n              case 2:\n                return t.sent(), r.default.log(\"Set remoteDescription:\" + e + \" for:\" + this.connection.peer), \"OFFER\" !== e ? [3, 4] : [4, a._makeAnswer()];\n\n              case 3:\n                t.sent(), t.label = 4;\n\n              case 4:\n                return [3, 6];\n\n              case 5:\n                return s = t.sent(), i.emitError(c.PeerErrorType.WebRTC, s), r.default.log(\"Failed to setRemoteDescription, \", s), [3, 6];\n\n              case 6:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype.handleCandidate = function (e) {\n        return n(this, void 0, Promise, function () {\n          var n, o, i, a, s, d;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                r.default.log(\"handleCandidate:\", e), n = e.candidate, o = e.sdpMLineIndex, i = e.sdpMid, a = this.connection.peerConnection, s = this.connection.provider, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 3,, 4]), [4, a.addIceCandidate(new RTCIceCandidate({\n                  sdpMid: i,\n                  sdpMLineIndex: o,\n                  candidate: n\n                }))];\n\n              case 2:\n                return t.sent(), r.default.log(\"Added ICE candidate for:\" + this.connection.peer), [3, 4];\n\n              case 3:\n                return d = t.sent(), s.emitError(c.PeerErrorType.WebRTC, d), r.default.log(\"Failed to handleCandidate, \", d), [3, 4];\n\n              case 4:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype._addTracksToConnection = function (e, n) {\n        if (r.default.log(\"add tracks from stream \" + e.id + \" to peer connection\"), !n.addTrack) return r.default.error(\"Your browser does't support RTCPeerConnection#addTrack. Ignored.\");\n        e.getTracks().forEach(function (t) {\n          n.addTrack(t, e);\n        });\n      }, o.prototype._addStreamToMediaConnection = function (e, n) {\n        r.default.log(\"add stream \" + e.id + \" to media connection \" + n.connectionId), n.addStream(e);\n      }, o;\n    }();\n\n    exports.Negotiator = a;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./enums\": \"ZRYf\"\n  }],\n  \"tQFK\": [function (require, module, exports) {\n    \"use strict\";\n\n    var t = this && this.__extends || function () {\n      var _t2 = function t(e, r) {\n        return (_t2 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (t, e) {\n          t.__proto__ = e;\n        } || function (t, e) {\n          for (var r in e) {\n            e.hasOwnProperty(r) && (t[r] = e[r]);\n          }\n        })(e, r);\n      };\n\n      return function (e, r) {\n        function n() {\n          this.constructor = e;\n        }\n\n        _t2(e, r), e.prototype = null === r ? Object.create(r) : (n.prototype = r.prototype, new n());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var e = require(\"eventemitter3\"),\n        r = function (e) {\n      function r(t, r, n) {\n        var o = e.call(this) || this;\n        return o.peer = t, o.provider = r, o.options = n, o._open = !1, o.metadata = n.metadata, o;\n      }\n\n      return t(r, e), Object.defineProperty(r.prototype, \"open\", {\n        get: function get() {\n          return this._open;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), r;\n    }(e.EventEmitter);\n\n    exports.BaseConnection = r;\n  }, {\n    \"eventemitter3\": \"JJlS\"\n  }],\n  \"dbHP\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e2 = function e(t, o) {\n        return (_e2 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var o in t) {\n            t.hasOwnProperty(o) && (e[o] = t[o]);\n          }\n        })(t, o);\n      };\n\n      return function (t, o) {\n        function r() {\n          this.constructor = t;\n        }\n\n        _e2(t, o), t.prototype = null === o ? Object.create(o) : (r.prototype = o.prototype, new r());\n      };\n    }(),\n        t = this && this.__assign || function () {\n      return (t = Object.assign || function (e) {\n        for (var t, o = 1, r = arguments.length; o < r; o++) {\n          for (var n in t = arguments[o]) {\n            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n          }\n        }\n\n        return e;\n      }).apply(this, arguments);\n    },\n        o = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          o = t && e[t],\n          r = 0;\n      if (o) return o.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && r >= e.length && (e = void 0), {\n            value: e && e[r++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        r = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var n = require(\"./util\"),\n        i = r(require(\"./logger\")),\n        a = require(\"./negotiator\"),\n        s = require(\"./enums\"),\n        l = require(\"./baseconnection\"),\n        c = function (r) {\n      function l(e, t, o) {\n        var i = r.call(this, e, t, o) || this;\n        return i._localStream = i.options._stream, i.connectionId = i.options.connectionId || l.ID_PREFIX + n.util.randomToken(), i._negotiator = new a.Negotiator(i), i._localStream && i._negotiator.startConnection({\n          _stream: i._localStream,\n          originator: !0\n        }), i;\n      }\n\n      return e(l, r), Object.defineProperty(l.prototype, \"type\", {\n        get: function get() {\n          return s.ConnectionType.Media;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(l.prototype, \"localStream\", {\n        get: function get() {\n          return this._localStream;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(l.prototype, \"remoteStream\", {\n        get: function get() {\n          return this._remoteStream;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), l.prototype.addStream = function (e) {\n        i.default.log(\"Receiving stream\", e), this._remoteStream = e, r.prototype.emit.call(this, s.ConnectionEventType.Stream, e);\n      }, l.prototype.handleMessage = function (e) {\n        var t = e.type,\n            o = e.payload;\n\n        switch (e.type) {\n          case s.ServerMessageType.Answer:\n            this._negotiator.handleSDP(t, o.sdp), this._open = !0;\n            break;\n\n          case s.ServerMessageType.Candidate:\n            this._negotiator.handleCandidate(o.candidate);\n\n            break;\n\n          default:\n            i.default.warn(\"Unrecognized message type:\" + t + \" from peer:\" + this.peer);\n        }\n      }, l.prototype.answer = function (e, r) {\n        var n, a;\n        if (void 0 === r && (r = {}), this._localStream) i.default.warn(\"Local stream already exists on this MediaConnection. Are you answering a call twice?\");else {\n          this._localStream = e, r && r.sdpTransform && (this.options.sdpTransform = r.sdpTransform), this._negotiator.startConnection(t(t({}, this.options._payload), {\n            _stream: e\n          }));\n\n          var s = this.provider._getMessages(this.connectionId);\n\n          try {\n            for (var l = o(s), c = l.next(); !c.done; c = l.next()) {\n              var p = c.value;\n              this.handleMessage(p);\n            }\n          } catch (u) {\n            n = {\n              error: u\n            };\n          } finally {\n            try {\n              c && !c.done && (a = l.return) && a.call(l);\n            } finally {\n              if (n) throw n.error;\n            }\n          }\n\n          this._open = !0;\n        }\n      }, l.prototype.close = function () {\n        this._negotiator && (this._negotiator.cleanup(), this._negotiator = null), this._localStream = null, this._remoteStream = null, this.provider && (this.provider._removeConnection(this), this.provider = null), this.options && this.options._stream && (this.options._stream = null), this.open && (this._open = !1, r.prototype.emit.call(this, s.ConnectionEventType.Close));\n      }, l.ID_PREFIX = \"mc_\", l;\n    }(l.BaseConnection);\n\n    exports.MediaConnection = c;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./negotiator\": \"HCdX\",\n    \"./enums\": \"ZRYf\",\n    \"./baseconnection\": \"tQFK\"\n  }],\n  \"GGp6\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e3 = function e(t, r) {\n        return (_e3 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var r in t) {\n            t.hasOwnProperty(r) && (e[r] = t[r]);\n          }\n        })(t, r);\n      };\n\n      return function (t, r) {\n        function o() {\n          this.constructor = t;\n        }\n\n        _e3(t, r), t.prototype = null === r ? Object.create(r) : (o.prototype = r.prototype, new o());\n      };\n    }(),\n        t = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var r = require(\"eventemitter3\"),\n        o = t(require(\"./logger\")),\n        n = function (t) {\n      function r() {\n        var e = t.call(this) || this;\n        return e.fileReader = new FileReader(), e._queue = [], e._processing = !1, e.fileReader.onload = function (t) {\n          e._processing = !1, t.target && e.emit(\"done\", t.target.result), e.doNextTask();\n        }, e.fileReader.onerror = function (t) {\n          o.default.error(\"EncodingQueue error:\", t), e._processing = !1, e.destroy(), e.emit(\"error\", t);\n        }, e;\n      }\n\n      return e(r, t), Object.defineProperty(r.prototype, \"queue\", {\n        get: function get() {\n          return this._queue;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(r.prototype, \"size\", {\n        get: function get() {\n          return this.queue.length;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(r.prototype, \"processing\", {\n        get: function get() {\n          return this._processing;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), r.prototype.enque = function (e) {\n        this.queue.push(e), this.processing || this.doNextTask();\n      }, r.prototype.destroy = function () {\n        this.fileReader.abort(), this._queue = [];\n      }, r.prototype.doNextTask = function () {\n        0 !== this.size && (this.processing || (this._processing = !0, this.fileReader.readAsArrayBuffer(this.queue.shift())));\n      }, r;\n    }(r.EventEmitter);\n\n    exports.EncodingQueue = n;\n  }, {\n    \"eventemitter3\": \"JJlS\",\n    \"./logger\": \"WOs9\"\n  }],\n  \"GBTQ\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e4 = function e(t, n) {\n        return (_e4 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var n in t) {\n            t.hasOwnProperty(n) && (e[n] = t[n]);\n          }\n        })(t, n);\n      };\n\n      return function (t, n) {\n        function i() {\n          this.constructor = t;\n        }\n\n        _e4(t, n), t.prototype = null === n ? Object.create(n) : (i.prototype = n.prototype, new i());\n      };\n    }(),\n        t = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          n = t && e[t],\n          i = 0;\n      if (n) return n.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && i >= e.length && (e = void 0), {\n            value: e && e[i++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        n = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var i = require(\"./util\"),\n        o = n(require(\"./logger\")),\n        r = require(\"./negotiator\"),\n        a = require(\"./enums\"),\n        s = require(\"./baseconnection\"),\n        u = require(\"./encodingQueue\"),\n        l = function (n) {\n      function s(e, t, l) {\n        var f = n.call(this, e, t, l) || this;\n        return f.stringify = JSON.stringify, f.parse = JSON.parse, f._buffer = [], f._bufferSize = 0, f._buffering = !1, f._chunkedData = {}, f._encodingQueue = new u.EncodingQueue(), f.connectionId = f.options.connectionId || s.ID_PREFIX + i.util.randomToken(), f.label = f.options.label || f.connectionId, f.serialization = f.options.serialization || a.SerializationType.Binary, f.reliable = !!f.options.reliable, f._encodingQueue.on(\"done\", function (e) {\n          f._bufferedSend(e);\n        }), f._encodingQueue.on(\"error\", function () {\n          o.default.error(\"DC#\" + f.connectionId + \": Error occured in encoding from blob to arraybuffer, close DC\"), f.close();\n        }), f._negotiator = new r.Negotiator(f), f._negotiator.startConnection(f.options._payload || {\n          originator: !0\n        }), f;\n      }\n\n      return e(s, n), Object.defineProperty(s.prototype, \"type\", {\n        get: function get() {\n          return a.ConnectionType.Data;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(s.prototype, \"dataChannel\", {\n        get: function get() {\n          return this._dc;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(s.prototype, \"bufferSize\", {\n        get: function get() {\n          return this._bufferSize;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), s.prototype.initialize = function (e) {\n        this._dc = e, this._configureDataChannel();\n      }, s.prototype._configureDataChannel = function () {\n        var e = this;\n        i.util.supports.binaryBlob && !i.util.supports.reliable || (this.dataChannel.binaryType = \"arraybuffer\"), this.dataChannel.onopen = function () {\n          o.default.log(\"DC#\" + e.connectionId + \" dc connection success\"), e._open = !0, e.emit(a.ConnectionEventType.Open);\n        }, this.dataChannel.onmessage = function (t) {\n          o.default.log(\"DC#\" + e.connectionId + \" dc onmessage:\", t.data), e._handleDataMessage(t);\n        }, this.dataChannel.onclose = function () {\n          o.default.log(\"DC#\" + e.connectionId + \" dc closed for:\", e.peer), e.close();\n        };\n      }, s.prototype._handleDataMessage = function (e) {\n        var t = this,\n            o = e.data,\n            r = o.constructor,\n            s = o;\n\n        if (this.serialization === a.SerializationType.Binary || this.serialization === a.SerializationType.BinaryUTF8) {\n          if (r === Blob) return void i.util.blobToArrayBuffer(o, function (e) {\n            var n = i.util.unpack(e);\n            t.emit(a.ConnectionEventType.Data, n);\n          });\n          if (r === ArrayBuffer) s = i.util.unpack(o);else if (r === String) {\n            var u = i.util.binaryStringToArrayBuffer(o);\n            s = i.util.unpack(u);\n          }\n        } else this.serialization === a.SerializationType.JSON && (s = this.parse(o));\n\n        s.__peerData ? this._handleChunk(s) : n.prototype.emit.call(this, a.ConnectionEventType.Data, s);\n      }, s.prototype._handleChunk = function (e) {\n        var t = e.__peerData,\n            n = this._chunkedData[t] || {\n          data: [],\n          count: 0,\n          total: e.total\n        };\n\n        if (n.data[e.n] = e.data, n.count++, this._chunkedData[t] = n, n.total === n.count) {\n          delete this._chunkedData[t];\n          var i = new Blob(n.data);\n\n          this._handleDataMessage({\n            data: i\n          });\n        }\n      }, s.prototype.close = function () {\n        this._buffer = [], this._bufferSize = 0, this._chunkedData = {}, this._negotiator && (this._negotiator.cleanup(), this._negotiator = null), this.provider && (this.provider._removeConnection(this), this.provider = null), this.dataChannel && (this.dataChannel.onopen = null, this.dataChannel.onmessage = null, this.dataChannel.onclose = null, this._dc = null), this._encodingQueue && (this._encodingQueue.destroy(), this._encodingQueue.removeAllListeners(), this._encodingQueue = null), this.open && (this._open = !1, n.prototype.emit.call(this, a.ConnectionEventType.Close));\n      }, s.prototype.send = function (e, t) {\n        if (this.open) {\n          if (this.serialization === a.SerializationType.JSON) this._bufferedSend(this.stringify(e));else if (this.serialization === a.SerializationType.Binary || this.serialization === a.SerializationType.BinaryUTF8) {\n            var o = i.util.pack(e);\n            if (!t && o.size > i.util.chunkedMTU) return void this._sendChunks(o);\n            i.util.supports.binaryBlob ? this._bufferedSend(o) : this._encodingQueue.enque(o);\n          } else this._bufferedSend(e);\n        } else n.prototype.emit.call(this, a.ConnectionEventType.Error, new Error(\"Connection is not open. You should listen for the `open` event before sending messages.\"));\n      }, s.prototype._bufferedSend = function (e) {\n        !this._buffering && this._trySend(e) || (this._buffer.push(e), this._bufferSize = this._buffer.length);\n      }, s.prototype._trySend = function (e) {\n        var t = this;\n        if (!this.open) return !1;\n        if (this.dataChannel.bufferedAmount > s.MAX_BUFFERED_AMOUNT) return this._buffering = !0, setTimeout(function () {\n          t._buffering = !1, t._tryBuffer();\n        }, 50), !1;\n\n        try {\n          this.dataChannel.send(e);\n        } catch (n) {\n          return o.default.error(\"DC#:\" + this.connectionId + \" Error when sending:\", n), this._buffering = !0, this.close(), !1;\n        }\n\n        return !0;\n      }, s.prototype._tryBuffer = function () {\n        if (this.open && 0 !== this._buffer.length) {\n          var e = this._buffer[0];\n          this._trySend(e) && (this._buffer.shift(), this._bufferSize = this._buffer.length, this._tryBuffer());\n        }\n      }, s.prototype._sendChunks = function (e) {\n        var n,\n            r,\n            a = i.util.chunk(e);\n        o.default.log(\"DC#\" + this.connectionId + \" Try to send \" + a.length + \" chunks...\");\n\n        try {\n          for (var s = t(a), u = s.next(); !u.done; u = s.next()) {\n            var l = u.value;\n            this.send(l, !0);\n          }\n        } catch (f) {\n          n = {\n            error: f\n          };\n        } finally {\n          try {\n            u && !u.done && (r = s.return) && r.call(s);\n          } finally {\n            if (n) throw n.error;\n          }\n        }\n      }, s.prototype.handleMessage = function (e) {\n        var t = e.payload;\n\n        switch (e.type) {\n          case a.ServerMessageType.Answer:\n            this._negotiator.handleSDP(e.type, t.sdp);\n\n            break;\n\n          case a.ServerMessageType.Candidate:\n            this._negotiator.handleCandidate(t.candidate);\n\n            break;\n\n          default:\n            o.default.warn(\"Unrecognized message type:\", e.type, \"from peer:\", this.peer);\n        }\n      }, s.ID_PREFIX = \"dc_\", s.MAX_BUFFERED_AMOUNT = 8388608, s;\n    }(s.BaseConnection);\n\n    exports.DataConnection = l;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./negotiator\": \"HCdX\",\n    \"./enums\": \"ZRYf\",\n    \"./baseconnection\": \"tQFK\",\n    \"./encodingQueue\": \"GGp6\"\n  }],\n  \"in7L\": [function (require, module, exports) {\n    \"use strict\";\n\n    var t = this && this.__awaiter || function (t, e, r, o) {\n      return new (r || (r = Promise))(function (n, s) {\n        function i(t) {\n          try {\n            a(o.next(t));\n          } catch (e) {\n            s(e);\n          }\n        }\n\n        function u(t) {\n          try {\n            a(o.throw(t));\n          } catch (e) {\n            s(e);\n          }\n        }\n\n        function a(t) {\n          var e;\n          t.done ? n(t.value) : (e = t.value, e instanceof r ? e : new r(function (t) {\n            t(e);\n          })).then(i, u);\n        }\n\n        a((o = o.apply(t, e || [])).next());\n      });\n    },\n        e = this && this.__generator || function (t, e) {\n      var r,\n          o,\n          n,\n          s,\n          i = {\n        label: 0,\n        sent: function sent() {\n          if (1 & n[0]) throw n[1];\n          return n[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return s = {\n        next: u(0),\n        throw: u(1),\n        return: u(2)\n      }, \"function\" == typeof Symbol && (s[Symbol.iterator] = function () {\n        return this;\n      }), s;\n\n      function u(s) {\n        return function (u) {\n          return function (s) {\n            if (r) throw new TypeError(\"Generator is already executing.\");\n\n            for (; i;) {\n              try {\n                if (r = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, s[1])).done) return n;\n\n                switch (o = 0, n && (s = [2 & s[0], n.value]), s[0]) {\n                  case 0:\n                  case 1:\n                    n = s;\n                    break;\n\n                  case 4:\n                    return i.label++, {\n                      value: s[1],\n                      done: !1\n                    };\n\n                  case 5:\n                    i.label++, o = s[1], s = [0];\n                    continue;\n\n                  case 7:\n                    s = i.ops.pop(), i.trys.pop();\n                    continue;\n\n                  default:\n                    if (!(n = (n = i.trys).length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {\n                      i = 0;\n                      continue;\n                    }\n\n                    if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {\n                      i.label = s[1];\n                      break;\n                    }\n\n                    if (6 === s[0] && i.label < n[1]) {\n                      i.label = n[1], n = s;\n                      break;\n                    }\n\n                    if (n && i.label < n[2]) {\n                      i.label = n[2], i.ops.push(s);\n                      break;\n                    }\n\n                    n[2] && i.ops.pop(), i.trys.pop();\n                    continue;\n                }\n\n                s = e.call(t, i);\n              } catch (u) {\n                s = [6, u], o = 0;\n              } finally {\n                r = n = 0;\n              }\n            }\n\n            if (5 & s[0]) throw s[1];\n            return {\n              value: s[0] ? s[1] : void 0,\n              done: !0\n            };\n          }([s, u]);\n        };\n      }\n    },\n        r = this && this.__importDefault || function (t) {\n      return t && t.__esModule ? t : {\n        default: t\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var o = require(\"./util\"),\n        n = r(require(\"./logger\")),\n        s = function () {\n      function r(t) {\n        this._options = t;\n      }\n\n      return r.prototype._buildUrl = function (t) {\n        var e = (this._options.secure ? \"https://\" : \"http://\") + this._options.host + \":\" + this._options.port + this._options.path + this._options.key + \"/\" + t;\n        return e += \"?ts=\" + new Date().getTime() + Math.random();\n      }, r.prototype.retrieveId = function () {\n        return t(this, void 0, Promise, function () {\n          var t, r, s, i;\n          return e(this, function (e) {\n            switch (e.label) {\n              case 0:\n                t = this._buildUrl(\"id\"), e.label = 1;\n\n              case 1:\n                return e.trys.push([1, 3,, 4]), [4, fetch(t)];\n\n              case 2:\n                if (200 !== (r = e.sent()).status) throw new Error(\"Error. Status:\" + r.status);\n                return [2, r.text()];\n\n              case 3:\n                throw s = e.sent(), n.default.error(\"Error retrieving ID\", s), i = \"\", \"/\" === this._options.path && this._options.host !== o.util.CLOUD_HOST && (i = \" If you passed in a `path` to your self-hosted PeerServer, you'll also need to pass in that same path when creating a new Peer.\"), new Error(\"Could not get an ID from the server.\" + i);\n\n              case 4:\n                return [2];\n            }\n          });\n        });\n      }, r.prototype.listAllPeers = function () {\n        return t(this, void 0, Promise, function () {\n          var t, r, s, i;\n          return e(this, function (e) {\n            switch (e.label) {\n              case 0:\n                t = this._buildUrl(\"peers\"), e.label = 1;\n\n              case 1:\n                return e.trys.push([1, 3,, 4]), [4, fetch(t)];\n\n              case 2:\n                if (200 !== (r = e.sent()).status) {\n                  if (401 === r.status) throw s = \"\", s = this._options.host === o.util.CLOUD_HOST ? \"It looks like you're using the cloud server. You can email team@peerjs.com to enable peer listing for your API key.\" : \"You need to enable `allow_discovery` on your self-hosted PeerServer to use this feature.\", new Error(\"It doesn't look like you have permission to list peers IDs. \" + s);\n                  throw new Error(\"Error. Status:\" + r.status);\n                }\n\n                return [2, r.json()];\n\n              case 3:\n                throw i = e.sent(), n.default.error(\"Error retrieving list peers\", i), new Error(\"Could not get list peers from the server.\" + i);\n\n              case 4:\n                return [2];\n            }\n          });\n        });\n      }, r;\n    }();\n\n    exports.API = s;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\"\n  }],\n  \"Hxpd\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e5 = function e(t, n) {\n        return (_e5 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var n in t) {\n            t.hasOwnProperty(n) && (e[n] = t[n]);\n          }\n        })(t, n);\n      };\n\n      return function (t, n) {\n        function r() {\n          this.constructor = t;\n        }\n\n        _e5(t, n), t.prototype = null === n ? Object.create(n) : (r.prototype = n.prototype, new r());\n      };\n    }(),\n        t = this && this.__assign || function () {\n      return (t = Object.assign || function (e) {\n        for (var t, n = 1, r = arguments.length; n < r; n++) {\n          for (var o in t = arguments[n]) {\n            Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);\n          }\n        }\n\n        return e;\n      }).apply(this, arguments);\n    },\n        n = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          n = t && e[t],\n          r = 0;\n      if (n) return n.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && r >= e.length && (e = void 0), {\n            value: e && e[r++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        r = this && this.__read || function (e, t) {\n      var n = \"function\" == typeof Symbol && e[Symbol.iterator];\n      if (!n) return e;\n      var r,\n          o,\n          i = n.call(e),\n          s = [];\n\n      try {\n        for (; (void 0 === t || t-- > 0) && !(r = i.next()).done;) {\n          s.push(r.value);\n        }\n      } catch (a) {\n        o = {\n          error: a\n        };\n      } finally {\n        try {\n          r && !r.done && (n = i.return) && n.call(i);\n        } finally {\n          if (o) throw o.error;\n        }\n      }\n\n      return s;\n    },\n        o = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var i = require(\"eventemitter3\"),\n        s = require(\"./util\"),\n        a = o(require(\"./logger\")),\n        c = require(\"./socket\"),\n        l = require(\"./mediaconnection\"),\n        d = require(\"./dataconnection\"),\n        u = require(\"./enums\"),\n        p = require(\"./api\"),\n        h = function () {\n      return function () {};\n    }(),\n        f = function (o) {\n      function i(e, n) {\n        var r,\n            c = o.call(this) || this;\n        return c._id = null, c._lastServerId = null, c._destroyed = !1, c._disconnected = !1, c._open = !1, c._connections = new Map(), c._lostMessages = new Map(), e && e.constructor == Object ? n = e : e && (r = e.toString()), n = t({\n          debug: 0,\n          host: s.util.CLOUD_HOST,\n          port: s.util.CLOUD_PORT,\n          path: \"/\",\n          key: i.DEFAULT_KEY,\n          token: s.util.randomToken(),\n          config: s.util.defaultConfig\n        }, n), c._options = n, \"/\" === c._options.host && (c._options.host = window.location.hostname), c._options.path && (\"/\" !== c._options.path[0] && (c._options.path = \"/\" + c._options.path), \"/\" !== c._options.path[c._options.path.length - 1] && (c._options.path += \"/\")), void 0 === c._options.secure && c._options.host !== s.util.CLOUD_HOST ? c._options.secure = s.util.isSecure() : c._options.host == s.util.CLOUD_HOST && (c._options.secure = !0), c._options.logFunction && a.default.setLogFunction(c._options.logFunction), a.default.logLevel = c._options.debug || 0, c._api = new p.API(n), c._socket = c._createServerConnection(), s.util.supports.audioVideo || s.util.supports.data ? r && !s.util.validateId(r) ? (c._delayedAbort(u.PeerErrorType.InvalidID, 'ID \"' + r + '\" is invalid'), c) : (r ? c._initialize(r) : c._api.retrieveId().then(function (e) {\n          return c._initialize(e);\n        }).catch(function (e) {\n          return c._abort(u.PeerErrorType.ServerError, e);\n        }), c) : (c._delayedAbort(u.PeerErrorType.BrowserIncompatible, \"The current browser does not support WebRTC\"), c);\n      }\n\n      return e(i, o), Object.defineProperty(i.prototype, \"id\", {\n        get: function get() {\n          return this._id;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"options\", {\n        get: function get() {\n          return this._options;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"open\", {\n        get: function get() {\n          return this._open;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"socket\", {\n        get: function get() {\n          return this._socket;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"connections\", {\n        get: function get() {\n          var e,\n              t,\n              o = Object.create(null);\n\n          try {\n            for (var i = n(this._connections), s = i.next(); !s.done; s = i.next()) {\n              var a = r(s.value, 2),\n                  c = a[0],\n                  l = a[1];\n              o[c] = l;\n            }\n          } catch (d) {\n            e = {\n              error: d\n            };\n          } finally {\n            try {\n              s && !s.done && (t = i.return) && t.call(i);\n            } finally {\n              if (e) throw e.error;\n            }\n          }\n\n          return o;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"destroyed\", {\n        get: function get() {\n          return this._destroyed;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"disconnected\", {\n        get: function get() {\n          return this._disconnected;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), i.prototype._createServerConnection = function () {\n        var e = this,\n            t = new c.Socket(this._options.secure, this._options.host, this._options.port, this._options.path, this._options.key, this._options.pingInterval);\n        return t.on(u.SocketEventType.Message, function (t) {\n          e._handleMessage(t);\n        }), t.on(u.SocketEventType.Error, function (t) {\n          e._abort(u.PeerErrorType.SocketError, t);\n        }), t.on(u.SocketEventType.Disconnected, function () {\n          e.disconnected || (e.emitError(u.PeerErrorType.Network, \"Lost connection to server.\"), e.disconnect());\n        }), t.on(u.SocketEventType.Close, function () {\n          e.disconnected || e._abort(u.PeerErrorType.SocketClosed, \"Underlying socket is already closed.\");\n        }), t;\n      }, i.prototype._initialize = function (e) {\n        this._id = e, this.socket.start(e, this._options.token);\n      }, i.prototype._handleMessage = function (e) {\n        var t,\n            r,\n            o = e.type,\n            i = e.payload,\n            s = e.src;\n\n        switch (o) {\n          case u.ServerMessageType.Open:\n            this._lastServerId = this.id, this._open = !0, this.emit(u.PeerEventType.Open, this.id);\n            break;\n\n          case u.ServerMessageType.Error:\n            this._abort(u.PeerErrorType.ServerError, i.msg);\n\n            break;\n\n          case u.ServerMessageType.IdTaken:\n            this._abort(u.PeerErrorType.UnavailableID, 'ID \"' + this.id + '\" is taken');\n\n            break;\n\n          case u.ServerMessageType.InvalidKey:\n            this._abort(u.PeerErrorType.InvalidKey, 'API KEY \"' + this._options.key + '\" is invalid');\n\n            break;\n\n          case u.ServerMessageType.Leave:\n            a.default.log(\"Received leave message from \" + s), this._cleanupPeer(s), this._connections.delete(s);\n            break;\n\n          case u.ServerMessageType.Expire:\n            this.emitError(u.PeerErrorType.PeerUnavailable, \"Could not connect to peer \" + s);\n            break;\n\n          case u.ServerMessageType.Offer:\n            var c = i.connectionId;\n            if ((_ = this.getConnection(s, c)) && (_.close(), a.default.warn(\"Offer received for existing Connection ID:\" + c)), i.type === u.ConnectionType.Media) _ = new l.MediaConnection(s, this, {\n              connectionId: c,\n              _payload: i,\n              metadata: i.metadata\n            }), this._addConnection(s, _), this.emit(u.PeerEventType.Call, _);else {\n              if (i.type !== u.ConnectionType.Data) return void a.default.warn(\"Received malformed connection type:\" + i.type);\n              _ = new d.DataConnection(s, this, {\n                connectionId: c,\n                _payload: i,\n                metadata: i.metadata,\n                label: i.label,\n                serialization: i.serialization,\n                reliable: i.reliable\n              }), this._addConnection(s, _), this.emit(u.PeerEventType.Connection, _);\n            }\n\n            var p = this._getMessages(c);\n\n            try {\n              for (var h = n(p), f = h.next(); !f.done; f = h.next()) {\n                var y = f.value;\n\n                _.handleMessage(y);\n              }\n            } catch (v) {\n              t = {\n                error: v\n              };\n            } finally {\n              try {\n                f && !f.done && (r = h.return) && r.call(h);\n              } finally {\n                if (t) throw t.error;\n              }\n            }\n\n            break;\n\n          default:\n            if (!i) return void a.default.warn(\"You received a malformed message from \" + s + \" of type \" + o);\n\n            var _;\n\n            c = i.connectionId;\n            (_ = this.getConnection(s, c)) && _.peerConnection ? _.handleMessage(e) : c ? this._storeMessage(c, e) : a.default.warn(\"You received an unrecognized message:\", e);\n        }\n      }, i.prototype._storeMessage = function (e, t) {\n        this._lostMessages.has(e) || this._lostMessages.set(e, []), this._lostMessages.get(e).push(t);\n      }, i.prototype._getMessages = function (e) {\n        var t = this._lostMessages.get(e);\n\n        return t ? (this._lostMessages.delete(e), t) : [];\n      }, i.prototype.connect = function (e, t) {\n        if (void 0 === t && (t = {}), this.disconnected) return a.default.warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect, or call reconnect on this peer if you believe its ID to still be available.\"), void this.emitError(u.PeerErrorType.Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n        var n = new d.DataConnection(e, this, t);\n        return this._addConnection(e, n), n;\n      }, i.prototype.call = function (e, t, n) {\n        if (void 0 === n && (n = {}), this.disconnected) return a.default.warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect.\"), void this.emitError(u.PeerErrorType.Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n\n        if (t) {\n          n._stream = t;\n          var r = new l.MediaConnection(e, this, n);\n          return this._addConnection(e, r), r;\n        }\n\n        a.default.error(\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\");\n      }, i.prototype._addConnection = function (e, t) {\n        a.default.log(\"add connection \" + t.type + \":\" + t.connectionId + \" to peerId:\" + e), this._connections.has(e) || this._connections.set(e, []), this._connections.get(e).push(t);\n      }, i.prototype._removeConnection = function (e) {\n        var t = this._connections.get(e.peer);\n\n        if (t) {\n          var n = t.indexOf(e);\n          -1 !== n && t.splice(n, 1);\n        }\n\n        this._lostMessages.delete(e.connectionId);\n      }, i.prototype.getConnection = function (e, t) {\n        var r,\n            o,\n            i = this._connections.get(e);\n\n        if (!i) return null;\n\n        try {\n          for (var s = n(i), a = s.next(); !a.done; a = s.next()) {\n            var c = a.value;\n            if (c.connectionId === t) return c;\n          }\n        } catch (l) {\n          r = {\n            error: l\n          };\n        } finally {\n          try {\n            a && !a.done && (o = s.return) && o.call(s);\n          } finally {\n            if (r) throw r.error;\n          }\n        }\n\n        return null;\n      }, i.prototype._delayedAbort = function (e, t) {\n        var n = this;\n        setTimeout(function () {\n          n._abort(e, t);\n        }, 0);\n      }, i.prototype._abort = function (e, t) {\n        a.default.error(\"Aborting!\"), this.emitError(e, t), this._lastServerId ? this.disconnect() : this.destroy();\n      }, i.prototype.emitError = function (e, t) {\n        var n;\n        a.default.error(\"Error:\", t), (n = \"string\" == typeof t ? new Error(t) : t).type = e, this.emit(u.PeerEventType.Error, n);\n      }, i.prototype.destroy = function () {\n        this.destroyed || (a.default.log(\"Destroy peer with ID:\" + this.id), this.disconnect(), this._cleanup(), this._destroyed = !0, this.emit(u.PeerEventType.Close));\n      }, i.prototype._cleanup = function () {\n        var e, t;\n\n        try {\n          for (var r = n(this._connections.keys()), o = r.next(); !o.done; o = r.next()) {\n            var i = o.value;\n            this._cleanupPeer(i), this._connections.delete(i);\n          }\n        } catch (s) {\n          e = {\n            error: s\n          };\n        } finally {\n          try {\n            o && !o.done && (t = r.return) && t.call(r);\n          } finally {\n            if (e) throw e.error;\n          }\n        }\n\n        this.socket.removeAllListeners();\n      }, i.prototype._cleanupPeer = function (e) {\n        var t,\n            r,\n            o = this._connections.get(e);\n\n        if (o) try {\n          for (var i = n(o), s = i.next(); !s.done; s = i.next()) {\n            s.value.close();\n          }\n        } catch (a) {\n          t = {\n            error: a\n          };\n        } finally {\n          try {\n            s && !s.done && (r = i.return) && r.call(i);\n          } finally {\n            if (t) throw t.error;\n          }\n        }\n      }, i.prototype.disconnect = function () {\n        if (!this.disconnected) {\n          var e = this.id;\n          a.default.log(\"Disconnect peer with ID:\" + e), this._disconnected = !0, this._open = !1, this.socket.close(), this._lastServerId = e, this._id = null, this.emit(u.PeerEventType.Disconnected, e);\n        }\n      }, i.prototype.reconnect = function () {\n        if (this.disconnected && !this.destroyed) a.default.log(\"Attempting reconnection to server with ID \" + this._lastServerId), this._disconnected = !1, this._initialize(this._lastServerId);else {\n          if (this.destroyed) throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n          if (this.disconnected || this.open) throw new Error(\"Peer \" + this.id + \" cannot reconnect because it is not disconnected from the server!\");\n          a.default.error(\"In a hurry? We're still trying to make the initial connection!\");\n        }\n      }, i.prototype.listAllPeers = function (e) {\n        var t = this;\n        void 0 === e && (e = function e(_e6) {}), this._api.listAllPeers().then(function (t) {\n          return e(t);\n        }).catch(function (e) {\n          return t._abort(u.PeerErrorType.ServerError, e);\n        });\n      }, i.DEFAULT_KEY = \"peerjs\", i;\n    }(i.EventEmitter);\n\n    exports.Peer = f;\n  }, {\n    \"eventemitter3\": \"JJlS\",\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./socket\": \"wJlv\",\n    \"./mediaconnection\": \"dbHP\",\n    \"./dataconnection\": \"GBTQ\",\n    \"./enums\": \"ZRYf\",\n    \"./api\": \"in7L\"\n  }],\n  \"iTK6\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var e = require(\"./util\"),\n        r = require(\"./peer\");\n\n    exports.peerjs = {\n      Peer: r.Peer,\n      util: e.util\n    }, exports.default = r.Peer, window.peerjs = exports.peerjs, window.Peer = r.Peer;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./peer\": \"Hxpd\"\n  }]\n}, {}, [\"iTK6\"], null);","/*!\n * Paper.js v0.12.4 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2019, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & https://puckey.studio/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Sun Dec 15 21:25:00 2019 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2019 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * https://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\nvar paper = function (self, undefined) {\n  self = self || require('./node/self.js');\n  var window = self.window,\n      document = self.document;\n  var Base = new function () {\n    var hidden = /^(statics|enumerable|beans|preserve)$/,\n        array = [],\n        _slice = array.slice,\n        create = Object.create,\n        describe = Object.getOwnPropertyDescriptor,\n        define = Object.defineProperty,\n        forEach = array.forEach || function (iter, bind) {\n      for (var i = 0, l = this.length; i < l; i++) {\n        iter.call(bind, this[i], i, this);\n      }\n    },\n        forIn = function forIn(iter, bind) {\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) iter.call(bind, this[i], i, this);\n      }\n    },\n        set = Object.assign || function (dst) {\n      for (var i = 1, l = arguments.length; i < l; i++) {\n        var src = arguments[i];\n\n        for (var key in src) {\n          if (src.hasOwnProperty(key)) dst[key] = src[key];\n        }\n      }\n\n      return dst;\n    },\n        _each = function each(obj, iter, bind) {\n      if (obj) {\n        var desc = describe(obj, 'length');\n        (desc && typeof desc.value === 'number' ? forEach : forIn).call(obj, iter, bind = bind || obj);\n      }\n\n      return bind;\n    };\n\n    function _inject(dest, src, enumerable, beans, preserve) {\n      var beansNames = {};\n\n      function field(name, val) {\n        val = val || (val = describe(src, name)) && (val.get ? val : val.value);\n        if (typeof val === 'string' && val[0] === '#') val = dest[val.substring(1)] || val;\n        var isFunc = typeof val === 'function',\n            res = val,\n            prev = preserve || isFunc && !val.base ? val && val.get ? name in dest : dest[name] : null,\n            bean;\n\n        if (!preserve || !prev) {\n          if (isFunc && prev) val.base = prev;\n          if (isFunc && beans !== false && (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/))) beansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\n          if (!res || isFunc || !res.get || typeof res.get !== 'function' || !Base.isPlainObject(res)) {\n            res = {\n              value: res,\n              writable: true\n            };\n          }\n\n          if ((describe(dest, name) || {\n            configurable: true\n          }).configurable) {\n            res.configurable = true;\n            res.enumerable = enumerable != null ? enumerable : !bean;\n          }\n\n          define(dest, name, res);\n        }\n      }\n\n      if (src) {\n        for (var name in src) {\n          if (src.hasOwnProperty(name) && !hidden.test(name)) field(name);\n        }\n\n        for (var name in beansNames) {\n          var part = beansNames[name],\n              set = dest['set' + part],\n              get = dest['get' + part] || set && dest['is' + part];\n          if (get && (beans === true || get.length === 0)) field(name, {\n            get: get,\n            set: set\n          });\n        }\n      }\n\n      return dest;\n    }\n\n    function Base() {\n      for (var i = 0, l = arguments.length; i < l; i++) {\n        var src = arguments[i];\n        if (src) set(this, src);\n      }\n\n      return this;\n    }\n\n    return _inject(Base, {\n      inject: function inject(src) {\n        if (src) {\n          var statics = src.statics === true ? src : src.statics,\n              beans = src.beans,\n              preserve = src.preserve;\n          if (statics !== src) _inject(this.prototype, src, src.enumerable, beans, preserve);\n\n          _inject(this, statics, null, beans, preserve);\n        }\n\n        for (var i = 1, l = arguments.length; i < l; i++) {\n          this.inject(arguments[i]);\n        }\n\n        return this;\n      },\n      extend: function extend() {\n        var base = this,\n            ctor,\n            proto;\n\n        for (var i = 0, obj, l = arguments.length; i < l && !(ctor && proto); i++) {\n          obj = arguments[i];\n          ctor = ctor || obj.initialize;\n          proto = proto || obj.prototype;\n        }\n\n        ctor = ctor || function () {\n          base.apply(this, arguments);\n        };\n\n        proto = ctor.prototype = proto || create(this.prototype);\n        define(proto, 'constructor', {\n          value: ctor,\n          writable: true,\n          configurable: true\n        });\n\n        _inject(ctor, this);\n\n        if (arguments.length) this.inject.apply(ctor, arguments);\n        ctor.base = base;\n        return ctor;\n      }\n    }).inject({\n      enumerable: false,\n      initialize: Base,\n      set: Base,\n      inject: function inject() {\n        for (var i = 0, l = arguments.length; i < l; i++) {\n          var src = arguments[i];\n\n          if (src) {\n            _inject(this, src, src.enumerable, src.beans, src.preserve);\n          }\n        }\n\n        return this;\n      },\n      extend: function extend() {\n        var res = create(this);\n        return res.inject.apply(res, arguments);\n      },\n      each: function each(iter, bind) {\n        return _each(this, iter, bind);\n      },\n      clone: function clone() {\n        return new this.constructor(this);\n      },\n      statics: {\n        set: set,\n        each: _each,\n        create: create,\n        define: define,\n        describe: describe,\n        clone: function clone(obj) {\n          return set(new obj.constructor(), obj);\n        },\n        isPlainObject: function isPlainObject(obj) {\n          var ctor = obj != null && obj.constructor;\n          return ctor && (ctor === Object || ctor === Base || ctor.name === 'Object');\n        },\n        pick: function pick(a, b) {\n          return a !== undefined ? a : b;\n        },\n        slice: function slice(list, begin, end) {\n          return _slice.call(list, begin, end);\n        }\n      }\n    });\n  }();\n  if (typeof module !== 'undefined') module.exports = Base;\n  Base.inject({\n    enumerable: false,\n    toString: function toString() {\n      return this._id != null ? (this._class || 'Object') + (this._name ? \" '\" + this._name + \"'\" : ' @' + this._id) : '{ ' + Base.each(this, function (value, key) {\n        if (!/^_/.test(key)) {\n          var type = typeof value;\n          this.push(key + ': ' + (type === 'number' ? Formatter.instance.number(value) : type === 'string' ? \"'\" + value + \"'\" : value));\n        }\n      }, []).join(', ') + ' }';\n    },\n    getClassName: function getClassName() {\n      return this._class || '';\n    },\n    importJSON: function importJSON(json) {\n      return Base.importJSON(json, this);\n    },\n    exportJSON: function exportJSON(options) {\n      return Base.exportJSON(this, options);\n    },\n    toJSON: function toJSON() {\n      return Base.serialize(this);\n    },\n    set: function set(props, exclude) {\n      if (props) Base.filter(this, props, exclude, this._prioritize);\n      return this;\n    }\n  }, {\n    beans: false,\n    statics: {\n      exports: {},\n      extend: function extend() {\n        var res = extend.base.apply(this, arguments),\n            name = res.prototype._class;\n        if (name && !Base.exports[name]) Base.exports[name] = res;\n        return res;\n      },\n      equals: function equals(obj1, obj2) {\n        if (obj1 === obj2) return true;\n        if (obj1 && obj1.equals) return obj1.equals(obj2);\n        if (obj2 && obj2.equals) return obj2.equals(obj1);\n\n        if (obj1 && obj2 && typeof obj1 === 'object' && typeof obj2 === 'object') {\n          if (Array.isArray(obj1) && Array.isArray(obj2)) {\n            var length = obj1.length;\n            if (length !== obj2.length) return false;\n\n            while (length--) {\n              if (!Base.equals(obj1[length], obj2[length])) return false;\n            }\n          } else {\n            var keys = Object.keys(obj1),\n                length = keys.length;\n            if (length !== Object.keys(obj2).length) return false;\n\n            while (length--) {\n              var key = keys[length];\n              if (!(obj2.hasOwnProperty(key) && Base.equals(obj1[key], obj2[key]))) return false;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      },\n      read: function read(list, start, options, amount) {\n        if (this === Base) {\n          var value = this.peek(list, start);\n          list.__index++;\n          return value;\n        }\n\n        var proto = this.prototype,\n            readIndex = proto._readIndex,\n            begin = start || readIndex && list.__index || 0,\n            length = list.length,\n            obj = list[begin];\n        amount = amount || length - begin;\n\n        if (obj instanceof this || options && options.readNull && obj == null && amount <= 1) {\n          if (readIndex) list.__index = begin + 1;\n          return obj && options && options.clone ? obj.clone() : obj;\n        }\n\n        obj = Base.create(proto);\n        if (readIndex) obj.__read = true;\n        obj = obj.initialize.apply(obj, begin > 0 || begin + amount < length ? Base.slice(list, begin, begin + amount) : list) || obj;\n\n        if (readIndex) {\n          list.__index = begin + obj.__read;\n          var filtered = obj.__filtered;\n\n          if (filtered) {\n            list.__filtered = filtered;\n            obj.__filtered = undefined;\n          }\n\n          obj.__read = undefined;\n        }\n\n        return obj;\n      },\n      peek: function peek(list, start) {\n        return list[list.__index = start || list.__index || 0];\n      },\n      remain: function remain(list) {\n        return list.length - (list.__index || 0);\n      },\n      readList: function readList(list, start, options, amount) {\n        var res = [],\n            entry,\n            begin = start || 0,\n            end = amount ? begin + amount : list.length;\n\n        for (var i = begin; i < end; i++) {\n          res.push(Array.isArray(entry = list[i]) ? this.read(entry, 0, options) : this.read(list, i, options, 1));\n        }\n\n        return res;\n      },\n      readNamed: function readNamed(list, name, start, options, amount) {\n        var value = this.getNamed(list, name),\n            hasValue = value !== undefined;\n\n        if (hasValue) {\n          var filtered = list.__filtered;\n\n          if (!filtered) {\n            var source = this.getSource(list);\n            filtered = list.__filtered = Base.create(source);\n            filtered.__unfiltered = source;\n          }\n\n          filtered[name] = undefined;\n        }\n\n        return this.read(hasValue ? [value] : list, start, options, amount);\n      },\n      readSupported: function readSupported(list, dest) {\n        var source = this.getSource(list),\n            that = this,\n            read = false;\n\n        if (source) {\n          Object.keys(source).forEach(function (key) {\n            if (key in dest) {\n              var value = that.readNamed(list, key);\n\n              if (value !== undefined) {\n                dest[key] = value;\n              }\n\n              read = true;\n            }\n          });\n        }\n\n        return read;\n      },\n      getSource: function getSource(list) {\n        var source = list.__source;\n\n        if (source === undefined) {\n          var arg = list.length === 1 && list[0];\n          source = list.__source = arg && Base.isPlainObject(arg) ? arg : null;\n        }\n\n        return source;\n      },\n      getNamed: function getNamed(list, name) {\n        var source = this.getSource(list);\n\n        if (source) {\n          return name ? source[name] : list.__filtered || source;\n        }\n      },\n      hasNamed: function hasNamed(list, name) {\n        return !!this.getNamed(list, name);\n      },\n      filter: function filter(dest, source, exclude, prioritize) {\n        var processed;\n\n        function handleKey(key) {\n          if (!(exclude && key in exclude) && !(processed && key in processed)) {\n            var value = source[key];\n            if (value !== undefined) dest[key] = value;\n          }\n        }\n\n        if (prioritize) {\n          var keys = {};\n\n          for (var i = 0, key, l = prioritize.length; i < l; i++) {\n            if ((key = prioritize[i]) in source) {\n              handleKey(key);\n              keys[key] = true;\n            }\n          }\n\n          processed = keys;\n        }\n\n        Object.keys(source.__unfiltered || source).forEach(handleKey);\n        return dest;\n      },\n      isPlainValue: function isPlainValue(obj, asString) {\n        return Base.isPlainObject(obj) || Array.isArray(obj) || asString && typeof obj === 'string';\n      },\n      serialize: function serialize(obj, options, compact, dictionary) {\n        options = options || {};\n        var isRoot = !dictionary,\n            res;\n\n        if (isRoot) {\n          options.formatter = new Formatter(options.precision);\n          dictionary = {\n            length: 0,\n            definitions: {},\n            references: {},\n            add: function add(item, create) {\n              var id = '#' + item._id,\n                  ref = this.references[id];\n\n              if (!ref) {\n                this.length++;\n                var res = create.call(item),\n                    name = item._class;\n                if (name && res[0] !== name) res.unshift(name);\n                this.definitions[id] = res;\n                ref = this.references[id] = [id];\n              }\n\n              return ref;\n            }\n          };\n        }\n\n        if (obj && obj._serialize) {\n          res = obj._serialize(options, dictionary);\n          var name = obj._class;\n\n          if (name && !obj._compactSerialize && (isRoot || !compact) && res[0] !== name) {\n            res.unshift(name);\n          }\n        } else if (Array.isArray(obj)) {\n          res = [];\n\n          for (var i = 0, l = obj.length; i < l; i++) {\n            res[i] = Base.serialize(obj[i], options, compact, dictionary);\n          }\n        } else if (Base.isPlainObject(obj)) {\n          res = {};\n          var keys = Object.keys(obj);\n\n          for (var i = 0, l = keys.length; i < l; i++) {\n            var key = keys[i];\n            res[key] = Base.serialize(obj[key], options, compact, dictionary);\n          }\n        } else if (typeof obj === 'number') {\n          res = options.formatter.number(obj, options.precision);\n        } else {\n          res = obj;\n        }\n\n        return isRoot && dictionary.length > 0 ? [['dictionary', dictionary.definitions], res] : res;\n      },\n      deserialize: function deserialize(json, create, _data, _setDictionary, _isRoot) {\n        var res = json,\n            isFirst = !_data,\n            hasDictionary = isFirst && json && json.length && json[0][0] === 'dictionary';\n        _data = _data || {};\n\n        if (Array.isArray(json)) {\n          var type = json[0],\n              isDictionary = type === 'dictionary';\n\n          if (json.length == 1 && /^#/.test(type)) {\n            return _data.dictionary[type];\n          }\n\n          type = Base.exports[type];\n          res = [];\n\n          for (var i = type ? 1 : 0, l = json.length; i < l; i++) {\n            res.push(Base.deserialize(json[i], create, _data, isDictionary, hasDictionary));\n          }\n\n          if (type) {\n            var args = res;\n\n            if (create) {\n              res = create(type, args, isFirst || _isRoot);\n            } else {\n              res = new type(args);\n            }\n          }\n        } else if (Base.isPlainObject(json)) {\n          res = {};\n          if (_setDictionary) _data.dictionary = res;\n\n          for (var key in json) {\n            res[key] = Base.deserialize(json[key], create, _data);\n          }\n        }\n\n        return hasDictionary ? res[1] : res;\n      },\n      exportJSON: function exportJSON(obj, options) {\n        var json = Base.serialize(obj, options);\n        return options && options.asString == false ? json : JSON.stringify(json);\n      },\n      importJSON: function importJSON(json, target) {\n        return Base.deserialize(typeof json === 'string' ? JSON.parse(json) : json, function (ctor, args, isRoot) {\n          var useTarget = isRoot && target && target.constructor === ctor,\n              obj = useTarget ? target : Base.create(ctor.prototype);\n\n          if (args.length === 1 && obj instanceof Item && (useTarget || !(obj instanceof Layer))) {\n            var arg = args[0];\n\n            if (Base.isPlainObject(arg)) {\n              arg.insert = false;\n\n              if (useTarget) {\n                args = args.concat([{\n                  insert: true\n                }]);\n              }\n            }\n          }\n\n          (useTarget ? obj.set : ctor).apply(obj, args);\n          if (useTarget) target = null;\n          return obj;\n        });\n      },\n      push: function push(list, items) {\n        var itemsLength = items.length;\n\n        if (itemsLength < 4096) {\n          list.push.apply(list, items);\n        } else {\n          var startLength = list.length;\n          list.length += itemsLength;\n\n          for (var i = 0; i < itemsLength; i++) {\n            list[startLength + i] = items[i];\n          }\n        }\n\n        return list;\n      },\n      splice: function splice(list, items, index, remove) {\n        var amount = items && items.length,\n            append = index === undefined;\n        index = append ? list.length : index;\n        if (index > list.length) index = list.length;\n\n        for (var i = 0; i < amount; i++) {\n          items[i]._index = index + i;\n        }\n\n        if (append) {\n          Base.push(list, items);\n          return [];\n        } else {\n          var args = [index, remove];\n          if (items) Base.push(args, items);\n          var removed = list.splice.apply(list, args);\n\n          for (var i = 0, l = removed.length; i < l; i++) {\n            removed[i]._index = undefined;\n          }\n\n          for (var i = index + amount, l = list.length; i < l; i++) {\n            list[i]._index = i;\n          }\n\n          return removed;\n        }\n      },\n      capitalize: function capitalize(str) {\n        return str.replace(/\\b[a-z]/g, function (match) {\n          return match.toUpperCase();\n        });\n      },\n      camelize: function camelize(str) {\n        return str.replace(/-(.)/g, function (match, chr) {\n          return chr.toUpperCase();\n        });\n      },\n      hyphenate: function hyphenate(str) {\n        return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n      }\n    }\n  });\n  var Emitter = {\n    on: function on(type, func) {\n      if (typeof type !== 'string') {\n        Base.each(type, function (value, key) {\n          this.on(key, value);\n        }, this);\n      } else {\n        var types = this._eventTypes,\n            entry = types && types[type],\n            handlers = this._callbacks = this._callbacks || {};\n        handlers = handlers[type] = handlers[type] || [];\n\n        if (handlers.indexOf(func) === -1) {\n          handlers.push(func);\n          if (entry && entry.install && handlers.length === 1) entry.install.call(this, type);\n        }\n      }\n\n      return this;\n    },\n    off: function off(type, func) {\n      if (typeof type !== 'string') {\n        Base.each(type, function (value, key) {\n          this.off(key, value);\n        }, this);\n        return;\n      }\n\n      var types = this._eventTypes,\n          entry = types && types[type],\n          handlers = this._callbacks && this._callbacks[type],\n          index;\n\n      if (handlers) {\n        if (!func || (index = handlers.indexOf(func)) !== -1 && handlers.length === 1) {\n          if (entry && entry.uninstall) entry.uninstall.call(this, type);\n          delete this._callbacks[type];\n        } else if (index !== -1) {\n          handlers.splice(index, 1);\n        }\n      }\n\n      return this;\n    },\n    once: function once(type, func) {\n      return this.on(type, function handler() {\n        func.apply(this, arguments);\n        this.off(type, handler);\n      });\n    },\n    emit: function emit(type, event) {\n      var handlers = this._callbacks && this._callbacks[type];\n      if (!handlers) return false;\n      var args = Base.slice(arguments, 1),\n          setTarget = event && event.target && !event.currentTarget;\n      handlers = handlers.slice();\n      if (setTarget) event.currentTarget = this;\n\n      for (var i = 0, l = handlers.length; i < l; i++) {\n        if (handlers[i].apply(this, args) == false) {\n          if (event && event.stop) event.stop();\n          break;\n        }\n      }\n\n      if (setTarget) delete event.currentTarget;\n      return true;\n    },\n    responds: function responds(type) {\n      return !!(this._callbacks && this._callbacks[type]);\n    },\n    attach: '#on',\n    detach: '#off',\n    fire: '#emit',\n    _installEvents: function _installEvents(install) {\n      var types = this._eventTypes,\n          handlers = this._callbacks,\n          key = install ? 'install' : 'uninstall';\n\n      if (types) {\n        for (var type in handlers) {\n          if (handlers[type].length > 0) {\n            var entry = types[type],\n                func = entry && entry[key];\n            if (func) func.call(this, type);\n          }\n        }\n      }\n    },\n    statics: {\n      inject: function inject(src) {\n        var events = src._events;\n\n        if (events) {\n          var types = {};\n          Base.each(events, function (entry, key) {\n            var isString = typeof entry === 'string',\n                name = isString ? entry : key,\n                part = Base.capitalize(name),\n                type = name.substring(2).toLowerCase();\n            types[type] = isString ? {} : entry;\n            name = '_' + name;\n\n            src['get' + part] = function () {\n              return this[name];\n            };\n\n            src['set' + part] = function (func) {\n              var prev = this[name];\n              if (prev) this.off(type, prev);\n              if (func) this.on(type, func);\n              this[name] = func;\n            };\n          });\n          src._eventTypes = types;\n        }\n\n        return inject.base.apply(this, arguments);\n      }\n    }\n  };\n  var PaperScope = Base.extend({\n    _class: 'PaperScope',\n    initialize: function PaperScope() {\n      paper = this;\n      this.settings = new Base({\n        applyMatrix: true,\n        insertItems: true,\n        handleSize: 4,\n        hitTolerance: 0\n      });\n      this.project = null;\n      this.projects = [];\n      this.tools = [];\n      this._id = PaperScope._id++;\n      PaperScope._scopes[this._id] = this;\n      var proto = PaperScope.prototype;\n\n      if (!this.support) {\n        var ctx = CanvasProvider.getContext(1, 1) || {};\n        proto.support = {\n          nativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n          nativeBlendModes: BlendMode.nativeModes\n        };\n        CanvasProvider.release(ctx);\n      }\n\n      if (!this.agent) {\n        var user = self.navigator.userAgent.toLowerCase(),\n            os = (/(darwin|win|mac|linux|freebsd|sunos)/.exec(user) || [])[0],\n            platform = os === 'darwin' ? 'mac' : os,\n            agent = proto.agent = proto.browser = {\n          platform: platform\n        };\n        if (platform) agent[platform] = true;\n        user.replace(/(opera|chrome|safari|webkit|firefox|msie|trident|atom|node|jsdom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:v?([.\\d]+))?/g, function (match, n, v1, v2, rv) {\n          if (!agent.chrome) {\n            var v = n === 'opera' ? v2 : /^(node|trident)$/.test(n) ? rv : v1;\n            agent.version = v;\n            agent.versionNumber = parseFloat(v);\n            n = {\n              trident: 'msie',\n              jsdom: 'node'\n            }[n] || n;\n            agent.name = n;\n            agent[n] = true;\n          }\n        });\n        if (agent.chrome) delete agent.webkit;\n        if (agent.atom) delete agent.chrome;\n      }\n    },\n    version: \"0.12.4\",\n    getView: function getView() {\n      var project = this.project;\n      return project && project._view;\n    },\n    getPaper: function getPaper() {\n      return this;\n    },\n    execute: function execute(code, options) {},\n    install: function install(scope) {\n      var that = this;\n      Base.each(['project', 'view', 'tool'], function (key) {\n        Base.define(scope, key, {\n          configurable: true,\n          get: function get() {\n            return that[key];\n          }\n        });\n      });\n\n      for (var key in this) {\n        if (!/^_/.test(key) && this[key]) scope[key] = this[key];\n      }\n    },\n    setup: function setup(element) {\n      paper = this;\n      this.project = new Project(element);\n      return this;\n    },\n    createCanvas: function createCanvas(width, height) {\n      return CanvasProvider.getCanvas(width, height);\n    },\n    activate: function activate() {\n      paper = this;\n    },\n    clear: function clear() {\n      var projects = this.projects,\n          tools = this.tools;\n\n      for (var i = projects.length - 1; i >= 0; i--) {\n        projects[i].remove();\n      }\n\n      for (var i = tools.length - 1; i >= 0; i--) {\n        tools[i].remove();\n      }\n    },\n    remove: function remove() {\n      this.clear();\n      delete PaperScope._scopes[this._id];\n    },\n    statics: new function () {\n      function handleAttribute(name) {\n        name += 'Attribute';\n        return function (el, attr) {\n          return el[name](attr) || el[name]('data-paper-' + attr);\n        };\n      }\n\n      return {\n        _scopes: {},\n        _id: 0,\n        get: function get(id) {\n          return this._scopes[id] || null;\n        },\n        getAttribute: handleAttribute('get'),\n        hasAttribute: handleAttribute('has')\n      };\n    }()\n  });\n  var PaperScopeItem = Base.extend(Emitter, {\n    initialize: function initialize(activate) {\n      this._scope = paper;\n      this._index = this._scope[this._list].push(this) - 1;\n      if (activate || !this._scope[this._reference]) this.activate();\n    },\n    activate: function activate() {\n      if (!this._scope) return false;\n      var prev = this._scope[this._reference];\n      if (prev && prev !== this) prev.emit('deactivate');\n      this._scope[this._reference] = this;\n      this.emit('activate', prev);\n      return true;\n    },\n    isActive: function isActive() {\n      return this._scope[this._reference] === this;\n    },\n    remove: function remove() {\n      if (this._index == null) return false;\n      Base.splice(this._scope[this._list], null, this._index, 1);\n      if (this._scope[this._reference] == this) this._scope[this._reference] = null;\n      this._scope = null;\n      return true;\n    },\n    getView: function getView() {\n      return this._scope.getView();\n    }\n  });\n  var CollisionDetection = {\n    findItemBoundsCollisions: function findItemBoundsCollisions(items1, items2, tolerance) {\n      function getBounds(items) {\n        var bounds = new Array(items.length);\n\n        for (var i = 0; i < items.length; i++) {\n          var rect = items[i].getBounds();\n          bounds[i] = [rect.left, rect.top, rect.right, rect.bottom];\n        }\n\n        return bounds;\n      }\n\n      var bounds1 = getBounds(items1),\n          bounds2 = !items2 || items2 === items1 ? bounds1 : getBounds(items2);\n      return this.findBoundsCollisions(bounds1, bounds2, tolerance || 0);\n    },\n    findCurveBoundsCollisions: function findCurveBoundsCollisions(curves1, curves2, tolerance, bothAxis) {\n      function getBounds(curves) {\n        var min = Math.min,\n            max = Math.max,\n            bounds = new Array(curves.length);\n\n        for (var i = 0; i < curves.length; i++) {\n          var v = curves[i];\n          bounds[i] = [min(v[0], v[2], v[4], v[6]), min(v[1], v[3], v[5], v[7]), max(v[0], v[2], v[4], v[6]), max(v[1], v[3], v[5], v[7])];\n        }\n\n        return bounds;\n      }\n\n      var bounds1 = getBounds(curves1),\n          bounds2 = !curves2 || curves2 === curves1 ? bounds1 : getBounds(curves2);\n\n      if (bothAxis) {\n        var hor = this.findBoundsCollisions(bounds1, bounds2, tolerance || 0, false, true),\n            ver = this.findBoundsCollisions(bounds1, bounds2, tolerance || 0, true, true),\n            list = [];\n\n        for (var i = 0, l = hor.length; i < l; i++) {\n          list[i] = {\n            hor: hor[i],\n            ver: ver[i]\n          };\n        }\n\n        return list;\n      }\n\n      return this.findBoundsCollisions(bounds1, bounds2, tolerance || 0);\n    },\n    findBoundsCollisions: function findBoundsCollisions(boundsA, boundsB, tolerance, sweepVertical, onlySweepAxisCollisions) {\n      var self = !boundsB || boundsA === boundsB,\n          allBounds = self ? boundsA : boundsA.concat(boundsB),\n          lengthA = boundsA.length,\n          lengthAll = allBounds.length;\n\n      function binarySearch(indices, coord, value) {\n        var lo = 0,\n            hi = indices.length;\n\n        while (lo < hi) {\n          var mid = hi + lo >>> 1;\n\n          if (allBounds[indices[mid]][coord] < value) {\n            lo = mid + 1;\n          } else {\n            hi = mid;\n          }\n        }\n\n        return lo - 1;\n      }\n\n      var pri0 = sweepVertical ? 1 : 0,\n          pri1 = pri0 + 2,\n          sec0 = sweepVertical ? 0 : 1,\n          sec1 = sec0 + 2;\n      var allIndicesByPri0 = new Array(lengthAll);\n\n      for (var i = 0; i < lengthAll; i++) {\n        allIndicesByPri0[i] = i;\n      }\n\n      allIndicesByPri0.sort(function (i1, i2) {\n        return allBounds[i1][pri0] - allBounds[i2][pri0];\n      });\n      var activeIndicesByPri1 = [],\n          allCollisions = new Array(lengthA);\n\n      for (var i = 0; i < lengthAll; i++) {\n        var curIndex = allIndicesByPri0[i],\n            curBounds = allBounds[curIndex],\n            origIndex = self ? curIndex : curIndex - lengthA,\n            isCurrentA = curIndex < lengthA,\n            isCurrentB = self || !isCurrentA,\n            curCollisions = isCurrentA ? [] : null;\n\n        if (activeIndicesByPri1.length) {\n          var pruneCount = binarySearch(activeIndicesByPri1, pri1, curBounds[pri0] - tolerance) + 1;\n          activeIndicesByPri1.splice(0, pruneCount);\n\n          if (self && onlySweepAxisCollisions) {\n            curCollisions = curCollisions.concat(activeIndicesByPri1);\n\n            for (var j = 0; j < activeIndicesByPri1.length; j++) {\n              var activeIndex = activeIndicesByPri1[j];\n              allCollisions[activeIndex].push(origIndex);\n            }\n          } else {\n            var curSec1 = curBounds[sec1],\n                curSec0 = curBounds[sec0];\n\n            for (var j = 0; j < activeIndicesByPri1.length; j++) {\n              var activeIndex = activeIndicesByPri1[j],\n                  activeBounds = allBounds[activeIndex],\n                  isActiveA = activeIndex < lengthA,\n                  isActiveB = self || activeIndex >= lengthA;\n\n              if (onlySweepAxisCollisions || (isCurrentA && isActiveB || isCurrentB && isActiveA) && curSec1 >= activeBounds[sec0] - tolerance && curSec0 <= activeBounds[sec1] + tolerance) {\n                if (isCurrentA && isActiveB) {\n                  curCollisions.push(self ? activeIndex : activeIndex - lengthA);\n                }\n\n                if (isCurrentB && isActiveA) {\n                  allCollisions[activeIndex].push(origIndex);\n                }\n              }\n            }\n          }\n        }\n\n        if (isCurrentA) {\n          if (boundsA === boundsB) {\n            curCollisions.push(curIndex);\n          }\n\n          allCollisions[curIndex] = curCollisions;\n        }\n\n        if (activeIndicesByPri1.length) {\n          var curPri1 = curBounds[pri1],\n              index = binarySearch(activeIndicesByPri1, pri1, curPri1);\n          activeIndicesByPri1.splice(index + 1, 0, curIndex);\n        } else {\n          activeIndicesByPri1.push(curIndex);\n        }\n      }\n\n      for (var i = 0; i < allCollisions.length; i++) {\n        var collisions = allCollisions[i];\n\n        if (collisions) {\n          collisions.sort(function (i1, i2) {\n            return i1 - i2;\n          });\n        }\n      }\n\n      return allCollisions;\n    }\n  };\n  var Formatter = Base.extend({\n    initialize: function initialize(precision) {\n      this.precision = Base.pick(precision, 5);\n      this.multiplier = Math.pow(10, this.precision);\n    },\n    number: function number(val) {\n      return this.precision < 16 ? Math.round(val * this.multiplier) / this.multiplier : val;\n    },\n    pair: function pair(val1, val2, separator) {\n      return this.number(val1) + (separator || ',') + this.number(val2);\n    },\n    point: function point(val, separator) {\n      return this.number(val.x) + (separator || ',') + this.number(val.y);\n    },\n    size: function size(val, separator) {\n      return this.number(val.width) + (separator || ',') + this.number(val.height);\n    },\n    rectangle: function rectangle(val, separator) {\n      return this.point(val, separator) + (separator || ',') + this.size(val, separator);\n    }\n  });\n  Formatter.instance = new Formatter();\n  var Numerical = new function () {\n    var abscissas = [[0.5773502691896257645091488], [0, 0.7745966692414833770358531], [0.3399810435848562648026658, 0.8611363115940525752239465], [0, 0.5384693101056830910363144, 0.9061798459386639927976269], [0.2386191860831969086305017, 0.6612093864662645136613996, 0.9324695142031520278123016], [0, 0.4058451513773971669066064, 0.7415311855993944398638648, 0.9491079123427585245261897], [0.1834346424956498049394761, 0.5255324099163289858177390, 0.7966664774136267395915539, 0.9602898564975362316835609], [0, 0.3242534234038089290385380, 0.6133714327005903973087020, 0.8360311073266357942994298, 0.9681602395076260898355762], [0.1488743389816312108848260, 0.4333953941292471907992659, 0.6794095682990244062343274, 0.8650633666889845107320967, 0.9739065285171717200779640], [0, 0.2695431559523449723315320, 0.5190961292068118159257257, 0.7301520055740493240934163, 0.8870625997680952990751578, 0.9782286581460569928039380], [0.1252334085114689154724414, 0.3678314989981801937526915, 0.5873179542866174472967024, 0.7699026741943046870368938, 0.9041172563704748566784659, 0.9815606342467192506905491], [0, 0.2304583159551347940655281, 0.4484927510364468528779129, 0.6423493394403402206439846, 0.8015780907333099127942065, 0.9175983992229779652065478, 0.9841830547185881494728294], [0.1080549487073436620662447, 0.3191123689278897604356718, 0.5152486363581540919652907, 0.6872929048116854701480198, 0.8272013150697649931897947, 0.9284348836635735173363911, 0.9862838086968123388415973], [0, 0.2011940939974345223006283, 0.3941513470775633698972074, 0.5709721726085388475372267, 0.7244177313601700474161861, 0.8482065834104272162006483, 0.9372733924007059043077589, 0.9879925180204854284895657], [0.0950125098376374401853193, 0.2816035507792589132304605, 0.4580167776572273863424194, 0.6178762444026437484466718, 0.7554044083550030338951012, 0.8656312023878317438804679, 0.9445750230732325760779884, 0.9894009349916499325961542]];\n    var weights = [[1], [0.8888888888888888888888889, 0.5555555555555555555555556], [0.6521451548625461426269361, 0.3478548451374538573730639], [0.5688888888888888888888889, 0.4786286704993664680412915, 0.2369268850561890875142640], [0.4679139345726910473898703, 0.3607615730481386075698335, 0.1713244923791703450402961], [0.4179591836734693877551020, 0.3818300505051189449503698, 0.2797053914892766679014678, 0.1294849661688696932706114], [0.3626837833783619829651504, 0.3137066458778872873379622, 0.2223810344533744705443560, 0.1012285362903762591525314], [0.3302393550012597631645251, 0.3123470770400028400686304, 0.2606106964029354623187429, 0.1806481606948574040584720, 0.0812743883615744119718922], [0.2955242247147528701738930, 0.2692667193099963550912269, 0.2190863625159820439955349, 0.1494513491505805931457763, 0.0666713443086881375935688], [0.2729250867779006307144835, 0.2628045445102466621806889, 0.2331937645919904799185237, 0.1862902109277342514260976, 0.1255803694649046246346943, 0.0556685671161736664827537], [0.2491470458134027850005624, 0.2334925365383548087608499, 0.2031674267230659217490645, 0.1600783285433462263346525, 0.1069393259953184309602547, 0.0471753363865118271946160], [0.2325515532308739101945895, 0.2262831802628972384120902, 0.2078160475368885023125232, 0.1781459807619457382800467, 0.1388735102197872384636018, 0.0921214998377284479144218, 0.0404840047653158795200216], [0.2152638534631577901958764, 0.2051984637212956039659241, 0.1855383974779378137417166, 0.1572031671581935345696019, 0.1215185706879031846894148, 0.0801580871597602098056333, 0.0351194603317518630318329], [0.2025782419255612728806202, 0.1984314853271115764561183, 0.1861610000155622110268006, 0.1662692058169939335532009, 0.1395706779261543144478048, 0.1071592204671719350118695, 0.0703660474881081247092674, 0.0307532419961172683546284], [0.1894506104550684962853967, 0.1826034150449235888667637, 0.1691565193950025381893121, 0.1495959888165767320815017, 0.1246289712555338720524763, 0.0951585116824927848099251, 0.0622535239386478928628438, 0.0271524594117540948517806]];\n\n    var abs = Math.abs,\n        sqrt = Math.sqrt,\n        pow = Math.pow,\n        log2 = Math.log2 || function (x) {\n      return Math.log(x) * Math.LOG2E;\n    },\n        EPSILON = 1e-12,\n        MACHINE_EPSILON = 1.12e-16;\n\n    function clamp(value, min, max) {\n      return value < min ? min : value > max ? max : value;\n    }\n\n    function getDiscriminant(a, b, c) {\n      function split(v) {\n        var x = v * 134217729,\n            y = v - x,\n            hi = y + x,\n            lo = v - hi;\n        return [hi, lo];\n      }\n\n      var D = b * b - a * c,\n          E = b * b + a * c;\n\n      if (abs(D) * 3 < E) {\n        var ad = split(a),\n            bd = split(b),\n            cd = split(c),\n            p = b * b,\n            dp = bd[0] * bd[0] - p + 2 * bd[0] * bd[1] + bd[1] * bd[1],\n            q = a * c,\n            dq = ad[0] * cd[0] - q + ad[0] * cd[1] + ad[1] * cd[0] + ad[1] * cd[1];\n        D = p - q + (dp - dq);\n      }\n\n      return D;\n    }\n\n    function getNormalizationFactor() {\n      var norm = Math.max.apply(Math, arguments);\n      return norm && (norm < 1e-8 || norm > 1e8) ? pow(2, -Math.round(log2(norm))) : 0;\n    }\n\n    return {\n      EPSILON: EPSILON,\n      MACHINE_EPSILON: MACHINE_EPSILON,\n      CURVETIME_EPSILON: 1e-8,\n      GEOMETRIC_EPSILON: 1e-7,\n      TRIGONOMETRIC_EPSILON: 1e-8,\n      KAPPA: 4 * (sqrt(2) - 1) / 3,\n      isZero: function isZero(val) {\n        return val >= -EPSILON && val <= EPSILON;\n      },\n      isMachineZero: function isMachineZero(val) {\n        return val >= -MACHINE_EPSILON && val <= MACHINE_EPSILON;\n      },\n      clamp: clamp,\n      integrate: function integrate(f, a, b, n) {\n        var x = abscissas[n - 2],\n            w = weights[n - 2],\n            A = (b - a) * 0.5,\n            B = A + a,\n            i = 0,\n            m = n + 1 >> 1,\n            sum = n & 1 ? w[i++] * f(B) : 0;\n\n        while (i < m) {\n          var Ax = A * x[i];\n          sum += w[i++] * (f(B + Ax) + f(B - Ax));\n        }\n\n        return A * sum;\n      },\n      findRoot: function findRoot(f, df, x, a, b, n, tolerance) {\n        for (var i = 0; i < n; i++) {\n          var fx = f(x),\n              dx = fx / df(x),\n              nx = x - dx;\n\n          if (abs(dx) < tolerance) {\n            x = nx;\n            break;\n          }\n\n          if (fx > 0) {\n            b = x;\n            x = nx <= a ? (a + b) * 0.5 : nx;\n          } else {\n            a = x;\n            x = nx >= b ? (a + b) * 0.5 : nx;\n          }\n        }\n\n        return clamp(x, a, b);\n      },\n      solveQuadratic: function solveQuadratic(a, b, c, roots, min, max) {\n        var x1,\n            x2 = Infinity;\n\n        if (abs(a) < EPSILON) {\n          if (abs(b) < EPSILON) return abs(c) < EPSILON ? -1 : 0;\n          x1 = -c / b;\n        } else {\n          b *= -0.5;\n          var D = getDiscriminant(a, b, c);\n\n          if (D && abs(D) < MACHINE_EPSILON) {\n            var f = getNormalizationFactor(abs(a), abs(b), abs(c));\n\n            if (f) {\n              a *= f;\n              b *= f;\n              c *= f;\n              D = getDiscriminant(a, b, c);\n            }\n          }\n\n          if (D >= -MACHINE_EPSILON) {\n            var Q = D < 0 ? 0 : sqrt(D),\n                R = b + (b < 0 ? -Q : Q);\n\n            if (R === 0) {\n              x1 = c / a;\n              x2 = -x1;\n            } else {\n              x1 = R / a;\n              x2 = c / R;\n            }\n          }\n        }\n\n        var count = 0,\n            boundless = min == null,\n            minB = min - EPSILON,\n            maxB = max + EPSILON;\n        if (isFinite(x1) && (boundless || x1 > minB && x1 < maxB)) roots[count++] = boundless ? x1 : clamp(x1, min, max);\n        if (x2 !== x1 && isFinite(x2) && (boundless || x2 > minB && x2 < maxB)) roots[count++] = boundless ? x2 : clamp(x2, min, max);\n        return count;\n      },\n      solveCubic: function solveCubic(a, b, c, d, roots, min, max) {\n        var f = getNormalizationFactor(abs(a), abs(b), abs(c), abs(d)),\n            x,\n            b1,\n            c2,\n            qd,\n            q;\n\n        if (f) {\n          a *= f;\n          b *= f;\n          c *= f;\n          d *= f;\n        }\n\n        function evaluate(x0) {\n          x = x0;\n          var tmp = a * x;\n          b1 = tmp + b;\n          c2 = b1 * x + c;\n          qd = (tmp + b1) * x + c2;\n          q = c2 * x + d;\n        }\n\n        if (abs(a) < EPSILON) {\n          a = b;\n          b1 = c;\n          c2 = d;\n          x = Infinity;\n        } else if (abs(d) < EPSILON) {\n          b1 = b;\n          c2 = c;\n          x = 0;\n        } else {\n          evaluate(-(b / a) / 3);\n          var t = q / a,\n              r = pow(abs(t), 1 / 3),\n              s = t < 0 ? -1 : 1,\n              td = -qd / a,\n              rd = td > 0 ? 1.324717957244746 * Math.max(r, sqrt(td)) : r,\n              x0 = x - s * rd;\n\n          if (x0 !== x) {\n            do {\n              evaluate(x0);\n              x0 = qd === 0 ? x : x - q / qd / (1 + MACHINE_EPSILON);\n            } while (s * x0 > s * x);\n\n            if (abs(a) * x * x > abs(d / x)) {\n              c2 = -d / x;\n              b1 = (c2 - c) / x;\n            }\n          }\n        }\n\n        var count = Numerical.solveQuadratic(a, b1, c2, roots, min, max),\n            boundless = min == null;\n        if (isFinite(x) && (count === 0 || count > 0 && x !== roots[0] && x !== roots[1]) && (boundless || x > min - EPSILON && x < max + EPSILON)) roots[count++] = boundless ? x : clamp(x, min, max);\n        return count;\n      }\n    };\n  }();\n  var UID = {\n    _id: 1,\n    _pools: {},\n    get: function get(name) {\n      if (name) {\n        var pool = this._pools[name];\n        if (!pool) pool = this._pools[name] = {\n          _id: 1\n        };\n        return pool._id++;\n      } else {\n        return this._id++;\n      }\n    }\n  };\n  var Point = Base.extend({\n    _class: 'Point',\n    _readIndex: true,\n    initialize: function Point(arg0, arg1) {\n      var type = typeof arg0,\n          reading = this.__read,\n          read = 0;\n\n      if (type === 'number') {\n        var hasY = typeof arg1 === 'number';\n\n        this._set(arg0, hasY ? arg1 : arg0);\n\n        if (reading) read = hasY ? 2 : 1;\n      } else if (type === 'undefined' || arg0 === null) {\n        this._set(0, 0);\n\n        if (reading) read = arg0 === null ? 1 : 0;\n      } else {\n        var obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n        read = 1;\n\n        if (Array.isArray(obj)) {\n          this._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n        } else if ('x' in obj) {\n          this._set(obj.x || 0, obj.y || 0);\n        } else if ('width' in obj) {\n          this._set(obj.width || 0, obj.height || 0);\n        } else if ('angle' in obj) {\n          this._set(obj.length || 0, 0);\n\n          this.setAngle(obj.angle || 0);\n        } else {\n          this._set(0, 0);\n\n          read = 0;\n        }\n      }\n\n      if (reading) this.__read = read;\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n    equals: function equals(point) {\n      return this === point || point && (this.x === point.x && this.y === point.y || Array.isArray(point) && this.x === point[0] && this.y === point[1]) || false;\n    },\n    clone: function clone() {\n      return new Point(this.x, this.y);\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n    },\n    _serialize: function _serialize(options) {\n      var f = options.formatter;\n      return [f.number(this.x), f.number(this.y)];\n    },\n    getLength: function getLength() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n    setLength: function setLength(length) {\n      if (this.isZero()) {\n        var angle = this._angle || 0;\n\n        this._set(Math.cos(angle) * length, Math.sin(angle) * length);\n      } else {\n        var scale = length / this.getLength();\n        if (Numerical.isZero(scale)) this.getAngle();\n\n        this._set(this.x * scale, this.y * scale);\n      }\n    },\n    getAngle: function getAngle() {\n      return this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n    },\n    setAngle: function setAngle(angle) {\n      this.setAngleInRadians.call(this, angle * Math.PI / 180);\n    },\n    getAngleInDegrees: '#getAngle',\n    setAngleInDegrees: '#setAngle',\n    getAngleInRadians: function getAngleInRadians() {\n      if (!arguments.length) {\n        return this.isZero() ? this._angle || 0 : this._angle = Math.atan2(this.y, this.x);\n      } else {\n        var point = Point.read(arguments),\n            div = this.getLength() * point.getLength();\n\n        if (Numerical.isZero(div)) {\n          return NaN;\n        } else {\n          var a = this.dot(point) / div;\n          return Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n        }\n      }\n    },\n    setAngleInRadians: function setAngleInRadians(angle) {\n      this._angle = angle;\n\n      if (!this.isZero()) {\n        var length = this.getLength();\n\n        this._set(Math.cos(angle) * length, Math.sin(angle) * length);\n      }\n    },\n    getQuadrant: function getQuadrant() {\n      return this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n    }\n  }, {\n    beans: false,\n    getDirectedAngle: function getDirectedAngle() {\n      var point = Point.read(arguments);\n      return Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n    },\n    getDistance: function getDistance() {\n      var args = arguments,\n          point = Point.read(args),\n          x = point.x - this.x,\n          y = point.y - this.y,\n          d = x * x + y * y,\n          squared = Base.read(args);\n      return squared ? d : Math.sqrt(d);\n    },\n    normalize: function normalize(length) {\n      if (length === undefined) length = 1;\n      var current = this.getLength(),\n          scale = current !== 0 ? length / current : 0,\n          point = new Point(this.x * scale, this.y * scale);\n      if (scale >= 0) point._angle = this._angle;\n      return point;\n    },\n    rotate: function rotate(angle, center) {\n      if (angle === 0) return this.clone();\n      angle = angle * Math.PI / 180;\n      var point = center ? this.subtract(center) : this,\n          sin = Math.sin(angle),\n          cos = Math.cos(angle);\n      point = new Point(point.x * cos - point.y * sin, point.x * sin + point.y * cos);\n      return center ? point.add(center) : point;\n    },\n    transform: function transform(matrix) {\n      return matrix ? matrix._transformPoint(this) : this;\n    },\n    add: function add() {\n      var point = Point.read(arguments);\n      return new Point(this.x + point.x, this.y + point.y);\n    },\n    subtract: function subtract() {\n      var point = Point.read(arguments);\n      return new Point(this.x - point.x, this.y - point.y);\n    },\n    multiply: function multiply() {\n      var point = Point.read(arguments);\n      return new Point(this.x * point.x, this.y * point.y);\n    },\n    divide: function divide() {\n      var point = Point.read(arguments);\n      return new Point(this.x / point.x, this.y / point.y);\n    },\n    modulo: function modulo() {\n      var point = Point.read(arguments);\n      return new Point(this.x % point.x, this.y % point.y);\n    },\n    negate: function negate() {\n      return new Point(-this.x, -this.y);\n    },\n    isInside: function isInside() {\n      return _Rectangle.read(arguments).contains(this);\n    },\n    isClose: function isClose() {\n      var args = arguments,\n          point = Point.read(args),\n          tolerance = Base.read(args);\n      return this.getDistance(point) <= tolerance;\n    },\n    isCollinear: function isCollinear() {\n      var point = Point.read(arguments);\n      return Point.isCollinear(this.x, this.y, point.x, point.y);\n    },\n    isColinear: '#isCollinear',\n    isOrthogonal: function isOrthogonal() {\n      var point = Point.read(arguments);\n      return Point.isOrthogonal(this.x, this.y, point.x, point.y);\n    },\n    isZero: function isZero() {\n      var isZero = Numerical.isZero;\n      return isZero(this.x) && isZero(this.y);\n    },\n    isNaN: function (_isNaN) {\n      function isNaN() {\n        return _isNaN.apply(this, arguments);\n      }\n\n      isNaN.toString = function () {\n        return _isNaN.toString();\n      };\n\n      return isNaN;\n    }(function () {\n      return isNaN(this.x) || isNaN(this.y);\n    }),\n    isInQuadrant: function isInQuadrant(q) {\n      return this.x * (q > 1 && q < 4 ? -1 : 1) >= 0 && this.y * (q > 2 ? -1 : 1) >= 0;\n    },\n    dot: function dot() {\n      var point = Point.read(arguments);\n      return this.x * point.x + this.y * point.y;\n    },\n    cross: function cross() {\n      var point = Point.read(arguments);\n      return this.x * point.y - this.y * point.x;\n    },\n    project: function project() {\n      var point = Point.read(arguments),\n          scale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n      return new Point(point.x * scale, point.y * scale);\n    },\n    statics: {\n      min: function min() {\n        var args = arguments,\n            point1 = Point.read(args),\n            point2 = Point.read(args);\n        return new Point(Math.min(point1.x, point2.x), Math.min(point1.y, point2.y));\n      },\n      max: function max() {\n        var args = arguments,\n            point1 = Point.read(args),\n            point2 = Point.read(args);\n        return new Point(Math.max(point1.x, point2.x), Math.max(point1.y, point2.y));\n      },\n      random: function random() {\n        return new Point(Math.random(), Math.random());\n      },\n      isCollinear: function isCollinear(x1, y1, x2, y2) {\n        return Math.abs(x1 * y2 - y1 * x2) <= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2)) * 1e-8;\n      },\n      isOrthogonal: function isOrthogonal(x1, y1, x2, y2) {\n        return Math.abs(x1 * x2 + y1 * y2) <= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2)) * 1e-8;\n      }\n    }\n  }, Base.each(['round', 'ceil', 'floor', 'abs'], function (key) {\n    var op = Math[key];\n\n    this[key] = function () {\n      return new Point(op(this.x), op(this.y));\n    };\n  }, {}));\n  var LinkedPoint = Point.extend({\n    initialize: function Point(x, y, owner, setter) {\n      this._x = x;\n      this._y = y;\n      this._owner = owner;\n      this._setter = setter;\n    },\n    _set: function _set(x, y, _dontNotify) {\n      this._x = x;\n      this._y = y;\n      if (!_dontNotify) this._owner[this._setter](this);\n      return this;\n    },\n    getX: function getX() {\n      return this._x;\n    },\n    setX: function setX(x) {\n      this._x = x;\n\n      this._owner[this._setter](this);\n    },\n    getY: function getY() {\n      return this._y;\n    },\n    setY: function setY(y) {\n      this._y = y;\n\n      this._owner[this._setter](this);\n    },\n    isSelected: function isSelected() {\n      return !!(this._owner._selection & this._getSelection());\n    },\n    setSelected: function setSelected(selected) {\n      this._owner._changeSelection(this._getSelection(), selected);\n    },\n    _getSelection: function _getSelection() {\n      return this._setter === 'setPosition' ? 4 : 0;\n    }\n  });\n  var Size = Base.extend({\n    _class: 'Size',\n    _readIndex: true,\n    initialize: function Size(arg0, arg1) {\n      var type = typeof arg0,\n          reading = this.__read,\n          read = 0;\n\n      if (type === 'number') {\n        var hasHeight = typeof arg1 === 'number';\n\n        this._set(arg0, hasHeight ? arg1 : arg0);\n\n        if (reading) read = hasHeight ? 2 : 1;\n      } else if (type === 'undefined' || arg0 === null) {\n        this._set(0, 0);\n\n        if (reading) read = arg0 === null ? 1 : 0;\n      } else {\n        var obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n        read = 1;\n\n        if (Array.isArray(obj)) {\n          this._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n        } else if ('width' in obj) {\n          this._set(obj.width || 0, obj.height || 0);\n        } else if ('x' in obj) {\n          this._set(obj.x || 0, obj.y || 0);\n        } else {\n          this._set(0, 0);\n\n          read = 0;\n        }\n      }\n\n      if (reading) this.__read = read;\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(width, height) {\n      this.width = width;\n      this.height = height;\n      return this;\n    },\n    equals: function equals(size) {\n      return size === this || size && (this.width === size.width && this.height === size.height || Array.isArray(size) && this.width === size[0] && this.height === size[1]) || false;\n    },\n    clone: function clone() {\n      return new Size(this.width, this.height);\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '{ width: ' + f.number(this.width) + ', height: ' + f.number(this.height) + ' }';\n    },\n    _serialize: function _serialize(options) {\n      var f = options.formatter;\n      return [f.number(this.width), f.number(this.height)];\n    },\n    add: function add() {\n      var size = Size.read(arguments);\n      return new Size(this.width + size.width, this.height + size.height);\n    },\n    subtract: function subtract() {\n      var size = Size.read(arguments);\n      return new Size(this.width - size.width, this.height - size.height);\n    },\n    multiply: function multiply() {\n      var size = Size.read(arguments);\n      return new Size(this.width * size.width, this.height * size.height);\n    },\n    divide: function divide() {\n      var size = Size.read(arguments);\n      return new Size(this.width / size.width, this.height / size.height);\n    },\n    modulo: function modulo() {\n      var size = Size.read(arguments);\n      return new Size(this.width % size.width, this.height % size.height);\n    },\n    negate: function negate() {\n      return new Size(-this.width, -this.height);\n    },\n    isZero: function isZero() {\n      var isZero = Numerical.isZero;\n      return isZero(this.width) && isZero(this.height);\n    },\n    isNaN: function (_isNaN2) {\n      function isNaN() {\n        return _isNaN2.apply(this, arguments);\n      }\n\n      isNaN.toString = function () {\n        return _isNaN2.toString();\n      };\n\n      return isNaN;\n    }(function () {\n      return isNaN(this.width) || isNaN(this.height);\n    }),\n    statics: {\n      min: function min(size1, size2) {\n        return new Size(Math.min(size1.width, size2.width), Math.min(size1.height, size2.height));\n      },\n      max: function max(size1, size2) {\n        return new Size(Math.max(size1.width, size2.width), Math.max(size1.height, size2.height));\n      },\n      random: function random() {\n        return new Size(Math.random(), Math.random());\n      }\n    }\n  }, Base.each(['round', 'ceil', 'floor', 'abs'], function (key) {\n    var op = Math[key];\n\n    this[key] = function () {\n      return new Size(op(this.width), op(this.height));\n    };\n  }, {}));\n  var LinkedSize = Size.extend({\n    initialize: function Size(width, height, owner, setter) {\n      this._width = width;\n      this._height = height;\n      this._owner = owner;\n      this._setter = setter;\n    },\n    _set: function _set(width, height, _dontNotify) {\n      this._width = width;\n      this._height = height;\n      if (!_dontNotify) this._owner[this._setter](this);\n      return this;\n    },\n    getWidth: function getWidth() {\n      return this._width;\n    },\n    setWidth: function setWidth(width) {\n      this._width = width;\n\n      this._owner[this._setter](this);\n    },\n    getHeight: function getHeight() {\n      return this._height;\n    },\n    setHeight: function setHeight(height) {\n      this._height = height;\n\n      this._owner[this._setter](this);\n    }\n  });\n\n  var _Rectangle = Base.extend({\n    _class: 'Rectangle',\n    _readIndex: true,\n    beans: true,\n    initialize: function Rectangle(arg0, arg1, arg2, arg3) {\n      var args = arguments,\n          type = typeof arg0,\n          read;\n\n      if (type === 'number') {\n        this._set(arg0, arg1, arg2, arg3);\n\n        read = 4;\n      } else if (type === 'undefined' || arg0 === null) {\n        this._set(0, 0, 0, 0);\n\n        read = arg0 === null ? 1 : 0;\n      } else if (args.length === 1) {\n        if (Array.isArray(arg0)) {\n          this._set.apply(this, arg0);\n\n          read = 1;\n        } else if (arg0.x !== undefined || arg0.width !== undefined) {\n          this._set(arg0.x || 0, arg0.y || 0, arg0.width || 0, arg0.height || 0);\n\n          read = 1;\n        } else if (arg0.from === undefined && arg0.to === undefined) {\n          this._set(0, 0, 0, 0);\n\n          if (Base.readSupported(args, this)) {\n            read = 1;\n          }\n        }\n      }\n\n      if (read === undefined) {\n        var frm = Point.readNamed(args, 'from'),\n            next = Base.peek(args),\n            x = frm.x,\n            y = frm.y,\n            width,\n            height;\n\n        if (next && next.x !== undefined || Base.hasNamed(args, 'to')) {\n          var to = Point.readNamed(args, 'to');\n          width = to.x - x;\n          height = to.y - y;\n\n          if (width < 0) {\n            x = to.x;\n            width = -width;\n          }\n\n          if (height < 0) {\n            y = to.y;\n            height = -height;\n          }\n        } else {\n          var size = Size.read(args);\n          width = size.width;\n          height = size.height;\n        }\n\n        this._set(x, y, width, height);\n\n        read = args.__index;\n      }\n\n      var filtered = args.__filtered;\n      if (filtered) this.__filtered = filtered;\n      if (this.__read) this.__read = read;\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(x, y, width, height) {\n      this.x = x;\n      this.y = y;\n      this.width = width;\n      this.height = height;\n      return this;\n    },\n    clone: function clone() {\n      return new _Rectangle(this.x, this.y, this.width, this.height);\n    },\n    equals: function equals(rect) {\n      var rt = Base.isPlainValue(rect) ? _Rectangle.read(arguments) : rect;\n      return rt === this || rt && this.x === rt.x && this.y === rt.y && this.width === rt.width && this.height === rt.height || false;\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ', width: ' + f.number(this.width) + ', height: ' + f.number(this.height) + ' }';\n    },\n    _serialize: function _serialize(options) {\n      var f = options.formatter;\n      return [f.number(this.x), f.number(this.y), f.number(this.width), f.number(this.height)];\n    },\n    getPoint: function getPoint(_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n      return new ctor(this.x, this.y, this, 'setPoint');\n    },\n    setPoint: function setPoint() {\n      var point = Point.read(arguments);\n      this.x = point.x;\n      this.y = point.y;\n    },\n    getSize: function getSize(_dontLink) {\n      var ctor = _dontLink ? Size : LinkedSize;\n      return new ctor(this.width, this.height, this, 'setSize');\n    },\n    _fw: 1,\n    _fh: 1,\n    setSize: function setSize() {\n      var size = Size.read(arguments),\n          sx = this._sx,\n          sy = this._sy,\n          w = size.width,\n          h = size.height;\n\n      if (sx) {\n        this.x += (this.width - w) * sx;\n      }\n\n      if (sy) {\n        this.y += (this.height - h) * sy;\n      }\n\n      this.width = w;\n      this.height = h;\n      this._fw = this._fh = 1;\n    },\n    getLeft: function getLeft() {\n      return this.x;\n    },\n    setLeft: function setLeft(left) {\n      if (!this._fw) {\n        var amount = left - this.x;\n        this.width -= this._sx === 0.5 ? amount * 2 : amount;\n      }\n\n      this.x = left;\n      this._sx = this._fw = 0;\n    },\n    getTop: function getTop() {\n      return this.y;\n    },\n    setTop: function setTop(top) {\n      if (!this._fh) {\n        var amount = top - this.y;\n        this.height -= this._sy === 0.5 ? amount * 2 : amount;\n      }\n\n      this.y = top;\n      this._sy = this._fh = 0;\n    },\n    getRight: function getRight() {\n      return this.x + this.width;\n    },\n    setRight: function setRight(right) {\n      if (!this._fw) {\n        var amount = right - this.x;\n        this.width = this._sx === 0.5 ? amount * 2 : amount;\n      }\n\n      this.x = right - this.width;\n      this._sx = 1;\n      this._fw = 0;\n    },\n    getBottom: function getBottom() {\n      return this.y + this.height;\n    },\n    setBottom: function setBottom(bottom) {\n      if (!this._fh) {\n        var amount = bottom - this.y;\n        this.height = this._sy === 0.5 ? amount * 2 : amount;\n      }\n\n      this.y = bottom - this.height;\n      this._sy = 1;\n      this._fh = 0;\n    },\n    getCenterX: function getCenterX() {\n      return this.x + this.width / 2;\n    },\n    setCenterX: function setCenterX(x) {\n      if (this._fw || this._sx === 0.5) {\n        this.x = x - this.width / 2;\n      } else {\n        if (this._sx) {\n          this.x += (x - this.x) * 2 * this._sx;\n        }\n\n        this.width = (x - this.x) * 2;\n      }\n\n      this._sx = 0.5;\n      this._fw = 0;\n    },\n    getCenterY: function getCenterY() {\n      return this.y + this.height / 2;\n    },\n    setCenterY: function setCenterY(y) {\n      if (this._fh || this._sy === 0.5) {\n        this.y = y - this.height / 2;\n      } else {\n        if (this._sy) {\n          this.y += (y - this.y) * 2 * this._sy;\n        }\n\n        this.height = (y - this.y) * 2;\n      }\n\n      this._sy = 0.5;\n      this._fh = 0;\n    },\n    getCenter: function getCenter(_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n      return new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n    },\n    setCenter: function setCenter() {\n      var point = Point.read(arguments);\n      this.setCenterX(point.x);\n      this.setCenterY(point.y);\n      return this;\n    },\n    getArea: function getArea() {\n      return this.width * this.height;\n    },\n    isEmpty: function isEmpty() {\n      return this.width === 0 || this.height === 0;\n    },\n    contains: function contains(arg) {\n      return arg && arg.width !== undefined || (Array.isArray(arg) ? arg : arguments).length === 4 ? this._containsRectangle(_Rectangle.read(arguments)) : this._containsPoint(Point.read(arguments));\n    },\n    _containsPoint: function _containsPoint(point) {\n      var x = point.x,\n          y = point.y;\n      return x >= this.x && y >= this.y && x <= this.x + this.width && y <= this.y + this.height;\n    },\n    _containsRectangle: function _containsRectangle(rect) {\n      var x = rect.x,\n          y = rect.y;\n      return x >= this.x && y >= this.y && x + rect.width <= this.x + this.width && y + rect.height <= this.y + this.height;\n    },\n    intersects: function intersects() {\n      var rect = _Rectangle.read(arguments),\n          epsilon = Base.read(arguments) || 0;\n\n      return rect.x + rect.width > this.x - epsilon && rect.y + rect.height > this.y - epsilon && rect.x < this.x + this.width + epsilon && rect.y < this.y + this.height + epsilon;\n    },\n    intersect: function intersect() {\n      var rect = _Rectangle.read(arguments),\n          x1 = Math.max(this.x, rect.x),\n          y1 = Math.max(this.y, rect.y),\n          x2 = Math.min(this.x + this.width, rect.x + rect.width),\n          y2 = Math.min(this.y + this.height, rect.y + rect.height);\n\n      return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n    },\n    unite: function unite() {\n      var rect = _Rectangle.read(arguments),\n          x1 = Math.min(this.x, rect.x),\n          y1 = Math.min(this.y, rect.y),\n          x2 = Math.max(this.x + this.width, rect.x + rect.width),\n          y2 = Math.max(this.y + this.height, rect.y + rect.height);\n\n      return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n    },\n    include: function include() {\n      var point = Point.read(arguments);\n      var x1 = Math.min(this.x, point.x),\n          y1 = Math.min(this.y, point.y),\n          x2 = Math.max(this.x + this.width, point.x),\n          y2 = Math.max(this.y + this.height, point.y);\n      return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n    },\n    expand: function expand() {\n      var amount = Size.read(arguments),\n          hor = amount.width,\n          ver = amount.height;\n      return new _Rectangle(this.x - hor / 2, this.y - ver / 2, this.width + hor, this.height + ver);\n    },\n    scale: function scale(hor, ver) {\n      return this.expand(this.width * hor - this.width, this.height * (ver === undefined ? hor : ver) - this.height);\n    }\n  }, Base.each([['Top', 'Left'], ['Top', 'Right'], ['Bottom', 'Left'], ['Bottom', 'Right'], ['Left', 'Center'], ['Top', 'Center'], ['Right', 'Center'], ['Bottom', 'Center']], function (parts, index) {\n    var part = parts.join(''),\n        xFirst = /^[RL]/.test(part);\n    if (index >= 4) parts[1] += xFirst ? 'Y' : 'X';\n    var x = parts[xFirst ? 0 : 1],\n        y = parts[xFirst ? 1 : 0],\n        getX = 'get' + x,\n        getY = 'get' + y,\n        setX = 'set' + x,\n        setY = 'set' + y,\n        get = 'get' + part,\n        set = 'set' + part;\n\n    this[get] = function (_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n      return new ctor(this[getX](), this[getY](), this, set);\n    };\n\n    this[set] = function () {\n      var point = Point.read(arguments);\n      this[setX](point.x);\n      this[setY](point.y);\n    };\n  }, {\n    beans: true\n  }));\n\n  var LinkedRectangle = _Rectangle.extend({\n    initialize: function Rectangle(x, y, width, height, owner, setter) {\n      this._set(x, y, width, height, true);\n\n      this._owner = owner;\n      this._setter = setter;\n    },\n    _set: function _set(x, y, width, height, _dontNotify) {\n      this._x = x;\n      this._y = y;\n      this._width = width;\n      this._height = height;\n      if (!_dontNotify) this._owner[this._setter](this);\n      return this;\n    }\n  }, new function () {\n    var proto = _Rectangle.prototype;\n    return Base.each(['x', 'y', 'width', 'height'], function (key) {\n      var part = Base.capitalize(key),\n          internal = '_' + key;\n\n      this['get' + part] = function () {\n        return this[internal];\n      };\n\n      this['set' + part] = function (value) {\n        this[internal] = value;\n        if (!this._dontNotify) this._owner[this._setter](this);\n      };\n    }, Base.each(['Point', 'Size', 'Center', 'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY', 'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight', 'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'], function (key) {\n      var name = 'set' + key;\n\n      this[name] = function () {\n        this._dontNotify = true;\n        proto[name].apply(this, arguments);\n        this._dontNotify = false;\n\n        this._owner[this._setter](this);\n      };\n    }, {\n      isSelected: function isSelected() {\n        return !!(this._owner._selection & 2);\n      },\n      setSelected: function setSelected(selected) {\n        var owner = this._owner;\n\n        if (owner._changeSelection) {\n          owner._changeSelection(2, selected);\n        }\n      }\n    }));\n  }());\n\n  var Matrix = Base.extend({\n    _class: 'Matrix',\n    initialize: function Matrix(arg, _dontNotify) {\n      var args = arguments,\n          count = args.length,\n          ok = true;\n\n      if (count >= 6) {\n        this._set.apply(this, args);\n      } else if (count === 1 || count === 2) {\n        if (arg instanceof Matrix) {\n          this._set(arg._a, arg._b, arg._c, arg._d, arg._tx, arg._ty, _dontNotify);\n        } else if (Array.isArray(arg)) {\n          this._set.apply(this, _dontNotify ? arg.concat([_dontNotify]) : arg);\n        } else {\n          ok = false;\n        }\n      } else if (!count) {\n        this.reset();\n      } else {\n        ok = false;\n      }\n\n      if (!ok) {\n        throw new Error('Unsupported matrix parameters');\n      }\n\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(a, b, c, d, tx, ty, _dontNotify) {\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      this._d = d;\n      this._tx = tx;\n      this._ty = ty;\n      if (!_dontNotify) this._changed();\n      return this;\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return Base.serialize(this.getValues(), options, true, dictionary);\n    },\n    _changed: function _changed() {\n      var owner = this._owner;\n\n      if (owner) {\n        if (owner._applyMatrix) {\n          owner.transform(null, true);\n        } else {\n          owner._changed(25);\n        }\n      }\n    },\n    clone: function clone() {\n      return new Matrix(this._a, this._b, this._c, this._d, this._tx, this._ty);\n    },\n    equals: function equals(mx) {\n      return mx === this || mx && this._a === mx._a && this._b === mx._b && this._c === mx._c && this._d === mx._d && this._tx === mx._tx && this._ty === mx._ty;\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '[[' + [f.number(this._a), f.number(this._c), f.number(this._tx)].join(', ') + '], [' + [f.number(this._b), f.number(this._d), f.number(this._ty)].join(', ') + ']]';\n    },\n    reset: function reset(_dontNotify) {\n      this._a = this._d = 1;\n      this._b = this._c = this._tx = this._ty = 0;\n      if (!_dontNotify) this._changed();\n      return this;\n    },\n    apply: function apply(recursively, _setApplyMatrix) {\n      var owner = this._owner;\n\n      if (owner) {\n        owner.transform(null, Base.pick(recursively, true), _setApplyMatrix);\n        return this.isIdentity();\n      }\n\n      return false;\n    },\n    translate: function translate() {\n      var point = Point.read(arguments),\n          x = point.x,\n          y = point.y;\n      this._tx += x * this._a + y * this._c;\n      this._ty += x * this._b + y * this._d;\n\n      this._changed();\n\n      return this;\n    },\n    scale: function scale() {\n      var args = arguments,\n          scale = Point.read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      if (center) this.translate(center);\n      this._a *= scale.x;\n      this._b *= scale.x;\n      this._c *= scale.y;\n      this._d *= scale.y;\n      if (center) this.translate(center.negate());\n\n      this._changed();\n\n      return this;\n    },\n    rotate: function rotate(angle) {\n      angle *= Math.PI / 180;\n      var center = Point.read(arguments, 1),\n          x = center.x,\n          y = center.y,\n          cos = Math.cos(angle),\n          sin = Math.sin(angle),\n          tx = x - x * cos + y * sin,\n          ty = y - x * sin - y * cos,\n          a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d;\n      this._a = cos * a + sin * c;\n      this._b = cos * b + sin * d;\n      this._c = -sin * a + cos * c;\n      this._d = -sin * b + cos * d;\n      this._tx += tx * a + ty * c;\n      this._ty += tx * b + ty * d;\n\n      this._changed();\n\n      return this;\n    },\n    shear: function shear() {\n      var args = arguments,\n          shear = Point.read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      if (center) this.translate(center);\n      var a = this._a,\n          b = this._b;\n      this._a += shear.y * this._c;\n      this._b += shear.y * this._d;\n      this._c += shear.x * a;\n      this._d += shear.x * b;\n      if (center) this.translate(center.negate());\n\n      this._changed();\n\n      return this;\n    },\n    skew: function skew() {\n      var args = arguments,\n          skew = Point.read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      }),\n          toRadians = Math.PI / 180,\n          shear = new Point(Math.tan(skew.x * toRadians), Math.tan(skew.y * toRadians));\n      return this.shear(shear, center);\n    },\n    append: function append(mx, _dontNotify) {\n      if (mx) {\n        var a1 = this._a,\n            b1 = this._b,\n            c1 = this._c,\n            d1 = this._d,\n            a2 = mx._a,\n            b2 = mx._c,\n            c2 = mx._b,\n            d2 = mx._d,\n            tx2 = mx._tx,\n            ty2 = mx._ty;\n        this._a = a2 * a1 + c2 * c1;\n        this._c = b2 * a1 + d2 * c1;\n        this._b = a2 * b1 + c2 * d1;\n        this._d = b2 * b1 + d2 * d1;\n        this._tx += tx2 * a1 + ty2 * c1;\n        this._ty += tx2 * b1 + ty2 * d1;\n        if (!_dontNotify) this._changed();\n      }\n\n      return this;\n    },\n    prepend: function prepend(mx, _dontNotify) {\n      if (mx) {\n        var a1 = this._a,\n            b1 = this._b,\n            c1 = this._c,\n            d1 = this._d,\n            tx1 = this._tx,\n            ty1 = this._ty,\n            a2 = mx._a,\n            b2 = mx._c,\n            c2 = mx._b,\n            d2 = mx._d,\n            tx2 = mx._tx,\n            ty2 = mx._ty;\n        this._a = a2 * a1 + b2 * b1;\n        this._c = a2 * c1 + b2 * d1;\n        this._b = c2 * a1 + d2 * b1;\n        this._d = c2 * c1 + d2 * d1;\n        this._tx = a2 * tx1 + b2 * ty1 + tx2;\n        this._ty = c2 * tx1 + d2 * ty1 + ty2;\n        if (!_dontNotify) this._changed();\n      }\n\n      return this;\n    },\n    appended: function appended(mx) {\n      return this.clone().append(mx);\n    },\n    prepended: function prepended(mx) {\n      return this.clone().prepend(mx);\n    },\n    invert: function invert() {\n      var a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d,\n          tx = this._tx,\n          ty = this._ty,\n          det = a * d - b * c,\n          res = null;\n\n      if (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n        this._a = d / det;\n        this._b = -b / det;\n        this._c = -c / det;\n        this._d = a / det;\n        this._tx = (c * ty - d * tx) / det;\n        this._ty = (b * tx - a * ty) / det;\n        res = this;\n      }\n\n      return res;\n    },\n    inverted: function inverted() {\n      return this.clone().invert();\n    },\n    concatenate: '#append',\n    preConcatenate: '#prepend',\n    chain: '#appended',\n    _shiftless: function _shiftless() {\n      return new Matrix(this._a, this._b, this._c, this._d, 0, 0);\n    },\n    _orNullIfIdentity: function _orNullIfIdentity() {\n      return this.isIdentity() ? null : this;\n    },\n    isIdentity: function isIdentity() {\n      return this._a === 1 && this._b === 0 && this._c === 0 && this._d === 1 && this._tx === 0 && this._ty === 0;\n    },\n    isInvertible: function isInvertible() {\n      var det = this._a * this._d - this._c * this._b;\n      return det && !isNaN(det) && isFinite(this._tx) && isFinite(this._ty);\n    },\n    isSingular: function isSingular() {\n      return !this.isInvertible();\n    },\n    transform: function transform(src, dst, count) {\n      return arguments.length < 3 ? this._transformPoint(Point.read(arguments)) : this._transformCoordinates(src, dst, count);\n    },\n    _transformPoint: function _transformPoint(point, dest, _dontNotify) {\n      var x = point.x,\n          y = point.y;\n      if (!dest) dest = new Point();\n      return dest._set(x * this._a + y * this._c + this._tx, x * this._b + y * this._d + this._ty, _dontNotify);\n    },\n    _transformCoordinates: function _transformCoordinates(src, dst, count) {\n      for (var i = 0, max = 2 * count; i < max; i += 2) {\n        var x = src[i],\n            y = src[i + 1];\n        dst[i] = x * this._a + y * this._c + this._tx;\n        dst[i + 1] = x * this._b + y * this._d + this._ty;\n      }\n\n      return dst;\n    },\n    _transformCorners: function _transformCorners(rect) {\n      var x1 = rect.x,\n          y1 = rect.y,\n          x2 = x1 + rect.width,\n          y2 = y1 + rect.height,\n          coords = [x1, y1, x2, y1, x2, y2, x1, y2];\n      return this._transformCoordinates(coords, coords, 4);\n    },\n    _transformBounds: function _transformBounds(bounds, dest, _dontNotify) {\n      var coords = this._transformCorners(bounds),\n          min = coords.slice(0, 2),\n          max = min.slice();\n\n      for (var i = 2; i < 8; i++) {\n        var val = coords[i],\n            j = i & 1;\n\n        if (val < min[j]) {\n          min[j] = val;\n        } else if (val > max[j]) {\n          max[j] = val;\n        }\n      }\n\n      if (!dest) dest = new _Rectangle();\n      return dest._set(min[0], min[1], max[0] - min[0], max[1] - min[1], _dontNotify);\n    },\n    inverseTransform: function inverseTransform() {\n      return this._inverseTransform(Point.read(arguments));\n    },\n    _inverseTransform: function _inverseTransform(point, dest, _dontNotify) {\n      var a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d,\n          tx = this._tx,\n          ty = this._ty,\n          det = a * d - b * c,\n          res = null;\n\n      if (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n        var x = point.x - this._tx,\n            y = point.y - this._ty;\n        if (!dest) dest = new Point();\n        res = dest._set((x * d - y * c) / det, (y * a - x * b) / det, _dontNotify);\n      }\n\n      return res;\n    },\n    decompose: function decompose() {\n      var a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d,\n          det = a * d - b * c,\n          sqrt = Math.sqrt,\n          atan2 = Math.atan2,\n          degrees = 180 / Math.PI,\n          rotate,\n          scale,\n          skew;\n\n      if (a !== 0 || b !== 0) {\n        var r = sqrt(a * a + b * b);\n        rotate = Math.acos(a / r) * (b > 0 ? 1 : -1);\n        scale = [r, det / r];\n        skew = [atan2(a * c + b * d, r * r), 0];\n      } else if (c !== 0 || d !== 0) {\n        var s = sqrt(c * c + d * d);\n        rotate = Math.asin(c / s) * (d > 0 ? 1 : -1);\n        scale = [det / s, s];\n        skew = [0, atan2(a * c + b * d, s * s)];\n      } else {\n        rotate = 0;\n        skew = scale = [0, 0];\n      }\n\n      return {\n        translation: this.getTranslation(),\n        rotation: rotate * degrees,\n        scaling: new Point(scale),\n        skewing: new Point(skew[0] * degrees, skew[1] * degrees)\n      };\n    },\n    getValues: function getValues() {\n      return [this._a, this._b, this._c, this._d, this._tx, this._ty];\n    },\n    getTranslation: function getTranslation() {\n      return new Point(this._tx, this._ty);\n    },\n    getScaling: function getScaling() {\n      return this.decompose().scaling;\n    },\n    getRotation: function getRotation() {\n      return this.decompose().rotation;\n    },\n    applyToContext: function applyToContext(ctx) {\n      if (!this.isIdentity()) {\n        ctx.transform(this._a, this._b, this._c, this._d, this._tx, this._ty);\n      }\n    }\n  }, Base.each(['a', 'b', 'c', 'd', 'tx', 'ty'], function (key) {\n    var part = Base.capitalize(key),\n        prop = '_' + key;\n\n    this['get' + part] = function () {\n      return this[prop];\n    };\n\n    this['set' + part] = function (value) {\n      this[prop] = value;\n\n      this._changed();\n    };\n  }, {}));\n  var Line = Base.extend({\n    _class: 'Line',\n    initialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n      var asVector = false;\n\n      if (arguments.length >= 4) {\n        this._px = arg0;\n        this._py = arg1;\n        this._vx = arg2;\n        this._vy = arg3;\n        asVector = arg4;\n      } else {\n        this._px = arg0.x;\n        this._py = arg0.y;\n        this._vx = arg1.x;\n        this._vy = arg1.y;\n        asVector = arg2;\n      }\n\n      if (!asVector) {\n        this._vx -= this._px;\n        this._vy -= this._py;\n      }\n    },\n    getPoint: function getPoint() {\n      return new Point(this._px, this._py);\n    },\n    getVector: function getVector() {\n      return new Point(this._vx, this._vy);\n    },\n    getLength: function getLength() {\n      return this.getVector().getLength();\n    },\n    intersect: function intersect(line, isInfinite) {\n      return Line.intersect(this._px, this._py, this._vx, this._vy, line._px, line._py, line._vx, line._vy, true, isInfinite);\n    },\n    getSide: function getSide(point, isInfinite) {\n      return Line.getSide(this._px, this._py, this._vx, this._vy, point.x, point.y, true, isInfinite);\n    },\n    getDistance: function getDistance(point) {\n      return Math.abs(this.getSignedDistance(point));\n    },\n    getSignedDistance: function getSignedDistance(point) {\n      return Line.getSignedDistance(this._px, this._py, this._vx, this._vy, point.x, point.y, true);\n    },\n    isCollinear: function isCollinear(line) {\n      return Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n    },\n    isOrthogonal: function isOrthogonal(line) {\n      return Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n    },\n    statics: {\n      intersect: function intersect(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector, isInfinite) {\n        if (!asVector) {\n          v1x -= p1x;\n          v1y -= p1y;\n          v2x -= p2x;\n          v2y -= p2y;\n        }\n\n        var cross = v1x * v2y - v1y * v2x;\n\n        if (!Numerical.isMachineZero(cross)) {\n          var dx = p1x - p2x,\n              dy = p1y - p2y,\n              u1 = (v2x * dy - v2y * dx) / cross,\n              u2 = (v1x * dy - v1y * dx) / cross,\n              epsilon = 1e-12,\n              uMin = -epsilon,\n              uMax = 1 + epsilon;\n\n          if (isInfinite || uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n            if (!isInfinite) {\n              u1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n            }\n\n            return new Point(p1x + u1 * v1x, p1y + u1 * v1y);\n          }\n        }\n      },\n      getSide: function getSide(px, py, vx, vy, x, y, asVector, isInfinite) {\n        if (!asVector) {\n          vx -= px;\n          vy -= py;\n        }\n\n        var v2x = x - px,\n            v2y = y - py,\n            ccw = v2x * vy - v2y * vx;\n\n        if (!isInfinite && Numerical.isMachineZero(ccw)) {\n          ccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n          if (ccw >= 0 && ccw <= 1) ccw = 0;\n        }\n\n        return ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n      },\n      getSignedDistance: function getSignedDistance(px, py, vx, vy, x, y, asVector) {\n        if (!asVector) {\n          vx -= px;\n          vy -= py;\n        }\n\n        return vx === 0 ? vy > 0 ? x - px : px - x : vy === 0 ? vx < 0 ? y - py : py - y : ((x - px) * vy - (y - py) * vx) / (vy > vx ? vy * Math.sqrt(1 + vx * vx / (vy * vy)) : vx * Math.sqrt(1 + vy * vy / (vx * vx)));\n      },\n      getDistance: function getDistance(px, py, vx, vy, x, y, asVector) {\n        return Math.abs(Line.getSignedDistance(px, py, vx, vy, x, y, asVector));\n      }\n    }\n  });\n  var Project = PaperScopeItem.extend({\n    _class: 'Project',\n    _list: 'projects',\n    _reference: 'project',\n    _compactSerialize: true,\n    initialize: function Project(element) {\n      PaperScopeItem.call(this, true);\n      this._children = [];\n      this._namedChildren = {};\n      this._activeLayer = null;\n      this._currentStyle = new Style(null, null, this);\n      this._view = View.create(this, element || CanvasProvider.getCanvas(1, 1));\n      this._selectionItems = {};\n      this._selectionCount = 0;\n      this._updateVersion = 0;\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return Base.serialize(this._children, options, true, dictionary);\n    },\n    _changed: function _changed(flags, item) {\n      if (flags & 1) {\n        var view = this._view;\n\n        if (view) {\n          view._needsUpdate = true;\n          if (!view._requested && view._autoUpdate) view.requestUpdate();\n        }\n      }\n\n      var changes = this._changes;\n\n      if (changes && item) {\n        var changesById = this._changesById,\n            id = item._id,\n            entry = changesById[id];\n\n        if (entry) {\n          entry.flags |= flags;\n        } else {\n          changes.push(changesById[id] = {\n            item: item,\n            flags: flags\n          });\n        }\n      }\n    },\n    clear: function clear() {\n      var children = this._children;\n\n      for (var i = children.length - 1; i >= 0; i--) {\n        children[i].remove();\n      }\n    },\n    isEmpty: function isEmpty() {\n      return !this._children.length;\n    },\n    remove: function remove() {\n      if (!remove.base.call(this)) return false;\n      if (this._view) this._view.remove();\n      return true;\n    },\n    getView: function getView() {\n      return this._view;\n    },\n    getCurrentStyle: function getCurrentStyle() {\n      return this._currentStyle;\n    },\n    setCurrentStyle: function setCurrentStyle(style) {\n      this._currentStyle.set(style);\n    },\n    getIndex: function getIndex() {\n      return this._index;\n    },\n    getOptions: function getOptions() {\n      return this._scope.settings;\n    },\n    getLayers: function getLayers() {\n      return this._children;\n    },\n    getActiveLayer: function getActiveLayer() {\n      return this._activeLayer || new Layer({\n        project: this,\n        insert: true\n      });\n    },\n    getSymbolDefinitions: function getSymbolDefinitions() {\n      var definitions = [],\n          ids = {};\n      this.getItems({\n        class: SymbolItem,\n        match: function match(item) {\n          var definition = item._definition,\n              id = definition._id;\n\n          if (!ids[id]) {\n            ids[id] = true;\n            definitions.push(definition);\n          }\n\n          return false;\n        }\n      });\n      return definitions;\n    },\n    getSymbols: 'getSymbolDefinitions',\n    getSelectedItems: function getSelectedItems() {\n      var selectionItems = this._selectionItems,\n          items = [];\n\n      for (var id in selectionItems) {\n        var item = selectionItems[id],\n            selection = item._selection;\n\n        if (selection & 1 && item.isInserted()) {\n          items.push(item);\n        } else if (!selection) {\n          this._updateSelection(item);\n        }\n      }\n\n      return items;\n    },\n    _updateSelection: function _updateSelection(item) {\n      var id = item._id,\n          selectionItems = this._selectionItems;\n\n      if (item._selection) {\n        if (selectionItems[id] !== item) {\n          this._selectionCount++;\n          selectionItems[id] = item;\n        }\n      } else if (selectionItems[id] === item) {\n        this._selectionCount--;\n        delete selectionItems[id];\n      }\n    },\n    selectAll: function selectAll() {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].setFullySelected(true);\n      }\n    },\n    deselectAll: function deselectAll() {\n      var selectionItems = this._selectionItems;\n\n      for (var i in selectionItems) {\n        selectionItems[i].setFullySelected(false);\n      }\n    },\n    addLayer: function addLayer(layer) {\n      return this.insertLayer(undefined, layer);\n    },\n    insertLayer: function insertLayer(index, layer) {\n      if (layer instanceof Layer) {\n        layer._remove(false, true);\n\n        Base.splice(this._children, [layer], index, 0);\n\n        layer._setProject(this, true);\n\n        var name = layer._name;\n        if (name) layer.setName(name);\n        if (this._changes) layer._changed(5);\n        if (!this._activeLayer) this._activeLayer = layer;\n      } else {\n        layer = null;\n      }\n\n      return layer;\n    },\n    _insertItem: function _insertItem(index, item, _created) {\n      item = this.insertLayer(index, item) || (this._activeLayer || this._insertItem(undefined, new Layer(Item.NO_INSERT), true)).insertChild(index, item);\n      if (_created && item.activate) item.activate();\n      return item;\n    },\n    getItems: function getItems(options) {\n      return Item._getItems(this, options);\n    },\n    getItem: function getItem(options) {\n      return Item._getItems(this, options, null, null, true)[0] || null;\n    },\n    importJSON: function importJSON(json) {\n      this.activate();\n      var layer = this._activeLayer;\n      return Base.importJSON(json, layer && layer.isEmpty() && layer);\n    },\n    removeOn: function removeOn(type) {\n      var sets = this._removeSets;\n\n      if (sets) {\n        if (type === 'mouseup') sets.mousedrag = null;\n        var set = sets[type];\n\n        if (set) {\n          for (var id in set) {\n            var item = set[id];\n\n            for (var key in sets) {\n              var other = sets[key];\n              if (other && other != set) delete other[item._id];\n            }\n\n            item.remove();\n          }\n\n          sets[type] = null;\n        }\n      }\n    },\n    draw: function draw(ctx, matrix, pixelRatio) {\n      this._updateVersion++;\n      ctx.save();\n      matrix.applyToContext(ctx);\n      var children = this._children,\n          param = new Base({\n        offset: new Point(0, 0),\n        pixelRatio: pixelRatio,\n        viewMatrix: matrix.isIdentity() ? null : matrix,\n        matrices: [new Matrix()],\n        updateMatrix: true\n      });\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].draw(ctx, param);\n      }\n\n      ctx.restore();\n\n      if (this._selectionCount > 0) {\n        ctx.save();\n        ctx.strokeWidth = 1;\n        var items = this._selectionItems,\n            size = this._scope.settings.handleSize,\n            version = this._updateVersion;\n\n        for (var id in items) {\n          items[id]._drawSelection(ctx, matrix, size, items, version);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n  var Item = Base.extend(Emitter, {\n    statics: {\n      extend: function extend(src) {\n        if (src._serializeFields) src._serializeFields = Base.set({}, this.prototype._serializeFields, src._serializeFields);\n        return extend.base.apply(this, arguments);\n      },\n      NO_INSERT: {\n        insert: false\n      }\n    },\n    _class: 'Item',\n    _name: null,\n    _applyMatrix: true,\n    _canApplyMatrix: true,\n    _canScaleStroke: false,\n    _pivot: null,\n    _visible: true,\n    _blendMode: 'normal',\n    _opacity: 1,\n    _locked: false,\n    _guide: false,\n    _clipMask: false,\n    _selection: 0,\n    _selectBounds: true,\n    _selectChildren: false,\n    _serializeFields: {\n      name: null,\n      applyMatrix: null,\n      matrix: new Matrix(),\n      pivot: null,\n      visible: true,\n      blendMode: 'normal',\n      opacity: 1,\n      locked: false,\n      guide: false,\n      clipMask: false,\n      selected: false,\n      data: {}\n    },\n    _prioritize: ['applyMatrix']\n  }, new function () {\n    var handlers = ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick', 'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'];\n    return Base.each(handlers, function (name) {\n      this._events[name] = {\n        install: function install(type) {\n          this.getView()._countItemEvent(type, 1);\n        },\n        uninstall: function uninstall(type) {\n          this.getView()._countItemEvent(type, -1);\n        }\n      };\n    }, {\n      _events: {\n        onFrame: {\n          install: function install() {\n            this.getView()._animateItem(this, true);\n          },\n          uninstall: function uninstall() {\n            this.getView()._animateItem(this, false);\n          }\n        },\n        onLoad: {},\n        onError: {}\n      },\n      statics: {\n        _itemHandlers: handlers\n      }\n    });\n  }(), {\n    initialize: function Item() {},\n    _initialize: function _initialize(props, point) {\n      var hasProps = props && Base.isPlainObject(props),\n          internal = hasProps && props.internal === true,\n          matrix = this._matrix = new Matrix(),\n          project = hasProps && props.project || paper.project,\n          settings = paper.settings;\n      this._id = internal ? null : UID.get();\n      this._parent = this._index = null;\n      this._applyMatrix = this._canApplyMatrix && settings.applyMatrix;\n      if (point) matrix.translate(point);\n      matrix._owner = this;\n      this._style = new Style(project._currentStyle, this, project);\n\n      if (internal || hasProps && props.insert == false || !settings.insertItems && !(hasProps && props.insert === true)) {\n        this._setProject(project);\n      } else {\n        (hasProps && props.parent || project)._insertItem(undefined, this, true);\n      }\n\n      if (hasProps && props !== Item.NO_INSERT) {\n        this.set(props, {\n          internal: true,\n          insert: true,\n          project: true,\n          parent: true\n        });\n      }\n\n      return hasProps;\n    },\n    _serialize: function _serialize(options, dictionary) {\n      var props = {},\n          that = this;\n\n      function serialize(fields) {\n        for (var key in fields) {\n          var value = that[key];\n\n          if (!Base.equals(value, key === 'leading' ? fields.fontSize * 1.2 : fields[key])) {\n            props[key] = Base.serialize(value, options, key !== 'data', dictionary);\n          }\n        }\n      }\n\n      serialize(this._serializeFields);\n      if (!(this instanceof Group)) serialize(this._style._defaults);\n      return [this._class, props];\n    },\n    _changed: function _changed(flags) {\n      var symbol = this._symbol,\n          cacheParent = this._parent || symbol,\n          project = this._project;\n\n      if (flags & 8) {\n        this._bounds = this._position = this._decomposed = undefined;\n      }\n\n      if (flags & 16) {\n        this._globalMatrix = undefined;\n      }\n\n      if (cacheParent && flags & 72) {\n        Item._clearBoundsCache(cacheParent);\n      }\n\n      if (flags & 2) {\n        Item._clearBoundsCache(this);\n      }\n\n      if (project) project._changed(flags, this);\n      if (symbol) symbol._changed(flags);\n    },\n    getId: function getId() {\n      return this._id;\n    },\n    getName: function getName() {\n      return this._name;\n    },\n    setName: function setName(name) {\n      if (this._name) this._removeNamed();\n      if (name === +name + '') throw new Error('Names consisting only of numbers are not supported.');\n\n      var owner = this._getOwner();\n\n      if (name && owner) {\n        var children = owner._children,\n            namedChildren = owner._namedChildren;\n        (namedChildren[name] = namedChildren[name] || []).push(this);\n        if (!(name in children)) children[name] = this;\n      }\n\n      this._name = name || undefined;\n\n      this._changed(256);\n    },\n    getStyle: function getStyle() {\n      return this._style;\n    },\n    setStyle: function setStyle(style) {\n      this.getStyle().set(style);\n    }\n  }, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'], function (name) {\n    var part = Base.capitalize(name),\n        key = '_' + name,\n        flags = {\n      locked: 256,\n      visible: 265\n    };\n\n    this['get' + part] = function () {\n      return this[key];\n    };\n\n    this['set' + part] = function (value) {\n      if (value != this[key]) {\n        this[key] = value;\n\n        this._changed(flags[name] || 257);\n      }\n    };\n  }, {}), {\n    beans: true,\n    getSelection: function getSelection() {\n      return this._selection;\n    },\n    setSelection: function setSelection(selection) {\n      if (selection !== this._selection) {\n        this._selection = selection;\n        var project = this._project;\n\n        if (project) {\n          project._updateSelection(this);\n\n          this._changed(257);\n        }\n      }\n    },\n    _changeSelection: function _changeSelection(flag, selected) {\n      var selection = this._selection;\n      this.setSelection(selected ? selection | flag : selection & ~flag);\n    },\n    isSelected: function isSelected() {\n      if (this._selectChildren) {\n        var children = this._children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].isSelected()) return true;\n        }\n      }\n\n      return !!(this._selection & 1);\n    },\n    setSelected: function setSelected(selected) {\n      if (this._selectChildren) {\n        var children = this._children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].setSelected(selected);\n        }\n      }\n\n      this._changeSelection(1, selected);\n    },\n    isFullySelected: function isFullySelected() {\n      var children = this._children,\n          selected = !!(this._selection & 1);\n\n      if (children && selected) {\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (!children[i].isFullySelected()) return false;\n        }\n\n        return true;\n      }\n\n      return selected;\n    },\n    setFullySelected: function setFullySelected(selected) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].setFullySelected(selected);\n        }\n      }\n\n      this._changeSelection(1, selected);\n    },\n    isClipMask: function isClipMask() {\n      return this._clipMask;\n    },\n    setClipMask: function setClipMask(clipMask) {\n      if (this._clipMask != (clipMask = !!clipMask)) {\n        this._clipMask = clipMask;\n\n        if (clipMask) {\n          this.setFillColor(null);\n          this.setStrokeColor(null);\n        }\n\n        this._changed(257);\n\n        if (this._parent) this._parent._changed(2048);\n      }\n    },\n    getData: function getData() {\n      if (!this._data) this._data = {};\n      return this._data;\n    },\n    setData: function setData(data) {\n      this._data = data;\n    },\n    getPosition: function getPosition(_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n\n      var position = this._position || (this._position = this._getPositionFromBounds());\n\n      return new ctor(position.x, position.y, this, 'setPosition');\n    },\n    setPosition: function setPosition() {\n      this.translate(Point.read(arguments).subtract(this.getPosition(true)));\n    },\n    _getPositionFromBounds: function _getPositionFromBounds(bounds) {\n      return this._pivot ? this._matrix._transformPoint(this._pivot) : (bounds || this.getBounds()).getCenter(true);\n    },\n    getPivot: function getPivot() {\n      var pivot = this._pivot;\n      return pivot ? new LinkedPoint(pivot.x, pivot.y, this, 'setPivot') : null;\n    },\n    setPivot: function setPivot() {\n      this._pivot = Point.read(arguments, 0, {\n        clone: true,\n        readNull: true\n      });\n      this._position = undefined;\n    }\n  }, Base.each({\n    getStrokeBounds: {\n      stroke: true\n    },\n    getHandleBounds: {\n      handle: true\n    },\n    getInternalBounds: {\n      internal: true\n    }\n  }, function (options, key) {\n    this[key] = function (matrix) {\n      return this.getBounds(matrix, options);\n    };\n  }, {\n    beans: true,\n    getBounds: function getBounds(matrix, options) {\n      var hasMatrix = options || matrix instanceof Matrix,\n          opts = Base.set({}, hasMatrix ? options : matrix, this._boundsOptions);\n      if (!opts.stroke || this.getStrokeScaling()) opts.cacheItem = this;\n\n      var rect = this._getCachedBounds(hasMatrix && matrix, opts).rect;\n\n      return !arguments.length ? new LinkedRectangle(rect.x, rect.y, rect.width, rect.height, this, 'setBounds') : rect;\n    },\n    setBounds: function setBounds() {\n      var rect = _Rectangle.read(arguments),\n          bounds = this.getBounds(),\n          _matrix = this._matrix,\n          matrix = new Matrix(),\n          center = rect.getCenter();\n\n      matrix.translate(center);\n\n      if (rect.width != bounds.width || rect.height != bounds.height) {\n        if (!_matrix.isInvertible()) {\n          _matrix.set(_matrix._backup || new Matrix().translate(_matrix.getTranslation()));\n\n          bounds = this.getBounds();\n        }\n\n        matrix.scale(bounds.width !== 0 ? rect.width / bounds.width : 0, bounds.height !== 0 ? rect.height / bounds.height : 0);\n      }\n\n      center = bounds.getCenter();\n      matrix.translate(-center.x, -center.y);\n      this.transform(matrix);\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var children = this._children;\n      if (!children || !children.length) return new _Rectangle();\n\n      Item._updateBoundsCache(this, options.cacheItem);\n\n      return Item._getBounds(children, matrix, options);\n    },\n    _getBoundsCacheKey: function _getBoundsCacheKey(options, internal) {\n      return [options.stroke ? 1 : 0, options.handle ? 1 : 0, internal ? 1 : 0].join('');\n    },\n    _getCachedBounds: function _getCachedBounds(matrix, options, noInternal) {\n      matrix = matrix && matrix._orNullIfIdentity();\n\n      var internal = options.internal && !noInternal,\n          cacheItem = options.cacheItem,\n          _matrix = internal ? null : this._matrix._orNullIfIdentity(),\n          cacheKey = cacheItem && (!matrix || matrix.equals(_matrix)) && this._getBoundsCacheKey(options, internal),\n          bounds = this._bounds;\n\n      Item._updateBoundsCache(this._parent || this._symbol, cacheItem);\n\n      if (cacheKey && bounds && cacheKey in bounds) {\n        var cached = bounds[cacheKey];\n        return {\n          rect: cached.rect.clone(),\n          nonscaling: cached.nonscaling\n        };\n      }\n\n      var res = this._getBounds(matrix || _matrix, options),\n          rect = res.rect || res,\n          style = this._style,\n          nonscaling = res.nonscaling || style.hasStroke() && !style.getStrokeScaling();\n\n      if (cacheKey) {\n        if (!bounds) {\n          this._bounds = bounds = {};\n        }\n\n        var cached = bounds[cacheKey] = {\n          rect: rect.clone(),\n          nonscaling: nonscaling,\n          internal: internal\n        };\n      }\n\n      return {\n        rect: rect,\n        nonscaling: nonscaling\n      };\n    },\n    _getStrokeMatrix: function _getStrokeMatrix(matrix, options) {\n      var parent = this.getStrokeScaling() ? null : options && options.internal ? this : this._parent || this._symbol && this._symbol._item,\n          mx = parent ? parent.getViewMatrix().invert() : matrix;\n      return mx && mx._shiftless();\n    },\n    statics: {\n      _updateBoundsCache: function _updateBoundsCache(parent, item) {\n        if (parent && item) {\n          var id = item._id,\n              ref = parent._boundsCache = parent._boundsCache || {\n            ids: {},\n            list: []\n          };\n\n          if (!ref.ids[id]) {\n            ref.list.push(item);\n            ref.ids[id] = item;\n          }\n        }\n      },\n      _clearBoundsCache: function _clearBoundsCache(item) {\n        var cache = item._boundsCache;\n\n        if (cache) {\n          item._bounds = item._position = item._boundsCache = undefined;\n\n          for (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n            var other = list[i];\n\n            if (other !== item) {\n              other._bounds = other._position = undefined;\n              if (other._boundsCache) Item._clearBoundsCache(other);\n            }\n          }\n        }\n      },\n      _getBounds: function _getBounds(items, matrix, options) {\n        var x1 = Infinity,\n            x2 = -x1,\n            y1 = x1,\n            y2 = x2,\n            nonscaling = false;\n        options = options || {};\n\n        for (var i = 0, l = items.length; i < l; i++) {\n          var item = items[i];\n\n          if (item._visible && !item.isEmpty(true)) {\n            var bounds = item._getCachedBounds(matrix && matrix.appended(item._matrix), options, true),\n                rect = bounds.rect;\n\n            x1 = Math.min(rect.x, x1);\n            y1 = Math.min(rect.y, y1);\n            x2 = Math.max(rect.x + rect.width, x2);\n            y2 = Math.max(rect.y + rect.height, y2);\n            if (bounds.nonscaling) nonscaling = true;\n          }\n        }\n\n        return {\n          rect: isFinite(x1) ? new _Rectangle(x1, y1, x2 - x1, y2 - y1) : new _Rectangle(),\n          nonscaling: nonscaling\n        };\n      }\n    }\n  }), {\n    beans: true,\n    _decompose: function _decompose() {\n      return this._applyMatrix ? null : this._decomposed || (this._decomposed = this._matrix.decompose());\n    },\n    getRotation: function getRotation() {\n      var decomposed = this._decompose();\n\n      return decomposed ? decomposed.rotation : 0;\n    },\n    setRotation: function setRotation(rotation) {\n      var current = this.getRotation();\n\n      if (current != null && rotation != null) {\n        var decomposed = this._decomposed;\n        this.rotate(rotation - current);\n\n        if (decomposed) {\n          decomposed.rotation = rotation;\n          this._decomposed = decomposed;\n        }\n      }\n    },\n    getScaling: function getScaling() {\n      var decomposed = this._decompose(),\n          s = decomposed && decomposed.scaling;\n\n      return new LinkedPoint(s ? s.x : 1, s ? s.y : 1, this, 'setScaling');\n    },\n    setScaling: function setScaling() {\n      var current = this.getScaling(),\n          scaling = Point.read(arguments, 0, {\n        clone: true,\n        readNull: true\n      });\n\n      if (current && scaling && !current.equals(scaling)) {\n        var rotation = this.getRotation(),\n            decomposed = this._decomposed,\n            matrix = new Matrix(),\n            center = this.getPosition(true);\n        matrix.translate(center);\n        if (rotation) matrix.rotate(rotation);\n        matrix.scale(scaling.x / current.x, scaling.y / current.y);\n        if (rotation) matrix.rotate(-rotation);\n        matrix.translate(center.negate());\n        this.transform(matrix);\n\n        if (decomposed) {\n          decomposed.scaling = scaling;\n          this._decomposed = decomposed;\n        }\n      }\n    },\n    getMatrix: function getMatrix() {\n      return this._matrix;\n    },\n    setMatrix: function setMatrix() {\n      var matrix = this._matrix;\n      matrix.initialize.apply(matrix, arguments);\n    },\n    getGlobalMatrix: function getGlobalMatrix(_dontClone) {\n      var matrix = this._globalMatrix;\n\n      if (matrix) {\n        var parent = this._parent;\n        var parents = [];\n\n        while (parent) {\n          if (!parent._globalMatrix) {\n            matrix = null;\n\n            for (var i = 0, l = parents.length; i < l; i++) {\n              parents[i]._globalMatrix = null;\n            }\n\n            break;\n          }\n\n          parents.push(parent);\n          parent = parent._parent;\n        }\n      }\n\n      if (!matrix) {\n        matrix = this._globalMatrix = this._matrix.clone();\n        var parent = this._parent;\n        if (parent) matrix.prepend(parent.getGlobalMatrix(true));\n      }\n\n      return _dontClone ? matrix : matrix.clone();\n    },\n    getViewMatrix: function getViewMatrix() {\n      return this.getGlobalMatrix().prepend(this.getView()._matrix);\n    },\n    getApplyMatrix: function getApplyMatrix() {\n      return this._applyMatrix;\n    },\n    setApplyMatrix: function setApplyMatrix(apply) {\n      if (this._applyMatrix = this._canApplyMatrix && !!apply) this.transform(null, true);\n    },\n    getTransformContent: '#getApplyMatrix',\n    setTransformContent: '#setApplyMatrix'\n  }, {\n    getProject: function getProject() {\n      return this._project;\n    },\n    _setProject: function _setProject(project, installEvents) {\n      if (this._project !== project) {\n        if (this._project) this._installEvents(false);\n        this._project = project;\n        var children = this._children;\n\n        for (var i = 0, l = children && children.length; i < l; i++) {\n          children[i]._setProject(project);\n        }\n\n        installEvents = true;\n      }\n\n      if (installEvents) this._installEvents(true);\n    },\n    getView: function getView() {\n      return this._project._view;\n    },\n    _installEvents: function _installEvents(install) {\n      _installEvents.base.call(this, install);\n\n      var children = this._children;\n\n      for (var i = 0, l = children && children.length; i < l; i++) {\n        children[i]._installEvents(install);\n      }\n    },\n    getLayer: function getLayer() {\n      var parent = this;\n\n      while (parent = parent._parent) {\n        if (parent instanceof Layer) return parent;\n      }\n\n      return null;\n    },\n    getParent: function getParent() {\n      return this._parent;\n    },\n    setParent: function setParent(item) {\n      return item.addChild(this);\n    },\n    _getOwner: '#getParent',\n    getChildren: function getChildren() {\n      return this._children;\n    },\n    setChildren: function setChildren(items) {\n      this.removeChildren();\n      this.addChildren(items);\n    },\n    getFirstChild: function getFirstChild() {\n      return this._children && this._children[0] || null;\n    },\n    getLastChild: function getLastChild() {\n      return this._children && this._children[this._children.length - 1] || null;\n    },\n    getNextSibling: function getNextSibling() {\n      var owner = this._getOwner();\n\n      return owner && owner._children[this._index + 1] || null;\n    },\n    getPreviousSibling: function getPreviousSibling() {\n      var owner = this._getOwner();\n\n      return owner && owner._children[this._index - 1] || null;\n    },\n    getIndex: function getIndex() {\n      return this._index;\n    },\n    equals: function equals(item) {\n      return item === this || item && this._class === item._class && this._style.equals(item._style) && this._matrix.equals(item._matrix) && this._locked === item._locked && this._visible === item._visible && this._blendMode === item._blendMode && this._opacity === item._opacity && this._clipMask === item._clipMask && this._guide === item._guide && this._equals(item) || false;\n    },\n    _equals: function _equals(item) {\n      return Base.equals(this._children, item._children);\n    },\n    clone: function clone(options) {\n      var copy = new this.constructor(Item.NO_INSERT),\n          children = this._children,\n          insert = Base.pick(options ? options.insert : undefined, options === undefined || options === true),\n          deep = Base.pick(options ? options.deep : undefined, true);\n      if (children) copy.copyAttributes(this);\n      if (!children || deep) copy.copyContent(this);\n      if (!children) copy.copyAttributes(this);\n      if (insert) copy.insertAbove(this);\n      var name = this._name,\n          parent = this._parent;\n\n      if (name && parent) {\n        var children = parent._children,\n            orig = name,\n            i = 1;\n\n        while (children[name]) {\n          name = orig + ' ' + i++;\n        }\n\n        if (name !== orig) copy.setName(name);\n      }\n\n      return copy;\n    },\n    copyContent: function copyContent(source) {\n      var children = source._children;\n\n      for (var i = 0, l = children && children.length; i < l; i++) {\n        this.addChild(children[i].clone(false), true);\n      }\n    },\n    copyAttributes: function copyAttributes(source, excludeMatrix) {\n      this.setStyle(source._style);\n      var keys = ['_locked', '_visible', '_blendMode', '_opacity', '_clipMask', '_guide'];\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i];\n        if (source.hasOwnProperty(key)) this[key] = source[key];\n      }\n\n      if (!excludeMatrix) this._matrix.set(source._matrix, true);\n      this.setApplyMatrix(source._applyMatrix);\n      this.setPivot(source._pivot);\n      this.setSelection(source._selection);\n      var data = source._data,\n          name = source._name;\n      this._data = data ? Base.clone(data) : null;\n      if (name) this.setName(name);\n    },\n    rasterize: function rasterize(resolution, insert) {\n      var bounds = this.getStrokeBounds(),\n          scale = (resolution || this.getView().getResolution()) / 72,\n          topLeft = bounds.getTopLeft().floor(),\n          bottomRight = bounds.getBottomRight().ceil(),\n          size = new Size(bottomRight.subtract(topLeft)),\n          raster = new Raster(Item.NO_INSERT);\n\n      if (!size.isZero()) {\n        var canvas = CanvasProvider.getCanvas(size.multiply(scale)),\n            ctx = canvas.getContext('2d'),\n            matrix = new Matrix().scale(scale).translate(topLeft.negate());\n        ctx.save();\n        matrix.applyToContext(ctx);\n        this.draw(ctx, new Base({\n          matrices: [matrix]\n        }));\n        ctx.restore();\n        raster.setCanvas(canvas);\n      }\n\n      raster.transform(new Matrix().translate(topLeft.add(size.divide(2))).scale(1 / scale));\n      if (insert === undefined || insert) raster.insertAbove(this);\n      return raster;\n    },\n    contains: function contains() {\n      var matrix = this._matrix;\n      return matrix.isInvertible() && !!this._contains(matrix._inverseTransform(Point.read(arguments)));\n    },\n    _contains: function _contains(point) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          if (children[i].contains(point)) return true;\n        }\n\n        return false;\n      }\n\n      return point.isInside(this.getInternalBounds());\n    },\n    isInside: function isInside() {\n      return _Rectangle.read(arguments).contains(this.getBounds());\n    },\n    _asPathItem: function _asPathItem() {\n      return new Path.Rectangle({\n        rectangle: this.getInternalBounds(),\n        matrix: this._matrix,\n        insert: false\n      });\n    },\n    intersects: function intersects(item, _matrix) {\n      if (!(item instanceof Item)) return false;\n      return this._asPathItem().getIntersections(item._asPathItem(), null, _matrix, true).length > 0;\n    }\n  }, new function () {\n    function hitTest() {\n      var args = arguments;\n      return this._hitTest(Point.read(args), HitResult.getOptions(args));\n    }\n\n    function hitTestAll() {\n      var args = arguments,\n          point = Point.read(args),\n          options = HitResult.getOptions(args),\n          all = [];\n\n      this._hitTest(point, new Base({\n        all: all\n      }, options));\n\n      return all;\n    }\n\n    function hitTestChildren(point, options, viewMatrix, _exclude) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          var child = children[i];\n\n          var res = child !== _exclude && child._hitTest(point, options, viewMatrix);\n\n          if (res && !options.all) return res;\n        }\n      }\n\n      return null;\n    }\n\n    Project.inject({\n      hitTest: hitTest,\n      hitTestAll: hitTestAll,\n      _hitTest: hitTestChildren\n    });\n    return {\n      hitTest: hitTest,\n      hitTestAll: hitTestAll,\n      _hitTestChildren: hitTestChildren\n    };\n  }(), {\n    _hitTest: function _hitTest(point, options, parentViewMatrix) {\n      if (this._locked || !this._visible || this._guide && !options.guides || this.isEmpty()) {\n        return null;\n      }\n\n      var matrix = this._matrix,\n          viewMatrix = parentViewMatrix ? parentViewMatrix.appended(matrix) : this.getGlobalMatrix().prepend(this.getView()._matrix),\n          tolerance = Math.max(options.tolerance, 1e-12),\n          tolerancePadding = options._tolerancePadding = new Size(Path._getStrokePadding(tolerance, matrix._shiftless().invert()));\n      point = matrix._inverseTransform(point);\n\n      if (!point || !this._children && !this.getBounds({\n        internal: true,\n        stroke: true,\n        handle: true\n      }).expand(tolerancePadding.multiply(2))._containsPoint(point)) {\n        return null;\n      }\n\n      var checkSelf = !(options.guides && !this._guide || options.selected && !this.isSelected() || options.type && options.type !== Base.hyphenate(this._class) || options.class && !(this instanceof options.class)),\n          match = options.match,\n          that = this,\n          bounds,\n          res;\n\n      function filter(hit) {\n        if (hit && match && !match(hit)) hit = null;\n        if (hit && options.all) options.all.push(hit);\n        return hit;\n      }\n\n      function checkPoint(type, part) {\n        var pt = part ? bounds['get' + part]() : that.getPosition();\n\n        if (point.subtract(pt).divide(tolerancePadding).length <= 1) {\n          return new HitResult(type, that, {\n            name: part ? Base.hyphenate(part) : type,\n            point: pt\n          });\n        }\n      }\n\n      var checkPosition = options.position,\n          checkCenter = options.center,\n          checkBounds = options.bounds;\n\n      if (checkSelf && this._parent && (checkPosition || checkCenter || checkBounds)) {\n        if (checkCenter || checkBounds) {\n          bounds = this.getInternalBounds();\n        }\n\n        res = checkPosition && checkPoint('position') || checkCenter && checkPoint('center', 'Center');\n\n        if (!res && checkBounds) {\n          var points = ['TopLeft', 'TopRight', 'BottomLeft', 'BottomRight', 'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'];\n\n          for (var i = 0; i < 8 && !res; i++) {\n            res = checkPoint('bounds', points[i]);\n          }\n        }\n\n        res = filter(res);\n      }\n\n      if (!res) {\n        res = this._hitTestChildren(point, options, viewMatrix) || checkSelf && filter(this._hitTestSelf(point, options, viewMatrix, this.getStrokeScaling() ? null : viewMatrix._shiftless().invert())) || null;\n      }\n\n      if (res && res.point) {\n        res.point = matrix.transform(res.point);\n      }\n\n      return res;\n    },\n    _hitTestSelf: function _hitTestSelf(point, options) {\n      if (options.fill && this.hasFill() && this._contains(point)) return new HitResult('fill', this);\n    },\n    matches: function matches(name, compare) {\n      function matchObject(obj1, obj2) {\n        for (var i in obj1) {\n          if (obj1.hasOwnProperty(i)) {\n            var val1 = obj1[i],\n                val2 = obj2[i];\n\n            if (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n              if (!matchObject(val1, val2)) return false;\n            } else if (!Base.equals(val1, val2)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      var type = typeof name;\n\n      if (type === 'object') {\n        for (var key in name) {\n          if (name.hasOwnProperty(key) && !this.matches(key, name[key])) return false;\n        }\n\n        return true;\n      } else if (type === 'function') {\n        return name(this);\n      } else if (name === 'match') {\n        return compare(this);\n      } else {\n        var value = /^(empty|editable)$/.test(name) ? this['is' + Base.capitalize(name)]() : name === 'type' ? Base.hyphenate(this._class) : this[name];\n\n        if (name === 'class') {\n          if (typeof compare === 'function') return this instanceof compare;\n          value = this._class;\n        }\n\n        if (typeof compare === 'function') {\n          return !!compare(value);\n        } else if (compare) {\n          if (compare.test) {\n            return compare.test(value);\n          } else if (Base.isPlainObject(compare)) {\n            return matchObject(compare, value);\n          }\n        }\n\n        return Base.equals(value, compare);\n      }\n    },\n    getItems: function getItems(options) {\n      return Item._getItems(this, options, this._matrix);\n    },\n    getItem: function getItem(options) {\n      return Item._getItems(this, options, this._matrix, null, true)[0] || null;\n    },\n    statics: {\n      _getItems: function _getItems(item, options, matrix, param, firstOnly) {\n        if (!param) {\n          var obj = typeof options === 'object' && options,\n              overlapping = obj && obj.overlapping,\n              inside = obj && obj.inside,\n              bounds = overlapping || inside,\n              rect = bounds && _Rectangle.read([bounds]);\n\n          param = {\n            items: [],\n            recursive: obj && obj.recursive !== false,\n            inside: !!inside,\n            overlapping: !!overlapping,\n            rect: rect,\n            path: overlapping && new Path.Rectangle({\n              rectangle: rect,\n              insert: false\n            })\n          };\n\n          if (obj) {\n            options = Base.filter({}, options, {\n              recursive: true,\n              inside: true,\n              overlapping: true\n            });\n          }\n        }\n\n        var children = item._children,\n            items = param.items,\n            rect = param.rect;\n        matrix = rect && (matrix || new Matrix());\n\n        for (var i = 0, l = children && children.length; i < l; i++) {\n          var child = children[i],\n              childMatrix = matrix && matrix.appended(child._matrix),\n              add = true;\n\n          if (rect) {\n            var bounds = child.getBounds(childMatrix);\n            if (!rect.intersects(bounds)) continue;\n            if (!(rect.contains(bounds) || param.overlapping && (bounds.contains(rect) || param.path.intersects(child, childMatrix)))) add = false;\n          }\n\n          if (add && child.matches(options)) {\n            items.push(child);\n            if (firstOnly) break;\n          }\n\n          if (param.recursive !== false) {\n            _getItems(child, options, childMatrix, param, firstOnly);\n          }\n\n          if (firstOnly && items.length > 0) break;\n        }\n\n        return items;\n      }\n    }\n  }, {\n    importJSON: function importJSON(json) {\n      var res = Base.importJSON(json, this);\n      return res !== this ? this.addChild(res) : res;\n    },\n    addChild: function addChild(item) {\n      return this.insertChild(undefined, item);\n    },\n    insertChild: function insertChild(index, item) {\n      var res = item ? this.insertChildren(index, [item]) : null;\n      return res && res[0];\n    },\n    addChildren: function addChildren(items) {\n      return this.insertChildren(this._children.length, items);\n    },\n    insertChildren: function insertChildren(index, items) {\n      var children = this._children;\n\n      if (children && items && items.length > 0) {\n        items = Base.slice(items);\n        var inserted = {};\n\n        for (var i = items.length - 1; i >= 0; i--) {\n          var item = items[i],\n              id = item && item._id;\n\n          if (!item || inserted[id]) {\n            items.splice(i, 1);\n          } else {\n            item._remove(false, true);\n\n            inserted[id] = true;\n          }\n        }\n\n        Base.splice(children, items, index, 0);\n        var project = this._project,\n            notifySelf = project._changes;\n\n        for (var i = 0, l = items.length; i < l; i++) {\n          var item = items[i],\n              name = item._name;\n          item._parent = this;\n\n          item._setProject(project, true);\n\n          if (name) item.setName(name);\n          if (notifySelf) item._changed(5);\n        }\n\n        this._changed(11);\n      } else {\n        items = null;\n      }\n\n      return items;\n    },\n    _insertItem: '#insertChild',\n    _insertAt: function _insertAt(item, offset) {\n      var owner = item && item._getOwner(),\n          res = item !== this && owner ? this : null;\n\n      if (res) {\n        res._remove(false, true);\n\n        owner._insertItem(item._index + offset, res);\n      }\n\n      return res;\n    },\n    insertAbove: function insertAbove(item) {\n      return this._insertAt(item, 1);\n    },\n    insertBelow: function insertBelow(item) {\n      return this._insertAt(item, 0);\n    },\n    sendToBack: function sendToBack() {\n      var owner = this._getOwner();\n\n      return owner ? owner._insertItem(0, this) : null;\n    },\n    bringToFront: function bringToFront() {\n      var owner = this._getOwner();\n\n      return owner ? owner._insertItem(undefined, this) : null;\n    },\n    appendTop: '#addChild',\n    appendBottom: function appendBottom(item) {\n      return this.insertChild(0, item);\n    },\n    moveAbove: '#insertAbove',\n    moveBelow: '#insertBelow',\n    addTo: function addTo(owner) {\n      return owner._insertItem(undefined, this);\n    },\n    copyTo: function copyTo(owner) {\n      return this.clone(false).addTo(owner);\n    },\n    reduce: function reduce(options) {\n      var children = this._children;\n\n      if (children && children.length === 1) {\n        var child = children[0].reduce(options);\n\n        if (this._parent) {\n          child.insertAbove(this);\n          this.remove();\n        } else {\n          child.remove();\n        }\n\n        return child;\n      }\n\n      return this;\n    },\n    _removeNamed: function _removeNamed() {\n      var owner = this._getOwner();\n\n      if (owner) {\n        var children = owner._children,\n            namedChildren = owner._namedChildren,\n            name = this._name,\n            namedArray = namedChildren[name],\n            index = namedArray ? namedArray.indexOf(this) : -1;\n\n        if (index !== -1) {\n          if (children[name] == this) delete children[name];\n          namedArray.splice(index, 1);\n\n          if (namedArray.length) {\n            children[name] = namedArray[0];\n          } else {\n            delete namedChildren[name];\n          }\n        }\n      }\n    },\n    _remove: function _remove(notifySelf, notifyParent) {\n      var owner = this._getOwner(),\n          project = this._project,\n          index = this._index;\n\n      if (this._style) this._style._dispose();\n\n      if (owner) {\n        if (this._name) this._removeNamed();\n\n        if (index != null) {\n          if (project._activeLayer === this) project._activeLayer = this.getNextSibling() || this.getPreviousSibling();\n          Base.splice(owner._children, null, index, 1);\n        }\n\n        this._installEvents(false);\n\n        if (notifySelf && project._changes) this._changed(5);\n        if (notifyParent) owner._changed(11, this);\n        this._parent = null;\n        return true;\n      }\n\n      return false;\n    },\n    remove: function remove() {\n      return this._remove(true, true);\n    },\n    replaceWith: function replaceWith(item) {\n      var ok = item && item.insertBelow(this);\n      if (ok) this.remove();\n      return ok;\n    },\n    removeChildren: function removeChildren(start, end) {\n      if (!this._children) return null;\n      start = start || 0;\n      end = Base.pick(end, this._children.length);\n      var removed = Base.splice(this._children, null, start, end - start);\n\n      for (var i = removed.length - 1; i >= 0; i--) {\n        removed[i]._remove(true, false);\n      }\n\n      if (removed.length > 0) this._changed(11);\n      return removed;\n    },\n    clear: '#removeChildren',\n    reverseChildren: function reverseChildren() {\n      if (this._children) {\n        this._children.reverse();\n\n        for (var i = 0, l = this._children.length; i < l; i++) {\n          this._children[i]._index = i;\n        }\n\n        this._changed(11);\n      }\n    },\n    isEmpty: function isEmpty(recursively) {\n      var children = this._children;\n      var numChildren = children ? children.length : 0;\n\n      if (recursively) {\n        for (var i = 0; i < numChildren; i++) {\n          if (!children[i].isEmpty(recursively)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return !numChildren;\n    },\n    isEditable: function isEditable() {\n      var item = this;\n\n      while (item) {\n        if (!item._visible || item._locked) return false;\n        item = item._parent;\n      }\n\n      return true;\n    },\n    hasFill: function hasFill() {\n      return this.getStyle().hasFill();\n    },\n    hasStroke: function hasStroke() {\n      return this.getStyle().hasStroke();\n    },\n    hasShadow: function hasShadow() {\n      return this.getStyle().hasShadow();\n    },\n    _getOrder: function _getOrder(item) {\n      function getList(item) {\n        var list = [];\n\n        do {\n          list.unshift(item);\n        } while (item = item._parent);\n\n        return list;\n      }\n\n      var list1 = getList(this),\n          list2 = getList(item);\n\n      for (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n        if (list1[i] != list2[i]) {\n          return list1[i]._index < list2[i]._index ? 1 : -1;\n        }\n      }\n\n      return 0;\n    },\n    hasChildren: function hasChildren() {\n      return this._children && this._children.length > 0;\n    },\n    isInserted: function isInserted() {\n      return this._parent ? this._parent.isInserted() : false;\n    },\n    isAbove: function isAbove(item) {\n      return this._getOrder(item) === -1;\n    },\n    isBelow: function isBelow(item) {\n      return this._getOrder(item) === 1;\n    },\n    isParent: function isParent(item) {\n      return this._parent === item;\n    },\n    isChild: function isChild(item) {\n      return item && item._parent === this;\n    },\n    isDescendant: function isDescendant(item) {\n      var parent = this;\n\n      while (parent = parent._parent) {\n        if (parent === item) return true;\n      }\n\n      return false;\n    },\n    isAncestor: function isAncestor(item) {\n      return item ? item.isDescendant(this) : false;\n    },\n    isSibling: function isSibling(item) {\n      return this._parent === item._parent;\n    },\n    isGroupedWith: function isGroupedWith(item) {\n      var parent = this._parent;\n\n      while (parent) {\n        if (parent._parent && /^(Group|Layer|CompoundPath)$/.test(parent._class) && item.isDescendant(parent)) return true;\n        parent = parent._parent;\n      }\n\n      return false;\n    }\n  }, Base.each(['rotate', 'scale', 'shear', 'skew'], function (key) {\n    var rotate = key === 'rotate';\n\n    this[key] = function () {\n      var args = arguments,\n          value = (rotate ? Base : Point).read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      return this.transform(new Matrix()[key](value, center || this.getPosition(true)));\n    };\n  }, {\n    translate: function translate() {\n      var mx = new Matrix();\n      return this.transform(mx.translate.apply(mx, arguments));\n    },\n    transform: function transform(matrix, _applyRecursively, _setApplyMatrix) {\n      var _matrix = this._matrix,\n          transformMatrix = matrix && !matrix.isIdentity(),\n          applyMatrix = _setApplyMatrix && this._canApplyMatrix || this._applyMatrix && (transformMatrix || !_matrix.isIdentity() || _applyRecursively && this._children);\n      if (!transformMatrix && !applyMatrix) return this;\n\n      if (transformMatrix) {\n        if (!matrix.isInvertible() && _matrix.isInvertible()) _matrix._backup = _matrix.getValues();\n\n        _matrix.prepend(matrix, true);\n\n        var style = this._style,\n            fillColor = style.getFillColor(true),\n            strokeColor = style.getStrokeColor(true);\n        if (fillColor) fillColor.transform(matrix);\n        if (strokeColor) strokeColor.transform(matrix);\n      }\n\n      if (applyMatrix && (applyMatrix = this._transformContent(_matrix, _applyRecursively, _setApplyMatrix))) {\n        var pivot = this._pivot;\n        if (pivot) _matrix._transformPoint(pivot, pivot, true);\n\n        _matrix.reset(true);\n\n        if (_setApplyMatrix && this._canApplyMatrix) this._applyMatrix = true;\n      }\n\n      var bounds = this._bounds,\n          position = this._position;\n\n      if (transformMatrix || applyMatrix) {\n        this._changed(25);\n      }\n\n      var decomp = transformMatrix && bounds && matrix.decompose();\n\n      if (decomp && decomp.skewing.isZero() && decomp.rotation % 90 === 0) {\n        for (var key in bounds) {\n          var cache = bounds[key];\n\n          if (cache.nonscaling) {\n            delete bounds[key];\n          } else if (applyMatrix || !cache.internal) {\n            var rect = cache.rect;\n\n            matrix._transformBounds(rect, rect);\n          }\n        }\n\n        this._bounds = bounds;\n\n        var cached = bounds[this._getBoundsCacheKey(this._boundsOptions || {})];\n\n        if (cached) {\n          this._position = this._getPositionFromBounds(cached.rect);\n        }\n      } else if (transformMatrix && position && this._pivot) {\n        this._position = matrix._transformPoint(position, position);\n      }\n\n      return this;\n    },\n    _transformContent: function _transformContent(matrix, applyRecursively, setApplyMatrix) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].transform(matrix, applyRecursively, setApplyMatrix);\n        }\n\n        return true;\n      }\n    },\n    globalToLocal: function globalToLocal() {\n      return this.getGlobalMatrix(true)._inverseTransform(Point.read(arguments));\n    },\n    localToGlobal: function localToGlobal() {\n      return this.getGlobalMatrix(true)._transformPoint(Point.read(arguments));\n    },\n    parentToLocal: function parentToLocal() {\n      return this._matrix._inverseTransform(Point.read(arguments));\n    },\n    localToParent: function localToParent() {\n      return this._matrix._transformPoint(Point.read(arguments));\n    },\n    fitBounds: function fitBounds(rectangle, fill) {\n      rectangle = _Rectangle.read(arguments);\n      var bounds = this.getBounds(),\n          itemRatio = bounds.height / bounds.width,\n          rectRatio = rectangle.height / rectangle.width,\n          scale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio) ? rectangle.width / bounds.width : rectangle.height / bounds.height,\n          newBounds = new _Rectangle(new Point(), new Size(bounds.width * scale, bounds.height * scale));\n      newBounds.setCenter(rectangle.getCenter());\n      this.setBounds(newBounds);\n    }\n  }), {\n    _setStyles: function _setStyles(ctx, param, viewMatrix) {\n      var style = this._style,\n          matrix = this._matrix;\n\n      if (style.hasFill()) {\n        ctx.fillStyle = style.getFillColor().toCanvasStyle(ctx, matrix);\n      }\n\n      if (style.hasStroke()) {\n        ctx.strokeStyle = style.getStrokeColor().toCanvasStyle(ctx, matrix);\n        ctx.lineWidth = style.getStrokeWidth();\n        var strokeJoin = style.getStrokeJoin(),\n            strokeCap = style.getStrokeCap(),\n            miterLimit = style.getMiterLimit();\n        if (strokeJoin) ctx.lineJoin = strokeJoin;\n        if (strokeCap) ctx.lineCap = strokeCap;\n        if (miterLimit) ctx.miterLimit = miterLimit;\n\n        if (paper.support.nativeDash) {\n          var dashArray = style.getDashArray(),\n              dashOffset = style.getDashOffset();\n\n          if (dashArray && dashArray.length) {\n            if ('setLineDash' in ctx) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashOffset;\n            } else {\n              ctx.mozDash = dashArray;\n              ctx.mozDashOffset = dashOffset;\n            }\n          }\n        }\n      }\n\n      if (style.hasShadow()) {\n        var pixelRatio = param.pixelRatio || 1,\n            mx = viewMatrix._shiftless().prepend(new Matrix().scale(pixelRatio, pixelRatio)),\n            blur = mx.transform(new Point(style.getShadowBlur(), 0)),\n            offset = mx.transform(this.getShadowOffset());\n\n        ctx.shadowColor = style.getShadowColor().toCanvasStyle(ctx);\n        ctx.shadowBlur = blur.getLength();\n        ctx.shadowOffsetX = offset.x;\n        ctx.shadowOffsetY = offset.y;\n      }\n    },\n    draw: function draw(ctx, param, parentStrokeMatrix) {\n      var updateVersion = this._updateVersion = this._project._updateVersion;\n      if (!this._visible || this._opacity === 0) return;\n      var matrices = param.matrices,\n          viewMatrix = param.viewMatrix,\n          matrix = this._matrix,\n          globalMatrix = matrices[matrices.length - 1].appended(matrix);\n      if (!globalMatrix.isInvertible()) return;\n      viewMatrix = viewMatrix ? viewMatrix.appended(globalMatrix) : globalMatrix;\n      matrices.push(globalMatrix);\n\n      if (param.updateMatrix) {\n        this._globalMatrix = globalMatrix;\n      }\n\n      var blendMode = this._blendMode,\n          opacity = this._opacity,\n          normalBlend = blendMode === 'normal',\n          nativeBlend = BlendMode.nativeModes[blendMode],\n          direct = normalBlend && opacity === 1 || param.dontStart || param.clip || (nativeBlend || normalBlend && opacity < 1) && this._canComposite(),\n          pixelRatio = param.pixelRatio || 1,\n          mainCtx,\n          itemOffset,\n          prevOffset;\n\n      if (!direct) {\n        var bounds = this.getStrokeBounds(viewMatrix);\n\n        if (!bounds.width || !bounds.height) {\n          matrices.pop();\n          return;\n        }\n\n        prevOffset = param.offset;\n        itemOffset = param.offset = bounds.getTopLeft().floor();\n        mainCtx = ctx;\n        ctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1).multiply(pixelRatio));\n        if (pixelRatio !== 1) ctx.scale(pixelRatio, pixelRatio);\n      }\n\n      ctx.save();\n      var strokeMatrix = parentStrokeMatrix ? parentStrokeMatrix.appended(matrix) : this._canScaleStroke && !this.getStrokeScaling(true) && viewMatrix,\n          clip = !direct && param.clipItem,\n          transform = !strokeMatrix || clip;\n\n      if (direct) {\n        ctx.globalAlpha = opacity;\n        if (nativeBlend) ctx.globalCompositeOperation = blendMode;\n      } else if (transform) {\n        ctx.translate(-itemOffset.x, -itemOffset.y);\n      }\n\n      if (transform) {\n        (direct ? matrix : viewMatrix).applyToContext(ctx);\n      }\n\n      if (clip) {\n        param.clipItem.draw(ctx, param.extend({\n          clip: true\n        }));\n      }\n\n      if (strokeMatrix) {\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        var offset = param.offset;\n        if (offset) ctx.translate(-offset.x, -offset.y);\n      }\n\n      this._draw(ctx, param, viewMatrix, strokeMatrix);\n\n      ctx.restore();\n      matrices.pop();\n\n      if (param.clip && !param.dontFinish) {\n        ctx.clip(this.getFillRule());\n      }\n\n      if (!direct) {\n        BlendMode.process(blendMode, ctx, mainCtx, opacity, itemOffset.subtract(prevOffset).multiply(pixelRatio));\n        CanvasProvider.release(ctx);\n        param.offset = prevOffset;\n      }\n    },\n    _isUpdated: function _isUpdated(updateVersion) {\n      var parent = this._parent;\n      if (parent instanceof CompoundPath) return parent._isUpdated(updateVersion);\n      var updated = this._updateVersion === updateVersion;\n\n      if (!updated && parent && parent._visible && parent._isUpdated(updateVersion)) {\n        this._updateVersion = updateVersion;\n        updated = true;\n      }\n\n      return updated;\n    },\n    _drawSelection: function _drawSelection(ctx, matrix, size, selectionItems, updateVersion) {\n      var selection = this._selection,\n          itemSelected = selection & 1,\n          boundsSelected = selection & 2 || itemSelected && this._selectBounds,\n          positionSelected = selection & 4;\n      if (!this._drawSelected) itemSelected = false;\n\n      if ((itemSelected || boundsSelected || positionSelected) && this._isUpdated(updateVersion)) {\n        var layer,\n            color = this.getSelectedColor(true) || (layer = this.getLayer()) && layer.getSelectedColor(true),\n            mx = matrix.appended(this.getGlobalMatrix(true)),\n            half = size / 2;\n        ctx.strokeStyle = ctx.fillStyle = color ? color.toCanvasStyle(ctx) : '#009dec';\n        if (itemSelected) this._drawSelected(ctx, mx, selectionItems);\n\n        if (positionSelected) {\n          var pos = this.getPosition(true),\n              parent = this._parent,\n              point = parent ? parent.localToGlobal(pos) : pos,\n              x = point.x,\n              y = point.y;\n          ctx.beginPath();\n          ctx.arc(x, y, half, 0, Math.PI * 2, true);\n          ctx.stroke();\n          var deltas = [[0, -1], [1, 0], [0, 1], [-1, 0]],\n              start = half,\n              end = size + 1;\n\n          for (var i = 0; i < 4; i++) {\n            var delta = deltas[i],\n                dx = delta[0],\n                dy = delta[1];\n            ctx.moveTo(x + dx * start, y + dy * start);\n            ctx.lineTo(x + dx * end, y + dy * end);\n            ctx.stroke();\n          }\n        }\n\n        if (boundsSelected) {\n          var coords = mx._transformCorners(this.getInternalBounds());\n\n          ctx.beginPath();\n\n          for (var i = 0; i < 8; i++) {\n            ctx[!i ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n          }\n\n          ctx.closePath();\n          ctx.stroke();\n\n          for (var i = 0; i < 8; i++) {\n            ctx.fillRect(coords[i] - half, coords[++i] - half, size, size);\n          }\n        }\n      }\n    },\n    _canComposite: function _canComposite() {\n      return false;\n    }\n  }, Base.each(['down', 'drag', 'up', 'move'], function (key) {\n    this['removeOn' + Base.capitalize(key)] = function () {\n      var hash = {};\n      hash[key] = true;\n      return this.removeOn(hash);\n    };\n  }, {\n    removeOn: function removeOn(obj) {\n      for (var name in obj) {\n        if (obj[name]) {\n          var key = 'mouse' + name,\n              project = this._project,\n              sets = project._removeSets = project._removeSets || {};\n          sets[key] = sets[key] || {};\n          sets[key][this._id] = this;\n        }\n      }\n\n      return this;\n    }\n  }), {\n    tween: function tween(from, to, options) {\n      if (!options) {\n        options = to;\n        to = from;\n        from = null;\n\n        if (!options) {\n          options = to;\n          to = null;\n        }\n      }\n\n      var easing = options && options.easing,\n          start = options && options.start,\n          duration = options != null && (typeof options === 'number' ? options : options.duration),\n          tween = new Tween(this, from, to, duration, easing, start);\n\n      function onFrame(event) {\n        tween._handleFrame(event.time * 1000);\n\n        if (!tween.running) {\n          this.off('frame', onFrame);\n        }\n      }\n\n      if (duration) {\n        this.on('frame', onFrame);\n      }\n\n      return tween;\n    },\n    tweenTo: function tweenTo(to, options) {\n      return this.tween(null, to, options);\n    },\n    tweenFrom: function tweenFrom(from, options) {\n      return this.tween(from, null, options);\n    }\n  });\n  var Group = Item.extend({\n    _class: 'Group',\n    _selectBounds: false,\n    _selectChildren: true,\n    _serializeFields: {\n      children: []\n    },\n    initialize: function Group(arg) {\n      this._children = [];\n      this._namedChildren = {};\n      if (!this._initialize(arg)) this.addChildren(Array.isArray(arg) ? arg : arguments);\n    },\n    _changed: function _changed(flags) {\n      _changed.base.call(this, flags);\n\n      if (flags & 2050) {\n        this._clipItem = undefined;\n      }\n    },\n    _getClipItem: function _getClipItem() {\n      var clipItem = this._clipItem;\n\n      if (clipItem === undefined) {\n        clipItem = null;\n        var children = this._children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i]._clipMask) {\n            clipItem = children[i];\n            break;\n          }\n        }\n\n        this._clipItem = clipItem;\n      }\n\n      return clipItem;\n    },\n    isClipped: function isClipped() {\n      return !!this._getClipItem();\n    },\n    setClipped: function setClipped(clipped) {\n      var child = this.getFirstChild();\n      if (child) child.setClipMask(clipped);\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var clipItem = this._getClipItem();\n\n      return clipItem ? clipItem._getCachedBounds(clipItem._matrix.prepended(matrix), Base.set({}, options, {\n        stroke: false\n      })) : _getBounds.base.call(this, matrix, options);\n    },\n    _hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n      var clipItem = this._getClipItem();\n\n      return (!clipItem || clipItem.contains(point)) && _hitTestChildren.base.call(this, point, options, viewMatrix, clipItem);\n    },\n    _draw: function _draw(ctx, param) {\n      var clip = param.clip,\n          clipItem = !clip && this._getClipItem();\n\n      param = param.extend({\n        clipItem: clipItem,\n        clip: false\n      });\n\n      if (clip) {\n        ctx.beginPath();\n        param.dontStart = param.dontFinish = true;\n      } else if (clipItem) {\n        clipItem.draw(ctx, param.extend({\n          clip: true\n        }));\n      }\n\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var item = children[i];\n        if (item !== clipItem) item.draw(ctx, param);\n      }\n    }\n  });\n  var Layer = Group.extend({\n    _class: 'Layer',\n    initialize: function Layer() {\n      Group.apply(this, arguments);\n    },\n    _getOwner: function _getOwner() {\n      return this._parent || this._index != null && this._project;\n    },\n    isInserted: function isInserted() {\n      return this._parent ? isInserted.base.call(this) : this._index != null;\n    },\n    activate: function activate() {\n      this._project._activeLayer = this;\n    },\n    _hitTestSelf: function _hitTestSelf() {}\n  });\n  var Shape = Item.extend({\n    _class: 'Shape',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _canScaleStroke: true,\n    _serializeFields: {\n      type: null,\n      size: null,\n      radius: null\n    },\n    initialize: function Shape(props, point) {\n      this._initialize(props, point);\n    },\n    _equals: function _equals(item) {\n      return this._type === item._type && this._size.equals(item._size) && Base.equals(this._radius, item._radius);\n    },\n    copyContent: function copyContent(source) {\n      this.setType(source._type);\n      this.setSize(source._size);\n      this.setRadius(source._radius);\n    },\n    getType: function getType() {\n      return this._type;\n    },\n    setType: function setType(type) {\n      this._type = type;\n    },\n    getShape: '#getType',\n    setShape: '#setType',\n    getSize: function getSize() {\n      var size = this._size;\n      return new LinkedSize(size.width, size.height, this, 'setSize');\n    },\n    setSize: function setSize() {\n      var size = Size.read(arguments);\n\n      if (!this._size) {\n        this._size = size.clone();\n      } else if (!this._size.equals(size)) {\n        var type = this._type,\n            width = size.width,\n            height = size.height;\n\n        if (type === 'rectangle') {\n          this._radius.set(Size.min(this._radius, size.divide(2).abs()));\n        } else if (type === 'circle') {\n          width = height = (width + height) / 2;\n          this._radius = width / 2;\n        } else if (type === 'ellipse') {\n          this._radius._set(width / 2, height / 2);\n        }\n\n        this._size._set(width, height);\n\n        this._changed(9);\n      }\n    },\n    getRadius: function getRadius() {\n      var rad = this._radius;\n      return this._type === 'circle' ? rad : new LinkedSize(rad.width, rad.height, this, 'setRadius');\n    },\n    setRadius: function setRadius(radius) {\n      var type = this._type;\n\n      if (type === 'circle') {\n        if (radius === this._radius) return;\n        var size = radius * 2;\n        this._radius = radius;\n\n        this._size._set(size, size);\n      } else {\n        radius = Size.read(arguments);\n\n        if (!this._radius) {\n          this._radius = radius.clone();\n        } else {\n          if (this._radius.equals(radius)) return;\n\n          this._radius.set(radius);\n\n          if (type === 'rectangle') {\n            var size = Size.max(this._size, radius.multiply(2));\n\n            this._size.set(size);\n          } else if (type === 'ellipse') {\n            this._size._set(radius.width * 2, radius.height * 2);\n          }\n        }\n      }\n\n      this._changed(9);\n    },\n    isEmpty: function isEmpty() {\n      return false;\n    },\n    toPath: function toPath(insert) {\n      var path = new Path[Base.capitalize(this._type)]({\n        center: new Point(),\n        size: this._size,\n        radius: this._radius,\n        insert: false\n      });\n      path.copyAttributes(this);\n      if (paper.settings.applyMatrix) path.setApplyMatrix(true);\n      if (insert === undefined || insert) path.insertAbove(this);\n      return path;\n    },\n    toShape: '#clone',\n    _asPathItem: function _asPathItem() {\n      return this.toPath(false);\n    },\n    _draw: function _draw(ctx, param, viewMatrix, strokeMatrix) {\n      var style = this._style,\n          hasFill = style.hasFill(),\n          hasStroke = style.hasStroke(),\n          dontPaint = param.dontFinish || param.clip,\n          untransformed = !strokeMatrix;\n\n      if (hasFill || hasStroke || dontPaint) {\n        var type = this._type,\n            radius = this._radius,\n            isCircle = type === 'circle';\n        if (!param.dontStart) ctx.beginPath();\n\n        if (untransformed && isCircle) {\n          ctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n        } else {\n          var rx = isCircle ? radius : radius.width,\n              ry = isCircle ? radius : radius.height,\n              size = this._size,\n              width = size.width,\n              height = size.height;\n\n          if (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n            ctx.rect(-width / 2, -height / 2, width, height);\n          } else {\n            var x = width / 2,\n                y = height / 2,\n                kappa = 1 - 0.5522847498307936,\n                cx = rx * kappa,\n                cy = ry * kappa,\n                c = [-x, -y + ry, -x, -y + cy, -x + cx, -y, -x + rx, -y, x - rx, -y, x - cx, -y, x, -y + cy, x, -y + ry, x, y - ry, x, y - cy, x - cx, y, x - rx, y, -x + rx, y, -x + cx, y, -x, y - cy, -x, y - ry];\n            if (strokeMatrix) strokeMatrix.transform(c, c, 32);\n            ctx.moveTo(c[0], c[1]);\n            ctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n            if (x !== rx) ctx.lineTo(c[8], c[9]);\n            ctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n            if (y !== ry) ctx.lineTo(c[16], c[17]);\n            ctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n            if (x !== rx) ctx.lineTo(c[24], c[25]);\n            ctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n          }\n        }\n\n        ctx.closePath();\n      }\n\n      if (!dontPaint && (hasFill || hasStroke)) {\n        this._setStyles(ctx, param, viewMatrix);\n\n        if (hasFill) {\n          ctx.fill(style.getFillRule());\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n        }\n\n        if (hasStroke) ctx.stroke();\n      }\n    },\n    _canComposite: function _canComposite() {\n      return !(this.hasFill() && this.hasStroke());\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var rect = new _Rectangle(this._size).setCenter(0, 0),\n          style = this._style,\n          strokeWidth = options.stroke && style.hasStroke() && style.getStrokeWidth();\n      if (matrix) rect = matrix._transformBounds(rect);\n      return strokeWidth ? rect.expand(Path._getStrokePadding(strokeWidth, this._getStrokeMatrix(matrix, options))) : rect;\n    }\n  }, new function () {\n    function getCornerCenter(that, point, expand) {\n      var radius = that._radius;\n\n      if (!radius.isZero()) {\n        var halfSize = that._size.divide(2);\n\n        for (var q = 1; q <= 4; q++) {\n          var dir = new Point(q > 1 && q < 4 ? -1 : 1, q > 2 ? -1 : 1),\n              corner = dir.multiply(halfSize),\n              center = corner.subtract(dir.multiply(radius)),\n              rect = new _Rectangle(expand ? corner.add(dir.multiply(expand)) : corner, center);\n          if (rect.contains(point)) return {\n            point: center,\n            quadrant: q\n          };\n        }\n      }\n    }\n\n    function isOnEllipseStroke(point, radius, padding, quadrant) {\n      var vector = point.divide(radius);\n      return (!quadrant || vector.isInQuadrant(quadrant)) && vector.subtract(vector.normalize()).multiply(radius).divide(padding).length <= 1;\n    }\n\n    return {\n      _contains: function _contains(point) {\n        if (this._type === 'rectangle') {\n          var center = getCornerCenter(this, point);\n          return center ? point.subtract(center.point).divide(this._radius).getLength() <= 1 : _contains.base.call(this, point);\n        } else {\n          return point.divide(this.size).getLength() <= 0.5;\n        }\n      },\n      _hitTestSelf: function _hitTestSelf(point, options, viewMatrix, strokeMatrix) {\n        var hit = false,\n            style = this._style,\n            hitStroke = options.stroke && style.hasStroke(),\n            hitFill = options.fill && style.hasFill();\n\n        if (hitStroke || hitFill) {\n          var type = this._type,\n              radius = this._radius,\n              strokeRadius = hitStroke ? style.getStrokeWidth() / 2 : 0,\n              strokePadding = options._tolerancePadding.add(Path._getStrokePadding(strokeRadius, !style.getStrokeScaling() && strokeMatrix));\n\n          if (type === 'rectangle') {\n            var padding = strokePadding.multiply(2),\n                center = getCornerCenter(this, point, padding);\n\n            if (center) {\n              hit = isOnEllipseStroke(point.subtract(center.point), radius, strokePadding, center.quadrant);\n            } else {\n              var rect = new _Rectangle(this._size).setCenter(0, 0),\n                  outer = rect.expand(padding),\n                  inner = rect.expand(padding.negate());\n              hit = outer._containsPoint(point) && !inner._containsPoint(point);\n            }\n          } else {\n            hit = isOnEllipseStroke(point, radius, strokePadding);\n          }\n        }\n\n        return hit ? new HitResult(hitStroke ? 'stroke' : 'fill', this) : _hitTestSelf.base.apply(this, arguments);\n      }\n    };\n  }(), {\n    statics: new function () {\n      function createShape(type, point, size, radius, args) {\n        var item = Base.create(Shape.prototype);\n        item._type = type;\n        item._size = size;\n        item._radius = radius;\n\n        item._initialize(Base.getNamed(args), point);\n\n        return item;\n      }\n\n      return {\n        Circle: function Circle() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              radius = Base.readNamed(args, 'radius');\n          return createShape('circle', center, new Size(radius * 2), radius, args);\n        },\n        Rectangle: function Rectangle() {\n          var args = arguments,\n              rect = _Rectangle.readNamed(args, 'rectangle'),\n              radius = Size.min(Size.readNamed(args, 'radius'), rect.getSize(true).divide(2));\n\n          return createShape('rectangle', rect.getCenter(true), rect.getSize(true), radius, args);\n        },\n        Ellipse: function Ellipse() {\n          var args = arguments,\n              ellipse = Shape._readEllipse(args),\n              radius = ellipse.radius;\n\n          return createShape('ellipse', ellipse.center, radius.multiply(2), radius, args);\n        },\n        _readEllipse: function _readEllipse(args) {\n          var center, radius;\n\n          if (Base.hasNamed(args, 'radius')) {\n            center = Point.readNamed(args, 'center');\n            radius = Size.readNamed(args, 'radius');\n          } else {\n            var rect = _Rectangle.readNamed(args, 'rectangle');\n\n            center = rect.getCenter(true);\n            radius = rect.getSize(true).divide(2);\n          }\n\n          return {\n            center: center,\n            radius: radius\n          };\n        }\n      };\n    }()\n  });\n  var Raster = Item.extend({\n    _class: 'Raster',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _boundsOptions: {\n      stroke: false,\n      handle: false\n    },\n    _serializeFields: {\n      crossOrigin: null,\n      source: null\n    },\n    _prioritize: ['crossOrigin'],\n    _smoothing: true,\n    beans: true,\n    initialize: function Raster(source, position) {\n      if (!this._initialize(source, position !== undefined && Point.read(arguments))) {\n        var image,\n            type = typeof source,\n            object = type === 'string' ? document.getElementById(source) : type === 'object' ? source : null;\n\n        if (object && object !== Item.NO_INSERT) {\n          if (object.getContent || object.naturalHeight != null) {\n            image = object;\n          } else if (object) {\n            var size = Size.read(arguments);\n\n            if (!size.isZero()) {\n              image = CanvasProvider.getCanvas(size);\n            }\n          }\n        }\n\n        if (image) {\n          this.setImage(image);\n        } else {\n          this.setSource(source);\n        }\n      }\n\n      if (!this._size) {\n        this._size = new Size();\n        this._loaded = false;\n      }\n    },\n    _equals: function _equals(item) {\n      return this.getSource() === item.getSource();\n    },\n    copyContent: function copyContent(source) {\n      var image = source._image,\n          canvas = source._canvas;\n\n      if (image) {\n        this._setImage(image);\n      } else if (canvas) {\n        var copyCanvas = CanvasProvider.getCanvas(source._size);\n        copyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\n        this._setImage(copyCanvas);\n      }\n\n      this._crossOrigin = source._crossOrigin;\n    },\n    getSize: function getSize() {\n      var size = this._size;\n      return new LinkedSize(size ? size.width : 0, size ? size.height : 0, this, 'setSize');\n    },\n    setSize: function setSize() {\n      var size = Size.read(arguments);\n\n      if (!size.equals(this._size)) {\n        if (size.width > 0 && size.height > 0) {\n          var element = this.getElement();\n\n          this._setImage(CanvasProvider.getCanvas(size));\n\n          if (element) this.getContext(true).drawImage(element, 0, 0, size.width, size.height);\n        } else {\n          if (this._canvas) CanvasProvider.release(this._canvas);\n          this._size = size.clone();\n        }\n      }\n    },\n    getWidth: function getWidth() {\n      return this._size ? this._size.width : 0;\n    },\n    setWidth: function setWidth(width) {\n      this.setSize(width, this.getHeight());\n    },\n    getHeight: function getHeight() {\n      return this._size ? this._size.height : 0;\n    },\n    setHeight: function setHeight(height) {\n      this.setSize(this.getWidth(), height);\n    },\n    getLoaded: function getLoaded() {\n      return this._loaded;\n    },\n    isEmpty: function isEmpty() {\n      var size = this._size;\n      return !size || size.width === 0 && size.height === 0;\n    },\n    getResolution: function getResolution() {\n      var matrix = this._matrix,\n          orig = new Point(0, 0).transform(matrix),\n          u = new Point(1, 0).transform(matrix).subtract(orig),\n          v = new Point(0, 1).transform(matrix).subtract(orig);\n      return new Size(72 / u.getLength(), 72 / v.getLength());\n    },\n    getPpi: '#getResolution',\n    getImage: function getImage() {\n      return this._image;\n    },\n    setImage: function setImage(image) {\n      var that = this;\n\n      function emit(event) {\n        var view = that.getView(),\n            type = event && event.type || 'load';\n\n        if (view && that.responds(type)) {\n          paper = view._scope;\n          that.emit(type, new Event(event));\n        }\n      }\n\n      this._setImage(image);\n\n      if (this._loaded) {\n        setTimeout(emit, 0);\n      } else if (image) {\n        DomEvent.add(image, {\n          load: function load(event) {\n            that._setImage(image);\n\n            emit(event);\n          },\n          error: emit\n        });\n      }\n    },\n    _setImage: function _setImage(image) {\n      if (this._canvas) CanvasProvider.release(this._canvas);\n\n      if (image && image.getContext) {\n        this._image = null;\n        this._canvas = image;\n        this._loaded = true;\n      } else {\n        this._image = image;\n        this._canvas = null;\n        this._loaded = !!(image && image.src && image.complete);\n      }\n\n      this._size = new Size(image ? image.naturalWidth || image.width : 0, image ? image.naturalHeight || image.height : 0);\n      this._context = null;\n\n      this._changed(1033);\n    },\n    getCanvas: function getCanvas() {\n      if (!this._canvas) {\n        var ctx = CanvasProvider.getContext(this._size);\n\n        try {\n          if (this._image) ctx.drawImage(this._image, 0, 0);\n          this._canvas = ctx.canvas;\n        } catch (e) {\n          CanvasProvider.release(ctx);\n        }\n      }\n\n      return this._canvas;\n    },\n    setCanvas: '#setImage',\n    getContext: function getContext(_change) {\n      if (!this._context) this._context = this.getCanvas().getContext('2d');\n\n      if (_change) {\n        this._image = null;\n\n        this._changed(1025);\n      }\n\n      return this._context;\n    },\n    setContext: function setContext(context) {\n      this._context = context;\n    },\n    getSource: function getSource() {\n      var image = this._image;\n      return image && image.src || this.toDataURL();\n    },\n    setSource: function setSource(src) {\n      var image = new self.Image(),\n          crossOrigin = this._crossOrigin;\n      if (crossOrigin) image.crossOrigin = crossOrigin;\n      if (src) image.src = src;\n      this.setImage(image);\n    },\n    getCrossOrigin: function getCrossOrigin() {\n      var image = this._image;\n      return image && image.crossOrigin || this._crossOrigin || '';\n    },\n    setCrossOrigin: function setCrossOrigin(crossOrigin) {\n      this._crossOrigin = crossOrigin;\n      var image = this._image;\n      if (image) image.crossOrigin = crossOrigin;\n    },\n    getSmoothing: function getSmoothing() {\n      return this._smoothing;\n    },\n    setSmoothing: function setSmoothing(smoothing) {\n      this._smoothing = smoothing;\n\n      this._changed(257);\n    },\n    getElement: function getElement() {\n      return this._canvas || this._loaded && this._image;\n    }\n  }, {\n    beans: false,\n    getSubCanvas: function getSubCanvas() {\n      var rect = _Rectangle.read(arguments),\n          ctx = CanvasProvider.getContext(rect.getSize());\n\n      ctx.drawImage(this.getCanvas(), rect.x, rect.y, rect.width, rect.height, 0, 0, rect.width, rect.height);\n      return ctx.canvas;\n    },\n    getSubRaster: function getSubRaster() {\n      var rect = _Rectangle.read(arguments),\n          raster = new Raster(Item.NO_INSERT);\n\n      raster._setImage(this.getSubCanvas(rect));\n\n      raster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\n      raster._matrix.prepend(this._matrix);\n\n      raster.insertAbove(this);\n      return raster;\n    },\n    toDataURL: function toDataURL() {\n      var image = this._image,\n          src = image && image.src;\n      if (/^data:/.test(src)) return src;\n      var canvas = this.getCanvas();\n      return canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n    },\n    drawImage: function drawImage(image) {\n      var point = Point.read(arguments, 1);\n      this.getContext(true).drawImage(image, point.x, point.y);\n    },\n    getAverageColor: function getAverageColor(object) {\n      var bounds, path;\n\n      if (!object) {\n        bounds = this.getBounds();\n      } else if (object instanceof PathItem) {\n        path = object;\n        bounds = object.getBounds();\n      } else if (typeof object === 'object') {\n        if ('width' in object) {\n          bounds = new _Rectangle(object);\n        } else if ('x' in object) {\n          bounds = new _Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n        }\n      }\n\n      if (!bounds) return null;\n      var sampleSize = 32,\n          width = Math.min(bounds.width, sampleSize),\n          height = Math.min(bounds.height, sampleSize);\n      var ctx = Raster._sampleContext;\n\n      if (!ctx) {\n        ctx = Raster._sampleContext = CanvasProvider.getContext(new Size(sampleSize));\n      } else {\n        ctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n      }\n\n      ctx.save();\n      var matrix = new Matrix().scale(width / bounds.width, height / bounds.height).translate(-bounds.x, -bounds.y);\n      matrix.applyToContext(ctx);\n      if (path) path.draw(ctx, new Base({\n        clip: true,\n        matrices: [matrix]\n      }));\n\n      this._matrix.applyToContext(ctx);\n\n      var element = this.getElement(),\n          size = this._size;\n      if (element) ctx.drawImage(element, -size.width / 2, -size.height / 2);\n      ctx.restore();\n      var pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width), Math.ceil(height)).data,\n          channels = [0, 0, 0],\n          total = 0;\n\n      for (var i = 0, l = pixels.length; i < l; i += 4) {\n        var alpha = pixels[i + 3];\n        total += alpha;\n        alpha /= 255;\n        channels[0] += pixels[i] * alpha;\n        channels[1] += pixels[i + 1] * alpha;\n        channels[2] += pixels[i + 2] * alpha;\n      }\n\n      for (var i = 0; i < 3; i++) {\n        channels[i] /= total;\n      }\n\n      return total ? Color.read(channels) : null;\n    },\n    getPixel: function getPixel() {\n      var point = Point.read(arguments);\n      var data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n      return new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255], data[3] / 255);\n    },\n    setPixel: function setPixel() {\n      var args = arguments,\n          point = Point.read(args),\n          color = Color.read(args),\n          components = color._convert('rgb'),\n          alpha = color._alpha,\n          ctx = this.getContext(true),\n          imageData = ctx.createImageData(1, 1),\n          data = imageData.data;\n\n      data[0] = components[0] * 255;\n      data[1] = components[1] * 255;\n      data[2] = components[2] * 255;\n      data[3] = alpha != null ? alpha * 255 : 255;\n      ctx.putImageData(imageData, point.x, point.y);\n    },\n    clear: function clear() {\n      var size = this._size;\n      this.getContext(true).clearRect(0, 0, size.width + 1, size.height + 1);\n    },\n    createImageData: function createImageData() {\n      var size = Size.read(arguments);\n      return this.getContext().createImageData(size.width, size.height);\n    },\n    getImageData: function getImageData() {\n      var rect = _Rectangle.read(arguments);\n\n      if (rect.isEmpty()) rect = new _Rectangle(this._size);\n      return this.getContext().getImageData(rect.x, rect.y, rect.width, rect.height);\n    },\n    setImageData: function setImageData(data) {\n      var point = Point.read(arguments, 1);\n      this.getContext(true).putImageData(data, point.x, point.y);\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var rect = new _Rectangle(this._size).setCenter(0, 0);\n      return matrix ? matrix._transformBounds(rect) : rect;\n    },\n    _hitTestSelf: function _hitTestSelf(point) {\n      if (this._contains(point)) {\n        var that = this;\n        return new HitResult('pixel', that, {\n          offset: point.add(that._size.divide(2)).round(),\n          color: {\n            get: function get() {\n              return that.getPixel(this.offset);\n            }\n          }\n        });\n      }\n    },\n    _draw: function _draw(ctx, param, viewMatrix) {\n      var element = this.getElement();\n\n      if (element && element.width > 0 && element.height > 0) {\n        ctx.globalAlpha = this._opacity;\n\n        this._setStyles(ctx, param, viewMatrix);\n\n        DomElement.setPrefixed(ctx, 'imageSmoothingEnabled', this._smoothing);\n        ctx.drawImage(element, -this._size.width / 2, -this._size.height / 2);\n      }\n    },\n    _canComposite: function _canComposite() {\n      return true;\n    }\n  });\n  var SymbolItem = Item.extend({\n    _class: 'SymbolItem',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _boundsOptions: {\n      stroke: true\n    },\n    _serializeFields: {\n      symbol: null\n    },\n    initialize: function SymbolItem(arg0, arg1) {\n      if (!this._initialize(arg0, arg1 !== undefined && Point.read(arguments, 1))) this.setDefinition(arg0 instanceof SymbolDefinition ? arg0 : new SymbolDefinition(arg0));\n    },\n    _equals: function _equals(item) {\n      return this._definition === item._definition;\n    },\n    copyContent: function copyContent(source) {\n      this.setDefinition(source._definition);\n    },\n    getDefinition: function getDefinition() {\n      return this._definition;\n    },\n    setDefinition: function setDefinition(definition) {\n      this._definition = definition;\n\n      this._changed(9);\n    },\n    getSymbol: '#getDefinition',\n    setSymbol: '#setDefinition',\n    isEmpty: function isEmpty() {\n      return this._definition._item.isEmpty();\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var item = this._definition._item;\n      return item._getCachedBounds(item._matrix.prepended(matrix), options);\n    },\n    _hitTestSelf: function _hitTestSelf(point, options, viewMatrix) {\n      var opts = options.extend({\n        all: false\n      });\n\n      var res = this._definition._item._hitTest(point, opts, viewMatrix);\n\n      if (res) res.item = this;\n      return res;\n    },\n    _draw: function _draw(ctx, param) {\n      this._definition._item.draw(ctx, param);\n    }\n  });\n  var SymbolDefinition = Base.extend({\n    _class: 'SymbolDefinition',\n    initialize: function SymbolDefinition(item, dontCenter) {\n      this._id = UID.get();\n      this.project = paper.project;\n      if (item) this.setItem(item, dontCenter);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return dictionary.add(this, function () {\n        return Base.serialize([this._class, this._item], options, false, dictionary);\n      });\n    },\n    _changed: function _changed(flags) {\n      if (flags & 8) Item._clearBoundsCache(this);\n      if (flags & 1) this.project._changed(flags);\n    },\n    getItem: function getItem() {\n      return this._item;\n    },\n    setItem: function setItem(item, _dontCenter) {\n      if (item._symbol) item = item.clone();\n      if (this._item) this._item._symbol = null;\n      this._item = item;\n      item.remove();\n      item.setSelected(false);\n      if (!_dontCenter) item.setPosition(new Point());\n      item._symbol = this;\n\n      this._changed(9);\n    },\n    getDefinition: '#getItem',\n    setDefinition: '#setItem',\n    place: function place(position) {\n      return new SymbolItem(this, position);\n    },\n    clone: function clone() {\n      return new SymbolDefinition(this._item.clone(false));\n    },\n    equals: function equals(symbol) {\n      return symbol === this || symbol && this._item.equals(symbol._item) || false;\n    }\n  });\n  var HitResult = Base.extend({\n    _class: 'HitResult',\n    initialize: function HitResult(type, item, values) {\n      this.type = type;\n      this.item = item;\n      if (values) this.inject(values);\n    },\n    statics: {\n      getOptions: function getOptions(args) {\n        var options = args && Base.read(args);\n        return new Base({\n          type: null,\n          tolerance: paper.settings.hitTolerance,\n          fill: !options,\n          stroke: !options,\n          segments: !options,\n          handles: false,\n          ends: false,\n          position: false,\n          center: false,\n          bounds: false,\n          guides: false,\n          selected: false\n        }, options);\n      }\n    }\n  });\n  var Segment = Base.extend({\n    _class: 'Segment',\n    beans: true,\n    _selection: 0,\n    initialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n      var count = arguments.length,\n          point,\n          handleIn,\n          handleOut,\n          selection;\n\n      if (count > 0) {\n        if (arg0 == null || typeof arg0 === 'object') {\n          if (count === 1 && arg0 && 'point' in arg0) {\n            point = arg0.point;\n            handleIn = arg0.handleIn;\n            handleOut = arg0.handleOut;\n            selection = arg0.selection;\n          } else {\n            point = arg0;\n            handleIn = arg1;\n            handleOut = arg2;\n            selection = arg3;\n          }\n        } else {\n          point = [arg0, arg1];\n          handleIn = arg2 !== undefined ? [arg2, arg3] : null;\n          handleOut = arg4 !== undefined ? [arg4, arg5] : null;\n        }\n      }\n\n      new SegmentPoint(point, this, '_point');\n      new SegmentPoint(handleIn, this, '_handleIn');\n      new SegmentPoint(handleOut, this, '_handleOut');\n      if (selection) this.setSelection(selection);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      var point = this._point,\n          selection = this._selection,\n          obj = selection || this.hasHandles() ? [point, this._handleIn, this._handleOut] : point;\n      if (selection) obj.push(selection);\n      return Base.serialize(obj, options, true, dictionary);\n    },\n    _changed: function _changed(point) {\n      var path = this._path;\n      if (!path) return;\n      var curves = path._curves,\n          index = this._index,\n          curve;\n\n      if (curves) {\n        if ((!point || point === this._point || point === this._handleIn) && (curve = index > 0 ? curves[index - 1] : path._closed ? curves[curves.length - 1] : null)) curve._changed();\n        if ((!point || point === this._point || point === this._handleOut) && (curve = curves[index])) curve._changed();\n      }\n\n      path._changed(41);\n    },\n    getPoint: function getPoint() {\n      return this._point;\n    },\n    setPoint: function setPoint() {\n      this._point.set(Point.read(arguments));\n    },\n    getHandleIn: function getHandleIn() {\n      return this._handleIn;\n    },\n    setHandleIn: function setHandleIn() {\n      this._handleIn.set(Point.read(arguments));\n    },\n    getHandleOut: function getHandleOut() {\n      return this._handleOut;\n    },\n    setHandleOut: function setHandleOut() {\n      this._handleOut.set(Point.read(arguments));\n    },\n    hasHandles: function hasHandles() {\n      return !this._handleIn.isZero() || !this._handleOut.isZero();\n    },\n    isSmooth: function isSmooth() {\n      var handleIn = this._handleIn,\n          handleOut = this._handleOut;\n      return !handleIn.isZero() && !handleOut.isZero() && handleIn.isCollinear(handleOut);\n    },\n    clearHandles: function clearHandles() {\n      this._handleIn._set(0, 0);\n\n      this._handleOut._set(0, 0);\n    },\n    getSelection: function getSelection() {\n      return this._selection;\n    },\n    setSelection: function setSelection(selection) {\n      var oldSelection = this._selection,\n          path = this._path;\n      this._selection = selection = selection || 0;\n\n      if (path && selection !== oldSelection) {\n        path._updateSelection(this, oldSelection, selection);\n\n        path._changed(257);\n      }\n    },\n    _changeSelection: function _changeSelection(flag, selected) {\n      var selection = this._selection;\n      this.setSelection(selected ? selection | flag : selection & ~flag);\n    },\n    isSelected: function isSelected() {\n      return !!(this._selection & 7);\n    },\n    setSelected: function setSelected(selected) {\n      this._changeSelection(7, selected);\n    },\n    getIndex: function getIndex() {\n      return this._index !== undefined ? this._index : null;\n    },\n    getPath: function getPath() {\n      return this._path || null;\n    },\n    getCurve: function getCurve() {\n      var path = this._path,\n          index = this._index;\n\n      if (path) {\n        if (index > 0 && !path._closed && index === path._segments.length - 1) index--;\n        return path.getCurves()[index] || null;\n      }\n\n      return null;\n    },\n    getLocation: function getLocation() {\n      var curve = this.getCurve();\n      return curve ? new CurveLocation(curve, this === curve._segment1 ? 0 : 1) : null;\n    },\n    getNext: function getNext() {\n      var segments = this._path && this._path._segments;\n      return segments && (segments[this._index + 1] || this._path._closed && segments[0]) || null;\n    },\n    smooth: function smooth(options, _first, _last) {\n      var opts = options || {},\n          type = opts.type,\n          factor = opts.factor,\n          prev = this.getPrevious(),\n          next = this.getNext(),\n          p0 = (prev || this)._point,\n          p1 = this._point,\n          p2 = (next || this)._point,\n          d1 = p0.getDistance(p1),\n          d2 = p1.getDistance(p2);\n\n      if (!type || type === 'catmull-rom') {\n        var a = factor === undefined ? 0.5 : factor,\n            d1_a = Math.pow(d1, a),\n            d1_2a = d1_a * d1_a,\n            d2_a = Math.pow(d2, a),\n            d2_2a = d2_a * d2_a;\n\n        if (!_first && prev) {\n          var A = 2 * d2_2a + 3 * d2_a * d1_a + d1_2a,\n              N = 3 * d2_a * (d2_a + d1_a);\n          this.setHandleIn(N !== 0 ? new Point((d2_2a * p0._x + A * p1._x - d1_2a * p2._x) / N - p1._x, (d2_2a * p0._y + A * p1._y - d1_2a * p2._y) / N - p1._y) : new Point());\n        }\n\n        if (!_last && next) {\n          var A = 2 * d1_2a + 3 * d1_a * d2_a + d2_2a,\n              N = 3 * d1_a * (d1_a + d2_a);\n          this.setHandleOut(N !== 0 ? new Point((d1_2a * p2._x + A * p1._x - d2_2a * p0._x) / N - p1._x, (d1_2a * p2._y + A * p1._y - d2_2a * p0._y) / N - p1._y) : new Point());\n        }\n      } else if (type === 'geometric') {\n        if (prev && next) {\n          var vector = p0.subtract(p2),\n              t = factor === undefined ? 0.4 : factor,\n              k = t * d1 / (d1 + d2);\n          if (!_first) this.setHandleIn(vector.multiply(k));\n          if (!_last) this.setHandleOut(vector.multiply(k - t));\n        }\n      } else {\n        throw new Error('Smoothing method \\'' + type + '\\' not supported.');\n      }\n    },\n    getPrevious: function getPrevious() {\n      var segments = this._path && this._path._segments;\n      return segments && (segments[this._index - 1] || this._path._closed && segments[segments.length - 1]) || null;\n    },\n    isFirst: function isFirst() {\n      return !this._index;\n    },\n    isLast: function isLast() {\n      var path = this._path;\n      return path && this._index === path._segments.length - 1 || false;\n    },\n    reverse: function reverse() {\n      var handleIn = this._handleIn,\n          handleOut = this._handleOut,\n          tmp = handleIn.clone();\n      handleIn.set(handleOut);\n      handleOut.set(tmp);\n    },\n    reversed: function reversed() {\n      return new Segment(this._point, this._handleOut, this._handleIn);\n    },\n    remove: function remove() {\n      return this._path ? !!this._path.removeSegment(this._index) : false;\n    },\n    clone: function clone() {\n      return new Segment(this._point, this._handleIn, this._handleOut);\n    },\n    equals: function equals(segment) {\n      return segment === this || segment && this._class === segment._class && this._point.equals(segment._point) && this._handleIn.equals(segment._handleIn) && this._handleOut.equals(segment._handleOut) || false;\n    },\n    toString: function toString() {\n      var parts = ['point: ' + this._point];\n      if (!this._handleIn.isZero()) parts.push('handleIn: ' + this._handleIn);\n      if (!this._handleOut.isZero()) parts.push('handleOut: ' + this._handleOut);\n      return '{ ' + parts.join(', ') + ' }';\n    },\n    transform: function transform(matrix) {\n      this._transformCoordinates(matrix, new Array(6), true);\n\n      this._changed();\n    },\n    interpolate: function interpolate(from, to, factor) {\n      var u = 1 - factor,\n          v = factor,\n          point1 = from._point,\n          point2 = to._point,\n          handleIn1 = from._handleIn,\n          handleIn2 = to._handleIn,\n          handleOut2 = to._handleOut,\n          handleOut1 = from._handleOut;\n\n      this._point._set(u * point1._x + v * point2._x, u * point1._y + v * point2._y, true);\n\n      this._handleIn._set(u * handleIn1._x + v * handleIn2._x, u * handleIn1._y + v * handleIn2._y, true);\n\n      this._handleOut._set(u * handleOut1._x + v * handleOut2._x, u * handleOut1._y + v * handleOut2._y, true);\n\n      this._changed();\n    },\n    _transformCoordinates: function _transformCoordinates(matrix, coords, change) {\n      var point = this._point,\n          handleIn = !change || !this._handleIn.isZero() ? this._handleIn : null,\n          handleOut = !change || !this._handleOut.isZero() ? this._handleOut : null,\n          x = point._x,\n          y = point._y,\n          i = 2;\n      coords[0] = x;\n      coords[1] = y;\n\n      if (handleIn) {\n        coords[i++] = handleIn._x + x;\n        coords[i++] = handleIn._y + y;\n      }\n\n      if (handleOut) {\n        coords[i++] = handleOut._x + x;\n        coords[i++] = handleOut._y + y;\n      }\n\n      if (matrix) {\n        matrix._transformCoordinates(coords, coords, i / 2);\n\n        x = coords[0];\n        y = coords[1];\n\n        if (change) {\n          point._x = x;\n          point._y = y;\n          i = 2;\n\n          if (handleIn) {\n            handleIn._x = coords[i++] - x;\n            handleIn._y = coords[i++] - y;\n          }\n\n          if (handleOut) {\n            handleOut._x = coords[i++] - x;\n            handleOut._y = coords[i++] - y;\n          }\n        } else {\n          if (!handleIn) {\n            coords[i++] = x;\n            coords[i++] = y;\n          }\n\n          if (!handleOut) {\n            coords[i++] = x;\n            coords[i++] = y;\n          }\n        }\n      }\n\n      return coords;\n    }\n  });\n  var SegmentPoint = Point.extend({\n    initialize: function SegmentPoint(point, owner, key) {\n      var x, y, selected;\n\n      if (!point) {\n        x = y = 0;\n      } else if ((x = point[0]) !== undefined) {\n        y = point[1];\n      } else {\n        var pt = point;\n\n        if ((x = pt.x) === undefined) {\n          pt = Point.read(arguments);\n          x = pt.x;\n        }\n\n        y = pt.y;\n        selected = pt.selected;\n      }\n\n      this._x = x;\n      this._y = y;\n      this._owner = owner;\n      owner[key] = this;\n      if (selected) this.setSelected(true);\n    },\n    _set: function _set(x, y) {\n      this._x = x;\n      this._y = y;\n\n      this._owner._changed(this);\n\n      return this;\n    },\n    getX: function getX() {\n      return this._x;\n    },\n    setX: function setX(x) {\n      this._x = x;\n\n      this._owner._changed(this);\n    },\n    getY: function getY() {\n      return this._y;\n    },\n    setY: function setY(y) {\n      this._y = y;\n\n      this._owner._changed(this);\n    },\n    isZero: function isZero() {\n      var isZero = Numerical.isZero;\n      return isZero(this._x) && isZero(this._y);\n    },\n    isSelected: function isSelected() {\n      return !!(this._owner._selection & this._getSelection());\n    },\n    setSelected: function setSelected(selected) {\n      this._owner._changeSelection(this._getSelection(), selected);\n    },\n    _getSelection: function _getSelection() {\n      var owner = this._owner;\n      return this === owner._point ? 1 : this === owner._handleIn ? 2 : this === owner._handleOut ? 4 : 0;\n    }\n  });\n  var Curve = Base.extend({\n    _class: 'Curve',\n    beans: true,\n    initialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n      var count = arguments.length,\n          seg1,\n          seg2,\n          point1,\n          point2,\n          handle1,\n          handle2;\n\n      if (count === 3) {\n        this._path = arg0;\n        seg1 = arg1;\n        seg2 = arg2;\n      } else if (!count) {\n        seg1 = new Segment();\n        seg2 = new Segment();\n      } else if (count === 1) {\n        if ('segment1' in arg0) {\n          seg1 = new Segment(arg0.segment1);\n          seg2 = new Segment(arg0.segment2);\n        } else if ('point1' in arg0) {\n          point1 = arg0.point1;\n          handle1 = arg0.handle1;\n          handle2 = arg0.handle2;\n          point2 = arg0.point2;\n        } else if (Array.isArray(arg0)) {\n          point1 = [arg0[0], arg0[1]];\n          point2 = [arg0[6], arg0[7]];\n          handle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n          handle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n        }\n      } else if (count === 2) {\n        seg1 = new Segment(arg0);\n        seg2 = new Segment(arg1);\n      } else if (count === 4) {\n        point1 = arg0;\n        handle1 = arg1;\n        handle2 = arg2;\n        point2 = arg3;\n      } else if (count === 8) {\n        point1 = [arg0, arg1];\n        point2 = [arg6, arg7];\n        handle1 = [arg2 - arg0, arg3 - arg1];\n        handle2 = [arg4 - arg6, arg5 - arg7];\n      }\n\n      this._segment1 = seg1 || new Segment(point1, null, handle1);\n      this._segment2 = seg2 || new Segment(point2, handle2, null);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return Base.serialize(this.hasHandles() ? [this.getPoint1(), this.getHandle1(), this.getHandle2(), this.getPoint2()] : [this.getPoint1(), this.getPoint2()], options, true, dictionary);\n    },\n    _changed: function _changed() {\n      this._length = this._bounds = undefined;\n    },\n    clone: function clone() {\n      return new Curve(this._segment1, this._segment2);\n    },\n    toString: function toString() {\n      var parts = ['point1: ' + this._segment1._point];\n      if (!this._segment1._handleOut.isZero()) parts.push('handle1: ' + this._segment1._handleOut);\n      if (!this._segment2._handleIn.isZero()) parts.push('handle2: ' + this._segment2._handleIn);\n      parts.push('point2: ' + this._segment2._point);\n      return '{ ' + parts.join(', ') + ' }';\n    },\n    classify: function classify() {\n      return Curve.classify(this.getValues());\n    },\n    remove: function remove() {\n      var removed = false;\n\n      if (this._path) {\n        var segment2 = this._segment2,\n            handleOut = segment2._handleOut;\n        removed = segment2.remove();\n        if (removed) this._segment1._handleOut.set(handleOut);\n      }\n\n      return removed;\n    },\n    getPoint1: function getPoint1() {\n      return this._segment1._point;\n    },\n    setPoint1: function setPoint1() {\n      this._segment1._point.set(Point.read(arguments));\n    },\n    getPoint2: function getPoint2() {\n      return this._segment2._point;\n    },\n    setPoint2: function setPoint2() {\n      this._segment2._point.set(Point.read(arguments));\n    },\n    getHandle1: function getHandle1() {\n      return this._segment1._handleOut;\n    },\n    setHandle1: function setHandle1() {\n      this._segment1._handleOut.set(Point.read(arguments));\n    },\n    getHandle2: function getHandle2() {\n      return this._segment2._handleIn;\n    },\n    setHandle2: function setHandle2() {\n      this._segment2._handleIn.set(Point.read(arguments));\n    },\n    getSegment1: function getSegment1() {\n      return this._segment1;\n    },\n    getSegment2: function getSegment2() {\n      return this._segment2;\n    },\n    getPath: function getPath() {\n      return this._path;\n    },\n    getIndex: function getIndex() {\n      return this._segment1._index;\n    },\n    getNext: function getNext() {\n      var curves = this._path && this._path._curves;\n      return curves && (curves[this._segment1._index + 1] || this._path._closed && curves[0]) || null;\n    },\n    getPrevious: function getPrevious() {\n      var curves = this._path && this._path._curves;\n      return curves && (curves[this._segment1._index - 1] || this._path._closed && curves[curves.length - 1]) || null;\n    },\n    isFirst: function isFirst() {\n      return !this._segment1._index;\n    },\n    isLast: function isLast() {\n      var path = this._path;\n      return path && this._segment1._index === path._curves.length - 1 || false;\n    },\n    isSelected: function isSelected() {\n      return this.getPoint1().isSelected() && this.getHandle1().isSelected() && this.getHandle2().isSelected() && this.getPoint2().isSelected();\n    },\n    setSelected: function setSelected(selected) {\n      this.getPoint1().setSelected(selected);\n      this.getHandle1().setSelected(selected);\n      this.getHandle2().setSelected(selected);\n      this.getPoint2().setSelected(selected);\n    },\n    getValues: function getValues(matrix) {\n      return Curve.getValues(this._segment1, this._segment2, matrix);\n    },\n    getPoints: function getPoints() {\n      var coords = this.getValues(),\n          points = [];\n\n      for (var i = 0; i < 8; i += 2) {\n        points.push(new Point(coords[i], coords[i + 1]));\n      }\n\n      return points;\n    }\n  }, {\n    getLength: function getLength() {\n      if (this._length == null) this._length = Curve.getLength(this.getValues(), 0, 1);\n      return this._length;\n    },\n    getArea: function getArea() {\n      return Curve.getArea(this.getValues());\n    },\n    getLine: function getLine() {\n      return new Line(this._segment1._point, this._segment2._point);\n    },\n    getPart: function getPart(from, to) {\n      return new Curve(Curve.getPart(this.getValues(), from, to));\n    },\n    getPartLength: function getPartLength(from, to) {\n      return Curve.getLength(this.getValues(), from, to);\n    },\n    divideAt: function divideAt(location) {\n      return this.divideAtTime(location && location.curve === this ? location.time : this.getTimeAt(location));\n    },\n    divideAtTime: function divideAtTime(time, _setHandles) {\n      var tMin = 1e-8,\n          tMax = 1 - tMin,\n          res = null;\n\n      if (time >= tMin && time <= tMax) {\n        var parts = Curve.subdivide(this.getValues(), time),\n            left = parts[0],\n            right = parts[1],\n            setHandles = _setHandles || this.hasHandles(),\n            seg1 = this._segment1,\n            seg2 = this._segment2,\n            path = this._path;\n\n        if (setHandles) {\n          seg1._handleOut._set(left[2] - left[0], left[3] - left[1]);\n\n          seg2._handleIn._set(right[4] - right[6], right[5] - right[7]);\n        }\n\n        var x = left[6],\n            y = left[7],\n            segment = new Segment(new Point(x, y), setHandles && new Point(left[4] - x, left[5] - y), setHandles && new Point(right[2] - x, right[3] - y));\n\n        if (path) {\n          path.insert(seg1._index + 1, segment);\n          res = this.getNext();\n        } else {\n          this._segment2 = segment;\n\n          this._changed();\n\n          res = new Curve(segment, seg2);\n        }\n      }\n\n      return res;\n    },\n    splitAt: function splitAt(location) {\n      var path = this._path;\n      return path ? path.splitAt(location) : null;\n    },\n    splitAtTime: function splitAtTime(time) {\n      return this.splitAt(this.getLocationAtTime(time));\n    },\n    divide: function divide(offset, isTime) {\n      return this.divideAtTime(offset === undefined ? 0.5 : isTime ? offset : this.getTimeAt(offset));\n    },\n    split: function split(offset, isTime) {\n      return this.splitAtTime(offset === undefined ? 0.5 : isTime ? offset : this.getTimeAt(offset));\n    },\n    reversed: function reversed() {\n      return new Curve(this._segment2.reversed(), this._segment1.reversed());\n    },\n    clearHandles: function clearHandles() {\n      this._segment1._handleOut._set(0, 0);\n\n      this._segment2._handleIn._set(0, 0);\n    },\n    statics: {\n      getValues: function getValues(segment1, segment2, matrix, straight) {\n        var p1 = segment1._point,\n            h1 = segment1._handleOut,\n            h2 = segment2._handleIn,\n            p2 = segment2._point,\n            x1 = p1.x,\n            y1 = p1.y,\n            x2 = p2.x,\n            y2 = p2.y,\n            values = straight ? [x1, y1, x1, y1, x2, y2, x2, y2] : [x1, y1, x1 + h1._x, y1 + h1._y, x2 + h2._x, y2 + h2._y, x2, y2];\n        if (matrix) matrix._transformCoordinates(values, values, 4);\n        return values;\n      },\n      subdivide: function subdivide(v, t) {\n        var x0 = v[0],\n            y0 = v[1],\n            x1 = v[2],\n            y1 = v[3],\n            x2 = v[4],\n            y2 = v[5],\n            x3 = v[6],\n            y3 = v[7];\n        if (t === undefined) t = 0.5;\n        var u = 1 - t,\n            x4 = u * x0 + t * x1,\n            y4 = u * y0 + t * y1,\n            x5 = u * x1 + t * x2,\n            y5 = u * y1 + t * y2,\n            x6 = u * x2 + t * x3,\n            y6 = u * y2 + t * y3,\n            x7 = u * x4 + t * x5,\n            y7 = u * y4 + t * y5,\n            x8 = u * x5 + t * x6,\n            y8 = u * y5 + t * y6,\n            x9 = u * x7 + t * x8,\n            y9 = u * y7 + t * y8;\n        return [[x0, y0, x4, y4, x7, y7, x9, y9], [x9, y9, x8, y8, x6, y6, x3, y3]];\n      },\n      getMonoCurves: function getMonoCurves(v, dir) {\n        var curves = [],\n            io = dir ? 0 : 1,\n            o0 = v[io + 0],\n            o1 = v[io + 2],\n            o2 = v[io + 4],\n            o3 = v[io + 6];\n\n        if (o0 >= o1 === o1 >= o2 && o1 >= o2 === o2 >= o3 || Curve.isStraight(v)) {\n          curves.push(v);\n        } else {\n          var a = 3 * (o1 - o2) - o0 + o3,\n              b = 2 * (o0 + o2) - 4 * o1,\n              c = o1 - o0,\n              tMin = 1e-8,\n              tMax = 1 - tMin,\n              roots = [],\n              n = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\n          if (!n) {\n            curves.push(v);\n          } else {\n            roots.sort();\n            var t = roots[0],\n                parts = Curve.subdivide(v, t);\n            curves.push(parts[0]);\n\n            if (n > 1) {\n              t = (roots[1] - t) / (1 - t);\n              parts = Curve.subdivide(parts[1], t);\n              curves.push(parts[0]);\n            }\n\n            curves.push(parts[1]);\n          }\n        }\n\n        return curves;\n      },\n      solveCubic: function solveCubic(v, coord, val, roots, min, max) {\n        var v0 = v[coord],\n            v1 = v[coord + 2],\n            v2 = v[coord + 4],\n            v3 = v[coord + 6],\n            res = 0;\n\n        if (!(v0 < val && v3 < val && v1 < val && v2 < val || v0 > val && v3 > val && v1 > val && v2 > val)) {\n          var c = 3 * (v1 - v0),\n              b = 3 * (v2 - v1) - c,\n              a = v3 - v0 - c - b;\n          res = Numerical.solveCubic(a, b, c, v0 - val, roots, min, max);\n        }\n\n        return res;\n      },\n      getTimeOf: function getTimeOf(v, point) {\n        var p0 = new Point(v[0], v[1]),\n            p3 = new Point(v[6], v[7]),\n            epsilon = 1e-12,\n            geomEpsilon = 1e-7,\n            t = point.isClose(p0, epsilon) ? 0 : point.isClose(p3, epsilon) ? 1 : null;\n\n        if (t === null) {\n          var coords = [point.x, point.y],\n              roots = [];\n\n          for (var c = 0; c < 2; c++) {\n            var count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\n            for (var i = 0; i < count; i++) {\n              var u = roots[i];\n              if (point.isClose(Curve.getPoint(v, u), geomEpsilon)) return u;\n            }\n          }\n        }\n\n        return point.isClose(p0, geomEpsilon) ? 0 : point.isClose(p3, geomEpsilon) ? 1 : null;\n      },\n      getNearestTime: function getNearestTime(v, point) {\n        if (Curve.isStraight(v)) {\n          var x0 = v[0],\n              y0 = v[1],\n              x3 = v[6],\n              y3 = v[7],\n              vx = x3 - x0,\n              vy = y3 - y0,\n              det = vx * vx + vy * vy;\n          if (det === 0) return 0;\n          var u = ((point.x - x0) * vx + (point.y - y0) * vy) / det;\n          return u < 1e-12 ? 0 : u > 0.999999999999 ? 1 : Curve.getTimeOf(v, new Point(x0 + u * vx, y0 + u * vy));\n        }\n\n        var count = 100,\n            minDist = Infinity,\n            minT = 0;\n\n        function refine(t) {\n          if (t >= 0 && t <= 1) {\n            var dist = point.getDistance(Curve.getPoint(v, t), true);\n\n            if (dist < minDist) {\n              minDist = dist;\n              minT = t;\n              return true;\n            }\n          }\n        }\n\n        for (var i = 0; i <= count; i++) {\n          refine(i / count);\n        }\n\n        var step = 1 / (count * 2);\n\n        while (step > 1e-8) {\n          if (!refine(minT - step) && !refine(minT + step)) step /= 2;\n        }\n\n        return minT;\n      },\n      getPart: function getPart(v, from, to) {\n        var flip = from > to;\n\n        if (flip) {\n          var tmp = from;\n          from = to;\n          to = tmp;\n        }\n\n        if (from > 0) v = Curve.subdivide(v, from)[1];\n        if (to < 1) v = Curve.subdivide(v, (to - from) / (1 - from))[0];\n        return flip ? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]] : v;\n      },\n      isFlatEnough: function isFlatEnough(v, flatness) {\n        var x0 = v[0],\n            y0 = v[1],\n            x1 = v[2],\n            y1 = v[3],\n            x2 = v[4],\n            y2 = v[5],\n            x3 = v[6],\n            y3 = v[7],\n            ux = 3 * x1 - 2 * x0 - x3,\n            uy = 3 * y1 - 2 * y0 - y3,\n            vx = 3 * x2 - 2 * x3 - x0,\n            vy = 3 * y2 - 2 * y3 - y0;\n        return Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy) <= 16 * flatness * flatness;\n      },\n      getArea: function getArea(v) {\n        var x0 = v[0],\n            y0 = v[1],\n            x1 = v[2],\n            y1 = v[3],\n            x2 = v[4],\n            y2 = v[5],\n            x3 = v[6],\n            y3 = v[7];\n        return 3 * ((y3 - y0) * (x1 + x2) - (x3 - x0) * (y1 + y2) + y1 * (x0 - x2) - x1 * (y0 - y2) + y3 * (x2 + x0 / 3) - x3 * (y2 + y0 / 3)) / 20;\n      },\n      getBounds: function getBounds(v) {\n        var min = v.slice(0, 2),\n            max = min.slice(),\n            roots = [0, 0];\n\n        for (var i = 0; i < 2; i++) {\n          Curve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6], i, 0, min, max, roots);\n        }\n\n        return new _Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n      },\n      _addBounds: function _addBounds(v0, v1, v2, v3, coord, padding, min, max, roots) {\n        function add(value, padding) {\n          var left = value - padding,\n              right = value + padding;\n          if (left < min[coord]) min[coord] = left;\n          if (right > max[coord]) max[coord] = right;\n        }\n\n        padding /= 2;\n        var minPad = min[coord] - padding,\n            maxPad = max[coord] + padding;\n\n        if (v0 < minPad || v1 < minPad || v2 < minPad || v3 < minPad || v0 > maxPad || v1 > maxPad || v2 > maxPad || v3 > maxPad) {\n          if (v1 < v0 != v1 < v3 && v2 < v0 != v2 < v3) {\n            add(v0, padding);\n            add(v3, padding);\n          } else {\n            var a = 3 * (v1 - v2) - v0 + v3,\n                b = 2 * (v0 + v2) - 4 * v1,\n                c = v1 - v0,\n                count = Numerical.solveQuadratic(a, b, c, roots),\n                tMin = 1e-8,\n                tMax = 1 - tMin;\n            add(v3, 0);\n\n            for (var i = 0; i < count; i++) {\n              var t = roots[i],\n                  u = 1 - t;\n              if (tMin <= t && t <= tMax) add(u * u * u * v0 + 3 * u * u * t * v1 + 3 * u * t * t * v2 + t * t * t * v3, padding);\n            }\n          }\n        }\n      }\n    }\n  }, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds'], function (name) {\n    this[name] = function () {\n      if (!this._bounds) this._bounds = {};\n      var bounds = this._bounds[name];\n\n      if (!bounds) {\n        bounds = this._bounds[name] = Path[name]([this._segment1, this._segment2], false, this._path);\n      }\n\n      return bounds.clone();\n    };\n  }, {}), Base.each({\n    isStraight: function isStraight(p1, h1, h2, p2) {\n      if (h1.isZero() && h2.isZero()) {\n        return true;\n      } else {\n        var v = p2.subtract(p1);\n\n        if (v.isZero()) {\n          return false;\n        } else if (v.isCollinear(h1) && v.isCollinear(h2)) {\n          var l = new Line(p1, p2),\n              epsilon = 1e-7;\n\n          if (l.getDistance(p1.add(h1)) < epsilon && l.getDistance(p2.add(h2)) < epsilon) {\n            var div = v.dot(v),\n                s1 = v.dot(h1) / div,\n                s2 = v.dot(h2) / div;\n            return s1 >= 0 && s1 <= 1 && s2 <= 0 && s2 >= -1;\n          }\n        }\n      }\n\n      return false;\n    },\n    isLinear: function isLinear(p1, h1, h2, p2) {\n      var third = p2.subtract(p1).divide(3);\n      return h1.equals(third) && h2.negate().equals(third);\n    }\n  }, function (test, name) {\n    this[name] = function (epsilon) {\n      var seg1 = this._segment1,\n          seg2 = this._segment2;\n      return test(seg1._point, seg1._handleOut, seg2._handleIn, seg2._point, epsilon);\n    };\n\n    this.statics[name] = function (v, epsilon) {\n      var x0 = v[0],\n          y0 = v[1],\n          x3 = v[6],\n          y3 = v[7];\n      return test(new Point(x0, y0), new Point(v[2] - x0, v[3] - y0), new Point(v[4] - x3, v[5] - y3), new Point(x3, y3), epsilon);\n    };\n  }, {\n    statics: {},\n    hasHandles: function hasHandles() {\n      return !this._segment1._handleOut.isZero() || !this._segment2._handleIn.isZero();\n    },\n    hasLength: function hasLength(epsilon) {\n      return (!this.getPoint1().equals(this.getPoint2()) || this.hasHandles()) && this.getLength() > (epsilon || 0);\n    },\n    isCollinear: function isCollinear(curve) {\n      return curve && this.isStraight() && curve.isStraight() && this.getLine().isCollinear(curve.getLine());\n    },\n    isHorizontal: function isHorizontal() {\n      return this.isStraight() && Math.abs(this.getTangentAtTime(0.5).y) < 1e-8;\n    },\n    isVertical: function isVertical() {\n      return this.isStraight() && Math.abs(this.getTangentAtTime(0.5).x) < 1e-8;\n    }\n  }), {\n    beans: false,\n    getLocationAt: function getLocationAt(offset, _isTime) {\n      return this.getLocationAtTime(_isTime ? offset : this.getTimeAt(offset));\n    },\n    getLocationAtTime: function getLocationAtTime(t) {\n      return t != null && t >= 0 && t <= 1 ? new CurveLocation(this, t) : null;\n    },\n    getTimeAt: function getTimeAt(offset, start) {\n      return Curve.getTimeAt(this.getValues(), offset, start);\n    },\n    getParameterAt: '#getTimeAt',\n    getTimesWithTangent: function getTimesWithTangent() {\n      var tangent = Point.read(arguments);\n      return tangent.isZero() ? [] : Curve.getTimesWithTangent(this.getValues(), tangent);\n    },\n    getOffsetAtTime: function getOffsetAtTime(t) {\n      return this.getPartLength(0, t);\n    },\n    getLocationOf: function getLocationOf() {\n      return this.getLocationAtTime(this.getTimeOf(Point.read(arguments)));\n    },\n    getOffsetOf: function getOffsetOf() {\n      var loc = this.getLocationOf.apply(this, arguments);\n      return loc ? loc.getOffset() : null;\n    },\n    getTimeOf: function getTimeOf() {\n      return Curve.getTimeOf(this.getValues(), Point.read(arguments));\n    },\n    getParameterOf: '#getTimeOf',\n    getNearestLocation: function getNearestLocation() {\n      var point = Point.read(arguments),\n          values = this.getValues(),\n          t = Curve.getNearestTime(values, point),\n          pt = Curve.getPoint(values, t);\n      return new CurveLocation(this, t, pt, null, point.getDistance(pt));\n    },\n    getNearestPoint: function getNearestPoint() {\n      var loc = this.getNearestLocation.apply(this, arguments);\n      return loc ? loc.getPoint() : loc;\n    }\n  }, new function () {\n    var methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent', 'getWeightedNormal', 'getCurvature'];\n    return Base.each(methods, function (name) {\n      this[name + 'At'] = function (location, _isTime) {\n        var values = this.getValues();\n        return Curve[name](values, _isTime ? location : Curve.getTimeAt(values, location));\n      };\n\n      this[name + 'AtTime'] = function (time) {\n        return Curve[name](this.getValues(), time);\n      };\n    }, {\n      statics: {\n        _evaluateMethods: methods\n      }\n    });\n  }(), new function () {\n    function getLengthIntegrand(v) {\n      var x0 = v[0],\n          y0 = v[1],\n          x1 = v[2],\n          y1 = v[3],\n          x2 = v[4],\n          y2 = v[5],\n          x3 = v[6],\n          y3 = v[7],\n          ax = 9 * (x1 - x2) + 3 * (x3 - x0),\n          bx = 6 * (x0 + x2) - 12 * x1,\n          cx = 3 * (x1 - x0),\n          ay = 9 * (y1 - y2) + 3 * (y3 - y0),\n          by = 6 * (y0 + y2) - 12 * y1,\n          cy = 3 * (y1 - y0);\n      return function (t) {\n        var dx = (ax * t + bx) * t + cx,\n            dy = (ay * t + by) * t + cy;\n        return Math.sqrt(dx * dx + dy * dy);\n      };\n    }\n\n    function getIterations(a, b) {\n      return Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n    }\n\n    function evaluate(v, t, type, normalized) {\n      if (t == null || t < 0 || t > 1) return null;\n      var x0 = v[0],\n          y0 = v[1],\n          x1 = v[2],\n          y1 = v[3],\n          x2 = v[4],\n          y2 = v[5],\n          x3 = v[6],\n          y3 = v[7],\n          isZero = Numerical.isZero;\n\n      if (isZero(x1 - x0) && isZero(y1 - y0)) {\n        x1 = x0;\n        y1 = y0;\n      }\n\n      if (isZero(x2 - x3) && isZero(y2 - y3)) {\n        x2 = x3;\n        y2 = y3;\n      }\n\n      var cx = 3 * (x1 - x0),\n          bx = 3 * (x2 - x1) - cx,\n          ax = x3 - x0 - cx - bx,\n          cy = 3 * (y1 - y0),\n          by = 3 * (y2 - y1) - cy,\n          ay = y3 - y0 - cy - by,\n          x,\n          y;\n\n      if (type === 0) {\n        x = t === 0 ? x0 : t === 1 ? x3 : ((ax * t + bx) * t + cx) * t + x0;\n        y = t === 0 ? y0 : t === 1 ? y3 : ((ay * t + by) * t + cy) * t + y0;\n      } else {\n        var tMin = 1e-8,\n            tMax = 1 - tMin;\n\n        if (t < tMin) {\n          x = cx;\n          y = cy;\n        } else if (t > tMax) {\n          x = 3 * (x3 - x2);\n          y = 3 * (y3 - y2);\n        } else {\n          x = (3 * ax * t + 2 * bx) * t + cx;\n          y = (3 * ay * t + 2 * by) * t + cy;\n        }\n\n        if (normalized) {\n          if (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n            x = x2 - x1;\n            y = y2 - y1;\n          }\n\n          var len = Math.sqrt(x * x + y * y);\n\n          if (len) {\n            x /= len;\n            y /= len;\n          }\n        }\n\n        if (type === 3) {\n          var x2 = 6 * ax * t + 2 * bx,\n              y2 = 6 * ay * t + 2 * by,\n              d = Math.pow(x * x + y * y, 3 / 2);\n          x = d !== 0 ? (x * y2 - y * x2) / d : 0;\n          y = 0;\n        }\n      }\n\n      return type === 2 ? new Point(y, -x) : new Point(x, y);\n    }\n\n    return {\n      statics: {\n        classify: function classify(v) {\n          var x0 = v[0],\n              y0 = v[1],\n              x1 = v[2],\n              y1 = v[3],\n              x2 = v[4],\n              y2 = v[5],\n              x3 = v[6],\n              y3 = v[7],\n              a1 = x0 * (y3 - y2) + y0 * (x2 - x3) + x3 * y2 - y3 * x2,\n              a2 = x1 * (y0 - y3) + y1 * (x3 - x0) + x0 * y3 - y0 * x3,\n              a3 = x2 * (y1 - y0) + y2 * (x0 - x1) + x1 * y0 - y1 * x0,\n              d3 = 3 * a3,\n              d2 = d3 - a2,\n              d1 = d2 - a2 + a1,\n              l = Math.sqrt(d1 * d1 + d2 * d2 + d3 * d3),\n              s = l !== 0 ? 1 / l : 0,\n              isZero = Numerical.isZero,\n              serpentine = 'serpentine';\n          d1 *= s;\n          d2 *= s;\n          d3 *= s;\n\n          function type(type, t1, t2) {\n            var hasRoots = t1 !== undefined,\n                t1Ok = hasRoots && t1 > 0 && t1 < 1,\n                t2Ok = hasRoots && t2 > 0 && t2 < 1;\n\n            if (hasRoots && (!(t1Ok || t2Ok) || type === 'loop' && !(t1Ok && t2Ok))) {\n              type = 'arch';\n              t1Ok = t2Ok = false;\n            }\n\n            return {\n              type: type,\n              roots: t1Ok || t2Ok ? t1Ok && t2Ok ? t1 < t2 ? [t1, t2] : [t2, t1] : [t1Ok ? t1 : t2] : null\n            };\n          }\n\n          if (isZero(d1)) {\n            return isZero(d2) ? type(isZero(d3) ? 'line' : 'quadratic') : type(serpentine, d3 / (3 * d2));\n          }\n\n          var d = 3 * d2 * d2 - 4 * d1 * d3;\n\n          if (isZero(d)) {\n            return type('cusp', d2 / (2 * d1));\n          }\n\n          var f1 = d > 0 ? Math.sqrt(d / 3) : Math.sqrt(-d),\n              f2 = 2 * d1;\n          return type(d > 0 ? serpentine : 'loop', (d2 + f1) / f2, (d2 - f1) / f2);\n        },\n        getLength: function getLength(v, a, b, ds) {\n          if (a === undefined) a = 0;\n          if (b === undefined) b = 1;\n\n          if (Curve.isStraight(v)) {\n            var c = v;\n\n            if (b < 1) {\n              c = Curve.subdivide(c, b)[0];\n              a /= b;\n            }\n\n            if (a > 0) {\n              c = Curve.subdivide(c, a)[1];\n            }\n\n            var dx = c[6] - c[0],\n                dy = c[7] - c[1];\n            return Math.sqrt(dx * dx + dy * dy);\n          }\n\n          return Numerical.integrate(ds || getLengthIntegrand(v), a, b, getIterations(a, b));\n        },\n        getTimeAt: function getTimeAt(v, offset, start) {\n          if (start === undefined) start = offset < 0 ? 1 : 0;\n          if (offset === 0) return start;\n          var abs = Math.abs,\n              epsilon = 1e-12,\n              forward = offset > 0,\n              a = forward ? start : 0,\n              b = forward ? 1 : start,\n              ds = getLengthIntegrand(v),\n              rangeLength = Curve.getLength(v, a, b, ds),\n              diff = abs(offset) - rangeLength;\n\n          if (abs(diff) < epsilon) {\n            return forward ? b : a;\n          } else if (diff > epsilon) {\n            return null;\n          }\n\n          var guess = offset / rangeLength,\n              length = 0;\n\n          function f(t) {\n            length += Numerical.integrate(ds, start, t, getIterations(start, t));\n            start = t;\n            return length - offset;\n          }\n\n          return Numerical.findRoot(f, ds, start + guess, a, b, 32, 1e-12);\n        },\n        getPoint: function getPoint(v, t) {\n          return evaluate(v, t, 0, false);\n        },\n        getTangent: function getTangent(v, t) {\n          return evaluate(v, t, 1, true);\n        },\n        getWeightedTangent: function getWeightedTangent(v, t) {\n          return evaluate(v, t, 1, false);\n        },\n        getNormal: function getNormal(v, t) {\n          return evaluate(v, t, 2, true);\n        },\n        getWeightedNormal: function getWeightedNormal(v, t) {\n          return evaluate(v, t, 2, false);\n        },\n        getCurvature: function getCurvature(v, t) {\n          return evaluate(v, t, 3, false).x;\n        },\n        getPeaks: function getPeaks(v) {\n          var x0 = v[0],\n              y0 = v[1],\n              x1 = v[2],\n              y1 = v[3],\n              x2 = v[4],\n              y2 = v[5],\n              x3 = v[6],\n              y3 = v[7],\n              ax = -x0 + 3 * x1 - 3 * x2 + x3,\n              bx = 3 * x0 - 6 * x1 + 3 * x2,\n              cx = -3 * x0 + 3 * x1,\n              ay = -y0 + 3 * y1 - 3 * y2 + y3,\n              by = 3 * y0 - 6 * y1 + 3 * y2,\n              cy = -3 * y0 + 3 * y1,\n              tMin = 1e-8,\n              tMax = 1 - tMin,\n              roots = [];\n          Numerical.solveCubic(9 * (ax * ax + ay * ay), 9 * (ax * bx + by * ay), 2 * (bx * bx + by * by) + 3 * (cx * ax + cy * ay), cx * bx + by * cy, roots, tMin, tMax);\n          return roots.sort();\n        }\n      }\n    };\n  }(), new function () {\n    function addLocation(locations, include, c1, t1, c2, t2, overlap) {\n      var excludeStart = !overlap && c1.getPrevious() === c2,\n          excludeEnd = !overlap && c1 !== c2 && c1.getNext() === c2,\n          tMin = 1e-8,\n          tMax = 1 - tMin;\n\n      if (t1 !== null && t1 >= (excludeStart ? tMin : 0) && t1 <= (excludeEnd ? tMax : 1)) {\n        if (t2 !== null && t2 >= (excludeEnd ? tMin : 0) && t2 <= (excludeStart ? tMax : 1)) {\n          var loc1 = new CurveLocation(c1, t1, null, overlap),\n              loc2 = new CurveLocation(c2, t2, null, overlap);\n          loc1._intersection = loc2;\n          loc2._intersection = loc1;\n\n          if (!include || include(loc1)) {\n            CurveLocation.insert(locations, loc1, true);\n          }\n        }\n      }\n    }\n\n    function addCurveIntersections(v1, v2, c1, c2, locations, include, flip, recursion, calls, tMin, tMax, uMin, uMax) {\n      if (++calls >= 4096 || ++recursion >= 40) return calls;\n      var fatLineEpsilon = 1e-9,\n          q0x = v2[0],\n          q0y = v2[1],\n          q3x = v2[6],\n          q3y = v2[7],\n          getSignedDistance = Line.getSignedDistance,\n          d1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n          d2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n          factor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n          dMin = factor * Math.min(0, d1, d2),\n          dMax = factor * Math.max(0, d1, d2),\n          dp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n          dp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n          dp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n          dp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n          hull = getConvexHull(dp0, dp1, dp2, dp3),\n          top = hull[0],\n          bottom = hull[1],\n          tMinClip,\n          tMaxClip;\n      if (d1 === 0 && d2 === 0 && dp0 === 0 && dp1 === 0 && dp2 === 0 && dp3 === 0 || (tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null || (tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(), dMin, dMax)) == null) return calls;\n      var tMinNew = tMin + (tMax - tMin) * tMinClip,\n          tMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\n      if (Math.max(uMax - uMin, tMaxNew - tMinNew) < fatLineEpsilon) {\n        var t = (tMinNew + tMaxNew) / 2,\n            u = (uMin + uMax) / 2;\n        addLocation(locations, include, flip ? c2 : c1, flip ? u : t, flip ? c1 : c2, flip ? t : u);\n      } else {\n        v1 = Curve.getPart(v1, tMinClip, tMaxClip);\n        var uDiff = uMax - uMin;\n\n        if (tMaxClip - tMinClip > 0.8) {\n          if (tMaxNew - tMinNew > uDiff) {\n            var parts = Curve.subdivide(v1, 0.5),\n                t = (tMinNew + tMaxNew) / 2;\n            calls = addCurveIntersections(v2, parts[0], c2, c1, locations, include, !flip, recursion, calls, uMin, uMax, tMinNew, t);\n            calls = addCurveIntersections(v2, parts[1], c2, c1, locations, include, !flip, recursion, calls, uMin, uMax, t, tMaxNew);\n          } else {\n            var parts = Curve.subdivide(v2, 0.5),\n                u = (uMin + uMax) / 2;\n            calls = addCurveIntersections(parts[0], v1, c2, c1, locations, include, !flip, recursion, calls, uMin, u, tMinNew, tMaxNew);\n            calls = addCurveIntersections(parts[1], v1, c2, c1, locations, include, !flip, recursion, calls, u, uMax, tMinNew, tMaxNew);\n          }\n        } else {\n          if (uDiff === 0 || uDiff >= fatLineEpsilon) {\n            calls = addCurveIntersections(v2, v1, c2, c1, locations, include, !flip, recursion, calls, uMin, uMax, tMinNew, tMaxNew);\n          } else {\n            calls = addCurveIntersections(v1, v2, c1, c2, locations, include, flip, recursion, calls, tMinNew, tMaxNew, uMin, uMax);\n          }\n        }\n      }\n\n      return calls;\n    }\n\n    function getConvexHull(dq0, dq1, dq2, dq3) {\n      var p0 = [0, dq0],\n          p1 = [1 / 3, dq1],\n          p2 = [2 / 3, dq2],\n          p3 = [1, dq3],\n          dist1 = dq1 - (2 * dq0 + dq3) / 3,\n          dist2 = dq2 - (dq0 + 2 * dq3) / 3,\n          hull;\n\n      if (dist1 * dist2 < 0) {\n        hull = [[p0, p1, p3], [p0, p2, p3]];\n      } else {\n        var distRatio = dist1 / dist2;\n        hull = [distRatio >= 2 ? [p0, p1, p3] : distRatio <= 0.5 ? [p0, p2, p3] : [p0, p1, p2, p3], [p0, p3]];\n      }\n\n      return (dist1 || dist2) < 0 ? hull.reverse() : hull;\n    }\n\n    function clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n      if (hullTop[0][1] < dMin) {\n        return clipConvexHullPart(hullTop, true, dMin);\n      } else if (hullBottom[0][1] > dMax) {\n        return clipConvexHullPart(hullBottom, false, dMax);\n      } else {\n        return hullTop[0][0];\n      }\n    }\n\n    function clipConvexHullPart(part, top, threshold) {\n      var px = part[0][0],\n          py = part[0][1];\n\n      for (var i = 1, l = part.length; i < l; i++) {\n        var qx = part[i][0],\n            qy = part[i][1];\n\n        if (top ? qy >= threshold : qy <= threshold) {\n          return qy === threshold ? qx : px + (threshold - py) * (qx - px) / (qy - py);\n        }\n\n        px = qx;\n        py = qy;\n      }\n\n      return null;\n    }\n\n    function getCurveLineIntersections(v, px, py, vx, vy) {\n      var isZero = Numerical.isZero;\n\n      if (isZero(vx) && isZero(vy)) {\n        var t = Curve.getTimeOf(v, new Point(px, py));\n        return t === null ? [] : [t];\n      }\n\n      var angle = Math.atan2(-vy, vx),\n          sin = Math.sin(angle),\n          cos = Math.cos(angle),\n          rv = [],\n          roots = [];\n\n      for (var i = 0; i < 8; i += 2) {\n        var x = v[i] - px,\n            y = v[i + 1] - py;\n        rv.push(x * cos - y * sin, x * sin + y * cos);\n      }\n\n      Curve.solveCubic(rv, 1, 0, roots, 0, 1);\n      return roots;\n    }\n\n    function addCurveLineIntersections(v1, v2, c1, c2, locations, include, flip) {\n      var x1 = v2[0],\n          y1 = v2[1],\n          x2 = v2[6],\n          y2 = v2[7],\n          roots = getCurveLineIntersections(v1, x1, y1, x2 - x1, y2 - y1);\n\n      for (var i = 0, l = roots.length; i < l; i++) {\n        var t1 = roots[i],\n            p1 = Curve.getPoint(v1, t1),\n            t2 = Curve.getTimeOf(v2, p1);\n\n        if (t2 !== null) {\n          addLocation(locations, include, flip ? c2 : c1, flip ? t2 : t1, flip ? c1 : c2, flip ? t1 : t2);\n        }\n      }\n    }\n\n    function addLineIntersection(v1, v2, c1, c2, locations, include) {\n      var pt = Line.intersect(v1[0], v1[1], v1[6], v1[7], v2[0], v2[1], v2[6], v2[7]);\n\n      if (pt) {\n        addLocation(locations, include, c1, Curve.getTimeOf(v1, pt), c2, Curve.getTimeOf(v2, pt));\n      }\n    }\n\n    function getCurveIntersections(v1, v2, c1, c2, locations, include) {\n      var epsilon = 1e-12,\n          min = Math.min,\n          max = Math.max;\n\n      if (max(v1[0], v1[2], v1[4], v1[6]) + epsilon > min(v2[0], v2[2], v2[4], v2[6]) && min(v1[0], v1[2], v1[4], v1[6]) - epsilon < max(v2[0], v2[2], v2[4], v2[6]) && max(v1[1], v1[3], v1[5], v1[7]) + epsilon > min(v2[1], v2[3], v2[5], v2[7]) && min(v1[1], v1[3], v1[5], v1[7]) - epsilon < max(v2[1], v2[3], v2[5], v2[7])) {\n        var overlaps = getOverlaps(v1, v2);\n\n        if (overlaps) {\n          for (var i = 0; i < 2; i++) {\n            var overlap = overlaps[i];\n            addLocation(locations, include, c1, overlap[0], c2, overlap[1], true);\n          }\n        } else {\n          var straight1 = Curve.isStraight(v1),\n              straight2 = Curve.isStraight(v2),\n              straight = straight1 && straight2,\n              flip = straight1 && !straight2,\n              before = locations.length;\n          (straight ? addLineIntersection : straight1 || straight2 ? addCurveLineIntersections : addCurveIntersections)(flip ? v2 : v1, flip ? v1 : v2, flip ? c2 : c1, flip ? c1 : c2, locations, include, flip, 0, 0, 0, 1, 0, 1);\n\n          if (!straight || locations.length === before) {\n            for (var i = 0; i < 4; i++) {\n              var t1 = i >> 1,\n                  t2 = i & 1,\n                  i1 = t1 * 6,\n                  i2 = t2 * 6,\n                  p1 = new Point(v1[i1], v1[i1 + 1]),\n                  p2 = new Point(v2[i2], v2[i2 + 1]);\n\n              if (p1.isClose(p2, epsilon)) {\n                addLocation(locations, include, c1, t1, c2, t2);\n              }\n            }\n          }\n        }\n      }\n\n      return locations;\n    }\n\n    function getSelfIntersection(v1, c1, locations, include) {\n      var info = Curve.classify(v1);\n\n      if (info.type === 'loop') {\n        var roots = info.roots;\n        addLocation(locations, include, c1, roots[0], c1, roots[1]);\n      }\n\n      return locations;\n    }\n\n    function getIntersections(curves1, curves2, include, matrix1, matrix2, _returnFirst) {\n      var epsilon = 1e-7,\n          self = !curves2;\n      if (self) curves2 = curves1;\n      var length1 = curves1.length,\n          length2 = curves2.length,\n          values1 = new Array(length1),\n          values2 = self ? values1 : new Array(length2),\n          locations = [];\n\n      for (var i = 0; i < length1; i++) {\n        values1[i] = curves1[i].getValues(matrix1);\n      }\n\n      if (!self) {\n        for (var i = 0; i < length2; i++) {\n          values2[i] = curves2[i].getValues(matrix2);\n        }\n      }\n\n      var boundsCollisions = CollisionDetection.findCurveBoundsCollisions(values1, values2, epsilon);\n\n      for (var index1 = 0; index1 < length1; index1++) {\n        var curve1 = curves1[index1],\n            v1 = values1[index1];\n\n        if (self) {\n          getSelfIntersection(v1, curve1, locations, include);\n        }\n\n        var collisions1 = boundsCollisions[index1];\n\n        if (collisions1) {\n          for (var j = 0; j < collisions1.length; j++) {\n            if (_returnFirst && locations.length) return locations;\n            var index2 = collisions1[j];\n\n            if (!self || index2 > index1) {\n              var curve2 = curves2[index2],\n                  v2 = values2[index2];\n              getCurveIntersections(v1, v2, curve1, curve2, locations, include);\n            }\n          }\n        }\n      }\n\n      return locations;\n    }\n\n    function getOverlaps(v1, v2) {\n      function getSquaredLineLength(v) {\n        var x = v[6] - v[0],\n            y = v[7] - v[1];\n        return x * x + y * y;\n      }\n\n      var abs = Math.abs,\n          getDistance = Line.getDistance,\n          timeEpsilon = 1e-8,\n          geomEpsilon = 1e-7,\n          straight1 = Curve.isStraight(v1),\n          straight2 = Curve.isStraight(v2),\n          straightBoth = straight1 && straight2,\n          flip = getSquaredLineLength(v1) < getSquaredLineLength(v2),\n          l1 = flip ? v2 : v1,\n          l2 = flip ? v1 : v2,\n          px = l1[0],\n          py = l1[1],\n          vx = l1[6] - px,\n          vy = l1[7] - py;\n\n      if (getDistance(px, py, vx, vy, l2[0], l2[1], true) < geomEpsilon && getDistance(px, py, vx, vy, l2[6], l2[7], true) < geomEpsilon) {\n        if (!straightBoth && getDistance(px, py, vx, vy, l1[2], l1[3], true) < geomEpsilon && getDistance(px, py, vx, vy, l1[4], l1[5], true) < geomEpsilon && getDistance(px, py, vx, vy, l2[2], l2[3], true) < geomEpsilon && getDistance(px, py, vx, vy, l2[4], l2[5], true) < geomEpsilon) {\n          straight1 = straight2 = straightBoth = true;\n        }\n      } else if (straightBoth) {\n        return null;\n      }\n\n      if (straight1 ^ straight2) {\n        return null;\n      }\n\n      var v = [v1, v2],\n          pairs = [];\n\n      for (var i = 0; i < 4 && pairs.length < 2; i++) {\n        var i1 = i & 1,\n            i2 = i1 ^ 1,\n            t1 = i >> 1,\n            t2 = Curve.getTimeOf(v[i1], new Point(v[i2][t1 ? 6 : 0], v[i2][t1 ? 7 : 1]));\n\n        if (t2 != null) {\n          var pair = i1 ? [t1, t2] : [t2, t1];\n\n          if (!pairs.length || abs(pair[0] - pairs[0][0]) > timeEpsilon && abs(pair[1] - pairs[0][1]) > timeEpsilon) {\n            pairs.push(pair);\n          }\n        }\n\n        if (i > 2 && !pairs.length) break;\n      }\n\n      if (pairs.length !== 2) {\n        pairs = null;\n      } else if (!straightBoth) {\n        var o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n            o2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n        if (abs(o2[2] - o1[2]) > geomEpsilon || abs(o2[3] - o1[3]) > geomEpsilon || abs(o2[4] - o1[4]) > geomEpsilon || abs(o2[5] - o1[5]) > geomEpsilon) pairs = null;\n      }\n\n      return pairs;\n    }\n\n    function getTimesWithTangent(v, tangent) {\n      var x0 = v[0],\n          y0 = v[1],\n          x1 = v[2],\n          y1 = v[3],\n          x2 = v[4],\n          y2 = v[5],\n          x3 = v[6],\n          y3 = v[7],\n          normalized = tangent.normalize(),\n          tx = normalized.x,\n          ty = normalized.y,\n          ax = 3 * x3 - 9 * x2 + 9 * x1 - 3 * x0,\n          ay = 3 * y3 - 9 * y2 + 9 * y1 - 3 * y0,\n          bx = 6 * x2 - 12 * x1 + 6 * x0,\n          by = 6 * y2 - 12 * y1 + 6 * y0,\n          cx = 3 * x1 - 3 * x0,\n          cy = 3 * y1 - 3 * y0,\n          den = 2 * ax * ty - 2 * ay * tx,\n          times = [];\n\n      if (Math.abs(den) < Numerical.CURVETIME_EPSILON) {\n        var num = ax * cy - ay * cx,\n            den = ax * by - ay * bx;\n\n        if (den != 0) {\n          var t = -num / den;\n          if (t >= 0 && t <= 1) times.push(t);\n        }\n      } else {\n        var delta = (bx * bx - 4 * ax * cx) * ty * ty + (-2 * bx * by + 4 * ay * cx + 4 * ax * cy) * tx * ty + (by * by - 4 * ay * cy) * tx * tx,\n            k = bx * ty - by * tx;\n\n        if (delta >= 0 && den != 0) {\n          var d = Math.sqrt(delta),\n              t0 = -(k + d) / den,\n              t1 = (-k + d) / den;\n          if (t0 >= 0 && t0 <= 1) times.push(t0);\n          if (t1 >= 0 && t1 <= 1) times.push(t1);\n        }\n      }\n\n      return times;\n    }\n\n    return {\n      getIntersections: function getIntersections(curve) {\n        var v1 = this.getValues(),\n            v2 = curve && curve !== this && curve.getValues();\n        return v2 ? getCurveIntersections(v1, v2, this, curve, []) : getSelfIntersection(v1, this, []);\n      },\n      statics: {\n        getOverlaps: getOverlaps,\n        getIntersections: getIntersections,\n        getCurveLineIntersections: getCurveLineIntersections,\n        getTimesWithTangent: getTimesWithTangent\n      }\n    };\n  }());\n  var CurveLocation = Base.extend({\n    _class: 'CurveLocation',\n    initialize: function CurveLocation(curve, time, point, _overlap, _distance) {\n      if (time >= 0.99999999) {\n        var next = curve.getNext();\n\n        if (next) {\n          time = 0;\n          curve = next;\n        }\n      }\n\n      this._setCurve(curve);\n\n      this._time = time;\n      this._point = point || curve.getPointAtTime(time);\n      this._overlap = _overlap;\n      this._distance = _distance;\n      this._intersection = this._next = this._previous = null;\n    },\n    _setCurve: function _setCurve(curve) {\n      var path = curve._path;\n      this._path = path;\n      this._version = path ? path._version : 0;\n      this._curve = curve;\n      this._segment = null;\n      this._segment1 = curve._segment1;\n      this._segment2 = curve._segment2;\n    },\n    _setSegment: function _setSegment(segment) {\n      this._setCurve(segment.getCurve());\n\n      this._segment = segment;\n      this._time = segment === this._segment1 ? 0 : 1;\n      this._point = segment._point.clone();\n    },\n    getSegment: function getSegment() {\n      var segment = this._segment;\n\n      if (!segment) {\n        var curve = this.getCurve(),\n            time = this.getTime();\n\n        if (time === 0) {\n          segment = curve._segment1;\n        } else if (time === 1) {\n          segment = curve._segment2;\n        } else if (time != null) {\n          segment = curve.getPartLength(0, time) < curve.getPartLength(time, 1) ? curve._segment1 : curve._segment2;\n        }\n\n        this._segment = segment;\n      }\n\n      return segment;\n    },\n    getCurve: function getCurve() {\n      var path = this._path,\n          that = this;\n\n      if (path && path._version !== this._version) {\n        this._time = this._offset = this._curveOffset = this._curve = null;\n      }\n\n      function trySegment(segment) {\n        var curve = segment && segment.getCurve();\n\n        if (curve && (that._time = curve.getTimeOf(that._point)) != null) {\n          that._setCurve(curve);\n\n          return curve;\n        }\n      }\n\n      return this._curve || trySegment(this._segment) || trySegment(this._segment1) || trySegment(this._segment2.getPrevious());\n    },\n    getPath: function getPath() {\n      var curve = this.getCurve();\n      return curve && curve._path;\n    },\n    getIndex: function getIndex() {\n      var curve = this.getCurve();\n      return curve && curve.getIndex();\n    },\n    getTime: function getTime() {\n      var curve = this.getCurve(),\n          time = this._time;\n      return curve && time == null ? this._time = curve.getTimeOf(this._point) : time;\n    },\n    getParameter: '#getTime',\n    getPoint: function getPoint() {\n      return this._point;\n    },\n    getOffset: function getOffset() {\n      var offset = this._offset;\n\n      if (offset == null) {\n        offset = 0;\n        var path = this.getPath(),\n            index = this.getIndex();\n\n        if (path && index != null) {\n          var curves = path.getCurves();\n\n          for (var i = 0; i < index; i++) {\n            offset += curves[i].getLength();\n          }\n        }\n\n        this._offset = offset += this.getCurveOffset();\n      }\n\n      return offset;\n    },\n    getCurveOffset: function getCurveOffset() {\n      var offset = this._curveOffset;\n\n      if (offset == null) {\n        var curve = this.getCurve(),\n            time = this.getTime();\n        this._curveOffset = offset = time != null && curve && curve.getPartLength(0, time);\n      }\n\n      return offset;\n    },\n    getIntersection: function getIntersection() {\n      return this._intersection;\n    },\n    getDistance: function getDistance() {\n      return this._distance;\n    },\n    divide: function divide() {\n      var curve = this.getCurve(),\n          res = curve && curve.divideAtTime(this.getTime());\n\n      if (res) {\n        this._setSegment(res._segment1);\n      }\n\n      return res;\n    },\n    split: function split() {\n      var curve = this.getCurve(),\n          path = curve._path,\n          res = curve && curve.splitAtTime(this.getTime());\n\n      if (res) {\n        this._setSegment(path.getLastSegment());\n      }\n\n      return res;\n    },\n    equals: function equals(loc, _ignoreOther) {\n      var res = this === loc;\n\n      if (!res && loc instanceof CurveLocation) {\n        var c1 = this.getCurve(),\n            c2 = loc.getCurve(),\n            p1 = c1._path,\n            p2 = c2._path;\n\n        if (p1 === p2) {\n          var abs = Math.abs,\n              epsilon = 1e-7,\n              diff = abs(this.getOffset() - loc.getOffset()),\n              i1 = !_ignoreOther && this._intersection,\n              i2 = !_ignoreOther && loc._intersection;\n          res = (diff < epsilon || p1 && abs(p1.getLength() - diff) < epsilon) && (!i1 && !i2 || i1 && i2 && i1.equals(i2, true));\n        }\n      }\n\n      return res;\n    },\n    toString: function toString() {\n      var parts = [],\n          point = this.getPoint(),\n          f = Formatter.instance;\n      if (point) parts.push('point: ' + point);\n      var index = this.getIndex();\n      if (index != null) parts.push('index: ' + index);\n      var time = this.getTime();\n      if (time != null) parts.push('time: ' + f.number(time));\n      if (this._distance != null) parts.push('distance: ' + f.number(this._distance));\n      return '{ ' + parts.join(', ') + ' }';\n    },\n    isTouching: function isTouching() {\n      var inter = this._intersection;\n\n      if (inter && this.getTangent().isCollinear(inter.getTangent())) {\n        var curve1 = this.getCurve(),\n            curve2 = inter.getCurve();\n        return !(curve1.isStraight() && curve2.isStraight() && curve1.getLine().intersect(curve2.getLine()));\n      }\n\n      return false;\n    },\n    isCrossing: function isCrossing() {\n      var inter = this._intersection;\n      if (!inter) return false;\n      var t1 = this.getTime(),\n          t2 = inter.getTime(),\n          tMin = 1e-8,\n          tMax = 1 - tMin,\n          t1Inside = t1 >= tMin && t1 <= tMax,\n          t2Inside = t2 >= tMin && t2 <= tMax;\n      if (t1Inside && t2Inside) return !this.isTouching();\n      var c2 = this.getCurve(),\n          c1 = c2 && t1 < tMin ? c2.getPrevious() : c2,\n          c4 = inter.getCurve(),\n          c3 = c4 && t2 < tMin ? c4.getPrevious() : c4;\n      if (t1 > tMax) c2 = c2.getNext();\n      if (t2 > tMax) c4 = c4.getNext();\n      if (!c1 || !c2 || !c3 || !c4) return false;\n      var offsets = [];\n\n      function addOffsets(curve, end) {\n        var v = curve.getValues(),\n            roots = Curve.classify(v).roots || Curve.getPeaks(v),\n            count = roots.length,\n            offset = Curve.getLength(v, end && count ? roots[count - 1] : 0, !end && count ? roots[0] : 1);\n        offsets.push(count ? offset : offset / 64);\n      }\n\n      function isInRange(angle, min, max) {\n        return min < max ? angle > min && angle < max : angle > min || angle < max;\n      }\n\n      if (!t1Inside) {\n        addOffsets(c1, true);\n        addOffsets(c2, false);\n      }\n\n      if (!t2Inside) {\n        addOffsets(c3, true);\n        addOffsets(c4, false);\n      }\n\n      var pt = this.getPoint(),\n          offset = Math.min.apply(Math, offsets),\n          v2 = t1Inside ? c2.getTangentAtTime(t1) : c2.getPointAt(offset).subtract(pt),\n          v1 = t1Inside ? v2.negate() : c1.getPointAt(-offset).subtract(pt),\n          v4 = t2Inside ? c4.getTangentAtTime(t2) : c4.getPointAt(offset).subtract(pt),\n          v3 = t2Inside ? v4.negate() : c3.getPointAt(-offset).subtract(pt),\n          a1 = v1.getAngle(),\n          a2 = v2.getAngle(),\n          a3 = v3.getAngle(),\n          a4 = v4.getAngle();\n      return !!(t1Inside ? isInRange(a1, a3, a4) ^ isInRange(a2, a3, a4) && isInRange(a1, a4, a3) ^ isInRange(a2, a4, a3) : isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2) && isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1));\n    },\n    hasOverlap: function hasOverlap() {\n      return !!this._overlap;\n    }\n  }, Base.each(Curve._evaluateMethods, function (name) {\n    var get = name + 'At';\n\n    this[name] = function () {\n      var curve = this.getCurve(),\n          time = this.getTime();\n      return time != null && curve && curve[get](time, true);\n    };\n  }, {\n    preserve: true\n  }), new function () {\n    function insert(locations, loc, merge) {\n      var length = locations.length,\n          l = 0,\n          r = length - 1;\n\n      function search(index, dir) {\n        for (var i = index + dir; i >= -1 && i <= length; i += dir) {\n          var loc2 = locations[(i % length + length) % length];\n          if (!loc.getPoint().isClose(loc2.getPoint(), 1e-7)) break;\n          if (loc.equals(loc2)) return loc2;\n        }\n\n        return null;\n      }\n\n      while (l <= r) {\n        var m = l + r >>> 1,\n            loc2 = locations[m],\n            found;\n\n        if (merge && (found = loc.equals(loc2) ? loc2 : search(m, -1) || search(m, 1))) {\n          if (loc._overlap) {\n            found._overlap = found._intersection._overlap = true;\n          }\n\n          return found;\n        }\n\n        var path1 = loc.getPath(),\n            path2 = loc2.getPath(),\n            diff = path1 !== path2 ? path1._id - path2._id : loc.getIndex() + loc.getTime() - (loc2.getIndex() + loc2.getTime());\n\n        if (diff < 0) {\n          r = m - 1;\n        } else {\n          l = m + 1;\n        }\n      }\n\n      locations.splice(l, 0, loc);\n      return loc;\n    }\n\n    return {\n      statics: {\n        insert: insert,\n        expand: function expand(locations) {\n          var expanded = locations.slice();\n\n          for (var i = locations.length - 1; i >= 0; i--) {\n            insert(expanded, locations[i]._intersection, false);\n          }\n\n          return expanded;\n        }\n      }\n    };\n  }());\n  var PathItem = Item.extend({\n    _class: 'PathItem',\n    _selectBounds: false,\n    _canScaleStroke: true,\n    beans: true,\n    initialize: function PathItem() {},\n    statics: {\n      create: function create(arg) {\n        var data, segments, compound;\n\n        if (Base.isPlainObject(arg)) {\n          segments = arg.segments;\n          data = arg.pathData;\n        } else if (Array.isArray(arg)) {\n          segments = arg;\n        } else if (typeof arg === 'string') {\n          data = arg;\n        }\n\n        if (segments) {\n          var first = segments[0];\n          compound = first && Array.isArray(first[0]);\n        } else if (data) {\n          compound = (data.match(/m/gi) || []).length > 1 || /z\\s*\\S+/i.test(data);\n        }\n\n        var ctor = compound ? CompoundPath : Path;\n        return new ctor(arg);\n      }\n    },\n    _asPathItem: function _asPathItem() {\n      return this;\n    },\n    isClockwise: function isClockwise() {\n      return this.getArea() >= 0;\n    },\n    setClockwise: function setClockwise(clockwise) {\n      if (this.isClockwise() != (clockwise = !!clockwise)) this.reverse();\n    },\n    setPathData: function setPathData(data) {\n      var parts = data && data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n          coords,\n          relative = false,\n          previous,\n          control,\n          current = new Point(),\n          start = new Point();\n\n      function getCoord(index, coord) {\n        var val = +coords[index];\n        if (relative) val += current[coord];\n        return val;\n      }\n\n      function getPoint(index) {\n        return new Point(getCoord(index, 'x'), getCoord(index + 1, 'y'));\n      }\n\n      this.clear();\n\n      for (var i = 0, l = parts && parts.length; i < l; i++) {\n        var part = parts[i],\n            command = part[0],\n            lower = command.toLowerCase();\n        coords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n        var length = coords && coords.length;\n        relative = command === lower;\n        if (previous === 'z' && !/[mz]/.test(lower)) this.moveTo(current);\n\n        switch (lower) {\n          case 'm':\n          case 'l':\n            var move = lower === 'm';\n\n            for (var j = 0; j < length; j += 2) {\n              this[move ? 'moveTo' : 'lineTo'](current = getPoint(j));\n\n              if (move) {\n                start = current;\n                move = false;\n              }\n            }\n\n            control = current;\n            break;\n\n          case 'h':\n          case 'v':\n            var coord = lower === 'h' ? 'x' : 'y';\n            current = current.clone();\n\n            for (var j = 0; j < length; j++) {\n              current[coord] = getCoord(j, coord);\n              this.lineTo(current);\n            }\n\n            control = current;\n            break;\n\n          case 'c':\n            for (var j = 0; j < length; j += 6) {\n              this.cubicCurveTo(getPoint(j), control = getPoint(j + 2), current = getPoint(j + 4));\n            }\n\n            break;\n\n          case 's':\n            for (var j = 0; j < length; j += 4) {\n              this.cubicCurveTo(/[cs]/.test(previous) ? current.multiply(2).subtract(control) : current, control = getPoint(j), current = getPoint(j + 2));\n              previous = lower;\n            }\n\n            break;\n\n          case 'q':\n            for (var j = 0; j < length; j += 4) {\n              this.quadraticCurveTo(control = getPoint(j), current = getPoint(j + 2));\n            }\n\n            break;\n\n          case 't':\n            for (var j = 0; j < length; j += 2) {\n              this.quadraticCurveTo(control = /[qt]/.test(previous) ? current.multiply(2).subtract(control) : current, current = getPoint(j));\n              previous = lower;\n            }\n\n            break;\n\n          case 'a':\n            for (var j = 0; j < length; j += 7) {\n              this.arcTo(current = getPoint(j + 5), new Size(+coords[j], +coords[j + 1]), +coords[j + 2], +coords[j + 4], +coords[j + 3]);\n            }\n\n            break;\n\n          case 'z':\n            this.closePath(1e-12);\n            current = start;\n            break;\n        }\n\n        previous = lower;\n      }\n    },\n    _canComposite: function _canComposite() {\n      return !(this.hasFill() && this.hasStroke());\n    },\n    _contains: function _contains(point) {\n      var winding = point.isInside(this.getBounds({\n        internal: true,\n        handle: true\n      })) ? this._getWinding(point) : {};\n      return winding.onPath || !!(this.getFillRule() === 'evenodd' ? winding.windingL & 1 || winding.windingR & 1 : winding.winding);\n    },\n    getIntersections: function getIntersections(path, include, _matrix, _returnFirst) {\n      var self = this === path || !path,\n          matrix1 = this._matrix._orNullIfIdentity(),\n          matrix2 = self ? matrix1 : (_matrix || path._matrix)._orNullIfIdentity();\n\n      return self || this.getBounds(matrix1).intersects(path.getBounds(matrix2), 1e-12) ? Curve.getIntersections(this.getCurves(), !self && path.getCurves(), include, matrix1, matrix2, _returnFirst) : [];\n    },\n    getCrossings: function getCrossings(path) {\n      return this.getIntersections(path, function (inter) {\n        return inter.isCrossing();\n      });\n    },\n    getNearestLocation: function getNearestLocation() {\n      var point = Point.read(arguments),\n          curves = this.getCurves(),\n          minDist = Infinity,\n          minLoc = null;\n\n      for (var i = 0, l = curves.length; i < l; i++) {\n        var loc = curves[i].getNearestLocation(point);\n\n        if (loc._distance < minDist) {\n          minDist = loc._distance;\n          minLoc = loc;\n        }\n      }\n\n      return minLoc;\n    },\n    getNearestPoint: function getNearestPoint() {\n      var loc = this.getNearestLocation.apply(this, arguments);\n      return loc ? loc.getPoint() : loc;\n    },\n    interpolate: function interpolate(from, to, factor) {\n      var isPath = !this._children,\n          name = isPath ? '_segments' : '_children',\n          itemsFrom = from[name],\n          itemsTo = to[name],\n          items = this[name];\n\n      if (!itemsFrom || !itemsTo || itemsFrom.length !== itemsTo.length) {\n        throw new Error('Invalid operands in interpolate() call: ' + from + ', ' + to);\n      }\n\n      var current = items.length,\n          length = itemsTo.length;\n\n      if (current < length) {\n        var ctor = isPath ? Segment : Path;\n\n        for (var i = current; i < length; i++) {\n          this.add(new ctor());\n        }\n      } else if (current > length) {\n        this[isPath ? 'removeSegments' : 'removeChildren'](length, current);\n      }\n\n      for (var i = 0; i < length; i++) {\n        items[i].interpolate(itemsFrom[i], itemsTo[i], factor);\n      }\n\n      if (isPath) {\n        this.setClosed(from._closed);\n\n        this._changed(9);\n      }\n    },\n    compare: function compare(path) {\n      var ok = false;\n\n      if (path) {\n        var paths1 = this._children || [this],\n            paths2 = path._children ? path._children.slice() : [path],\n            length1 = paths1.length,\n            length2 = paths2.length,\n            matched = [],\n            count = 0;\n        ok = true;\n        var boundsOverlaps = CollisionDetection.findBoundsOverlaps(paths1, paths2, Numerical.GEOMETRIC_EPSILON);\n\n        for (var i1 = length1 - 1; i1 >= 0 && ok; i1--) {\n          var path1 = paths1[i1];\n          ok = false;\n          var pathBoundsOverlaps = boundsOverlaps[i1];\n\n          if (pathBoundsOverlaps) {\n            for (var i2 = pathBoundsOverlaps.length - 1; i2 >= 0 && !ok; i2--) {\n              if (path1.compare(paths2[pathBoundsOverlaps[i2]])) {\n                if (!matched[pathBoundsOverlaps[i2]]) {\n                  matched[pathBoundsOverlaps[i2]] = true;\n                  count++;\n                }\n\n                ok = true;\n              }\n            }\n          }\n        }\n\n        ok = ok && count === length2;\n      }\n\n      return ok;\n    }\n  });\n  var Path = PathItem.extend({\n    _class: 'Path',\n    _serializeFields: {\n      segments: [],\n      closed: false\n    },\n    initialize: function Path(arg) {\n      this._closed = false;\n      this._segments = [];\n      this._version = 0;\n      var args = arguments,\n          segments = Array.isArray(arg) ? typeof arg[0] === 'object' ? arg : args : arg && arg.size === undefined && (arg.x !== undefined || arg.point !== undefined) ? args : null;\n\n      if (segments && segments.length > 0) {\n        this.setSegments(segments);\n      } else {\n        this._curves = undefined;\n        this._segmentSelection = 0;\n\n        if (!segments && typeof arg === 'string') {\n          this.setPathData(arg);\n          arg = null;\n        }\n      }\n\n      this._initialize(!segments && arg);\n    },\n    _equals: function _equals(item) {\n      return this._closed === item._closed && Base.equals(this._segments, item._segments);\n    },\n    copyContent: function copyContent(source) {\n      this.setSegments(source._segments);\n      this._closed = source._closed;\n    },\n    _changed: function _changed(flags) {\n      _changed.base.call(this, flags);\n\n      if (flags & 8) {\n        this._length = this._area = undefined;\n\n        if (flags & 32) {\n          this._version++;\n        } else if (this._curves) {\n          for (var i = 0, l = this._curves.length; i < l; i++) {\n            this._curves[i]._changed();\n          }\n        }\n      } else if (flags & 64) {\n        this._bounds = undefined;\n      }\n    },\n    getStyle: function getStyle() {\n      var parent = this._parent;\n      return (parent instanceof CompoundPath ? parent : this)._style;\n    },\n    getSegments: function getSegments() {\n      return this._segments;\n    },\n    setSegments: function setSegments(segments) {\n      var fullySelected = this.isFullySelected(),\n          length = segments && segments.length;\n      this._segments.length = 0;\n      this._segmentSelection = 0;\n      this._curves = undefined;\n\n      if (length) {\n        var last = segments[length - 1];\n\n        if (typeof last === 'boolean') {\n          this.setClosed(last);\n          length--;\n        }\n\n        this._add(Segment.readList(segments, 0, {}, length));\n      }\n\n      if (fullySelected) this.setFullySelected(true);\n    },\n    getFirstSegment: function getFirstSegment() {\n      return this._segments[0];\n    },\n    getLastSegment: function getLastSegment() {\n      return this._segments[this._segments.length - 1];\n    },\n    getCurves: function getCurves() {\n      var curves = this._curves,\n          segments = this._segments;\n\n      if (!curves) {\n        var length = this._countCurves();\n\n        curves = this._curves = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          curves[i] = new Curve(this, segments[i], segments[i + 1] || segments[0]);\n        }\n      }\n\n      return curves;\n    },\n    getFirstCurve: function getFirstCurve() {\n      return this.getCurves()[0];\n    },\n    getLastCurve: function getLastCurve() {\n      var curves = this.getCurves();\n      return curves[curves.length - 1];\n    },\n    isClosed: function isClosed() {\n      return this._closed;\n    },\n    setClosed: function setClosed(closed) {\n      if (this._closed != (closed = !!closed)) {\n        this._closed = closed;\n\n        if (this._curves) {\n          var length = this._curves.length = this._countCurves();\n\n          if (closed) this._curves[length - 1] = new Curve(this, this._segments[length - 1], this._segments[0]);\n        }\n\n        this._changed(41);\n      }\n    }\n  }, {\n    beans: true,\n    getPathData: function getPathData(_matrix, _precision) {\n      var segments = this._segments,\n          length = segments.length,\n          f = new Formatter(_precision),\n          coords = new Array(6),\n          first = true,\n          curX,\n          curY,\n          prevX,\n          prevY,\n          inX,\n          inY,\n          outX,\n          outY,\n          parts = [];\n\n      function addSegment(segment, skipLine) {\n        segment._transformCoordinates(_matrix, coords);\n\n        curX = coords[0];\n        curY = coords[1];\n\n        if (first) {\n          parts.push('M' + f.pair(curX, curY));\n          first = false;\n        } else {\n          inX = coords[2];\n          inY = coords[3];\n\n          if (inX === curX && inY === curY && outX === prevX && outY === prevY) {\n            if (!skipLine) {\n              var dx = curX - prevX,\n                  dy = curY - prevY;\n              parts.push(dx === 0 ? 'v' + f.number(dy) : dy === 0 ? 'h' + f.number(dx) : 'l' + f.pair(dx, dy));\n            }\n          } else {\n            parts.push('c' + f.pair(outX - prevX, outY - prevY) + ' ' + f.pair(inX - prevX, inY - prevY) + ' ' + f.pair(curX - prevX, curY - prevY));\n          }\n        }\n\n        prevX = curX;\n        prevY = curY;\n        outX = coords[4];\n        outY = coords[5];\n      }\n\n      if (!length) return '';\n\n      for (var i = 0; i < length; i++) {\n        addSegment(segments[i]);\n      }\n\n      if (this._closed && length > 0) {\n        addSegment(segments[0], true);\n        parts.push('z');\n      }\n\n      return parts.join('');\n    },\n    isEmpty: function isEmpty() {\n      return !this._segments.length;\n    },\n    _transformContent: function _transformContent(matrix) {\n      var segments = this._segments,\n          coords = new Array(6);\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        segments[i]._transformCoordinates(matrix, coords, true);\n      }\n\n      return true;\n    },\n    _add: function _add(segs, index) {\n      var segments = this._segments,\n          curves = this._curves,\n          amount = segs.length,\n          append = index == null,\n          index = append ? segments.length : index;\n\n      for (var i = 0; i < amount; i++) {\n        var segment = segs[i];\n        if (segment._path) segment = segs[i] = segment.clone();\n        segment._path = this;\n        segment._index = index + i;\n        if (segment._selection) this._updateSelection(segment, 0, segment._selection);\n      }\n\n      if (append) {\n        Base.push(segments, segs);\n      } else {\n        segments.splice.apply(segments, [index, 0].concat(segs));\n\n        for (var i = index + amount, l = segments.length; i < l; i++) {\n          segments[i]._index = i;\n        }\n      }\n\n      if (curves) {\n        var total = this._countCurves(),\n            start = index > 0 && index + amount - 1 === total ? index - 1 : index,\n            insert = start,\n            end = Math.min(start + amount, total);\n\n        if (segs._curves) {\n          curves.splice.apply(curves, [start, 0].concat(segs._curves));\n          insert += segs._curves.length;\n        }\n\n        for (var i = insert; i < end; i++) {\n          curves.splice(i, 0, new Curve(this, null, null));\n        }\n\n        this._adjustCurves(start, end);\n      }\n\n      this._changed(41);\n\n      return segs;\n    },\n    _adjustCurves: function _adjustCurves(start, end) {\n      var segments = this._segments,\n          curves = this._curves,\n          curve;\n\n      for (var i = start; i < end; i++) {\n        curve = curves[i];\n        curve._path = this;\n        curve._segment1 = segments[i];\n        curve._segment2 = segments[i + 1] || segments[0];\n\n        curve._changed();\n      }\n\n      if (curve = curves[this._closed && !start ? segments.length - 1 : start - 1]) {\n        curve._segment2 = segments[start] || segments[0];\n\n        curve._changed();\n      }\n\n      if (curve = curves[end]) {\n        curve._segment1 = segments[end];\n\n        curve._changed();\n      }\n    },\n    _countCurves: function _countCurves() {\n      var length = this._segments.length;\n      return !this._closed && length > 0 ? length - 1 : length;\n    },\n    add: function add(segment1) {\n      var args = arguments;\n      return args.length > 1 && typeof segment1 !== 'number' ? this._add(Segment.readList(args)) : this._add([Segment.read(args)])[0];\n    },\n    insert: function insert(index, segment1) {\n      var args = arguments;\n      return args.length > 2 && typeof segment1 !== 'number' ? this._add(Segment.readList(args, 1), index) : this._add([Segment.read(args, 1)], index)[0];\n    },\n    addSegment: function addSegment() {\n      return this._add([Segment.read(arguments)])[0];\n    },\n    insertSegment: function insertSegment(index) {\n      return this._add([Segment.read(arguments, 1)], index)[0];\n    },\n    addSegments: function addSegments(segments) {\n      return this._add(Segment.readList(segments));\n    },\n    insertSegments: function insertSegments(index, segments) {\n      return this._add(Segment.readList(segments), index);\n    },\n    removeSegment: function removeSegment(index) {\n      return this.removeSegments(index, index + 1)[0] || null;\n    },\n    removeSegments: function removeSegments(start, end, _includeCurves) {\n      start = start || 0;\n      end = Base.pick(end, this._segments.length);\n      var segments = this._segments,\n          curves = this._curves,\n          count = segments.length,\n          removed = segments.splice(start, end - start),\n          amount = removed.length;\n      if (!amount) return removed;\n\n      for (var i = 0; i < amount; i++) {\n        var segment = removed[i];\n        if (segment._selection) this._updateSelection(segment, segment._selection, 0);\n        segment._index = segment._path = null;\n      }\n\n      for (var i = start, l = segments.length; i < l; i++) {\n        segments[i]._index = i;\n      }\n\n      if (curves) {\n        var index = start > 0 && end === count + (this._closed ? 1 : 0) ? start - 1 : start,\n            curves = curves.splice(index, amount);\n\n        for (var i = curves.length - 1; i >= 0; i--) {\n          curves[i]._path = null;\n        }\n\n        if (_includeCurves) removed._curves = curves.slice(1);\n\n        this._adjustCurves(index, index);\n      }\n\n      this._changed(41);\n\n      return removed;\n    },\n    clear: '#removeSegments',\n    hasHandles: function hasHandles() {\n      var segments = this._segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        if (segments[i].hasHandles()) return true;\n      }\n\n      return false;\n    },\n    clearHandles: function clearHandles() {\n      var segments = this._segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        segments[i].clearHandles();\n      }\n    },\n    getLength: function getLength() {\n      if (this._length == null) {\n        var curves = this.getCurves(),\n            length = 0;\n\n        for (var i = 0, l = curves.length; i < l; i++) {\n          length += curves[i].getLength();\n        }\n\n        this._length = length;\n      }\n\n      return this._length;\n    },\n    getArea: function getArea() {\n      var area = this._area;\n\n      if (area == null) {\n        var segments = this._segments,\n            closed = this._closed;\n        area = 0;\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          var last = i + 1 === l;\n          area += Curve.getArea(Curve.getValues(segments[i], segments[last ? 0 : i + 1], null, last && !closed));\n        }\n\n        this._area = area;\n      }\n\n      return area;\n    },\n    isFullySelected: function isFullySelected() {\n      var length = this._segments.length;\n      return this.isSelected() && length > 0 && this._segmentSelection === length * 7;\n    },\n    setFullySelected: function setFullySelected(selected) {\n      if (selected) this._selectSegments(true);\n      this.setSelected(selected);\n    },\n    setSelection: function setSelection(selection) {\n      if (!(selection & 1)) this._selectSegments(false);\n      setSelection.base.call(this, selection);\n    },\n    _selectSegments: function _selectSegments(selected) {\n      var segments = this._segments,\n          length = segments.length,\n          selection = selected ? 7 : 0;\n      this._segmentSelection = selection * length;\n\n      for (var i = 0; i < length; i++) {\n        segments[i]._selection = selection;\n      }\n    },\n    _updateSelection: function _updateSelection(segment, oldSelection, newSelection) {\n      segment._selection = newSelection;\n      var selection = this._segmentSelection += newSelection - oldSelection;\n      if (selection > 0) this.setSelected(true);\n    },\n    divideAt: function divideAt(location) {\n      var loc = this.getLocationAt(location),\n          curve;\n      return loc && (curve = loc.getCurve().divideAt(loc.getCurveOffset())) ? curve._segment1 : null;\n    },\n    splitAt: function splitAt(location) {\n      var loc = this.getLocationAt(location),\n          index = loc && loc.index,\n          time = loc && loc.time,\n          tMin = 1e-8,\n          tMax = 1 - tMin;\n\n      if (time > tMax) {\n        index++;\n        time = 0;\n      }\n\n      var curves = this.getCurves();\n\n      if (index >= 0 && index < curves.length) {\n        if (time >= tMin) {\n          curves[index++].divideAtTime(time);\n        }\n\n        var segs = this.removeSegments(index, this._segments.length, true),\n            path;\n\n        if (this._closed) {\n          this.setClosed(false);\n          path = this;\n        } else {\n          path = new Path(Item.NO_INSERT);\n          path.insertAbove(this);\n          path.copyAttributes(this);\n        }\n\n        path._add(segs, 0);\n\n        this.addSegment(segs[0]);\n        return path;\n      }\n\n      return null;\n    },\n    split: function split(index, time) {\n      var curve,\n          location = time === undefined ? index : (curve = this.getCurves()[index]) && curve.getLocationAtTime(time);\n      return location != null ? this.splitAt(location) : null;\n    },\n    join: function join(path, tolerance) {\n      var epsilon = tolerance || 0;\n\n      if (path && path !== this) {\n        var segments = path._segments,\n            last1 = this.getLastSegment(),\n            last2 = path.getLastSegment();\n        if (!last2) return this;\n        if (last1 && last1._point.isClose(last2._point, epsilon)) path.reverse();\n        var first2 = path.getFirstSegment();\n\n        if (last1 && last1._point.isClose(first2._point, epsilon)) {\n          last1.setHandleOut(first2._handleOut);\n\n          this._add(segments.slice(1));\n        } else {\n          var first1 = this.getFirstSegment();\n          if (first1 && first1._point.isClose(first2._point, epsilon)) path.reverse();\n          last2 = path.getLastSegment();\n\n          if (first1 && first1._point.isClose(last2._point, epsilon)) {\n            first1.setHandleIn(last2._handleIn);\n\n            this._add(segments.slice(0, segments.length - 1), 0);\n          } else {\n            this._add(segments.slice());\n          }\n        }\n\n        if (path._closed) this._add([segments[0]]);\n        path.remove();\n      }\n\n      var first = this.getFirstSegment(),\n          last = this.getLastSegment();\n\n      if (first !== last && first._point.isClose(last._point, epsilon)) {\n        first.setHandleIn(last._handleIn);\n        last.remove();\n        this.setClosed(true);\n      }\n\n      return this;\n    },\n    reduce: function reduce(options) {\n      var curves = this.getCurves(),\n          simplify = options && options.simplify,\n          tolerance = simplify ? 1e-7 : 0;\n\n      for (var i = curves.length - 1; i >= 0; i--) {\n        var curve = curves[i];\n        if (!curve.hasHandles() && (!curve.hasLength(tolerance) || simplify && curve.isCollinear(curve.getNext()))) curve.remove();\n      }\n\n      return this;\n    },\n    reverse: function reverse() {\n      this._segments.reverse();\n\n      for (var i = 0, l = this._segments.length; i < l; i++) {\n        var segment = this._segments[i];\n        var handleIn = segment._handleIn;\n        segment._handleIn = segment._handleOut;\n        segment._handleOut = handleIn;\n        segment._index = i;\n      }\n\n      this._curves = null;\n\n      this._changed(9);\n    },\n    flatten: function flatten(flatness) {\n      var flattener = new PathFlattener(this, flatness || 0.25, 256, true),\n          parts = flattener.parts,\n          length = parts.length,\n          segments = [];\n\n      for (var i = 0; i < length; i++) {\n        segments.push(new Segment(parts[i].curve.slice(0, 2)));\n      }\n\n      if (!this._closed && length > 0) {\n        segments.push(new Segment(parts[length - 1].curve.slice(6)));\n      }\n\n      this.setSegments(segments);\n    },\n    simplify: function simplify(tolerance) {\n      var segments = new PathFitter(this).fit(tolerance || 2.5);\n      if (segments) this.setSegments(segments);\n      return !!segments;\n    },\n    smooth: function smooth(options) {\n      var that = this,\n          opts = options || {},\n          type = opts.type || 'asymmetric',\n          segments = this._segments,\n          length = segments.length,\n          closed = this._closed;\n\n      function getIndex(value, _default) {\n        var index = value && value.index;\n\n        if (index != null) {\n          var path = value.path;\n          if (path && path !== that) throw new Error(value._class + ' ' + index + ' of ' + path + ' is not part of ' + that);\n          if (_default && value instanceof Curve) index++;\n        } else {\n          index = typeof value === 'number' ? value : _default;\n        }\n\n        return Math.min(index < 0 && closed ? index % length : index < 0 ? index + length : index, length - 1);\n      }\n\n      var loop = closed && opts.from === undefined && opts.to === undefined,\n          from = getIndex(opts.from, 0),\n          to = getIndex(opts.to, length - 1);\n\n      if (from > to) {\n        if (closed) {\n          from -= length;\n        } else {\n          var tmp = from;\n          from = to;\n          to = tmp;\n        }\n      }\n\n      if (/^(?:asymmetric|continuous)$/.test(type)) {\n        var asymmetric = type === 'asymmetric',\n            min = Math.min,\n            amount = to - from + 1,\n            n = amount - 1,\n            padding = loop ? min(amount, 4) : 1,\n            paddingLeft = padding,\n            paddingRight = padding,\n            knots = [];\n\n        if (!closed) {\n          paddingLeft = min(1, from);\n          paddingRight = min(1, length - to - 1);\n        }\n\n        n += paddingLeft + paddingRight;\n        if (n <= 1) return;\n\n        for (var i = 0, j = from - paddingLeft; i <= n; i++, j++) {\n          knots[i] = segments[(j < 0 ? j + length : j) % length]._point;\n        }\n\n        var x = knots[0]._x + 2 * knots[1]._x,\n            y = knots[0]._y + 2 * knots[1]._y,\n            f = 2,\n            n_1 = n - 1,\n            rx = [x],\n            ry = [y],\n            rf = [f],\n            px = [],\n            py = [];\n\n        for (var i = 1; i < n; i++) {\n          var internal = i < n_1,\n              a = internal ? 1 : asymmetric ? 1 : 2,\n              b = internal ? 4 : asymmetric ? 2 : 7,\n              u = internal ? 4 : asymmetric ? 3 : 8,\n              v = internal ? 2 : asymmetric ? 0 : 1,\n              m = a / f;\n          f = rf[i] = b - m;\n          x = rx[i] = u * knots[i]._x + v * knots[i + 1]._x - m * x;\n          y = ry[i] = u * knots[i]._y + v * knots[i + 1]._y - m * y;\n        }\n\n        px[n_1] = rx[n_1] / rf[n_1];\n        py[n_1] = ry[n_1] / rf[n_1];\n\n        for (var i = n - 2; i >= 0; i--) {\n          px[i] = (rx[i] - px[i + 1]) / rf[i];\n          py[i] = (ry[i] - py[i + 1]) / rf[i];\n        }\n\n        px[n] = (3 * knots[n]._x - px[n_1]) / 2;\n        py[n] = (3 * knots[n]._y - py[n_1]) / 2;\n\n        for (var i = paddingLeft, max = n - paddingRight, j = from; i <= max; i++, j++) {\n          var segment = segments[j < 0 ? j + length : j],\n              pt = segment._point,\n              hx = px[i] - pt._x,\n              hy = py[i] - pt._y;\n          if (loop || i < max) segment.setHandleOut(hx, hy);\n          if (loop || i > paddingLeft) segment.setHandleIn(-hx, -hy);\n        }\n      } else {\n        for (var i = from; i <= to; i++) {\n          segments[i < 0 ? i + length : i].smooth(opts, !loop && i === from, !loop && i === to);\n        }\n      }\n    },\n    toShape: function toShape(insert) {\n      if (!this._closed) return null;\n      var segments = this._segments,\n          type,\n          size,\n          radius,\n          topCenter;\n\n      function isCollinear(i, j) {\n        var seg1 = segments[i],\n            seg2 = seg1.getNext(),\n            seg3 = segments[j],\n            seg4 = seg3.getNext();\n        return seg1._handleOut.isZero() && seg2._handleIn.isZero() && seg3._handleOut.isZero() && seg4._handleIn.isZero() && seg2._point.subtract(seg1._point).isCollinear(seg4._point.subtract(seg3._point));\n      }\n\n      function isOrthogonal(i) {\n        var seg2 = segments[i],\n            seg1 = seg2.getPrevious(),\n            seg3 = seg2.getNext();\n        return seg1._handleOut.isZero() && seg2._handleIn.isZero() && seg2._handleOut.isZero() && seg3._handleIn.isZero() && seg2._point.subtract(seg1._point).isOrthogonal(seg3._point.subtract(seg2._point));\n      }\n\n      function isArc(i) {\n        var seg1 = segments[i],\n            seg2 = seg1.getNext(),\n            handle1 = seg1._handleOut,\n            handle2 = seg2._handleIn,\n            kappa = 0.5522847498307936;\n\n        if (handle1.isOrthogonal(handle2)) {\n          var pt1 = seg1._point,\n              pt2 = seg2._point,\n              corner = new Line(pt1, handle1, true).intersect(new Line(pt2, handle2, true), true);\n          return corner && Numerical.isZero(handle1.getLength() / corner.subtract(pt1).getLength() - kappa) && Numerical.isZero(handle2.getLength() / corner.subtract(pt2).getLength() - kappa);\n        }\n\n        return false;\n      }\n\n      function getDistance(i, j) {\n        return segments[i]._point.getDistance(segments[j]._point);\n      }\n\n      if (!this.hasHandles() && segments.length === 4 && isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n        type = Shape.Rectangle;\n        size = new Size(getDistance(0, 3), getDistance(0, 1));\n        topCenter = segments[1]._point.add(segments[2]._point).divide(2);\n      } else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4) && isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n        type = Shape.Rectangle;\n        size = new Size(getDistance(1, 6), getDistance(0, 3));\n        radius = size.subtract(new Size(getDistance(0, 7), getDistance(1, 2))).divide(2);\n        topCenter = segments[3]._point.add(segments[4]._point).divide(2);\n      } else if (segments.length === 4 && isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n        if (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n          type = Shape.Circle;\n          radius = getDistance(0, 2) / 2;\n        } else {\n          type = Shape.Ellipse;\n          radius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n        }\n\n        topCenter = segments[1]._point;\n      }\n\n      if (type) {\n        var center = this.getPosition(true),\n            shape = new type({\n          center: center,\n          size: size,\n          radius: radius,\n          insert: false\n        });\n        shape.copyAttributes(this, true);\n\n        shape._matrix.prepend(this._matrix);\n\n        shape.rotate(topCenter.subtract(center).getAngle() + 90);\n        if (insert === undefined || insert) shape.insertAbove(this);\n        return shape;\n      }\n\n      return null;\n    },\n    toPath: '#clone',\n    compare: function compare(path) {\n      if (!path || path instanceof CompoundPath) return compare.base.call(this, path);\n      var curves1 = this.getCurves(),\n          curves2 = path.getCurves(),\n          length1 = curves1.length,\n          length2 = curves2.length;\n\n      if (!length1 || !length2) {\n        return length1 == length2;\n      }\n\n      var v1 = curves1[0].getValues(),\n          values2 = [],\n          pos1 = 0,\n          pos2,\n          end1 = 0,\n          end2;\n\n      for (var i = 0; i < length2; i++) {\n        var v2 = curves2[i].getValues();\n        values2.push(v2);\n        var overlaps = Curve.getOverlaps(v1, v2);\n\n        if (overlaps) {\n          pos2 = !i && overlaps[0][0] > 0 ? length2 - 1 : i;\n          end2 = overlaps[0][1];\n          break;\n        }\n      }\n\n      var abs = Math.abs,\n          epsilon = 1e-8,\n          v2 = values2[pos2],\n          start2;\n\n      while (v1 && v2) {\n        var overlaps = Curve.getOverlaps(v1, v2);\n\n        if (overlaps) {\n          var t1 = overlaps[0][0];\n\n          if (abs(t1 - end1) < epsilon) {\n            end1 = overlaps[1][0];\n\n            if (end1 === 1) {\n              v1 = ++pos1 < length1 ? curves1[pos1].getValues() : null;\n              end1 = 0;\n            }\n\n            var t2 = overlaps[0][1];\n\n            if (abs(t2 - end2) < epsilon) {\n              if (!start2) start2 = [pos2, t2];\n              end2 = overlaps[1][1];\n\n              if (end2 === 1) {\n                if (++pos2 >= length2) pos2 = 0;\n                v2 = values2[pos2] || curves2[pos2].getValues();\n                end2 = 0;\n              }\n\n              if (!v1) {\n                return start2[0] === pos2 && start2[1] === end2;\n              }\n\n              continue;\n            }\n          }\n        }\n\n        break;\n      }\n\n      return false;\n    },\n    _hitTestSelf: function _hitTestSelf(point, options, viewMatrix, strokeMatrix) {\n      var that = this,\n          style = this.getStyle(),\n          segments = this._segments,\n          numSegments = segments.length,\n          closed = this._closed,\n          tolerancePadding = options._tolerancePadding,\n          strokePadding = tolerancePadding,\n          join,\n          cap,\n          miterLimit,\n          area,\n          loc,\n          res,\n          hitStroke = options.stroke && style.hasStroke(),\n          hitFill = options.fill && style.hasFill(),\n          hitCurves = options.curves,\n          strokeRadius = hitStroke ? style.getStrokeWidth() / 2 : hitFill && options.tolerance > 0 || hitCurves ? 0 : null;\n\n      if (strokeRadius !== null) {\n        if (strokeRadius > 0) {\n          join = style.getStrokeJoin();\n          cap = style.getStrokeCap();\n          miterLimit = style.getMiterLimit();\n          strokePadding = strokePadding.add(Path._getStrokePadding(strokeRadius, strokeMatrix));\n        } else {\n          join = cap = 'round';\n        }\n      }\n\n      function isCloseEnough(pt, padding) {\n        return point.subtract(pt).divide(padding).length <= 1;\n      }\n\n      function checkSegmentPoint(seg, pt, name) {\n        if (!options.selected || pt.isSelected()) {\n          var anchor = seg._point;\n          if (pt !== anchor) pt = pt.add(anchor);\n\n          if (isCloseEnough(pt, strokePadding)) {\n            return new HitResult(name, that, {\n              segment: seg,\n              point: pt\n            });\n          }\n        }\n      }\n\n      function checkSegmentPoints(seg, ends) {\n        return (ends || options.segments) && checkSegmentPoint(seg, seg._point, 'segment') || !ends && options.handles && (checkSegmentPoint(seg, seg._handleIn, 'handle-in') || checkSegmentPoint(seg, seg._handleOut, 'handle-out'));\n      }\n\n      function addToArea(point) {\n        area.add(point);\n      }\n\n      function checkSegmentStroke(segment) {\n        var isJoin = closed || segment._index > 0 && segment._index < numSegments - 1;\n\n        if ((isJoin ? join : cap) === 'round') {\n          return isCloseEnough(segment._point, strokePadding);\n        } else {\n          area = new Path({\n            internal: true,\n            closed: true\n          });\n\n          if (isJoin) {\n            if (!segment.isSmooth()) {\n              Path._addBevelJoin(segment, join, strokeRadius, miterLimit, null, strokeMatrix, addToArea, true);\n            }\n          } else if (cap === 'square') {\n            Path._addSquareCap(segment, cap, strokeRadius, null, strokeMatrix, addToArea, true);\n          }\n\n          if (!area.isEmpty()) {\n            var loc;\n            return area.contains(point) || (loc = area.getNearestLocation(point)) && isCloseEnough(loc.getPoint(), tolerancePadding);\n          }\n        }\n      }\n\n      if (options.ends && !options.segments && !closed) {\n        if (res = checkSegmentPoints(segments[0], true) || checkSegmentPoints(segments[numSegments - 1], true)) return res;\n      } else if (options.segments || options.handles) {\n        for (var i = 0; i < numSegments; i++) {\n          if (res = checkSegmentPoints(segments[i])) return res;\n        }\n      }\n\n      if (strokeRadius !== null) {\n        loc = this.getNearestLocation(point);\n\n        if (loc) {\n          var time = loc.getTime();\n\n          if (time === 0 || time === 1 && numSegments > 1) {\n            if (!checkSegmentStroke(loc.getSegment())) loc = null;\n          } else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n            loc = null;\n          }\n        }\n\n        if (!loc && join === 'miter' && numSegments > 1) {\n          for (var i = 0; i < numSegments; i++) {\n            var segment = segments[i];\n\n            if (point.getDistance(segment._point) <= miterLimit * strokeRadius && checkSegmentStroke(segment)) {\n              loc = segment.getLocation();\n              break;\n            }\n          }\n        }\n      }\n\n      return !loc && hitFill && this._contains(point) || loc && !hitStroke && !hitCurves ? new HitResult('fill', this) : loc ? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n        location: loc,\n        point: loc.getPoint()\n      }) : null;\n    }\n  }, Base.each(Curve._evaluateMethods, function (name) {\n    this[name + 'At'] = function (offset) {\n      var loc = this.getLocationAt(offset);\n      return loc && loc[name]();\n    };\n  }, {\n    beans: false,\n    getLocationOf: function getLocationOf() {\n      var point = Point.read(arguments),\n          curves = this.getCurves();\n\n      for (var i = 0, l = curves.length; i < l; i++) {\n        var loc = curves[i].getLocationOf(point);\n        if (loc) return loc;\n      }\n\n      return null;\n    },\n    getOffsetOf: function getOffsetOf() {\n      var loc = this.getLocationOf.apply(this, arguments);\n      return loc ? loc.getOffset() : null;\n    },\n    getLocationAt: function getLocationAt(offset) {\n      if (typeof offset === 'number') {\n        var curves = this.getCurves(),\n            length = 0;\n\n        for (var i = 0, l = curves.length; i < l; i++) {\n          var start = length,\n              curve = curves[i];\n          length += curve.getLength();\n\n          if (length > offset) {\n            return curve.getLocationAt(offset - start);\n          }\n        }\n\n        if (curves.length > 0 && offset <= this.getLength()) {\n          return new CurveLocation(curves[curves.length - 1], 1);\n        }\n      } else if (offset && offset.getPath && offset.getPath() === this) {\n        return offset;\n      }\n\n      return null;\n    },\n    getOffsetsWithTangent: function getOffsetsWithTangent() {\n      var tangent = Point.read(arguments);\n\n      if (tangent.isZero()) {\n        return [];\n      }\n\n      var offsets = [];\n      var curveStart = 0;\n      var curves = this.getCurves();\n\n      for (var i = 0, l = curves.length; i < l; i++) {\n        var curve = curves[i];\n        var curveTimes = curve.getTimesWithTangent(tangent);\n\n        for (var j = 0, m = curveTimes.length; j < m; j++) {\n          var offset = curveStart + curve.getOffsetAtTime(curveTimes[j]);\n\n          if (offsets.indexOf(offset) < 0) {\n            offsets.push(offset);\n          }\n        }\n\n        curveStart += curve.length;\n      }\n\n      return offsets;\n    }\n  }), new function () {\n    function drawHandles(ctx, segments, matrix, size) {\n      if (size <= 0) return;\n      var half = size / 2,\n          miniSize = size - 2,\n          miniHalf = half - 1,\n          coords = new Array(6),\n          pX,\n          pY;\n\n      function drawHandle(index) {\n        var hX = coords[index],\n            hY = coords[index + 1];\n\n        if (pX != hX || pY != hY) {\n          ctx.beginPath();\n          ctx.moveTo(pX, pY);\n          ctx.lineTo(hX, hY);\n          ctx.stroke();\n          ctx.beginPath();\n          ctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n          ctx.fill();\n        }\n      }\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i],\n            selection = segment._selection;\n\n        segment._transformCoordinates(matrix, coords);\n\n        pX = coords[0];\n        pY = coords[1];\n        if (selection & 2) drawHandle(2);\n        if (selection & 4) drawHandle(4);\n        ctx.fillRect(pX - half, pY - half, size, size);\n\n        if (miniSize > 0 && !(selection & 1)) {\n          var fillStyle = ctx.fillStyle;\n          ctx.fillStyle = '#ffffff';\n          ctx.fillRect(pX - miniHalf, pY - miniHalf, miniSize, miniSize);\n          ctx.fillStyle = fillStyle;\n        }\n      }\n    }\n\n    function drawSegments(ctx, path, matrix) {\n      var segments = path._segments,\n          length = segments.length,\n          coords = new Array(6),\n          first = true,\n          curX,\n          curY,\n          prevX,\n          prevY,\n          inX,\n          inY,\n          outX,\n          outY;\n\n      function drawSegment(segment) {\n        if (matrix) {\n          segment._transformCoordinates(matrix, coords);\n\n          curX = coords[0];\n          curY = coords[1];\n        } else {\n          var point = segment._point;\n          curX = point._x;\n          curY = point._y;\n        }\n\n        if (first) {\n          ctx.moveTo(curX, curY);\n          first = false;\n        } else {\n          if (matrix) {\n            inX = coords[2];\n            inY = coords[3];\n          } else {\n            var handle = segment._handleIn;\n            inX = curX + handle._x;\n            inY = curY + handle._y;\n          }\n\n          if (inX === curX && inY === curY && outX === prevX && outY === prevY) {\n            ctx.lineTo(curX, curY);\n          } else {\n            ctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n          }\n        }\n\n        prevX = curX;\n        prevY = curY;\n\n        if (matrix) {\n          outX = coords[4];\n          outY = coords[5];\n        } else {\n          var handle = segment._handleOut;\n          outX = prevX + handle._x;\n          outY = prevY + handle._y;\n        }\n      }\n\n      for (var i = 0; i < length; i++) {\n        drawSegment(segments[i]);\n      }\n\n      if (path._closed && length > 0) drawSegment(segments[0]);\n    }\n\n    return {\n      _draw: function _draw(ctx, param, viewMatrix, strokeMatrix) {\n        var dontStart = param.dontStart,\n            dontPaint = param.dontFinish || param.clip,\n            style = this.getStyle(),\n            hasFill = style.hasFill(),\n            hasStroke = style.hasStroke(),\n            dashArray = style.getDashArray(),\n            dashLength = !paper.support.nativeDash && hasStroke && dashArray && dashArray.length;\n        if (!dontStart) ctx.beginPath();\n\n        if (hasFill || hasStroke && !dashLength || dontPaint) {\n          drawSegments(ctx, this, strokeMatrix);\n          if (this._closed) ctx.closePath();\n        }\n\n        function getOffset(i) {\n          return dashArray[(i % dashLength + dashLength) % dashLength];\n        }\n\n        if (!dontPaint && (hasFill || hasStroke)) {\n          this._setStyles(ctx, param, viewMatrix);\n\n          if (hasFill) {\n            ctx.fill(style.getFillRule());\n            ctx.shadowColor = 'rgba(0,0,0,0)';\n          }\n\n          if (hasStroke) {\n            if (dashLength) {\n              if (!dontStart) ctx.beginPath();\n              var flattener = new PathFlattener(this, 0.25, 32, false, strokeMatrix),\n                  length = flattener.length,\n                  from = -style.getDashOffset(),\n                  to,\n                  i = 0;\n              from = from % length;\n\n              while (from > 0) {\n                from -= getOffset(i--) + getOffset(i--);\n              }\n\n              while (from < length) {\n                to = from + getOffset(i++);\n                if (from > 0 || to > 0) flattener.drawPart(ctx, Math.max(from, 0), Math.max(to, 0));\n                from = to + getOffset(i++);\n              }\n            }\n\n            ctx.stroke();\n          }\n        }\n      },\n      _drawSelected: function _drawSelected(ctx, matrix) {\n        ctx.beginPath();\n        drawSegments(ctx, this, matrix);\n        ctx.stroke();\n        drawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n      }\n    };\n  }(), new function () {\n    function getCurrentSegment(that) {\n      var segments = that._segments;\n      if (!segments.length) throw new Error('Use a moveTo() command first');\n      return segments[segments.length - 1];\n    }\n\n    return {\n      moveTo: function moveTo() {\n        var segments = this._segments;\n        if (segments.length === 1) this.removeSegment(0);\n        if (!segments.length) this._add([new Segment(Point.read(arguments))]);\n      },\n      moveBy: function moveBy() {\n        throw new Error('moveBy() is unsupported on Path items.');\n      },\n      lineTo: function lineTo() {\n        this._add([new Segment(Point.read(arguments))]);\n      },\n      cubicCurveTo: function cubicCurveTo() {\n        var args = arguments,\n            handle1 = Point.read(args),\n            handle2 = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this);\n        current.setHandleOut(handle1.subtract(current._point));\n\n        this._add([new Segment(to, handle2.subtract(to))]);\n      },\n      quadraticCurveTo: function quadraticCurveTo() {\n        var args = arguments,\n            handle = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.cubicCurveTo(handle.add(current.subtract(handle).multiply(1 / 3)), handle.add(to.subtract(handle).multiply(1 / 3)), to);\n      },\n      curveTo: function curveTo() {\n        var args = arguments,\n            through = Point.read(args),\n            to = Point.read(args),\n            t = Base.pick(Base.read(args), 0.5),\n            t1 = 1 - t,\n            current = getCurrentSegment(this)._point,\n            handle = through.subtract(current.multiply(t1 * t1)).subtract(to.multiply(t * t)).divide(2 * t * t1);\n\n        if (handle.isNaN()) throw new Error('Cannot put a curve through points with parameter = ' + t);\n        this.quadraticCurveTo(handle, to);\n      },\n      arcTo: function arcTo() {\n        var args = arguments,\n            abs = Math.abs,\n            sqrt = Math.sqrt,\n            current = getCurrentSegment(this),\n            from = current._point,\n            to = Point.read(args),\n            through,\n            peek = Base.peek(args),\n            clockwise = Base.pick(peek, true),\n            center,\n            extent,\n            vector,\n            matrix;\n\n        if (typeof clockwise === 'boolean') {\n          var middle = from.add(to).divide(2),\n              through = middle.add(middle.subtract(from).rotate(clockwise ? -90 : 90));\n        } else if (Base.remain(args) <= 2) {\n          through = to;\n          to = Point.read(args);\n        } else if (!from.equals(to)) {\n          var radius = Size.read(args),\n              isZero = Numerical.isZero;\n          if (isZero(radius.width) || isZero(radius.height)) return this.lineTo(to);\n          var rotation = Base.read(args),\n              clockwise = !!Base.read(args),\n              large = !!Base.read(args),\n              middle = from.add(to).divide(2),\n              pt = from.subtract(middle).rotate(-rotation),\n              x = pt.x,\n              y = pt.y,\n              rx = abs(radius.width),\n              ry = abs(radius.height),\n              rxSq = rx * rx,\n              rySq = ry * ry,\n              xSq = x * x,\n              ySq = y * y;\n          var factor = sqrt(xSq / rxSq + ySq / rySq);\n\n          if (factor > 1) {\n            rx *= factor;\n            ry *= factor;\n            rxSq = rx * rx;\n            rySq = ry * ry;\n          }\n\n          factor = (rxSq * rySq - rxSq * ySq - rySq * xSq) / (rxSq * ySq + rySq * xSq);\n          if (abs(factor) < 1e-12) factor = 0;\n          if (factor < 0) throw new Error('Cannot create an arc with the given arguments');\n          center = new Point(rx * y / ry, -ry * x / rx).multiply((large === clockwise ? -1 : 1) * sqrt(factor)).rotate(rotation).add(middle);\n          matrix = new Matrix().translate(center).rotate(rotation).scale(rx, ry);\n          vector = matrix._inverseTransform(from);\n          extent = vector.getDirectedAngle(matrix._inverseTransform(to));\n          if (!clockwise && extent > 0) extent -= 360;else if (clockwise && extent < 0) extent += 360;\n        }\n\n        if (through) {\n          var l1 = new Line(from.add(through).divide(2), through.subtract(from).rotate(90), true),\n              l2 = new Line(through.add(to).divide(2), to.subtract(through).rotate(90), true),\n              line = new Line(from, to),\n              throughSide = line.getSide(through);\n          center = l1.intersect(l2, true);\n\n          if (!center) {\n            if (!throughSide) return this.lineTo(to);\n            throw new Error('Cannot create an arc with the given arguments');\n          }\n\n          vector = from.subtract(center);\n          extent = vector.getDirectedAngle(to.subtract(center));\n          var centerSide = line.getSide(center, true);\n\n          if (centerSide === 0) {\n            extent = throughSide * abs(extent);\n          } else if (throughSide === centerSide) {\n            extent += extent < 0 ? 360 : -360;\n          }\n        }\n\n        if (extent) {\n          var epsilon = 1e-7,\n              ext = abs(extent),\n              count = ext >= 360 ? 4 : Math.ceil((ext - epsilon) / 90),\n              inc = extent / count,\n              half = inc * Math.PI / 360,\n              z = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n              segments = [];\n\n          for (var i = 0; i <= count; i++) {\n            var pt = to,\n                out = null;\n\n            if (i < count) {\n              out = vector.rotate(90).multiply(z);\n\n              if (matrix) {\n                pt = matrix._transformPoint(vector);\n                out = matrix._transformPoint(vector.add(out)).subtract(pt);\n              } else {\n                pt = center.add(vector);\n              }\n            }\n\n            if (!i) {\n              current.setHandleOut(out);\n            } else {\n              var _in = vector.rotate(-90).multiply(z);\n\n              if (matrix) {\n                _in = matrix._transformPoint(vector.add(_in)).subtract(pt);\n              }\n\n              segments.push(new Segment(pt, _in, out));\n            }\n\n            vector = vector.rotate(inc);\n          }\n\n          this._add(segments);\n        }\n      },\n      lineBy: function lineBy() {\n        var to = Point.read(arguments),\n            current = getCurrentSegment(this)._point;\n\n        this.lineTo(current.add(to));\n      },\n      curveBy: function curveBy() {\n        var args = arguments,\n            through = Point.read(args),\n            to = Point.read(args),\n            parameter = Base.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.curveTo(current.add(through), current.add(to), parameter);\n      },\n      cubicCurveBy: function cubicCurveBy() {\n        var args = arguments,\n            handle1 = Point.read(args),\n            handle2 = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.cubicCurveTo(current.add(handle1), current.add(handle2), current.add(to));\n      },\n      quadraticCurveBy: function quadraticCurveBy() {\n        var args = arguments,\n            handle = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.quadraticCurveTo(current.add(handle), current.add(to));\n      },\n      arcBy: function arcBy() {\n        var args = arguments,\n            current = getCurrentSegment(this)._point,\n            point = current.add(Point.read(args)),\n            clockwise = Base.pick(Base.peek(args), true);\n\n        if (typeof clockwise === 'boolean') {\n          this.arcTo(point, clockwise);\n        } else {\n          this.arcTo(point, current.add(Point.read(args)));\n        }\n      },\n      closePath: function closePath(tolerance) {\n        this.setClosed(true);\n        this.join(this, tolerance);\n      }\n    };\n  }(), {\n    _getBounds: function _getBounds(matrix, options) {\n      var method = options.handle ? 'getHandleBounds' : options.stroke ? 'getStrokeBounds' : 'getBounds';\n      return Path[method](this._segments, this._closed, this, matrix, options);\n    },\n    statics: {\n      getBounds: function getBounds(segments, closed, path, matrix, options, strokePadding) {\n        var first = segments[0];\n        if (!first) return new _Rectangle();\n\n        var coords = new Array(6),\n            prevCoords = first._transformCoordinates(matrix, new Array(6)),\n            min = prevCoords.slice(0, 2),\n            max = min.slice(),\n            roots = new Array(2);\n\n        function processSegment(segment) {\n          segment._transformCoordinates(matrix, coords);\n\n          for (var i = 0; i < 2; i++) {\n            Curve._addBounds(prevCoords[i], prevCoords[i + 4], coords[i + 2], coords[i], i, strokePadding ? strokePadding[i] : 0, min, max, roots);\n          }\n\n          var tmp = prevCoords;\n          prevCoords = coords;\n          coords = tmp;\n        }\n\n        for (var i = 1, l = segments.length; i < l; i++) {\n          processSegment(segments[i]);\n        }\n\n        if (closed) processSegment(first);\n        return new _Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n      },\n      getStrokeBounds: function getStrokeBounds(segments, closed, path, matrix, options) {\n        var style = path.getStyle(),\n            stroke = style.hasStroke(),\n            strokeWidth = style.getStrokeWidth(),\n            strokeMatrix = stroke && path._getStrokeMatrix(matrix, options),\n            strokePadding = stroke && Path._getStrokePadding(strokeWidth, strokeMatrix),\n            bounds = Path.getBounds(segments, closed, path, matrix, options, strokePadding);\n\n        if (!stroke) return bounds;\n        var strokeRadius = strokeWidth / 2,\n            join = style.getStrokeJoin(),\n            cap = style.getStrokeCap(),\n            miterLimit = style.getMiterLimit(),\n            joinBounds = new _Rectangle(new Size(strokePadding));\n\n        function addPoint(point) {\n          bounds = bounds.include(point);\n        }\n\n        function addRound(segment) {\n          bounds = bounds.unite(joinBounds.setCenter(segment._point.transform(matrix)));\n        }\n\n        function addJoin(segment, join) {\n          if (join === 'round' || segment.isSmooth()) {\n            addRound(segment);\n          } else {\n            Path._addBevelJoin(segment, join, strokeRadius, miterLimit, matrix, strokeMatrix, addPoint);\n          }\n        }\n\n        function addCap(segment, cap) {\n          if (cap === 'round') {\n            addRound(segment);\n          } else {\n            Path._addSquareCap(segment, cap, strokeRadius, matrix, strokeMatrix, addPoint);\n          }\n        }\n\n        var length = segments.length - (closed ? 0 : 1);\n\n        for (var i = 1; i < length; i++) {\n          addJoin(segments[i], join);\n        }\n\n        if (closed) {\n          addJoin(segments[0], join);\n        } else if (length > 0) {\n          addCap(segments[0], cap);\n          addCap(segments[segments.length - 1], cap);\n        }\n\n        return bounds;\n      },\n      _getStrokePadding: function _getStrokePadding(radius, matrix) {\n        if (!matrix) return [radius, radius];\n        var hor = new Point(radius, 0).transform(matrix),\n            ver = new Point(0, radius).transform(matrix),\n            phi = hor.getAngleInRadians(),\n            a = hor.getLength(),\n            b = ver.getLength();\n        var sin = Math.sin(phi),\n            cos = Math.cos(phi),\n            tan = Math.tan(phi),\n            tx = Math.atan2(b * tan, a),\n            ty = Math.atan2(b, tan * a);\n        return [Math.abs(a * Math.cos(tx) * cos + b * Math.sin(tx) * sin), Math.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n      },\n      _addBevelJoin: function _addBevelJoin(segment, join, radius, miterLimit, matrix, strokeMatrix, addPoint, isArea) {\n        var curve2 = segment.getCurve(),\n            curve1 = curve2.getPrevious(),\n            point = curve2.getPoint1().transform(matrix),\n            normal1 = curve1.getNormalAtTime(1).multiply(radius).transform(strokeMatrix),\n            normal2 = curve2.getNormalAtTime(0).multiply(radius).transform(strokeMatrix),\n            angle = normal1.getDirectedAngle(normal2);\n\n        if (angle < 0 || angle >= 180) {\n          normal1 = normal1.negate();\n          normal2 = normal2.negate();\n        }\n\n        if (isArea) addPoint(point);\n        addPoint(point.add(normal1));\n\n        if (join === 'miter') {\n          var corner = new Line(point.add(normal1), new Point(-normal1.y, normal1.x), true).intersect(new Line(point.add(normal2), new Point(-normal2.y, normal2.x), true), true);\n\n          if (corner && point.getDistance(corner) <= miterLimit * radius) {\n            addPoint(corner);\n          }\n        }\n\n        addPoint(point.add(normal2));\n      },\n      _addSquareCap: function _addSquareCap(segment, cap, radius, matrix, strokeMatrix, addPoint, isArea) {\n        var point = segment._point.transform(matrix),\n            loc = segment.getLocation(),\n            normal = loc.getNormal().multiply(loc.getTime() === 0 ? radius : -radius).transform(strokeMatrix);\n\n        if (cap === 'square') {\n          if (isArea) {\n            addPoint(point.subtract(normal));\n            addPoint(point.add(normal));\n          }\n\n          point = point.add(normal.rotate(-90));\n        }\n\n        addPoint(point.add(normal));\n        addPoint(point.subtract(normal));\n      },\n      getHandleBounds: function getHandleBounds(segments, closed, path, matrix, options) {\n        var style = path.getStyle(),\n            stroke = options.stroke && style.hasStroke(),\n            strokePadding,\n            joinPadding;\n\n        if (stroke) {\n          var strokeMatrix = path._getStrokeMatrix(matrix, options),\n              strokeRadius = style.getStrokeWidth() / 2,\n              joinRadius = strokeRadius;\n\n          if (style.getStrokeJoin() === 'miter') joinRadius = strokeRadius * style.getMiterLimit();\n          if (style.getStrokeCap() === 'square') joinRadius = Math.max(joinRadius, strokeRadius * Math.SQRT2);\n          strokePadding = Path._getStrokePadding(strokeRadius, strokeMatrix);\n          joinPadding = Path._getStrokePadding(joinRadius, strokeMatrix);\n        }\n\n        var coords = new Array(6),\n            x1 = Infinity,\n            x2 = -x1,\n            y1 = x1,\n            y2 = x2;\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          var segment = segments[i];\n\n          segment._transformCoordinates(matrix, coords);\n\n          for (var j = 0; j < 6; j += 2) {\n            var padding = !j ? joinPadding : strokePadding,\n                paddingX = padding ? padding[0] : 0,\n                paddingY = padding ? padding[1] : 0,\n                x = coords[j],\n                y = coords[j + 1],\n                xn = x - paddingX,\n                xx = x + paddingX,\n                yn = y - paddingY,\n                yx = y + paddingY;\n            if (xn < x1) x1 = xn;\n            if (xx > x2) x2 = xx;\n            if (yn < y1) y1 = yn;\n            if (yx > y2) y2 = yx;\n          }\n        }\n\n        return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n      }\n    }\n  });\n  Path.inject({\n    statics: new function () {\n      var kappa = 0.5522847498307936,\n          ellipseSegments = [new Segment([-1, 0], [0, kappa], [0, -kappa]), new Segment([0, -1], [-kappa, 0], [kappa, 0]), new Segment([1, 0], [0, -kappa], [0, kappa]), new Segment([0, 1], [kappa, 0], [-kappa, 0])];\n\n      function createPath(segments, closed, args) {\n        var props = Base.getNamed(args),\n            path = new Path(props && props.insert == false && Item.NO_INSERT);\n\n        path._add(segments);\n\n        path._closed = closed;\n        return path.set(props, {\n          insert: true\n        });\n      }\n\n      function createEllipse(center, radius, args) {\n        var segments = new Array(4);\n\n        for (var i = 0; i < 4; i++) {\n          var segment = ellipseSegments[i];\n          segments[i] = new Segment(segment._point.multiply(radius).add(center), segment._handleIn.multiply(radius), segment._handleOut.multiply(radius));\n        }\n\n        return createPath(segments, true, args);\n      }\n\n      return {\n        Line: function Line() {\n          var args = arguments;\n          return createPath([new Segment(Point.readNamed(args, 'from')), new Segment(Point.readNamed(args, 'to'))], false, args);\n        },\n        Circle: function Circle() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              radius = Base.readNamed(args, 'radius');\n          return createEllipse(center, new Size(radius), args);\n        },\n        Rectangle: function Rectangle() {\n          var args = arguments,\n              rect = _Rectangle.readNamed(args, 'rectangle'),\n              radius = Size.readNamed(args, 'radius', 0, {\n            readNull: true\n          }),\n              bl = rect.getBottomLeft(true),\n              tl = rect.getTopLeft(true),\n              tr = rect.getTopRight(true),\n              br = rect.getBottomRight(true),\n              segments;\n\n          if (!radius || radius.isZero()) {\n            segments = [new Segment(bl), new Segment(tl), new Segment(tr), new Segment(br)];\n          } else {\n            radius = Size.min(radius, rect.getSize(true).divide(2));\n            var rx = radius.width,\n                ry = radius.height,\n                hx = rx * kappa,\n                hy = ry * kappa;\n            segments = [new Segment(bl.add(rx, 0), null, [-hx, 0]), new Segment(bl.subtract(0, ry), [0, hy]), new Segment(tl.add(0, ry), null, [0, -hy]), new Segment(tl.add(rx, 0), [-hx, 0], null), new Segment(tr.subtract(rx, 0), null, [hx, 0]), new Segment(tr.add(0, ry), [0, -hy], null), new Segment(br.subtract(0, ry), null, [0, hy]), new Segment(br.subtract(rx, 0), [hx, 0])];\n          }\n\n          return createPath(segments, true, args);\n        },\n        RoundRectangle: '#Rectangle',\n        Ellipse: function Ellipse() {\n          var args = arguments,\n              ellipse = Shape._readEllipse(args);\n\n          return createEllipse(ellipse.center, ellipse.radius, args);\n        },\n        Oval: '#Ellipse',\n        Arc: function Arc() {\n          var args = arguments,\n              from = Point.readNamed(args, 'from'),\n              through = Point.readNamed(args, 'through'),\n              to = Point.readNamed(args, 'to'),\n              props = Base.getNamed(args),\n              path = new Path(props && props.insert == false && Item.NO_INSERT);\n          path.moveTo(from);\n          path.arcTo(through, to);\n          return path.set(props);\n        },\n        RegularPolygon: function RegularPolygon() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              sides = Base.readNamed(args, 'sides'),\n              radius = Base.readNamed(args, 'radius'),\n              step = 360 / sides,\n              three = sides % 3 === 0,\n              vector = new Point(0, three ? -radius : radius),\n              offset = three ? -1 : 0.5,\n              segments = new Array(sides);\n\n          for (var i = 0; i < sides; i++) {\n            segments[i] = new Segment(center.add(vector.rotate((i + offset) * step)));\n          }\n\n          return createPath(segments, true, args);\n        },\n        Star: function Star() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              points = Base.readNamed(args, 'points') * 2,\n              radius1 = Base.readNamed(args, 'radius1'),\n              radius2 = Base.readNamed(args, 'radius2'),\n              step = 360 / points,\n              vector = new Point(0, -1),\n              segments = new Array(points);\n\n          for (var i = 0; i < points; i++) {\n            segments[i] = new Segment(center.add(vector.rotate(step * i).multiply(i % 2 ? radius2 : radius1)));\n          }\n\n          return createPath(segments, true, args);\n        }\n      };\n    }()\n  });\n  var CompoundPath = PathItem.extend({\n    _class: 'CompoundPath',\n    _serializeFields: {\n      children: []\n    },\n    beans: true,\n    initialize: function CompoundPath(arg) {\n      this._children = [];\n      this._namedChildren = {};\n\n      if (!this._initialize(arg)) {\n        if (typeof arg === 'string') {\n          this.setPathData(arg);\n        } else {\n          this.addChildren(Array.isArray(arg) ? arg : arguments);\n        }\n      }\n    },\n    insertChildren: function insertChildren(index, items) {\n      var list = items,\n          first = list[0];\n      if (first && typeof first[0] === 'number') list = [list];\n\n      for (var i = items.length - 1; i >= 0; i--) {\n        var item = list[i];\n        if (list === items && !(item instanceof Path)) list = Base.slice(list);\n\n        if (Array.isArray(item)) {\n          list[i] = new Path({\n            segments: item,\n            insert: false\n          });\n        } else if (item instanceof CompoundPath) {\n          list.splice.apply(list, [i, 1].concat(item.removeChildren()));\n          item.remove();\n        }\n      }\n\n      return insertChildren.base.call(this, index, list);\n    },\n    reduce: function reduce(options) {\n      var children = this._children;\n\n      for (var i = children.length - 1; i >= 0; i--) {\n        var path = children[i].reduce(options);\n        if (path.isEmpty()) path.remove();\n      }\n\n      if (!children.length) {\n        var path = new Path(Item.NO_INSERT);\n        path.copyAttributes(this);\n        path.insertAbove(this);\n        this.remove();\n        return path;\n      }\n\n      return reduce.base.call(this);\n    },\n    isClosed: function isClosed() {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        if (!children[i]._closed) return false;\n      }\n\n      return true;\n    },\n    setClosed: function setClosed(closed) {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].setClosed(closed);\n      }\n    },\n    getFirstSegment: function getFirstSegment() {\n      var first = this.getFirstChild();\n      return first && first.getFirstSegment();\n    },\n    getLastSegment: function getLastSegment() {\n      var last = this.getLastChild();\n      return last && last.getLastSegment();\n    },\n    getCurves: function getCurves() {\n      var children = this._children,\n          curves = [];\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        Base.push(curves, children[i].getCurves());\n      }\n\n      return curves;\n    },\n    getFirstCurve: function getFirstCurve() {\n      var first = this.getFirstChild();\n      return first && first.getFirstCurve();\n    },\n    getLastCurve: function getLastCurve() {\n      var last = this.getLastChild();\n      return last && last.getLastCurve();\n    },\n    getArea: function getArea() {\n      var children = this._children,\n          area = 0;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        area += children[i].getArea();\n      }\n\n      return area;\n    },\n    getLength: function getLength() {\n      var children = this._children,\n          length = 0;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        length += children[i].getLength();\n      }\n\n      return length;\n    },\n    getPathData: function getPathData(_matrix, _precision) {\n      var children = this._children,\n          paths = [];\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i],\n            mx = child._matrix;\n        paths.push(child.getPathData(_matrix && !mx.isIdentity() ? _matrix.appended(mx) : _matrix, _precision));\n      }\n\n      return paths.join('');\n    },\n    _hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n      return _hitTestChildren.base.call(this, point, options.class === Path || options.type === 'path' ? options : Base.set({}, options, {\n        fill: false\n      }), viewMatrix);\n    },\n    _draw: function _draw(ctx, param, viewMatrix, strokeMatrix) {\n      var children = this._children;\n      if (!children.length) return;\n      param = param.extend({\n        dontStart: true,\n        dontFinish: true\n      });\n      ctx.beginPath();\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].draw(ctx, param, strokeMatrix);\n      }\n\n      if (!param.clip) {\n        this._setStyles(ctx, param, viewMatrix);\n\n        var style = this._style;\n\n        if (style.hasFill()) {\n          ctx.fill(style.getFillRule());\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n        }\n\n        if (style.hasStroke()) ctx.stroke();\n      }\n    },\n    _drawSelected: function _drawSelected(ctx, matrix, selectionItems) {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i],\n            mx = child._matrix;\n\n        if (!selectionItems[child._id]) {\n          child._drawSelected(ctx, mx.isIdentity() ? matrix : matrix.appended(mx));\n        }\n      }\n    }\n  }, new function () {\n    function getCurrentPath(that, check) {\n      var children = that._children;\n      if (check && !children.length) throw new Error('Use a moveTo() command first');\n      return children[children.length - 1];\n    }\n\n    return Base.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo', 'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'], function (key) {\n      this[key] = function () {\n        var path = getCurrentPath(this, true);\n        path[key].apply(path, arguments);\n      };\n    }, {\n      moveTo: function moveTo() {\n        var current = getCurrentPath(this),\n            path = current && current.isEmpty() ? current : new Path(Item.NO_INSERT);\n        if (path !== current) this.addChild(path);\n        path.moveTo.apply(path, arguments);\n      },\n      moveBy: function moveBy() {\n        var current = getCurrentPath(this, true),\n            last = current && current.getLastSegment(),\n            point = Point.read(arguments);\n        this.moveTo(last ? point.add(last._point) : point);\n      },\n      closePath: function closePath(tolerance) {\n        getCurrentPath(this, true).closePath(tolerance);\n      }\n    });\n  }(), Base.each(['reverse', 'flatten', 'simplify', 'smooth'], function (key) {\n    this[key] = function (param) {\n      var children = this._children,\n          res;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        res = children[i][key](param) || res;\n      }\n\n      return res;\n    };\n  }, {}));\n  PathItem.inject(new function () {\n    var min = Math.min,\n        max = Math.max,\n        abs = Math.abs,\n        operators = {\n      unite: {\n        '1': true,\n        '2': true\n      },\n      intersect: {\n        '2': true\n      },\n      subtract: {\n        '1': true\n      },\n      exclude: {\n        '1': true,\n        '-1': true\n      }\n    };\n\n    function getPaths(path) {\n      return path._children || [path];\n    }\n\n    function preparePath(path, resolve) {\n      var res = path.clone(false).reduce({\n        simplify: true\n      }).transform(null, true, true);\n\n      if (resolve) {\n        var paths = getPaths(res);\n\n        for (var i = 0, l = paths.length; i < l; i++) {\n          var path = paths[i];\n\n          if (!path._closed && !path.isEmpty()) {\n            path.closePath(1e-12);\n            path.getFirstSegment().setHandleIn(0, 0);\n            path.getLastSegment().setHandleOut(0, 0);\n          }\n        }\n\n        res = res.resolveCrossings().reorient(res.getFillRule() === 'nonzero', true);\n      }\n\n      return res;\n    }\n\n    function createResult(paths, simplify, path1, path2, options) {\n      var result = new CompoundPath(Item.NO_INSERT);\n      result.addChildren(paths, true);\n      result = result.reduce({\n        simplify: simplify\n      });\n\n      if (!(options && options.insert == false)) {\n        result.insertAbove(path2 && path1.isSibling(path2) && path1.getIndex() < path2.getIndex() ? path2 : path1);\n      }\n\n      result.copyAttributes(path1, true);\n      return result;\n    }\n\n    function filterIntersection(inter) {\n      return inter.hasOverlap() || inter.isCrossing();\n    }\n\n    function traceBoolean(path1, path2, operation, options) {\n      if (options && (options.trace == false || options.stroke) && /^(subtract|intersect)$/.test(operation)) return splitBoolean(path1, path2, operation);\n\n      var _path1 = preparePath(path1, true),\n          _path2 = path2 && path1 !== path2 && preparePath(path2, true),\n          operator = operators[operation];\n\n      operator[operation] = true;\n      if (_path2 && (operator.subtract || operator.exclude) ^ (_path2.isClockwise() ^ _path1.isClockwise())) _path2.reverse();\n\n      var crossings = divideLocations(CurveLocation.expand(_path1.getIntersections(_path2, filterIntersection))),\n          paths1 = getPaths(_path1),\n          paths2 = _path2 && getPaths(_path2),\n          segments = [],\n          curves = [],\n          paths;\n\n      function collectPaths(paths) {\n        for (var i = 0, l = paths.length; i < l; i++) {\n          var path = paths[i];\n          Base.push(segments, path._segments);\n          Base.push(curves, path.getCurves());\n          path._overlapsOnly = true;\n        }\n      }\n\n      function getCurves(indices) {\n        var list = [];\n\n        for (var i = 0, l = indices && indices.length; i < l; i++) {\n          list.push(curves[indices[i]]);\n        }\n\n        return list;\n      }\n\n      if (crossings.length) {\n        collectPaths(paths1);\n        if (paths2) collectPaths(paths2);\n        var curvesValues = new Array(curves.length);\n\n        for (var i = 0, l = curves.length; i < l; i++) {\n          curvesValues[i] = curves[i].getValues();\n        }\n\n        var curveCollisions = CollisionDetection.findCurveBoundsCollisions(curvesValues, curvesValues, 0, true);\n        var curveCollisionsMap = {};\n\n        for (var i = 0; i < curves.length; i++) {\n          var curve = curves[i],\n              id = curve._path._id,\n              map = curveCollisionsMap[id] = curveCollisionsMap[id] || {};\n          map[curve.getIndex()] = {\n            hor: getCurves(curveCollisions[i].hor),\n            ver: getCurves(curveCollisions[i].ver)\n          };\n        }\n\n        for (var i = 0, l = crossings.length; i < l; i++) {\n          propagateWinding(crossings[i]._segment, _path1, _path2, curveCollisionsMap, operator);\n        }\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          var segment = segments[i],\n              inter = segment._intersection;\n\n          if (!segment._winding) {\n            propagateWinding(segment, _path1, _path2, curveCollisionsMap, operator);\n          }\n\n          if (!(inter && inter._overlap)) segment._path._overlapsOnly = false;\n        }\n\n        paths = tracePaths(segments, operator);\n      } else {\n        paths = reorientPaths(paths2 ? paths1.concat(paths2) : paths1.slice(), function (w) {\n          return !!operator[w];\n        });\n      }\n\n      return createResult(paths, true, path1, path2, options);\n    }\n\n    function splitBoolean(path1, path2, operation) {\n      var _path1 = preparePath(path1),\n          _path2 = preparePath(path2),\n          crossings = _path1.getIntersections(_path2, filterIntersection),\n          subtract = operation === 'subtract',\n          divide = operation === 'divide',\n          added = {},\n          paths = [];\n\n      function addPath(path) {\n        if (!added[path._id] && (divide || _path2.contains(path.getPointAt(path.getLength() / 2)) ^ subtract)) {\n          paths.unshift(path);\n          return added[path._id] = true;\n        }\n      }\n\n      for (var i = crossings.length - 1; i >= 0; i--) {\n        var path = crossings[i].split();\n\n        if (path) {\n          if (addPath(path)) path.getFirstSegment().setHandleIn(0, 0);\n\n          _path1.getLastSegment().setHandleOut(0, 0);\n        }\n      }\n\n      addPath(_path1);\n      return createResult(paths, false, path1, path2);\n    }\n\n    function linkIntersections(from, to) {\n      var prev = from;\n\n      while (prev) {\n        if (prev === to) return;\n        prev = prev._previous;\n      }\n\n      while (from._next && from._next !== to) {\n        from = from._next;\n      }\n\n      if (!from._next) {\n        while (to._previous) {\n          to = to._previous;\n        }\n\n        from._next = to;\n        to._previous = from;\n      }\n    }\n\n    function clearCurveHandles(curves) {\n      for (var i = curves.length - 1; i >= 0; i--) {\n        curves[i].clearHandles();\n      }\n    }\n\n    function reorientPaths(paths, isInside, clockwise) {\n      var length = paths && paths.length;\n\n      if (length) {\n        var lookup = Base.each(paths, function (path, i) {\n          this[path._id] = {\n            container: null,\n            winding: path.isClockwise() ? 1 : -1,\n            index: i\n          };\n        }, {}),\n            sorted = paths.slice().sort(function (a, b) {\n          return abs(b.getArea()) - abs(a.getArea());\n        }),\n            first = sorted[0];\n        var collisions = CollisionDetection.findItemBoundsCollisions(sorted, null, Numerical.GEOMETRIC_EPSILON);\n        if (clockwise == null) clockwise = first.isClockwise();\n\n        for (var i = 0; i < length; i++) {\n          var path1 = sorted[i],\n              entry1 = lookup[path1._id],\n              containerWinding = 0,\n              indices = collisions[i];\n\n          if (indices) {\n            var point = null;\n\n            for (var j = indices.length - 1; j >= 0; j--) {\n              if (indices[j] < i) {\n                point = point || path1.getInteriorPoint();\n                var path2 = sorted[indices[j]];\n\n                if (path2.contains(point)) {\n                  var entry2 = lookup[path2._id];\n                  containerWinding = entry2.winding;\n                  entry1.winding += containerWinding;\n                  entry1.container = entry2.exclude ? entry2.container : path2;\n                  break;\n                }\n              }\n            }\n          }\n\n          if (isInside(entry1.winding) === isInside(containerWinding)) {\n            entry1.exclude = true;\n            paths[entry1.index] = null;\n          } else {\n            var container = entry1.container;\n            path1.setClockwise(container ? !container.isClockwise() : clockwise);\n          }\n        }\n      }\n\n      return paths;\n    }\n\n    function divideLocations(locations, include, clearLater) {\n      var results = include && [],\n          tMin = 1e-8,\n          tMax = 1 - tMin,\n          clearHandles = false,\n          clearCurves = clearLater || [],\n          clearLookup = clearLater && {},\n          renormalizeLocs,\n          prevCurve,\n          prevTime;\n\n      function getId(curve) {\n        return curve._path._id + '.' + curve._segment1._index;\n      }\n\n      for (var i = (clearLater && clearLater.length) - 1; i >= 0; i--) {\n        var curve = clearLater[i];\n        if (curve._path) clearLookup[getId(curve)] = true;\n      }\n\n      for (var i = locations.length - 1; i >= 0; i--) {\n        var loc = locations[i],\n            time = loc._time,\n            origTime = time,\n            exclude = include && !include(loc),\n            curve = loc._curve,\n            segment;\n\n        if (curve) {\n          if (curve !== prevCurve) {\n            clearHandles = !curve.hasHandles() || clearLookup && clearLookup[getId(curve)];\n            renormalizeLocs = [];\n            prevTime = null;\n            prevCurve = curve;\n          } else if (prevTime >= tMin) {\n            time /= prevTime;\n          }\n        }\n\n        if (exclude) {\n          if (renormalizeLocs) renormalizeLocs.push(loc);\n          continue;\n        } else if (include) {\n          results.unshift(loc);\n        }\n\n        prevTime = origTime;\n\n        if (time < tMin) {\n          segment = curve._segment1;\n        } else if (time > tMax) {\n          segment = curve._segment2;\n        } else {\n          var newCurve = curve.divideAtTime(time, true);\n          if (clearHandles) clearCurves.push(curve, newCurve);\n          segment = newCurve._segment1;\n\n          for (var j = renormalizeLocs.length - 1; j >= 0; j--) {\n            var l = renormalizeLocs[j];\n            l._time = (l._time - time) / (1 - time);\n          }\n        }\n\n        loc._setSegment(segment);\n\n        var inter = segment._intersection,\n            dest = loc._intersection;\n\n        if (inter) {\n          linkIntersections(inter, dest);\n          var other = inter;\n\n          while (other) {\n            linkIntersections(other._intersection, inter);\n            other = other._next;\n          }\n        } else {\n          segment._intersection = dest;\n        }\n      }\n\n      if (!clearLater) clearCurveHandles(clearCurves);\n      return results || locations;\n    }\n\n    function getWinding(point, curves, dir, closed, dontFlip) {\n      var curvesList = Array.isArray(curves) ? curves : curves[dir ? 'hor' : 'ver'];\n      var ia = dir ? 1 : 0,\n          io = ia ^ 1,\n          pv = [point.x, point.y],\n          pa = pv[ia],\n          po = pv[io],\n          windingEpsilon = 1e-9,\n          qualityEpsilon = 1e-6,\n          paL = pa - windingEpsilon,\n          paR = pa + windingEpsilon,\n          windingL = 0,\n          windingR = 0,\n          pathWindingL = 0,\n          pathWindingR = 0,\n          onPath = false,\n          onAnyPath = false,\n          quality = 1,\n          roots = [],\n          vPrev,\n          vClose;\n\n      function addWinding(v) {\n        var o0 = v[io + 0],\n            o3 = v[io + 6];\n\n        if (po < min(o0, o3) || po > max(o0, o3)) {\n          return;\n        }\n\n        var a0 = v[ia + 0],\n            a1 = v[ia + 2],\n            a2 = v[ia + 4],\n            a3 = v[ia + 6];\n\n        if (o0 === o3) {\n          if (a0 < paR && a3 > paL || a3 < paR && a0 > paL) {\n            onPath = true;\n          }\n\n          return;\n        }\n\n        var t = po === o0 ? 0 : po === o3 ? 1 : paL > max(a0, a1, a2, a3) || paR < min(a0, a1, a2, a3) ? 1 : Curve.solveCubic(v, io, po, roots, 0, 1) > 0 ? roots[0] : 1,\n            a = t === 0 ? a0 : t === 1 ? a3 : Curve.getPoint(v, t)[dir ? 'y' : 'x'],\n            winding = o0 > o3 ? 1 : -1,\n            windingPrev = vPrev[io] > vPrev[io + 6] ? 1 : -1,\n            a3Prev = vPrev[ia + 6];\n\n        if (po !== o0) {\n          if (a < paL) {\n            pathWindingL += winding;\n          } else if (a > paR) {\n            pathWindingR += winding;\n          } else {\n            onPath = true;\n          }\n\n          if (a > pa - qualityEpsilon && a < pa + qualityEpsilon) quality /= 2;\n        } else {\n          if (winding !== windingPrev) {\n            if (a0 < paL) {\n              pathWindingL += winding;\n            } else if (a0 > paR) {\n              pathWindingR += winding;\n            }\n          } else if (a0 != a3Prev) {\n            if (a3Prev < paR && a > paR) {\n              pathWindingR += winding;\n              onPath = true;\n            } else if (a3Prev > paL && a < paL) {\n              pathWindingL += winding;\n              onPath = true;\n            }\n          }\n\n          quality /= 4;\n        }\n\n        vPrev = v;\n        return !dontFlip && a > paL && a < paR && Curve.getTangent(v, t)[dir ? 'x' : 'y'] === 0 && getWinding(point, curves, !dir, closed, true);\n      }\n\n      function handleCurve(v) {\n        var o0 = v[io + 0],\n            o1 = v[io + 2],\n            o2 = v[io + 4],\n            o3 = v[io + 6];\n\n        if (po <= max(o0, o1, o2, o3) && po >= min(o0, o1, o2, o3)) {\n          var a0 = v[ia + 0],\n              a1 = v[ia + 2],\n              a2 = v[ia + 4],\n              a3 = v[ia + 6],\n              monoCurves = paL > max(a0, a1, a2, a3) || paR < min(a0, a1, a2, a3) ? [v] : Curve.getMonoCurves(v, dir),\n              res;\n\n          for (var i = 0, l = monoCurves.length; i < l; i++) {\n            if (res = addWinding(monoCurves[i])) return res;\n          }\n        }\n      }\n\n      for (var i = 0, l = curvesList.length; i < l; i++) {\n        var curve = curvesList[i],\n            path = curve._path,\n            v = curve.getValues(),\n            res;\n\n        if (!i || curvesList[i - 1]._path !== path) {\n          vPrev = null;\n\n          if (!path._closed) {\n            vClose = Curve.getValues(path.getLastCurve().getSegment2(), curve.getSegment1(), null, !closed);\n\n            if (vClose[io] !== vClose[io + 6]) {\n              vPrev = vClose;\n            }\n          }\n\n          if (!vPrev) {\n            vPrev = v;\n            var prev = path.getLastCurve();\n\n            while (prev && prev !== curve) {\n              var v2 = prev.getValues();\n\n              if (v2[io] !== v2[io + 6]) {\n                vPrev = v2;\n                break;\n              }\n\n              prev = prev.getPrevious();\n            }\n          }\n        }\n\n        if (res = handleCurve(v)) return res;\n\n        if (i + 1 === l || curvesList[i + 1]._path !== path) {\n          if (vClose && (res = handleCurve(vClose))) return res;\n\n          if (onPath && !pathWindingL && !pathWindingR) {\n            pathWindingL = pathWindingR = path.isClockwise(closed) ^ dir ? 1 : -1;\n          }\n\n          windingL += pathWindingL;\n          windingR += pathWindingR;\n          pathWindingL = pathWindingR = 0;\n\n          if (onPath) {\n            onAnyPath = true;\n            onPath = false;\n          }\n\n          vClose = null;\n        }\n      }\n\n      windingL = abs(windingL);\n      windingR = abs(windingR);\n      return {\n        winding: max(windingL, windingR),\n        windingL: windingL,\n        windingR: windingR,\n        quality: quality,\n        onPath: onAnyPath\n      };\n    }\n\n    function propagateWinding(segment, path1, path2, curveCollisionsMap, operator) {\n      var chain = [],\n          start = segment,\n          totalLength = 0,\n          winding;\n\n      do {\n        var curve = segment.getCurve();\n\n        if (curve) {\n          var length = curve.getLength();\n          chain.push({\n            segment: segment,\n            curve: curve,\n            length: length\n          });\n          totalLength += length;\n        }\n\n        segment = segment.getNext();\n      } while (segment && !segment._intersection && segment !== start);\n\n      var offsets = [0.5, 0.25, 0.75],\n          winding = {\n        winding: 0,\n        quality: -1\n      },\n          tMin = 1e-3,\n          tMax = 1 - tMin;\n\n      for (var i = 0; i < offsets.length && winding.quality < 0.5; i++) {\n        var length = totalLength * offsets[i];\n\n        for (var j = 0, l = chain.length; j < l; j++) {\n          var entry = chain[j],\n              curveLength = entry.length;\n\n          if (length <= curveLength) {\n            var curve = entry.curve,\n                path = curve._path,\n                parent = path._parent,\n                operand = parent instanceof CompoundPath ? parent : path,\n                t = Numerical.clamp(curve.getTimeAt(length), tMin, tMax),\n                pt = curve.getPointAtTime(t),\n                dir = abs(curve.getTangentAtTime(t).y) < Math.SQRT1_2;\n            var wind = null;\n\n            if (operator.subtract && path2) {\n              var otherPath = operand === path1 ? path2 : path1,\n                  pathWinding = otherPath._getWinding(pt, dir, true);\n\n              if (operand === path1 && pathWinding.winding || operand === path2 && !pathWinding.winding) {\n                if (pathWinding.quality < 1) {\n                  continue;\n                } else {\n                  wind = {\n                    winding: 0,\n                    quality: 1\n                  };\n                }\n              }\n            }\n\n            wind = wind || getWinding(pt, curveCollisionsMap[path._id][curve.getIndex()], dir, true);\n            if (wind.quality > winding.quality) winding = wind;\n            break;\n          }\n\n          length -= curveLength;\n        }\n      }\n\n      for (var j = chain.length - 1; j >= 0; j--) {\n        chain[j].segment._winding = winding;\n      }\n    }\n\n    function tracePaths(segments, operator) {\n      var paths = [],\n          starts;\n\n      function isValid(seg) {\n        var winding;\n        return !!(seg && !seg._visited && (!operator || operator[(winding = seg._winding || {}).winding] && !(operator.unite && winding.winding === 2 && winding.windingL && winding.windingR)));\n      }\n\n      function isStart(seg) {\n        if (seg) {\n          for (var i = 0, l = starts.length; i < l; i++) {\n            if (seg === starts[i]) return true;\n          }\n        }\n\n        return false;\n      }\n\n      function visitPath(path) {\n        var segments = path._segments;\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          segments[i]._visited = true;\n        }\n      }\n\n      function getCrossingSegments(segment, collectStarts) {\n        var inter = segment._intersection,\n            start = inter,\n            crossings = [];\n        if (collectStarts) starts = [segment];\n\n        function collect(inter, end) {\n          while (inter && inter !== end) {\n            var other = inter._segment,\n                path = other && other._path;\n\n            if (path) {\n              var next = other.getNext() || path.getFirstSegment(),\n                  nextInter = next._intersection;\n\n              if (other !== segment && (isStart(other) || isStart(next) || next && isValid(other) && (isValid(next) || nextInter && isValid(nextInter._segment)))) {\n                crossings.push(other);\n              }\n\n              if (collectStarts) starts.push(other);\n            }\n\n            inter = inter._next;\n          }\n        }\n\n        if (inter) {\n          collect(inter);\n\n          while (inter && inter._prev) {\n            inter = inter._prev;\n          }\n\n          collect(inter, start);\n        }\n\n        return crossings;\n      }\n\n      segments.sort(function (seg1, seg2) {\n        var inter1 = seg1._intersection,\n            inter2 = seg2._intersection,\n            over1 = !!(inter1 && inter1._overlap),\n            over2 = !!(inter2 && inter2._overlap),\n            path1 = seg1._path,\n            path2 = seg2._path;\n        return over1 ^ over2 ? over1 ? 1 : -1 : !inter1 ^ !inter2 ? inter1 ? 1 : -1 : path1 !== path2 ? path1._id - path2._id : seg1._index - seg2._index;\n      });\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var seg = segments[i],\n            valid = isValid(seg),\n            path = null,\n            finished = false,\n            closed = true,\n            branches = [],\n            branch,\n            visited,\n            handleIn;\n\n        if (valid && seg._path._overlapsOnly) {\n          var path1 = seg._path,\n              path2 = seg._intersection._segment._path;\n\n          if (path1.compare(path2)) {\n            if (path1.getArea()) paths.push(path1.clone(false));\n            visitPath(path1);\n            visitPath(path2);\n            valid = false;\n          }\n        }\n\n        while (valid) {\n          var first = !path,\n              crossings = getCrossingSegments(seg, first),\n              other = crossings.shift(),\n              finished = !first && (isStart(seg) || isStart(other)),\n              cross = !finished && other;\n\n          if (first) {\n            path = new Path(Item.NO_INSERT);\n            branch = null;\n          }\n\n          if (finished) {\n            if (seg.isFirst() || seg.isLast()) closed = seg._path._closed;\n            seg._visited = true;\n            break;\n          }\n\n          if (cross && branch) {\n            branches.push(branch);\n            branch = null;\n          }\n\n          if (!branch) {\n            if (cross) crossings.push(seg);\n            branch = {\n              start: path._segments.length,\n              crossings: crossings,\n              visited: visited = [],\n              handleIn: handleIn\n            };\n          }\n\n          if (cross) seg = other;\n\n          if (!isValid(seg)) {\n            path.removeSegments(branch.start);\n\n            for (var j = 0, k = visited.length; j < k; j++) {\n              visited[j]._visited = false;\n            }\n\n            visited.length = 0;\n\n            do {\n              seg = branch && branch.crossings.shift();\n\n              if (!seg || !seg._path) {\n                seg = null;\n                branch = branches.pop();\n\n                if (branch) {\n                  visited = branch.visited;\n                  handleIn = branch.handleIn;\n                }\n              }\n            } while (branch && !isValid(seg));\n\n            if (!seg) break;\n          }\n\n          var next = seg.getNext();\n          path.add(new Segment(seg._point, handleIn, next && seg._handleOut));\n          seg._visited = true;\n          visited.push(seg);\n          seg = next || seg._path.getFirstSegment();\n          handleIn = next && next._handleIn;\n        }\n\n        if (finished) {\n          if (closed) {\n            path.getFirstSegment().setHandleIn(handleIn);\n            path.setClosed(closed);\n          }\n\n          if (path.getArea() !== 0) {\n            paths.push(path);\n          }\n        }\n      }\n\n      return paths;\n    }\n\n    return {\n      _getWinding: function _getWinding(point, dir, closed) {\n        return getWinding(point, this.getCurves(), dir, closed);\n      },\n      unite: function unite(path, options) {\n        return traceBoolean(this, path, 'unite', options);\n      },\n      intersect: function intersect(path, options) {\n        return traceBoolean(this, path, 'intersect', options);\n      },\n      subtract: function subtract(path, options) {\n        return traceBoolean(this, path, 'subtract', options);\n      },\n      exclude: function exclude(path, options) {\n        return traceBoolean(this, path, 'exclude', options);\n      },\n      divide: function divide(path, options) {\n        return options && (options.trace == false || options.stroke) ? splitBoolean(this, path, 'divide') : createResult([this.subtract(path, options), this.intersect(path, options)], true, this, path, options);\n      },\n      resolveCrossings: function resolveCrossings() {\n        var children = this._children,\n            paths = children || [this];\n\n        function hasOverlap(seg, path) {\n          var inter = seg && seg._intersection;\n          return inter && inter._overlap && inter._path === path;\n        }\n\n        var hasOverlaps = false,\n            hasCrossings = false,\n            intersections = this.getIntersections(null, function (inter) {\n          return inter.hasOverlap() && (hasOverlaps = true) || inter.isCrossing() && (hasCrossings = true);\n        }),\n            clearCurves = hasOverlaps && hasCrossings && [];\n        intersections = CurveLocation.expand(intersections);\n\n        if (hasOverlaps) {\n          var overlaps = divideLocations(intersections, function (inter) {\n            return inter.hasOverlap();\n          }, clearCurves);\n\n          for (var i = overlaps.length - 1; i >= 0; i--) {\n            var overlap = overlaps[i],\n                path = overlap._path,\n                seg = overlap._segment,\n                prev = seg.getPrevious(),\n                next = seg.getNext();\n\n            if (hasOverlap(prev, path) && hasOverlap(next, path)) {\n              seg.remove();\n\n              prev._handleOut._set(0, 0);\n\n              next._handleIn._set(0, 0);\n\n              if (prev !== seg && !prev.getCurve().hasLength()) {\n                next._handleIn.set(prev._handleIn);\n\n                prev.remove();\n              }\n            }\n          }\n        }\n\n        if (hasCrossings) {\n          divideLocations(intersections, hasOverlaps && function (inter) {\n            var curve1 = inter.getCurve(),\n                seg1 = inter.getSegment(),\n                other = inter._intersection,\n                curve2 = other._curve,\n                seg2 = other._segment;\n            if (curve1 && curve2 && curve1._path && curve2._path) return true;\n            if (seg1) seg1._intersection = null;\n            if (seg2) seg2._intersection = null;\n          }, clearCurves);\n          if (clearCurves) clearCurveHandles(clearCurves);\n          paths = tracePaths(Base.each(paths, function (path) {\n            Base.push(this, path._segments);\n          }, []));\n        }\n\n        var length = paths.length,\n            item;\n\n        if (length > 1 && children) {\n          if (paths !== children) this.setChildren(paths);\n          item = this;\n        } else if (length === 1 && !children) {\n          if (paths[0] !== this) this.setSegments(paths[0].removeSegments());\n          item = this;\n        }\n\n        if (!item) {\n          item = new CompoundPath(Item.NO_INSERT);\n          item.addChildren(paths);\n          item = item.reduce();\n          item.copyAttributes(this);\n          this.replaceWith(item);\n        }\n\n        return item;\n      },\n      reorient: function reorient(nonZero, clockwise) {\n        var children = this._children;\n\n        if (children && children.length) {\n          this.setChildren(reorientPaths(this.removeChildren(), function (w) {\n            return !!(nonZero ? w : w & 1);\n          }, clockwise));\n        } else if (clockwise !== undefined) {\n          this.setClockwise(clockwise);\n        }\n\n        return this;\n      },\n      getInteriorPoint: function getInteriorPoint() {\n        var bounds = this.getBounds(),\n            point = bounds.getCenter(true);\n\n        if (!this.contains(point)) {\n          var curves = this.getCurves(),\n              y = point.y,\n              intercepts = [],\n              roots = [];\n\n          for (var i = 0, l = curves.length; i < l; i++) {\n            var v = curves[i].getValues(),\n                o0 = v[1],\n                o1 = v[3],\n                o2 = v[5],\n                o3 = v[7];\n\n            if (y >= min(o0, o1, o2, o3) && y <= max(o0, o1, o2, o3)) {\n              var monoCurves = Curve.getMonoCurves(v);\n\n              for (var j = 0, m = monoCurves.length; j < m; j++) {\n                var mv = monoCurves[j],\n                    mo0 = mv[1],\n                    mo3 = mv[7];\n\n                if (mo0 !== mo3 && (y >= mo0 && y <= mo3 || y >= mo3 && y <= mo0)) {\n                  var x = y === mo0 ? mv[0] : y === mo3 ? mv[6] : Curve.solveCubic(mv, 1, y, roots, 0, 1) === 1 ? Curve.getPoint(mv, roots[0]).x : (mv[0] + mv[6]) / 2;\n                  intercepts.push(x);\n                }\n              }\n            }\n          }\n\n          if (intercepts.length > 1) {\n            intercepts.sort(function (a, b) {\n              return a - b;\n            });\n            point.x = (intercepts[0] + intercepts[1]) / 2;\n          }\n        }\n\n        return point;\n      }\n    };\n  }());\n  var PathFlattener = Base.extend({\n    _class: 'PathFlattener',\n    initialize: function initialize(path, flatness, maxRecursion, ignoreStraight, matrix) {\n      var curves = [],\n          parts = [],\n          length = 0,\n          minSpan = 1 / (maxRecursion || 32),\n          segments = path._segments,\n          segment1 = segments[0],\n          segment2;\n\n      function addCurve(segment1, segment2) {\n        var curve = Curve.getValues(segment1, segment2, matrix);\n        curves.push(curve);\n        computeParts(curve, segment1._index, 0, 1);\n      }\n\n      function computeParts(curve, index, t1, t2) {\n        if (t2 - t1 > minSpan && !(ignoreStraight && Curve.isStraight(curve)) && !Curve.isFlatEnough(curve, flatness || 0.25)) {\n          var halves = Curve.subdivide(curve, 0.5),\n              tMid = (t1 + t2) / 2;\n          computeParts(halves[0], index, t1, tMid);\n          computeParts(halves[1], index, tMid, t2);\n        } else {\n          var dx = curve[6] - curve[0],\n              dy = curve[7] - curve[1],\n              dist = Math.sqrt(dx * dx + dy * dy);\n\n          if (dist > 0) {\n            length += dist;\n            parts.push({\n              offset: length,\n              curve: curve,\n              index: index,\n              time: t2\n            });\n          }\n        }\n      }\n\n      for (var i = 1, l = segments.length; i < l; i++) {\n        segment2 = segments[i];\n        addCurve(segment1, segment2);\n        segment1 = segment2;\n      }\n\n      if (path._closed) addCurve(segment2 || segment1, segments[0]);\n      this.curves = curves;\n      this.parts = parts;\n      this.length = length;\n      this.index = 0;\n    },\n    _get: function _get(offset) {\n      var parts = this.parts,\n          length = parts.length,\n          start,\n          i,\n          j = this.index;\n\n      for (;;) {\n        i = j;\n        if (!j || parts[--j].offset < offset) break;\n      }\n\n      for (; i < length; i++) {\n        var part = parts[i];\n\n        if (part.offset >= offset) {\n          this.index = i;\n          var prev = parts[i - 1],\n              prevTime = prev && prev.index === part.index ? prev.time : 0,\n              prevOffset = prev ? prev.offset : 0;\n          return {\n            index: part.index,\n            time: prevTime + (part.time - prevTime) * (offset - prevOffset) / (part.offset - prevOffset)\n          };\n        }\n      }\n\n      return {\n        index: parts[length - 1].index,\n        time: 1\n      };\n    },\n    drawPart: function drawPart(ctx, from, to) {\n      var start = this._get(from),\n          end = this._get(to);\n\n      for (var i = start.index, l = end.index; i <= l; i++) {\n        var curve = Curve.getPart(this.curves[i], i === start.index ? start.time : 0, i === end.index ? end.time : 1);\n        if (i === start.index) ctx.moveTo(curve[0], curve[1]);\n        ctx.bezierCurveTo.apply(ctx, curve.slice(2));\n      }\n    }\n  }, Base.each(Curve._evaluateMethods, function (name) {\n    this[name + 'At'] = function (offset) {\n      var param = this._get(offset);\n\n      return Curve[name](this.curves[param.index], param.time);\n    };\n  }, {}));\n  var PathFitter = Base.extend({\n    initialize: function initialize(path) {\n      var points = this.points = [],\n          segments = path._segments,\n          closed = path._closed;\n\n      for (var i = 0, prev, l = segments.length; i < l; i++) {\n        var point = segments[i].point;\n\n        if (!prev || !prev.equals(point)) {\n          points.push(prev = point.clone());\n        }\n      }\n\n      if (closed) {\n        points.unshift(points[points.length - 1]);\n        points.push(points[1]);\n      }\n\n      this.closed = closed;\n    },\n    fit: function fit(error) {\n      var points = this.points,\n          length = points.length,\n          segments = null;\n\n      if (length > 0) {\n        segments = [new Segment(points[0])];\n\n        if (length > 1) {\n          this.fitCubic(segments, error, 0, length - 1, points[1].subtract(points[0]), points[length - 2].subtract(points[length - 1]));\n\n          if (this.closed) {\n            segments.shift();\n            segments.pop();\n          }\n        }\n      }\n\n      return segments;\n    },\n    fitCubic: function fitCubic(segments, error, first, last, tan1, tan2) {\n      var points = this.points;\n\n      if (last - first === 1) {\n        var pt1 = points[first],\n            pt2 = points[last],\n            dist = pt1.getDistance(pt2) / 3;\n        this.addCurve(segments, [pt1, pt1.add(tan1.normalize(dist)), pt2.add(tan2.normalize(dist)), pt2]);\n        return;\n      }\n\n      var uPrime = this.chordLengthParameterize(first, last),\n          maxError = Math.max(error, error * error),\n          split,\n          parametersInOrder = true;\n\n      for (var i = 0; i <= 4; i++) {\n        var curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n        var max = this.findMaxError(first, last, curve, uPrime);\n\n        if (max.error < error && parametersInOrder) {\n          this.addCurve(segments, curve);\n          return;\n        }\n\n        split = max.index;\n        if (max.error >= maxError) break;\n        parametersInOrder = this.reparameterize(first, last, uPrime, curve);\n        maxError = max.error;\n      }\n\n      var tanCenter = points[split - 1].subtract(points[split + 1]);\n      this.fitCubic(segments, error, first, split, tan1, tanCenter);\n      this.fitCubic(segments, error, split, last, tanCenter.negate(), tan2);\n    },\n    addCurve: function addCurve(segments, curve) {\n      var prev = segments[segments.length - 1];\n      prev.setHandleOut(curve[1].subtract(curve[0]));\n      segments.push(new Segment(curve[3], curve[2].subtract(curve[3])));\n    },\n    generateBezier: function generateBezier(first, last, uPrime, tan1, tan2) {\n      var epsilon = 1e-12,\n          abs = Math.abs,\n          points = this.points,\n          pt1 = points[first],\n          pt2 = points[last],\n          C = [[0, 0], [0, 0]],\n          X = [0, 0];\n\n      for (var i = 0, l = last - first + 1; i < l; i++) {\n        var u = uPrime[i],\n            t = 1 - u,\n            b = 3 * u * t,\n            b0 = t * t * t,\n            b1 = b * t,\n            b2 = b * u,\n            b3 = u * u * u,\n            a1 = tan1.normalize(b1),\n            a2 = tan2.normalize(b2),\n            tmp = points[first + i].subtract(pt1.multiply(b0 + b1)).subtract(pt2.multiply(b2 + b3));\n        C[0][0] += a1.dot(a1);\n        C[0][1] += a1.dot(a2);\n        C[1][0] = C[0][1];\n        C[1][1] += a2.dot(a2);\n        X[0] += a1.dot(tmp);\n        X[1] += a2.dot(tmp);\n      }\n\n      var detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n          alpha1,\n          alpha2;\n\n      if (abs(detC0C1) > epsilon) {\n        var detC0X = C[0][0] * X[1] - C[1][0] * X[0],\n            detXC1 = X[0] * C[1][1] - X[1] * C[0][1];\n        alpha1 = detXC1 / detC0C1;\n        alpha2 = detC0X / detC0C1;\n      } else {\n        var c0 = C[0][0] + C[0][1],\n            c1 = C[1][0] + C[1][1];\n        alpha1 = alpha2 = abs(c0) > epsilon ? X[0] / c0 : abs(c1) > epsilon ? X[1] / c1 : 0;\n      }\n\n      var segLength = pt2.getDistance(pt1),\n          eps = epsilon * segLength,\n          handle1,\n          handle2;\n\n      if (alpha1 < eps || alpha2 < eps) {\n        alpha1 = alpha2 = segLength / 3;\n      } else {\n        var line = pt2.subtract(pt1);\n        handle1 = tan1.normalize(alpha1);\n        handle2 = tan2.normalize(alpha2);\n\n        if (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n          alpha1 = alpha2 = segLength / 3;\n          handle1 = handle2 = null;\n        }\n      }\n\n      return [pt1, pt1.add(handle1 || tan1.normalize(alpha1)), pt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n    },\n    reparameterize: function reparameterize(first, last, u, curve) {\n      for (var i = first; i <= last; i++) {\n        u[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n      }\n\n      for (var i = 1, l = u.length; i < l; i++) {\n        if (u[i] <= u[i - 1]) return false;\n      }\n\n      return true;\n    },\n    findRoot: function findRoot(curve, point, u) {\n      var curve1 = [],\n          curve2 = [];\n\n      for (var i = 0; i <= 2; i++) {\n        curve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n      }\n\n      for (var i = 0; i <= 1; i++) {\n        curve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n      }\n\n      var pt = this.evaluate(3, curve, u),\n          pt1 = this.evaluate(2, curve1, u),\n          pt2 = this.evaluate(1, curve2, u),\n          diff = pt.subtract(point),\n          df = pt1.dot(pt1) + diff.dot(pt2);\n      return Numerical.isMachineZero(df) ? u : u - diff.dot(pt1) / df;\n    },\n    evaluate: function evaluate(degree, curve, t) {\n      var tmp = curve.slice();\n\n      for (var i = 1; i <= degree; i++) {\n        for (var j = 0; j <= degree - i; j++) {\n          tmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n        }\n      }\n\n      return tmp[0];\n    },\n    chordLengthParameterize: function chordLengthParameterize(first, last) {\n      var u = [0];\n\n      for (var i = first + 1; i <= last; i++) {\n        u[i - first] = u[i - first - 1] + this.points[i].getDistance(this.points[i - 1]);\n      }\n\n      for (var i = 1, m = last - first; i <= m; i++) {\n        u[i] /= u[m];\n      }\n\n      return u;\n    },\n    findMaxError: function findMaxError(first, last, curve, u) {\n      var index = Math.floor((last - first + 1) / 2),\n          maxDist = 0;\n\n      for (var i = first + 1; i < last; i++) {\n        var P = this.evaluate(3, curve, u[i - first]);\n        var v = P.subtract(this.points[i]);\n        var dist = v.x * v.x + v.y * v.y;\n\n        if (dist >= maxDist) {\n          maxDist = dist;\n          index = i;\n        }\n      }\n\n      return {\n        error: maxDist,\n        index: index\n      };\n    }\n  });\n  var TextItem = Item.extend({\n    _class: 'TextItem',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _serializeFields: {\n      content: null\n    },\n    _boundsOptions: {\n      stroke: false,\n      handle: false\n    },\n    initialize: function TextItem(arg) {\n      this._content = '';\n      this._lines = [];\n      var hasProps = arg && Base.isPlainObject(arg) && arg.x === undefined && arg.y === undefined;\n\n      this._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n    },\n    _equals: function _equals(item) {\n      return this._content === item._content;\n    },\n    copyContent: function copyContent(source) {\n      this.setContent(source._content);\n    },\n    getContent: function getContent() {\n      return this._content;\n    },\n    setContent: function setContent(content) {\n      this._content = '' + content;\n      this._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\n      this._changed(521);\n    },\n    isEmpty: function isEmpty() {\n      return !this._content;\n    },\n    getCharacterStyle: '#getStyle',\n    setCharacterStyle: '#setStyle',\n    getParagraphStyle: '#getStyle',\n    setParagraphStyle: '#setStyle'\n  });\n  var PointText = TextItem.extend({\n    _class: 'PointText',\n    initialize: function PointText() {\n      TextItem.apply(this, arguments);\n    },\n    getPoint: function getPoint() {\n      var point = this._matrix.getTranslation();\n\n      return new LinkedPoint(point.x, point.y, this, 'setPoint');\n    },\n    setPoint: function setPoint() {\n      var point = Point.read(arguments);\n      this.translate(point.subtract(this._matrix.getTranslation()));\n    },\n    _draw: function _draw(ctx, param, viewMatrix) {\n      if (!this._content) return;\n\n      this._setStyles(ctx, param, viewMatrix);\n\n      var lines = this._lines,\n          style = this._style,\n          hasFill = style.hasFill(),\n          hasStroke = style.hasStroke(),\n          leading = style.getLeading(),\n          shadowColor = ctx.shadowColor;\n      ctx.font = style.getFontStyle();\n      ctx.textAlign = style.getJustification();\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        ctx.shadowColor = shadowColor;\n        var line = lines[i];\n\n        if (hasFill) {\n          ctx.fillText(line, 0, 0);\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n        }\n\n        if (hasStroke) ctx.strokeText(line, 0, 0);\n        ctx.translate(0, leading);\n      }\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var style = this._style,\n          lines = this._lines,\n          numLines = lines.length,\n          justification = style.getJustification(),\n          leading = style.getLeading(),\n          width = this.getView().getTextWidth(style.getFontStyle(), lines),\n          x = 0;\n      if (justification !== 'left') x -= width / (justification === 'center' ? 2 : 1);\n      var rect = new _Rectangle(x, numLines ? -0.75 * leading : 0, width, numLines * leading);\n      return matrix ? matrix._transformBounds(rect, rect) : rect;\n    }\n  });\n  var Color = Base.extend(new function () {\n    var types = {\n      gray: ['gray'],\n      rgb: ['red', 'green', 'blue'],\n      hsb: ['hue', 'saturation', 'brightness'],\n      hsl: ['hue', 'saturation', 'lightness'],\n      gradient: ['gradient', 'origin', 'destination', 'highlight']\n    };\n    var componentParsers = {},\n        namedColors = {\n      transparent: [0, 0, 0, 0]\n    },\n        colorCtx;\n\n    function fromCSS(string) {\n      var match = string.match(/^#([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})?$/i) || string.match(/^#([\\da-f])([\\da-f])([\\da-f])([\\da-f])?$/i),\n          type = 'rgb',\n          components;\n\n      if (match) {\n        var amount = match[4] ? 4 : 3;\n        components = new Array(amount);\n\n        for (var i = 0; i < amount; i++) {\n          var value = match[i + 1];\n          components[i] = parseInt(value.length == 1 ? value + value : value, 16) / 255;\n        }\n      } else if (match = string.match(/^(rgb|hsl)a?\\((.*)\\)$/)) {\n        type = match[1];\n        components = match[2].trim().split(/[,\\s]+/g);\n        var isHSL = type === 'hsl';\n\n        for (var i = 0, l = Math.min(components.length, 4); i < l; i++) {\n          var component = components[i];\n          var value = parseFloat(component);\n\n          if (isHSL) {\n            if (i === 0) {\n              var unit = component.match(/([a-z]*)$/)[1];\n              value *= {\n                turn: 360,\n                rad: 180 / Math.PI,\n                grad: 0.9\n              }[unit] || 1;\n            } else if (i < 3) {\n              value /= 100;\n            }\n          } else if (i < 3) {\n            value /= /%$/.test(component) ? 100 : 255;\n          }\n\n          components[i] = value;\n        }\n      } else {\n        var color = namedColors[string];\n\n        if (!color) {\n          if (window) {\n            if (!colorCtx) {\n              colorCtx = CanvasProvider.getContext(1, 1);\n              colorCtx.globalCompositeOperation = 'copy';\n            }\n\n            colorCtx.fillStyle = 'rgba(0,0,0,0)';\n            colorCtx.fillStyle = string;\n            colorCtx.fillRect(0, 0, 1, 1);\n            var data = colorCtx.getImageData(0, 0, 1, 1).data;\n            color = namedColors[string] = [data[0] / 255, data[1] / 255, data[2] / 255];\n          } else {\n            color = [0, 0, 0];\n          }\n        }\n\n        components = color.slice();\n      }\n\n      return [type, components];\n    }\n\n    var hsbIndices = [[0, 3, 1], [2, 0, 1], [1, 0, 3], [1, 2, 0], [3, 1, 0], [0, 1, 2]];\n    var converters = {\n      'rgb-hsb': function rgbHsb(r, g, b) {\n        var max = Math.max(r, g, b),\n            min = Math.min(r, g, b),\n            delta = max - min,\n            h = delta === 0 ? 0 : (max == r ? (g - b) / delta + (g < b ? 6 : 0) : max == g ? (b - r) / delta + 2 : (r - g) / delta + 4) * 60;\n        return [h, max === 0 ? 0 : delta / max, max];\n      },\n      'hsb-rgb': function hsbRgb(h, s, b) {\n        h = (h / 60 % 6 + 6) % 6;\n        var i = Math.floor(h),\n            f = h - i,\n            i = hsbIndices[i],\n            v = [b, b * (1 - s), b * (1 - s * f), b * (1 - s * (1 - f))];\n        return [v[i[0]], v[i[1]], v[i[2]]];\n      },\n      'rgb-hsl': function rgbHsl(r, g, b) {\n        var max = Math.max(r, g, b),\n            min = Math.min(r, g, b),\n            delta = max - min,\n            achromatic = delta === 0,\n            h = achromatic ? 0 : (max == r ? (g - b) / delta + (g < b ? 6 : 0) : max == g ? (b - r) / delta + 2 : (r - g) / delta + 4) * 60,\n            l = (max + min) / 2,\n            s = achromatic ? 0 : l < 0.5 ? delta / (max + min) : delta / (2 - max - min);\n        return [h, s, l];\n      },\n      'hsl-rgb': function hslRgb(h, s, l) {\n        h = (h / 360 % 1 + 1) % 1;\n        if (s === 0) return [l, l, l];\n        var t3s = [h + 1 / 3, h, h - 1 / 3],\n            t2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n            t1 = 2 * l - t2,\n            c = [];\n\n        for (var i = 0; i < 3; i++) {\n          var t3 = t3s[i];\n          if (t3 < 0) t3 += 1;\n          if (t3 > 1) t3 -= 1;\n          c[i] = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 : 2 * t3 < 1 ? t2 : 3 * t3 < 2 ? t1 + (t2 - t1) * (2 / 3 - t3) * 6 : t1;\n        }\n\n        return c;\n      },\n      'rgb-gray': function rgbGray(r, g, b) {\n        return [r * 0.2989 + g * 0.587 + b * 0.114];\n      },\n      'gray-rgb': function grayRgb(g) {\n        return [g, g, g];\n      },\n      'gray-hsb': function grayHsb(g) {\n        return [0, 0, g];\n      },\n      'gray-hsl': function grayHsl(g) {\n        return [0, 0, g];\n      },\n      'gradient-rgb': function gradientRgb() {\n        return [];\n      },\n      'rgb-gradient': function rgbGradient() {\n        return [];\n      }\n    };\n    return Base.each(types, function (properties, type) {\n      componentParsers[type] = [];\n      Base.each(properties, function (name, index) {\n        var part = Base.capitalize(name),\n            hasOverlap = /^(hue|saturation)$/.test(name),\n            parser = componentParsers[type][index] = type === 'gradient' ? name === 'gradient' ? function (value) {\n          var current = this._components[0];\n          value = Gradient.read(Array.isArray(value) ? value : arguments, 0, {\n            readNull: true\n          });\n\n          if (current !== value) {\n            if (current) current._removeOwner(this);\n            if (value) value._addOwner(this);\n          }\n\n          return value;\n        } : function () {\n          return Point.read(arguments, 0, {\n            readNull: name === 'highlight',\n            clone: true\n          });\n        } : function (value) {\n          return value == null || isNaN(value) ? 0 : +value;\n        };\n\n        this['get' + part] = function () {\n          return this._type === type || hasOverlap && /^hs[bl]$/.test(this._type) ? this._components[index] : this._convert(type)[index];\n        };\n\n        this['set' + part] = function (value) {\n          if (this._type !== type && !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n            this._components = this._convert(type);\n            this._properties = types[type];\n            this._type = type;\n          }\n\n          this._components[index] = parser.call(this, value);\n\n          this._changed();\n        };\n      }, this);\n    }, {\n      _class: 'Color',\n      _readIndex: true,\n      initialize: function Color(arg) {\n        var args = arguments,\n            reading = this.__read,\n            read = 0,\n            type,\n            components,\n            alpha,\n            values;\n\n        if (Array.isArray(arg)) {\n          args = arg;\n          arg = args[0];\n        }\n\n        var argType = arg != null && typeof arg;\n\n        if (argType === 'string' && arg in types) {\n          type = arg;\n          arg = args[1];\n\n          if (Array.isArray(arg)) {\n            components = arg;\n            alpha = args[2];\n          } else {\n            if (reading) read = 1;\n            args = Base.slice(args, 1);\n            argType = typeof arg;\n          }\n        }\n\n        if (!components) {\n          values = argType === 'number' ? args : argType === 'object' && arg.length != null ? arg : null;\n\n          if (values) {\n            if (!type) type = values.length >= 3 ? 'rgb' : 'gray';\n            var length = types[type].length;\n            alpha = values[length];\n\n            if (reading) {\n              read += values === arguments ? length + (alpha != null ? 1 : 0) : 1;\n            }\n\n            if (values.length > length) values = Base.slice(values, 0, length);\n          } else if (argType === 'string') {\n            var converted = fromCSS(arg);\n            type = converted[0];\n            components = converted[1];\n\n            if (components.length === 4) {\n              alpha = components[3];\n              components.length--;\n            }\n          } else if (argType === 'object') {\n            if (arg.constructor === Color) {\n              type = arg._type;\n              components = arg._components.slice();\n              alpha = arg._alpha;\n\n              if (type === 'gradient') {\n                for (var i = 1, l = components.length; i < l; i++) {\n                  var point = components[i];\n                  if (point) components[i] = point.clone();\n                }\n              }\n            } else if (arg.constructor === Gradient) {\n              type = 'gradient';\n              values = args;\n            } else {\n              type = 'hue' in arg ? 'lightness' in arg ? 'hsl' : 'hsb' : 'gradient' in arg || 'stops' in arg || 'radial' in arg ? 'gradient' : 'gray' in arg ? 'gray' : 'rgb';\n              var properties = types[type],\n                  parsers = componentParsers[type];\n              this._components = components = [];\n\n              for (var i = 0, l = properties.length; i < l; i++) {\n                var value = arg[properties[i]];\n\n                if (value == null && !i && type === 'gradient' && 'stops' in arg) {\n                  value = {\n                    stops: arg.stops,\n                    radial: arg.radial\n                  };\n                }\n\n                value = parsers[i].call(this, value);\n                if (value != null) components[i] = value;\n              }\n\n              alpha = arg.alpha;\n            }\n          }\n\n          if (reading && type) read = 1;\n        }\n\n        this._type = type || 'rgb';\n\n        if (!components) {\n          this._components = components = [];\n          var parsers = componentParsers[this._type];\n\n          for (var i = 0, l = parsers.length; i < l; i++) {\n            var value = parsers[i].call(this, values && values[i]);\n            if (value != null) components[i] = value;\n          }\n        }\n\n        this._components = components;\n        this._properties = types[this._type];\n        this._alpha = alpha;\n        if (reading) this.__read = read;\n        return this;\n      },\n      set: '#initialize',\n      _serialize: function _serialize(options, dictionary) {\n        var components = this.getComponents();\n        return Base.serialize(/^(gray|rgb)$/.test(this._type) ? components : [this._type].concat(components), options, true, dictionary);\n      },\n      _changed: function _changed() {\n        this._canvasStyle = null;\n\n        if (this._owner) {\n          if (this._setter) {\n            this._owner[this._setter](this);\n          } else {\n            this._owner._changed(129);\n          }\n        }\n      },\n      _convert: function _convert(type) {\n        var converter;\n        return this._type === type ? this._components.slice() : (converter = converters[this._type + '-' + type]) ? converter.apply(this, this._components) : converters['rgb-' + type].apply(this, converters[this._type + '-rgb'].apply(this, this._components));\n      },\n      convert: function convert(type) {\n        return new Color(type, this._convert(type), this._alpha);\n      },\n      getType: function getType() {\n        return this._type;\n      },\n      setType: function setType(type) {\n        this._components = this._convert(type);\n        this._properties = types[type];\n        this._type = type;\n      },\n      getComponents: function getComponents() {\n        var components = this._components.slice();\n\n        if (this._alpha != null) components.push(this._alpha);\n        return components;\n      },\n      getAlpha: function getAlpha() {\n        return this._alpha != null ? this._alpha : 1;\n      },\n      setAlpha: function setAlpha(alpha) {\n        this._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\n        this._changed();\n      },\n      hasAlpha: function hasAlpha() {\n        return this._alpha != null;\n      },\n      equals: function equals(color) {\n        var col = Base.isPlainValue(color, true) ? Color.read(arguments) : color;\n        return col === this || col && this._class === col._class && this._type === col._type && this.getAlpha() === col.getAlpha() && Base.equals(this._components, col._components) || false;\n      },\n      toString: function toString() {\n        var properties = this._properties,\n            parts = [],\n            isGradient = this._type === 'gradient',\n            f = Formatter.instance;\n\n        for (var i = 0, l = properties.length; i < l; i++) {\n          var value = this._components[i];\n          if (value != null) parts.push(properties[i] + ': ' + (isGradient ? value : f.number(value)));\n        }\n\n        if (this._alpha != null) parts.push('alpha: ' + f.number(this._alpha));\n        return '{ ' + parts.join(', ') + ' }';\n      },\n      toCSS: function toCSS(hex) {\n        var components = this._convert('rgb'),\n            alpha = hex || this._alpha == null ? 1 : this._alpha;\n\n        function convert(val) {\n          return Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n        }\n\n        components = [convert(components[0]), convert(components[1]), convert(components[2])];\n        if (alpha < 1) components.push(alpha < 0 ? 0 : alpha);\n        return hex ? '#' + ((1 << 24) + (components[0] << 16) + (components[1] << 8) + components[2]).toString(16).slice(1) : (components.length == 4 ? 'rgba(' : 'rgb(') + components.join(',') + ')';\n      },\n      toCanvasStyle: function toCanvasStyle(ctx, matrix) {\n        if (this._canvasStyle) return this._canvasStyle;\n        if (this._type !== 'gradient') return this._canvasStyle = this.toCSS();\n        var components = this._components,\n            gradient = components[0],\n            stops = gradient._stops,\n            origin = components[1],\n            destination = components[2],\n            highlight = components[3],\n            inverse = matrix && matrix.inverted(),\n            canvasGradient;\n\n        if (inverse) {\n          origin = inverse._transformPoint(origin);\n          destination = inverse._transformPoint(destination);\n          if (highlight) highlight = inverse._transformPoint(highlight);\n        }\n\n        if (gradient._radial) {\n          var radius = destination.getDistance(origin);\n\n          if (highlight) {\n            var vector = highlight.subtract(origin);\n            if (vector.getLength() > radius) highlight = origin.add(vector.normalize(radius - 0.1));\n          }\n\n          var start = highlight || origin;\n          canvasGradient = ctx.createRadialGradient(start.x, start.y, 0, origin.x, origin.y, radius);\n        } else {\n          canvasGradient = ctx.createLinearGradient(origin.x, origin.y, destination.x, destination.y);\n        }\n\n        for (var i = 0, l = stops.length; i < l; i++) {\n          var stop = stops[i],\n              offset = stop._offset;\n          canvasGradient.addColorStop(offset == null ? i / (l - 1) : offset, stop._color.toCanvasStyle());\n        }\n\n        return this._canvasStyle = canvasGradient;\n      },\n      transform: function transform(matrix) {\n        if (this._type === 'gradient') {\n          var components = this._components;\n\n          for (var i = 1, l = components.length; i < l; i++) {\n            var point = components[i];\n\n            matrix._transformPoint(point, point, true);\n          }\n\n          this._changed();\n        }\n      },\n      statics: {\n        _types: types,\n        random: function random() {\n          var random = Math.random;\n          return new Color(random(), random(), random());\n        },\n        _setOwner: function _setOwner(color, owner, setter) {\n          if (color) {\n            if (color._owner && owner && color._owner !== owner) {\n              color = color.clone();\n            }\n\n            if (!color._owner ^ !owner) {\n              color._owner = owner || null;\n              color._setter = setter || null;\n            }\n          }\n\n          return color;\n        }\n      }\n    });\n  }(), new function () {\n    var operators = {\n      add: function add(a, b) {\n        return a + b;\n      },\n      subtract: function subtract(a, b) {\n        return a - b;\n      },\n      multiply: function multiply(a, b) {\n        return a * b;\n      },\n      divide: function divide(a, b) {\n        return a / b;\n      }\n    };\n    return Base.each(operators, function (operator, name) {\n      this[name] = function (color) {\n        color = Color.read(arguments);\n\n        var type = this._type,\n            components1 = this._components,\n            components2 = color._convert(type);\n\n        for (var i = 0, l = components1.length; i < l; i++) {\n          components2[i] = operator(components1[i], components2[i]);\n        }\n\n        return new Color(type, components2, this._alpha != null ? operator(this._alpha, color.getAlpha()) : null);\n      };\n    }, {});\n  }());\n  var Gradient = Base.extend({\n    _class: 'Gradient',\n    initialize: function Gradient(stops, radial) {\n      this._id = UID.get();\n\n      if (stops && Base.isPlainObject(stops)) {\n        this.set(stops);\n        stops = radial = null;\n      }\n\n      if (this._stops == null) {\n        this.setStops(stops || ['white', 'black']);\n      }\n\n      if (this._radial == null) {\n        this.setRadial(typeof radial === 'string' && radial === 'radial' || radial || false);\n      }\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return dictionary.add(this, function () {\n        return Base.serialize([this._stops, this._radial], options, true, dictionary);\n      });\n    },\n    _changed: function _changed() {\n      for (var i = 0, l = this._owners && this._owners.length; i < l; i++) {\n        this._owners[i]._changed();\n      }\n    },\n    _addOwner: function _addOwner(color) {\n      if (!this._owners) this._owners = [];\n\n      this._owners.push(color);\n    },\n    _removeOwner: function _removeOwner(color) {\n      var index = this._owners ? this._owners.indexOf(color) : -1;\n\n      if (index != -1) {\n        this._owners.splice(index, 1);\n\n        if (!this._owners.length) this._owners = undefined;\n      }\n    },\n    clone: function clone() {\n      var stops = [];\n\n      for (var i = 0, l = this._stops.length; i < l; i++) {\n        stops[i] = this._stops[i].clone();\n      }\n\n      return new Gradient(stops, this._radial);\n    },\n    getStops: function getStops() {\n      return this._stops;\n    },\n    setStops: function setStops(stops) {\n      if (stops.length < 2) {\n        throw new Error('Gradient stop list needs to contain at least two stops.');\n      }\n\n      var _stops = this._stops;\n\n      if (_stops) {\n        for (var i = 0, l = _stops.length; i < l; i++) {\n          _stops[i]._owner = undefined;\n        }\n      }\n\n      _stops = this._stops = GradientStop.readList(stops, 0, {\n        clone: true\n      });\n\n      for (var i = 0, l = _stops.length; i < l; i++) {\n        _stops[i]._owner = this;\n      }\n\n      this._changed();\n    },\n    getRadial: function getRadial() {\n      return this._radial;\n    },\n    setRadial: function setRadial(radial) {\n      this._radial = radial;\n\n      this._changed();\n    },\n    equals: function equals(gradient) {\n      if (gradient === this) return true;\n\n      if (gradient && this._class === gradient._class) {\n        var stops1 = this._stops,\n            stops2 = gradient._stops,\n            length = stops1.length;\n\n        if (length === stops2.length) {\n          for (var i = 0; i < length; i++) {\n            if (!stops1[i].equals(stops2[i])) return false;\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var GradientStop = Base.extend({\n    _class: 'GradientStop',\n    initialize: function GradientStop(arg0, arg1) {\n      var color = arg0,\n          offset = arg1;\n\n      if (typeof arg0 === 'object' && arg1 === undefined) {\n        if (Array.isArray(arg0) && typeof arg0[0] !== 'number') {\n          color = arg0[0];\n          offset = arg0[1];\n        } else if ('color' in arg0 || 'offset' in arg0 || 'rampPoint' in arg0) {\n          color = arg0.color;\n          offset = arg0.offset || arg0.rampPoint || 0;\n        }\n      }\n\n      this.setColor(color);\n      this.setOffset(offset);\n    },\n    clone: function clone() {\n      return new GradientStop(this._color.clone(), this._offset);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      var color = this._color,\n          offset = this._offset;\n      return Base.serialize(offset == null ? [color] : [color, offset], options, true, dictionary);\n    },\n    _changed: function _changed() {\n      if (this._owner) this._owner._changed(129);\n    },\n    getOffset: function getOffset() {\n      return this._offset;\n    },\n    setOffset: function setOffset(offset) {\n      this._offset = offset;\n\n      this._changed();\n    },\n    getRampPoint: '#getOffset',\n    setRampPoint: '#setOffset',\n    getColor: function getColor() {\n      return this._color;\n    },\n    setColor: function setColor() {\n      Color._setOwner(this._color, null);\n\n      this._color = Color._setOwner(Color.read(arguments, 0), this, 'setColor');\n\n      this._changed();\n    },\n    equals: function equals(stop) {\n      return stop === this || stop && this._class === stop._class && this._color.equals(stop._color) && this._offset == stop._offset || false;\n    }\n  });\n  var Style = Base.extend(new function () {\n    var itemDefaults = {\n      fillColor: null,\n      fillRule: 'nonzero',\n      strokeColor: null,\n      strokeWidth: 1,\n      strokeCap: 'butt',\n      strokeJoin: 'miter',\n      strokeScaling: true,\n      miterLimit: 10,\n      dashOffset: 0,\n      dashArray: [],\n      shadowColor: null,\n      shadowBlur: 0,\n      shadowOffset: new Point(),\n      selectedColor: null\n    },\n        groupDefaults = Base.set({}, itemDefaults, {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal',\n      fontSize: 12,\n      leading: null,\n      justification: 'left'\n    }),\n        textDefaults = Base.set({}, groupDefaults, {\n      fillColor: new Color()\n    }),\n        flags = {\n      strokeWidth: 193,\n      strokeCap: 193,\n      strokeJoin: 193,\n      strokeScaling: 201,\n      miterLimit: 193,\n      fontFamily: 9,\n      fontWeight: 9,\n      fontSize: 9,\n      font: 9,\n      leading: 9,\n      justification: 9\n    },\n        item = {\n      beans: true\n    },\n        fields = {\n      _class: 'Style',\n      beans: true,\n      initialize: function Style(style, _owner, _project) {\n        this._values = {};\n        this._owner = _owner;\n        this._project = _owner && _owner._project || _project || paper.project;\n        this._defaults = !_owner || _owner instanceof Group ? groupDefaults : _owner instanceof TextItem ? textDefaults : itemDefaults;\n        if (style) this.set(style);\n      }\n    };\n    Base.each(groupDefaults, function (value, key) {\n      var isColor = /Color$/.test(key),\n          isPoint = key === 'shadowOffset',\n          part = Base.capitalize(key),\n          flag = flags[key],\n          set = 'set' + part,\n          get = 'get' + part;\n\n      fields[set] = function (value) {\n        var owner = this._owner,\n            children = owner && owner._children,\n            applyToChildren = children && children.length > 0 && !(owner instanceof CompoundPath);\n\n        if (applyToChildren) {\n          for (var i = 0, l = children.length; i < l; i++) {\n            children[i]._style[set](value);\n          }\n        }\n\n        if ((key === 'selectedColor' || !applyToChildren) && key in this._defaults) {\n          var old = this._values[key];\n\n          if (old !== value) {\n            if (isColor) {\n              if (old) {\n                Color._setOwner(old, null);\n\n                old._canvasStyle = null;\n              }\n\n              if (value && value.constructor === Color) {\n                value = Color._setOwner(value, owner, applyToChildren && set);\n              }\n            }\n\n            this._values[key] = value;\n            if (owner) owner._changed(flag || 129);\n          }\n        }\n      };\n\n      fields[get] = function (_dontMerge) {\n        var owner = this._owner,\n            children = owner && owner._children,\n            applyToChildren = children && children.length > 0 && !(owner instanceof CompoundPath),\n            value;\n\n        if (applyToChildren && !_dontMerge) {\n          for (var i = 0, l = children.length; i < l; i++) {\n            var childValue = children[i]._style[get]();\n\n            if (!i) {\n              value = childValue;\n            } else if (!Base.equals(value, childValue)) {\n              return undefined;\n            }\n          }\n        } else if (key in this._defaults) {\n          var value = this._values[key];\n\n          if (value === undefined) {\n            value = this._defaults[key];\n\n            if (value && value.clone) {\n              value = value.clone();\n            }\n          } else {\n            var ctor = isColor ? Color : isPoint ? Point : null;\n\n            if (ctor && !(value && value.constructor === ctor)) {\n              this._values[key] = value = ctor.read([value], 0, {\n                readNull: true,\n                clone: true\n              });\n            }\n          }\n        }\n\n        if (value && isColor) {\n          value = Color._setOwner(value, owner, applyToChildren && set);\n        }\n\n        return value;\n      };\n\n      item[get] = function (_dontMerge) {\n        return this._style[get](_dontMerge);\n      };\n\n      item[set] = function (value) {\n        this._style[set](value);\n      };\n    });\n    Base.each({\n      Font: 'FontFamily',\n      WindingRule: 'FillRule'\n    }, function (value, key) {\n      var get = 'get' + key,\n          set = 'set' + key;\n      fields[get] = item[get] = '#get' + value;\n      fields[set] = item[set] = '#set' + value;\n    });\n    Item.inject(item);\n    return fields;\n  }(), {\n    set: function set(style) {\n      var isStyle = style instanceof Style,\n          values = isStyle ? style._values : style;\n\n      if (values) {\n        for (var key in values) {\n          if (key in this._defaults) {\n            var value = values[key];\n            this[key] = value && isStyle && value.clone ? value.clone() : value;\n          }\n        }\n      }\n    },\n    equals: function equals(style) {\n      function compare(style1, style2, secondary) {\n        var values1 = style1._values,\n            values2 = style2._values,\n            defaults2 = style2._defaults;\n\n        for (var key in values1) {\n          var value1 = values1[key],\n              value2 = values2[key];\n          if (!(secondary && key in values2) && !Base.equals(value1, value2 === undefined ? defaults2[key] : value2)) return false;\n        }\n\n        return true;\n      }\n\n      return style === this || style && this._class === style._class && compare(this, style) && compare(style, this, true) || false;\n    },\n    _dispose: function _dispose() {\n      var color;\n      color = this.getFillColor();\n      if (color) color._canvasStyle = null;\n      color = this.getStrokeColor();\n      if (color) color._canvasStyle = null;\n      color = this.getShadowColor();\n      if (color) color._canvasStyle = null;\n    },\n    hasFill: function hasFill() {\n      var color = this.getFillColor();\n      return !!color && color.alpha > 0;\n    },\n    hasStroke: function hasStroke() {\n      var color = this.getStrokeColor();\n      return !!color && color.alpha > 0 && this.getStrokeWidth() > 0;\n    },\n    hasShadow: function hasShadow() {\n      var color = this.getShadowColor();\n      return !!color && color.alpha > 0 && (this.getShadowBlur() > 0 || !this.getShadowOffset().isZero());\n    },\n    getView: function getView() {\n      return this._project._view;\n    },\n    getFontStyle: function getFontStyle() {\n      var fontSize = this.getFontSize();\n      return this.getFontWeight() + ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ') + this.getFontFamily();\n    },\n    getFont: '#getFontFamily',\n    setFont: '#setFontFamily',\n    getLeading: function getLeading() {\n      var leading = getLeading.base.call(this),\n          fontSize = this.getFontSize();\n      if (/pt|em|%|px/.test(fontSize)) fontSize = this.getView().getPixelSize(fontSize);\n      return leading != null ? leading : fontSize * 1.2;\n    }\n  });\n  var DomElement = new function () {\n    function handlePrefix(el, name, set, value) {\n      var prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n          suffix = name[0].toUpperCase() + name.substring(1);\n\n      for (var i = 0; i < 6; i++) {\n        var prefix = prefixes[i],\n            key = prefix ? prefix + suffix : name;\n\n        if (key in el) {\n          if (set) {\n            el[key] = value;\n          } else {\n            return el[key];\n          }\n\n          break;\n        }\n      }\n    }\n\n    return {\n      getStyles: function getStyles(el) {\n        var doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n            view = doc && doc.defaultView;\n        return view && view.getComputedStyle(el, '');\n      },\n      getBounds: function getBounds(el, viewport) {\n        var doc = el.ownerDocument,\n            body = doc.body,\n            html = doc.documentElement,\n            rect;\n\n        try {\n          rect = el.getBoundingClientRect();\n        } catch (e) {\n          rect = {\n            left: 0,\n            top: 0,\n            width: 0,\n            height: 0\n          };\n        }\n\n        var x = rect.left - (html.clientLeft || body.clientLeft || 0),\n            y = rect.top - (html.clientTop || body.clientTop || 0);\n\n        if (!viewport) {\n          var view = doc.defaultView;\n          x += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n          y += view.pageYOffset || html.scrollTop || body.scrollTop;\n        }\n\n        return new _Rectangle(x, y, rect.width, rect.height);\n      },\n      getViewportBounds: function getViewportBounds(el) {\n        var doc = el.ownerDocument,\n            view = doc.defaultView,\n            html = doc.documentElement;\n        return new _Rectangle(0, 0, view.innerWidth || html.clientWidth, view.innerHeight || html.clientHeight);\n      },\n      getOffset: function getOffset(el, viewport) {\n        return DomElement.getBounds(el, viewport).getPoint();\n      },\n      getSize: function getSize(el) {\n        return DomElement.getBounds(el, true).getSize();\n      },\n      isInvisible: function isInvisible(el) {\n        return DomElement.getSize(el).equals(new Size(0, 0));\n      },\n      isInView: function isInView(el) {\n        return !DomElement.isInvisible(el) && DomElement.getViewportBounds(el).intersects(DomElement.getBounds(el, true));\n      },\n      isInserted: function isInserted(el) {\n        return document.body.contains(el);\n      },\n      getPrefixed: function getPrefixed(el, name) {\n        return el && handlePrefix(el, name);\n      },\n      setPrefixed: function setPrefixed(el, name, value) {\n        if (typeof name === 'object') {\n          for (var key in name) {\n            handlePrefix(el, key, true, name[key]);\n          }\n        } else {\n          handlePrefix(el, name, true, value);\n        }\n      }\n    };\n  }();\n  var DomEvent = {\n    add: function add(el, events) {\n      if (el) {\n        for (var type in events) {\n          var func = events[type],\n              parts = type.split(/[\\s,]+/g);\n\n          for (var i = 0, l = parts.length; i < l; i++) {\n            var name = parts[i];\n            var options = el === document && (name === 'touchstart' || name === 'touchmove') ? {\n              passive: false\n            } : false;\n            el.addEventListener(name, func, options);\n          }\n        }\n      }\n    },\n    remove: function remove(el, events) {\n      if (el) {\n        for (var type in events) {\n          var func = events[type],\n              parts = type.split(/[\\s,]+/g);\n\n          for (var i = 0, l = parts.length; i < l; i++) {\n            el.removeEventListener(parts[i], func, false);\n          }\n        }\n      }\n    },\n    getPoint: function getPoint(event) {\n      var pos = event.targetTouches ? event.targetTouches.length ? event.targetTouches[0] : event.changedTouches[0] : event;\n      return new Point(pos.pageX || pos.clientX + document.documentElement.scrollLeft, pos.pageY || pos.clientY + document.documentElement.scrollTop);\n    },\n    getTarget: function getTarget(event) {\n      return event.target || event.srcElement;\n    },\n    getRelatedTarget: function getRelatedTarget(event) {\n      return event.relatedTarget || event.toElement;\n    },\n    getOffset: function getOffset(event, target) {\n      return DomEvent.getPoint(event).subtract(DomElement.getOffset(target || DomEvent.getTarget(event)));\n    }\n  };\n  DomEvent.requestAnimationFrame = new function () {\n    var nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n        requested = false,\n        callbacks = [],\n        timer;\n\n    function handleCallbacks() {\n      var functions = callbacks;\n      callbacks = [];\n\n      for (var i = 0, l = functions.length; i < l; i++) {\n        functions[i]();\n      }\n\n      requested = nativeRequest && callbacks.length;\n      if (requested) nativeRequest(handleCallbacks);\n    }\n\n    return function (callback) {\n      callbacks.push(callback);\n\n      if (nativeRequest) {\n        if (!requested) {\n          nativeRequest(handleCallbacks);\n          requested = true;\n        }\n      } else if (!timer) {\n        timer = setInterval(handleCallbacks, 1000 / 60);\n      }\n    };\n  }();\n  var View = Base.extend(Emitter, {\n    _class: 'View',\n    initialize: function View(project, element) {\n      function getSize(name) {\n        return element[name] || parseInt(element.getAttribute(name), 10);\n      }\n\n      function getCanvasSize() {\n        var size = DomElement.getSize(element);\n        return size.isNaN() || size.isZero() ? new Size(getSize('width'), getSize('height')) : size;\n      }\n\n      var size;\n\n      if (window && element) {\n        this._id = element.getAttribute('id');\n        if (this._id == null) element.setAttribute('id', this._id = 'view-' + View._id++);\n        DomEvent.add(element, this._viewEvents);\n        var none = 'none';\n        DomElement.setPrefixed(element.style, {\n          userDrag: none,\n          userSelect: none,\n          touchCallout: none,\n          contentZooming: none,\n          tapHighlightColor: 'rgba(0,0,0,0)'\n        });\n\n        if (PaperScope.hasAttribute(element, 'resize')) {\n          var that = this;\n          DomEvent.add(window, this._windowEvents = {\n            resize: function resize() {\n              that.setViewSize(getCanvasSize());\n            }\n          });\n        }\n\n        size = getCanvasSize();\n\n        if (PaperScope.hasAttribute(element, 'stats') && typeof Stats !== 'undefined') {\n          this._stats = new Stats();\n          var stats = this._stats.domElement,\n              style = stats.style,\n              offset = DomElement.getOffset(element);\n          style.position = 'absolute';\n          style.left = offset.x + 'px';\n          style.top = offset.y + 'px';\n          document.body.appendChild(stats);\n        }\n      } else {\n        size = new Size(element);\n        element = null;\n      }\n\n      this._project = project;\n      this._scope = project._scope;\n      this._element = element;\n      if (!this._pixelRatio) this._pixelRatio = window && window.devicePixelRatio || 1;\n\n      this._setElementSize(size.width, size.height);\n\n      this._viewSize = size;\n\n      View._views.push(this);\n\n      View._viewsById[this._id] = this;\n      (this._matrix = new Matrix())._owner = this;\n      if (!View._focused) View._focused = this;\n      this._frameItems = {};\n      this._frameItemCount = 0;\n      this._itemEvents = {\n        native: {},\n        virtual: {}\n      };\n      this._autoUpdate = !paper.agent.node;\n      this._needsUpdate = false;\n    },\n    remove: function remove() {\n      if (!this._project) return false;\n      if (View._focused === this) View._focused = null;\n\n      View._views.splice(View._views.indexOf(this), 1);\n\n      delete View._viewsById[this._id];\n      var project = this._project;\n      if (project._view === this) project._view = null;\n      DomEvent.remove(this._element, this._viewEvents);\n      DomEvent.remove(window, this._windowEvents);\n      this._element = this._project = null;\n      this.off('frame');\n      this._animate = false;\n      this._frameItems = {};\n      return true;\n    },\n    _events: Base.each(Item._itemHandlers.concat(['onResize', 'onKeyDown', 'onKeyUp']), function (name) {\n      this[name] = {};\n    }, {\n      onFrame: {\n        install: function install() {\n          this.play();\n        },\n        uninstall: function uninstall() {\n          this.pause();\n        }\n      }\n    }),\n    _animate: false,\n    _time: 0,\n    _count: 0,\n    getAutoUpdate: function getAutoUpdate() {\n      return this._autoUpdate;\n    },\n    setAutoUpdate: function setAutoUpdate(autoUpdate) {\n      this._autoUpdate = autoUpdate;\n      if (autoUpdate) this.requestUpdate();\n    },\n    update: function update() {},\n    draw: function draw() {\n      this.update();\n    },\n    requestUpdate: function requestUpdate() {\n      if (!this._requested) {\n        var that = this;\n        DomEvent.requestAnimationFrame(function () {\n          that._requested = false;\n\n          if (that._animate) {\n            that.requestUpdate();\n            var element = that._element;\n\n            if ((!DomElement.getPrefixed(document, 'hidden') || PaperScope.getAttribute(element, 'keepalive') === 'true') && DomElement.isInView(element)) {\n              that._handleFrame();\n            }\n          }\n\n          if (that._autoUpdate) that.update();\n        });\n        this._requested = true;\n      }\n    },\n    play: function play() {\n      this._animate = true;\n      this.requestUpdate();\n    },\n    pause: function pause() {\n      this._animate = false;\n    },\n    _handleFrame: function _handleFrame() {\n      paper = this._scope;\n      var now = Date.now() / 1000,\n          delta = this._last ? now - this._last : 0;\n      this._last = now;\n      this.emit('frame', new Base({\n        delta: delta,\n        time: this._time += delta,\n        count: this._count++\n      }));\n      if (this._stats) this._stats.update();\n    },\n    _animateItem: function _animateItem(item, animate) {\n      var items = this._frameItems;\n\n      if (animate) {\n        items[item._id] = {\n          item: item,\n          time: 0,\n          count: 0\n        };\n        if (++this._frameItemCount === 1) this.on('frame', this._handleFrameItems);\n      } else {\n        delete items[item._id];\n\n        if (--this._frameItemCount === 0) {\n          this.off('frame', this._handleFrameItems);\n        }\n      }\n    },\n    _handleFrameItems: function _handleFrameItems(event) {\n      for (var i in this._frameItems) {\n        var entry = this._frameItems[i];\n        entry.item.emit('frame', new Base(event, {\n          time: entry.time += event.delta,\n          count: entry.count++\n        }));\n      }\n    },\n    _changed: function _changed() {\n      this._project._changed(4097);\n\n      this._bounds = this._decomposed = undefined;\n    },\n    getElement: function getElement() {\n      return this._element;\n    },\n    getPixelRatio: function getPixelRatio() {\n      return this._pixelRatio;\n    },\n    getResolution: function getResolution() {\n      return this._pixelRatio * 72;\n    },\n    getViewSize: function getViewSize() {\n      var size = this._viewSize;\n      return new LinkedSize(size.width, size.height, this, 'setViewSize');\n    },\n    setViewSize: function setViewSize() {\n      var size = Size.read(arguments),\n          delta = size.subtract(this._viewSize);\n      if (delta.isZero()) return;\n\n      this._setElementSize(size.width, size.height);\n\n      this._viewSize.set(size);\n\n      this._changed();\n\n      this.emit('resize', {\n        size: size,\n        delta: delta\n      });\n\n      if (this._autoUpdate) {\n        this.update();\n      }\n    },\n    _setElementSize: function _setElementSize(width, height) {\n      var element = this._element;\n\n      if (element) {\n        if (element.width !== width) element.width = width;\n        if (element.height !== height) element.height = height;\n      }\n    },\n    getBounds: function getBounds() {\n      if (!this._bounds) this._bounds = this._matrix.inverted()._transformBounds(new _Rectangle(new Point(), this._viewSize));\n      return this._bounds;\n    },\n    getSize: function getSize() {\n      return this.getBounds().getSize();\n    },\n    isVisible: function isVisible() {\n      return DomElement.isInView(this._element);\n    },\n    isInserted: function isInserted() {\n      return DomElement.isInserted(this._element);\n    },\n    getPixelSize: function getPixelSize(size) {\n      var element = this._element,\n          pixels;\n\n      if (element) {\n        var parent = element.parentNode,\n            temp = document.createElement('div');\n        temp.style.fontSize = size;\n        parent.appendChild(temp);\n        pixels = parseFloat(DomElement.getStyles(temp).fontSize);\n        parent.removeChild(temp);\n      } else {\n        pixels = parseFloat(pixels);\n      }\n\n      return pixels;\n    },\n    getTextWidth: function getTextWidth(font, lines) {\n      return 0;\n    }\n  }, Base.each(['rotate', 'scale', 'shear', 'skew'], function (key) {\n    var rotate = key === 'rotate';\n\n    this[key] = function () {\n      var args = arguments,\n          value = (rotate ? Base : Point).read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      return this.transform(new Matrix()[key](value, center || this.getCenter(true)));\n    };\n  }, {\n    _decompose: function _decompose() {\n      return this._decomposed || (this._decomposed = this._matrix.decompose());\n    },\n    translate: function translate() {\n      var mx = new Matrix();\n      return this.transform(mx.translate.apply(mx, arguments));\n    },\n    getCenter: function getCenter() {\n      return this.getBounds().getCenter();\n    },\n    setCenter: function setCenter() {\n      var center = Point.read(arguments);\n      this.translate(this.getCenter().subtract(center));\n    },\n    getZoom: function getZoom() {\n      var scaling = this._decompose().scaling;\n\n      return (scaling.x + scaling.y) / 2;\n    },\n    setZoom: function setZoom(zoom) {\n      this.transform(new Matrix().scale(zoom / this.getZoom(), this.getCenter()));\n    },\n    getRotation: function getRotation() {\n      return this._decompose().rotation;\n    },\n    setRotation: function setRotation(rotation) {\n      var current = this.getRotation();\n\n      if (current != null && rotation != null) {\n        this.rotate(rotation - current);\n      }\n    },\n    getScaling: function getScaling() {\n      var scaling = this._decompose().scaling;\n\n      return new LinkedPoint(scaling.x, scaling.y, this, 'setScaling');\n    },\n    setScaling: function setScaling() {\n      var current = this.getScaling(),\n          scaling = Point.read(arguments, 0, {\n        clone: true,\n        readNull: true\n      });\n\n      if (current && scaling) {\n        this.scale(scaling.x / current.x, scaling.y / current.y);\n      }\n    },\n    getMatrix: function getMatrix() {\n      return this._matrix;\n    },\n    setMatrix: function setMatrix() {\n      var matrix = this._matrix;\n      matrix.initialize.apply(matrix, arguments);\n    },\n    transform: function transform(matrix) {\n      this._matrix.append(matrix);\n    },\n    scrollBy: function scrollBy() {\n      this.translate(Point.read(arguments).negate());\n    }\n  }), {\n    projectToView: function projectToView() {\n      return this._matrix._transformPoint(Point.read(arguments));\n    },\n    viewToProject: function viewToProject() {\n      return this._matrix._inverseTransform(Point.read(arguments));\n    },\n    getEventPoint: function getEventPoint(event) {\n      return this.viewToProject(DomEvent.getOffset(event, this._element));\n    }\n  }, {\n    statics: {\n      _views: [],\n      _viewsById: {},\n      _id: 0,\n      create: function create(project, element) {\n        if (document && typeof element === 'string') element = document.getElementById(element);\n        var ctor = window ? CanvasView : View;\n        return new ctor(project, element);\n      }\n    }\n  }, new function () {\n    if (!window) return;\n    var prevFocus,\n        tempFocus,\n        dragging = false,\n        mouseDown = false;\n\n    function getView(event) {\n      var target = DomEvent.getTarget(event);\n      return target.getAttribute && View._viewsById[target.getAttribute('id')];\n    }\n\n    function updateFocus() {\n      var view = View._focused;\n\n      if (!view || !view.isVisible()) {\n        for (var i = 0, l = View._views.length; i < l; i++) {\n          if ((view = View._views[i]).isVisible()) {\n            View._focused = tempFocus = view;\n            break;\n          }\n        }\n      }\n    }\n\n    function handleMouseMove(view, event, point) {\n      view._handleMouseEvent('mousemove', event, point);\n    }\n\n    var navigator = window.navigator,\n        mousedown,\n        mousemove,\n        mouseup;\n\n    if (navigator.pointerEnabled || navigator.msPointerEnabled) {\n      mousedown = 'pointerdown MSPointerDown';\n      mousemove = 'pointermove MSPointerMove';\n      mouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n    } else {\n      mousedown = 'touchstart';\n      mousemove = 'touchmove';\n      mouseup = 'touchend touchcancel';\n\n      if (!('ontouchstart' in window && navigator.userAgent.match(/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n        mousedown += ' mousedown';\n        mousemove += ' mousemove';\n        mouseup += ' mouseup';\n      }\n    }\n\n    var viewEvents = {},\n        docEvents = {\n      mouseout: function mouseout(event) {\n        var view = View._focused,\n            target = DomEvent.getRelatedTarget(event);\n\n        if (view && (!target || target.nodeName === 'HTML')) {\n          var offset = DomEvent.getOffset(event, view._element),\n              x = offset.x,\n              abs = Math.abs,\n              ax = abs(x),\n              max = 1 << 25,\n              diff = ax - max;\n          offset.x = abs(diff) < ax ? diff * (x < 0 ? -1 : 1) : x;\n          handleMouseMove(view, event, view.viewToProject(offset));\n        }\n      },\n      scroll: updateFocus\n    };\n\n    viewEvents[mousedown] = function (event) {\n      var view = View._focused = getView(event);\n\n      if (!dragging) {\n        dragging = true;\n\n        view._handleMouseEvent('mousedown', event);\n      }\n    };\n\n    docEvents[mousemove] = function (event) {\n      var view = View._focused;\n\n      if (!mouseDown) {\n        var target = getView(event);\n\n        if (target) {\n          if (view !== target) {\n            if (view) handleMouseMove(view, event);\n            if (!prevFocus) prevFocus = view;\n            view = View._focused = tempFocus = target;\n          }\n        } else if (tempFocus && tempFocus === view) {\n          if (prevFocus && !prevFocus.isInserted()) prevFocus = null;\n          view = View._focused = prevFocus;\n          prevFocus = null;\n          updateFocus();\n        }\n      }\n\n      if (view) handleMouseMove(view, event);\n    };\n\n    docEvents[mousedown] = function () {\n      mouseDown = true;\n    };\n\n    docEvents[mouseup] = function (event) {\n      var view = View._focused;\n      if (view && dragging) view._handleMouseEvent('mouseup', event);\n      mouseDown = dragging = false;\n    };\n\n    DomEvent.add(document, docEvents);\n    DomEvent.add(window, {\n      load: updateFocus\n    });\n    var called = false,\n        prevented = false,\n        fallbacks = {\n      doubleclick: 'click',\n      mousedrag: 'mousemove'\n    },\n        wasInView = false,\n        overView,\n        downPoint,\n        lastPoint,\n        downItem,\n        overItem,\n        dragItem,\n        clickItem,\n        clickTime,\n        dblClick;\n\n    function emitMouseEvent(obj, target, type, event, point, prevPoint, stopItem) {\n      var stopped = false,\n          mouseEvent;\n\n      function emit(obj, type) {\n        if (obj.responds(type)) {\n          if (!mouseEvent) {\n            mouseEvent = new MouseEvent(type, event, point, target || obj, prevPoint ? point.subtract(prevPoint) : null);\n          }\n\n          if (obj.emit(type, mouseEvent)) {\n            called = true;\n            if (mouseEvent.prevented) prevented = true;\n            if (mouseEvent.stopped) return stopped = true;\n          }\n        } else {\n          var fallback = fallbacks[type];\n          if (fallback) return emit(obj, fallback);\n        }\n      }\n\n      while (obj && obj !== stopItem) {\n        if (emit(obj, type)) break;\n        obj = obj._parent;\n      }\n\n      return stopped;\n    }\n\n    function emitMouseEvents(view, hitItem, type, event, point, prevPoint) {\n      view._project.removeOn(type);\n\n      prevented = called = false;\n      return dragItem && emitMouseEvent(dragItem, null, type, event, point, prevPoint) || hitItem && hitItem !== dragItem && !hitItem.isDescendant(dragItem) && emitMouseEvent(hitItem, null, type === 'mousedrag' ? 'mousemove' : type, event, point, prevPoint, dragItem) || emitMouseEvent(view, dragItem || hitItem || view, type, event, point, prevPoint);\n    }\n\n    var itemEventsMap = {\n      mousedown: {\n        mousedown: 1,\n        mousedrag: 1,\n        click: 1,\n        doubleclick: 1\n      },\n      mouseup: {\n        mouseup: 1,\n        mousedrag: 1,\n        click: 1,\n        doubleclick: 1\n      },\n      mousemove: {\n        mousedrag: 1,\n        mousemove: 1,\n        mouseenter: 1,\n        mouseleave: 1\n      }\n    };\n    return {\n      _viewEvents: viewEvents,\n      _handleMouseEvent: function _handleMouseEvent(type, event, point) {\n        var itemEvents = this._itemEvents,\n            hitItems = itemEvents.native[type],\n            nativeMove = type === 'mousemove',\n            tool = this._scope.tool,\n            view = this;\n\n        function responds(type) {\n          return itemEvents.virtual[type] || view.responds(type) || tool && tool.responds(type);\n        }\n\n        if (nativeMove && dragging && responds('mousedrag')) type = 'mousedrag';\n        if (!point) point = this.getEventPoint(event);\n\n        var inView = this.getBounds().contains(point),\n            hit = hitItems && inView && view._project.hitTest(point, {\n          tolerance: 0,\n          fill: true,\n          stroke: true\n        }),\n            hitItem = hit && hit.item || null,\n            handle = false,\n            mouse = {};\n\n        mouse[type.substr(5)] = true;\n\n        if (hitItems && hitItem !== overItem) {\n          if (overItem) {\n            emitMouseEvent(overItem, null, 'mouseleave', event, point);\n          }\n\n          if (hitItem) {\n            emitMouseEvent(hitItem, null, 'mouseenter', event, point);\n          }\n\n          overItem = hitItem;\n        }\n\n        if (wasInView ^ inView) {\n          emitMouseEvent(this, null, inView ? 'mouseenter' : 'mouseleave', event, point);\n          overView = inView ? this : null;\n          handle = true;\n        }\n\n        if ((inView || mouse.drag) && !point.equals(lastPoint)) {\n          emitMouseEvents(this, hitItem, nativeMove ? type : 'mousemove', event, point, lastPoint);\n          handle = true;\n        }\n\n        wasInView = inView;\n\n        if (mouse.down && inView || mouse.up && downPoint) {\n          emitMouseEvents(this, hitItem, type, event, point, downPoint);\n\n          if (mouse.down) {\n            dblClick = hitItem === clickItem && Date.now() - clickTime < 300;\n            downItem = clickItem = hitItem;\n\n            if (!prevented && hitItem) {\n              var item = hitItem;\n\n              while (item && !item.responds('mousedrag')) {\n                item = item._parent;\n              }\n\n              if (item) dragItem = hitItem;\n            }\n\n            downPoint = point;\n          } else if (mouse.up) {\n            if (!prevented && hitItem === downItem) {\n              clickTime = Date.now();\n              emitMouseEvents(this, hitItem, dblClick ? 'doubleclick' : 'click', event, point, downPoint);\n              dblClick = false;\n            }\n\n            downItem = dragItem = null;\n          }\n\n          wasInView = false;\n          handle = true;\n        }\n\n        lastPoint = point;\n\n        if (handle && tool) {\n          called = tool._handleMouseEvent(type, event, point, mouse) || called;\n        }\n\n        if (event.cancelable !== false && (called && !mouse.move || mouse.down && responds('mouseup'))) {\n          event.preventDefault();\n        }\n      },\n      _handleKeyEvent: function _handleKeyEvent(type, event, key, character) {\n        var scope = this._scope,\n            tool = scope.tool,\n            keyEvent;\n\n        function emit(obj) {\n          if (obj.responds(type)) {\n            paper = scope;\n            obj.emit(type, keyEvent = keyEvent || new KeyEvent(type, event, key, character));\n          }\n        }\n\n        if (this.isVisible()) {\n          emit(this);\n          if (tool && tool.responds(type)) emit(tool);\n        }\n      },\n      _countItemEvent: function _countItemEvent(type, sign) {\n        var itemEvents = this._itemEvents,\n            native = itemEvents.native,\n            virtual = itemEvents.virtual;\n\n        for (var key in itemEventsMap) {\n          native[key] = (native[key] || 0) + (itemEventsMap[key][type] || 0) * sign;\n        }\n\n        virtual[type] = (virtual[type] || 0) + sign;\n      },\n      statics: {\n        updateFocus: updateFocus,\n        _resetState: function _resetState() {\n          dragging = mouseDown = called = wasInView = false;\n          prevFocus = tempFocus = overView = downPoint = lastPoint = downItem = overItem = dragItem = clickItem = clickTime = dblClick = null;\n        }\n      }\n    };\n  }());\n  var CanvasView = View.extend({\n    _class: 'CanvasView',\n    initialize: function CanvasView(project, canvas) {\n      if (!(canvas instanceof window.HTMLCanvasElement)) {\n        var size = Size.read(arguments, 1);\n        if (size.isZero()) throw new Error('Cannot create CanvasView with the provided argument: ' + Base.slice(arguments, 1));\n        canvas = CanvasProvider.getCanvas(size);\n      }\n\n      var ctx = this._context = canvas.getContext('2d');\n      ctx.save();\n      this._pixelRatio = 1;\n\n      if (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n        var deviceRatio = window.devicePixelRatio || 1,\n            backingStoreRatio = DomElement.getPrefixed(ctx, 'backingStorePixelRatio') || 1;\n        this._pixelRatio = deviceRatio / backingStoreRatio;\n      }\n\n      View.call(this, project, canvas);\n      this._needsUpdate = true;\n    },\n    remove: function remove() {\n      this._context.restore();\n\n      return remove.base.call(this);\n    },\n    _setElementSize: function _setElementSize(width, height) {\n      var pixelRatio = this._pixelRatio;\n\n      _setElementSize.base.call(this, width * pixelRatio, height * pixelRatio);\n\n      if (pixelRatio !== 1) {\n        var element = this._element,\n            ctx = this._context;\n\n        if (!PaperScope.hasAttribute(element, 'resize')) {\n          var style = element.style;\n          style.width = width + 'px';\n          style.height = height + 'px';\n        }\n\n        ctx.restore();\n        ctx.save();\n        ctx.scale(pixelRatio, pixelRatio);\n      }\n    },\n    getContext: function getContext() {\n      return this._context;\n    },\n    getPixelSize: function getPixelSize(size) {\n      var agent = paper.agent,\n          pixels;\n\n      if (agent && agent.firefox) {\n        pixels = getPixelSize.base.call(this, size);\n      } else {\n        var ctx = this._context,\n            prevFont = ctx.font;\n        ctx.font = size + ' serif';\n        pixels = parseFloat(ctx.font);\n        ctx.font = prevFont;\n      }\n\n      return pixels;\n    },\n    getTextWidth: function getTextWidth(font, lines) {\n      var ctx = this._context,\n          prevFont = ctx.font,\n          width = 0;\n      ctx.font = font;\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        width = Math.max(width, ctx.measureText(lines[i]).width);\n      }\n\n      ctx.font = prevFont;\n      return width;\n    },\n    update: function update() {\n      if (!this._needsUpdate) return false;\n      var project = this._project,\n          ctx = this._context,\n          size = this._viewSize;\n      ctx.clearRect(0, 0, size.width + 1, size.height + 1);\n      if (project) project.draw(ctx, this._matrix, this._pixelRatio);\n      this._needsUpdate = false;\n      return true;\n    }\n  });\n  var Event = Base.extend({\n    _class: 'Event',\n    initialize: function Event(event) {\n      this.event = event;\n      this.type = event && event.type;\n    },\n    prevented: false,\n    stopped: false,\n    preventDefault: function preventDefault() {\n      this.prevented = true;\n      this.event.preventDefault();\n    },\n    stopPropagation: function stopPropagation() {\n      this.stopped = true;\n      this.event.stopPropagation();\n    },\n    stop: function stop() {\n      this.stopPropagation();\n      this.preventDefault();\n    },\n    getTimeStamp: function getTimeStamp() {\n      return this.event.timeStamp;\n    },\n    getModifiers: function getModifiers() {\n      return Key.modifiers;\n    }\n  });\n  var KeyEvent = Event.extend({\n    _class: 'KeyEvent',\n    initialize: function KeyEvent(type, event, key, character) {\n      this.type = type;\n      this.event = event;\n      this.key = key;\n      this.character = character;\n    },\n    toString: function toString() {\n      return \"{ type: '\" + this.type + \"', key: '\" + this.key + \"', character: '\" + this.character + \"', modifiers: \" + this.getModifiers() + \" }\";\n    }\n  });\n  var Key = new function () {\n    var keyLookup = {\n      '\\t': 'tab',\n      ' ': 'space',\n      '\\b': 'backspace',\n      '\\x7f': 'delete',\n      'Spacebar': 'space',\n      'Del': 'delete',\n      'Win': 'meta',\n      'Esc': 'escape'\n    },\n        charLookup = {\n      'tab': '\\t',\n      'space': ' ',\n      'enter': '\\r'\n    },\n        keyMap = {},\n        charMap = {},\n        metaFixMap,\n        downKey,\n        modifiers = new Base({\n      shift: false,\n      control: false,\n      alt: false,\n      meta: false,\n      capsLock: false,\n      space: false\n    }).inject({\n      option: {\n        get: function get() {\n          return this.alt;\n        }\n      },\n      command: {\n        get: function get() {\n          var agent = paper && paper.agent;\n          return agent && agent.mac ? this.meta : this.control;\n        }\n      }\n    });\n\n    function getKey(event) {\n      var key = event.key || event.keyIdentifier;\n      key = /^U\\+/.test(key) ? String.fromCharCode(parseInt(key.substr(2), 16)) : /^Arrow[A-Z]/.test(key) ? key.substr(5) : key === 'Unidentified' || key === undefined ? String.fromCharCode(event.keyCode) : key;\n      return keyLookup[key] || (key.length > 1 ? Base.hyphenate(key) : key.toLowerCase());\n    }\n\n    function handleKey(down, key, character, event) {\n      var type = down ? 'keydown' : 'keyup',\n          view = View._focused,\n          name;\n      keyMap[key] = down;\n\n      if (down) {\n        charMap[key] = character;\n      } else {\n        delete charMap[key];\n      }\n\n      if (key.length > 1 && (name = Base.camelize(key)) in modifiers) {\n        modifiers[name] = down;\n        var agent = paper && paper.agent;\n\n        if (name === 'meta' && agent && agent.mac) {\n          if (down) {\n            metaFixMap = {};\n          } else {\n            for (var k in metaFixMap) {\n              if (k in charMap) handleKey(false, k, metaFixMap[k], event);\n            }\n\n            metaFixMap = null;\n          }\n        }\n      } else if (down && metaFixMap) {\n        metaFixMap[key] = character;\n      }\n\n      if (view) {\n        view._handleKeyEvent(down ? 'keydown' : 'keyup', event, key, character);\n      }\n    }\n\n    DomEvent.add(document, {\n      keydown: function keydown(event) {\n        var key = getKey(event),\n            agent = paper && paper.agent;\n\n        if (key.length > 1 || agent && agent.chrome && (event.altKey || agent.mac && event.metaKey || !agent.mac && event.ctrlKey)) {\n          handleKey(true, key, charLookup[key] || (key.length > 1 ? '' : key), event);\n        } else {\n          downKey = key;\n        }\n      },\n      keypress: function keypress(event) {\n        if (downKey) {\n          var key = getKey(event),\n              code = event.charCode,\n              character = code >= 32 ? String.fromCharCode(code) : key.length > 1 ? '' : key;\n\n          if (key !== downKey) {\n            key = character.toLowerCase();\n          }\n\n          handleKey(true, key, character, event);\n          downKey = null;\n        }\n      },\n      keyup: function keyup(event) {\n        var key = getKey(event);\n        if (key in charMap) handleKey(false, key, charMap[key], event);\n      }\n    });\n    DomEvent.add(window, {\n      blur: function blur(event) {\n        for (var key in charMap) {\n          handleKey(false, key, charMap[key], event);\n        }\n      }\n    });\n    return {\n      modifiers: modifiers,\n      isDown: function isDown(key) {\n        return !!keyMap[key];\n      }\n    };\n  }();\n  var MouseEvent = Event.extend({\n    _class: 'MouseEvent',\n    initialize: function MouseEvent(type, event, point, target, delta) {\n      this.type = type;\n      this.event = event;\n      this.point = point;\n      this.target = target;\n      this.delta = delta;\n    },\n    toString: function toString() {\n      return \"{ type: '\" + this.type + \"', point: \" + this.point + ', target: ' + this.target + (this.delta ? ', delta: ' + this.delta : '') + ', modifiers: ' + this.getModifiers() + ' }';\n    }\n  });\n  var ToolEvent = Event.extend({\n    _class: 'ToolEvent',\n    _item: null,\n    initialize: function ToolEvent(tool, type, event) {\n      this.tool = tool;\n      this.type = type;\n      this.event = event;\n    },\n    _choosePoint: function _choosePoint(point, toolPoint) {\n      return point ? point : toolPoint ? toolPoint.clone() : null;\n    },\n    getPoint: function getPoint() {\n      return this._choosePoint(this._point, this.tool._point);\n    },\n    setPoint: function setPoint(point) {\n      this._point = point;\n    },\n    getLastPoint: function getLastPoint() {\n      return this._choosePoint(this._lastPoint, this.tool._lastPoint);\n    },\n    setLastPoint: function setLastPoint(lastPoint) {\n      this._lastPoint = lastPoint;\n    },\n    getDownPoint: function getDownPoint() {\n      return this._choosePoint(this._downPoint, this.tool._downPoint);\n    },\n    setDownPoint: function setDownPoint(downPoint) {\n      this._downPoint = downPoint;\n    },\n    getMiddlePoint: function getMiddlePoint() {\n      if (!this._middlePoint && this.tool._lastPoint) {\n        return this.tool._point.add(this.tool._lastPoint).divide(2);\n      }\n\n      return this._middlePoint;\n    },\n    setMiddlePoint: function setMiddlePoint(middlePoint) {\n      this._middlePoint = middlePoint;\n    },\n    getDelta: function getDelta() {\n      return !this._delta && this.tool._lastPoint ? this.tool._point.subtract(this.tool._lastPoint) : this._delta;\n    },\n    setDelta: function setDelta(delta) {\n      this._delta = delta;\n    },\n    getCount: function getCount() {\n      return this.tool[/^mouse(down|up)$/.test(this.type) ? '_downCount' : '_moveCount'];\n    },\n    setCount: function setCount(count) {\n      this.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count'] = count;\n    },\n    getItem: function getItem() {\n      if (!this._item) {\n        var result = this.tool._scope.project.hitTest(this.getPoint());\n\n        if (result) {\n          var item = result.item,\n              parent = item._parent;\n\n          while (/^(Group|CompoundPath)$/.test(parent._class)) {\n            item = parent;\n            parent = parent._parent;\n          }\n\n          this._item = item;\n        }\n      }\n\n      return this._item;\n    },\n    setItem: function setItem(item) {\n      this._item = item;\n    },\n    toString: function toString() {\n      return '{ type: ' + this.type + ', point: ' + this.getPoint() + ', count: ' + this.getCount() + ', modifiers: ' + this.getModifiers() + ' }';\n    }\n  });\n  var Tool = PaperScopeItem.extend({\n    _class: 'Tool',\n    _list: 'tools',\n    _reference: 'tool',\n    _events: ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove', 'onActivate', 'onDeactivate', 'onEditOptions', 'onKeyDown', 'onKeyUp'],\n    initialize: function Tool(props) {\n      PaperScopeItem.call(this);\n      this._moveCount = -1;\n      this._downCount = -1;\n      this.set(props);\n    },\n    getMinDistance: function getMinDistance() {\n      return this._minDistance;\n    },\n    setMinDistance: function setMinDistance(minDistance) {\n      this._minDistance = minDistance;\n\n      if (minDistance != null && this._maxDistance != null && minDistance > this._maxDistance) {\n        this._maxDistance = minDistance;\n      }\n    },\n    getMaxDistance: function getMaxDistance() {\n      return this._maxDistance;\n    },\n    setMaxDistance: function setMaxDistance(maxDistance) {\n      this._maxDistance = maxDistance;\n\n      if (this._minDistance != null && maxDistance != null && maxDistance < this._minDistance) {\n        this._minDistance = maxDistance;\n      }\n    },\n    getFixedDistance: function getFixedDistance() {\n      return this._minDistance == this._maxDistance ? this._minDistance : null;\n    },\n    setFixedDistance: function setFixedDistance(distance) {\n      this._minDistance = this._maxDistance = distance;\n    },\n    _handleMouseEvent: function _handleMouseEvent(type, event, point, mouse) {\n      paper = this._scope;\n      if (mouse.drag && !this.responds(type)) type = 'mousemove';\n      var move = mouse.move || mouse.drag,\n          responds = this.responds(type),\n          minDistance = this.minDistance,\n          maxDistance = this.maxDistance,\n          called = false,\n          tool = this;\n\n      function update(minDistance, maxDistance) {\n        var pt = point,\n            toolPoint = move ? tool._point : tool._downPoint || pt;\n\n        if (move) {\n          if (tool._moveCount >= 0 && pt.equals(toolPoint)) {\n            return false;\n          }\n\n          if (toolPoint && (minDistance != null || maxDistance != null)) {\n            var vector = pt.subtract(toolPoint),\n                distance = vector.getLength();\n            if (distance < (minDistance || 0)) return false;\n\n            if (maxDistance) {\n              pt = toolPoint.add(vector.normalize(Math.min(distance, maxDistance)));\n            }\n          }\n\n          tool._moveCount++;\n        }\n\n        tool._point = pt;\n        tool._lastPoint = toolPoint || pt;\n\n        if (mouse.down) {\n          tool._moveCount = -1;\n          tool._downPoint = pt;\n          tool._downCount++;\n        }\n\n        return true;\n      }\n\n      function emit() {\n        if (responds) {\n          called = tool.emit(type, new ToolEvent(tool, type, event)) || called;\n        }\n      }\n\n      if (mouse.down) {\n        update();\n        emit();\n      } else if (mouse.up) {\n        update(null, maxDistance);\n        emit();\n      } else if (responds) {\n        while (update(minDistance, maxDistance)) {\n          emit();\n        }\n      }\n\n      return called;\n    }\n  });\n  var Tween = Base.extend(Emitter, {\n    _class: 'Tween',\n    statics: {\n      easings: {\n        linear: function linear(t) {\n          return t;\n        },\n        easeInQuad: function easeInQuad(t) {\n          return t * t;\n        },\n        easeOutQuad: function easeOutQuad(t) {\n          return t * (2 - t);\n        },\n        easeInOutQuad: function easeInOutQuad(t) {\n          return t < 0.5 ? 2 * t * t : -1 + 2 * (2 - t) * t;\n        },\n        easeInCubic: function easeInCubic(t) {\n          return t * t * t;\n        },\n        easeOutCubic: function easeOutCubic(t) {\n          return --t * t * t + 1;\n        },\n        easeInOutCubic: function easeInOutCubic(t) {\n          return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n        },\n        easeInQuart: function easeInQuart(t) {\n          return t * t * t * t;\n        },\n        easeOutQuart: function easeOutQuart(t) {\n          return 1 - --t * t * t * t;\n        },\n        easeInOutQuart: function easeInOutQuart(t) {\n          return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n        },\n        easeInQuint: function easeInQuint(t) {\n          return t * t * t * t * t;\n        },\n        easeOutQuint: function easeOutQuint(t) {\n          return 1 + --t * t * t * t * t;\n        },\n        easeInOutQuint: function easeInOutQuint(t) {\n          return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n        }\n      }\n    },\n    initialize: function Tween(object, from, to, duration, easing, start) {\n      this.object = object;\n      var type = typeof easing;\n      var isFunction = type === 'function';\n      this.type = isFunction ? type : type === 'string' ? easing : 'linear';\n      this.easing = isFunction ? easing : Tween.easings[this.type];\n      this.duration = duration;\n      this.running = false;\n      this._then = null;\n      this._startTime = null;\n      var state = from || to;\n      this._keys = state ? Object.keys(state) : [];\n      this._parsedKeys = this._parseKeys(this._keys);\n      this._from = state && this._getState(from);\n      this._to = state && this._getState(to);\n\n      if (start !== false) {\n        this.start();\n      }\n    },\n    then: function then(_then) {\n      this._then = _then;\n      return this;\n    },\n    start: function start() {\n      this._startTime = null;\n      this.running = true;\n      return this;\n    },\n    stop: function stop() {\n      this.running = false;\n      return this;\n    },\n    update: function update(progress) {\n      if (this.running) {\n        if (progress > 1) {\n          progress = 1;\n          this.running = false;\n        }\n\n        var factor = this.easing(progress),\n            keys = this._keys,\n            getValue = function getValue(value) {\n          return typeof value === 'function' ? value(factor, progress) : value;\n        };\n\n        for (var i = 0, l = keys && keys.length; i < l; i++) {\n          var key = keys[i],\n              from = getValue(this._from[key]),\n              to = getValue(this._to[key]),\n              value = from && to && from.__add && to.__add ? to.__subtract(from).__multiply(factor).__add(from) : (to - from) * factor + from;\n\n          this._setProperty(this._parsedKeys[key], value);\n        }\n\n        if (!this.running && this._then) {\n          this._then(this.object);\n        }\n\n        if (this.responds('update')) {\n          this.emit('update', new Base({\n            progress: progress,\n            factor: factor\n          }));\n        }\n      }\n\n      return this;\n    },\n    _events: {\n      onUpdate: {}\n    },\n    _handleFrame: function _handleFrame(time) {\n      var startTime = this._startTime,\n          progress = startTime ? (time - startTime) / this.duration : 0;\n\n      if (!startTime) {\n        this._startTime = time;\n      }\n\n      this.update(progress);\n    },\n    _getState: function _getState(state) {\n      var keys = this._keys,\n          result = {};\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i],\n            path = this._parsedKeys[key],\n            current = this._getProperty(path),\n            value;\n\n        if (state) {\n          var resolved = this._resolveValue(current, state[key]);\n\n          this._setProperty(path, resolved);\n\n          value = this._getProperty(path);\n          value = value && value.clone ? value.clone() : value;\n\n          this._setProperty(path, current);\n        } else {\n          value = current && current.clone ? current.clone() : current;\n        }\n\n        result[key] = value;\n      }\n\n      return result;\n    },\n    _resolveValue: function _resolveValue(current, value) {\n      if (value) {\n        if (Array.isArray(value) && value.length === 2) {\n          var operator = value[0];\n          return operator && operator.match && operator.match(/^[+\\-\\*\\/]=/) ? this._calculate(current, operator[0], value[1]) : value;\n        } else if (typeof value === 'string') {\n          var match = value.match(/^[+\\-*/]=(.*)/);\n\n          if (match) {\n            var parsed = JSON.parse(match[1].replace(/(['\"])?([a-zA-Z0-9_]+)(['\"])?:/g, '\"$2\": '));\n            return this._calculate(current, value[0], parsed);\n          }\n        }\n      }\n\n      return value;\n    },\n    _calculate: function _calculate(left, operator, right) {\n      return paper.PaperScript.calculateBinary(left, operator, right);\n    },\n    _parseKeys: function _parseKeys(keys) {\n      var parsed = {};\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i],\n            path = key.replace(/\\.([^.]*)/g, '/$1').replace(/\\[['\"]?([^'\"\\]]*)['\"]?\\]/g, '/$1');\n        parsed[key] = path.split('/');\n      }\n\n      return parsed;\n    },\n    _getProperty: function _getProperty(path, offset) {\n      var obj = this.object;\n\n      for (var i = 0, l = path.length - (offset || 0); i < l && obj; i++) {\n        obj = obj[path[i]];\n      }\n\n      return obj;\n    },\n    _setProperty: function _setProperty(path, value) {\n      var dest = this._getProperty(path, 1);\n\n      if (dest) {\n        dest[path[path.length - 1]] = value;\n      }\n    }\n  });\n  var Http = {\n    request: function request(options) {\n      var xhr = new self.XMLHttpRequest();\n      xhr.open((options.method || 'get').toUpperCase(), options.url, Base.pick(options.async, true));\n      if (options.mimeType) xhr.overrideMimeType(options.mimeType);\n\n      xhr.onload = function () {\n        var status = xhr.status;\n\n        if (status === 0 || status === 200) {\n          if (options.onLoad) {\n            options.onLoad.call(xhr, xhr.responseText);\n          }\n        } else {\n          xhr.onerror();\n        }\n      };\n\n      xhr.onerror = function () {\n        var status = xhr.status,\n            message = 'Could not load \"' + options.url + '\" (Status: ' + status + ')';\n\n        if (options.onError) {\n          options.onError(message, status);\n        } else {\n          throw new Error(message);\n        }\n      };\n\n      return xhr.send(null);\n    }\n  };\n  var CanvasProvider = {\n    canvases: [],\n    getCanvas: function getCanvas(width, height) {\n      if (!window) return null;\n      var canvas,\n          clear = true;\n\n      if (typeof width === 'object') {\n        height = width.height;\n        width = width.width;\n      }\n\n      if (this.canvases.length) {\n        canvas = this.canvases.pop();\n      } else {\n        canvas = document.createElement('canvas');\n        clear = false;\n      }\n\n      var ctx = canvas.getContext('2d');\n\n      if (!ctx) {\n        throw new Error('Canvas ' + canvas + ' is unable to provide a 2D context.');\n      }\n\n      if (canvas.width === width && canvas.height === height) {\n        if (clear) ctx.clearRect(0, 0, width + 1, height + 1);\n      } else {\n        canvas.width = width;\n        canvas.height = height;\n      }\n\n      ctx.save();\n      return canvas;\n    },\n    getContext: function getContext(width, height) {\n      var canvas = this.getCanvas(width, height);\n      return canvas ? canvas.getContext('2d') : null;\n    },\n    release: function release(obj) {\n      var canvas = obj && obj.canvas ? obj.canvas : obj;\n\n      if (canvas && canvas.getContext) {\n        canvas.getContext('2d').restore();\n        this.canvases.push(canvas);\n      }\n    }\n  };\n  var BlendMode = new function () {\n    var min = Math.min,\n        max = Math.max,\n        abs = Math.abs,\n        sr,\n        sg,\n        sb,\n        sa,\n        br,\n        bg,\n        bb,\n        ba,\n        dr,\n        dg,\n        db;\n\n    function getLum(r, g, b) {\n      return 0.2989 * r + 0.587 * g + 0.114 * b;\n    }\n\n    function setLum(r, g, b, l) {\n      var d = l - getLum(r, g, b);\n      dr = r + d;\n      dg = g + d;\n      db = b + d;\n      var l = getLum(dr, dg, db),\n          mn = min(dr, dg, db),\n          mx = max(dr, dg, db);\n\n      if (mn < 0) {\n        var lmn = l - mn;\n        dr = l + (dr - l) * l / lmn;\n        dg = l + (dg - l) * l / lmn;\n        db = l + (db - l) * l / lmn;\n      }\n\n      if (mx > 255) {\n        var ln = 255 - l,\n            mxl = mx - l;\n        dr = l + (dr - l) * ln / mxl;\n        dg = l + (dg - l) * ln / mxl;\n        db = l + (db - l) * ln / mxl;\n      }\n    }\n\n    function getSat(r, g, b) {\n      return max(r, g, b) - min(r, g, b);\n    }\n\n    function setSat(r, g, b, s) {\n      var col = [r, g, b],\n          mx = max(r, g, b),\n          mn = min(r, g, b),\n          md;\n      mn = mn === r ? 0 : mn === g ? 1 : 2;\n      mx = mx === r ? 0 : mx === g ? 1 : 2;\n      md = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\n      if (col[mx] > col[mn]) {\n        col[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n        col[mx] = s;\n      } else {\n        col[md] = col[mx] = 0;\n      }\n\n      col[mn] = 0;\n      dr = col[0];\n      dg = col[1];\n      db = col[2];\n    }\n\n    var modes = {\n      multiply: function multiply() {\n        dr = br * sr / 255;\n        dg = bg * sg / 255;\n        db = bb * sb / 255;\n      },\n      screen: function screen() {\n        dr = br + sr - br * sr / 255;\n        dg = bg + sg - bg * sg / 255;\n        db = bb + sb - bb * sb / 255;\n      },\n      overlay: function overlay() {\n        dr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n        dg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n        db = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n      },\n      'soft-light': function softLight() {\n        var t = sr * br / 255;\n        dr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n        t = sg * bg / 255;\n        dg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n        t = sb * bb / 255;\n        db = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n      },\n      'hard-light': function hardLight() {\n        dr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n        dg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n        db = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n      },\n      'color-dodge': function colorDodge() {\n        dr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n        dg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n        db = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n      },\n      'color-burn': function colorBurn() {\n        dr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n        dg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n        db = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n      },\n      darken: function darken() {\n        dr = br < sr ? br : sr;\n        dg = bg < sg ? bg : sg;\n        db = bb < sb ? bb : sb;\n      },\n      lighten: function lighten() {\n        dr = br > sr ? br : sr;\n        dg = bg > sg ? bg : sg;\n        db = bb > sb ? bb : sb;\n      },\n      difference: function difference() {\n        dr = br - sr;\n        if (dr < 0) dr = -dr;\n        dg = bg - sg;\n        if (dg < 0) dg = -dg;\n        db = bb - sb;\n        if (db < 0) db = -db;\n      },\n      exclusion: function exclusion() {\n        dr = br + sr * (255 - br - br) / 255;\n        dg = bg + sg * (255 - bg - bg) / 255;\n        db = bb + sb * (255 - bb - bb) / 255;\n      },\n      hue: function hue() {\n        setSat(sr, sg, sb, getSat(br, bg, bb));\n        setLum(dr, dg, db, getLum(br, bg, bb));\n      },\n      saturation: function saturation() {\n        setSat(br, bg, bb, getSat(sr, sg, sb));\n        setLum(dr, dg, db, getLum(br, bg, bb));\n      },\n      luminosity: function luminosity() {\n        setLum(br, bg, bb, getLum(sr, sg, sb));\n      },\n      color: function color() {\n        setLum(sr, sg, sb, getLum(br, bg, bb));\n      },\n      add: function add() {\n        dr = min(br + sr, 255);\n        dg = min(bg + sg, 255);\n        db = min(bb + sb, 255);\n      },\n      subtract: function subtract() {\n        dr = max(br - sr, 0);\n        dg = max(bg - sg, 0);\n        db = max(bb - sb, 0);\n      },\n      average: function average() {\n        dr = (br + sr) / 2;\n        dg = (bg + sg) / 2;\n        db = (bb + sb) / 2;\n      },\n      negation: function negation() {\n        dr = 255 - abs(255 - sr - br);\n        dg = 255 - abs(255 - sg - bg);\n        db = 255 - abs(255 - sb - bb);\n      }\n    };\n    var nativeModes = this.nativeModes = Base.each(['source-over', 'source-in', 'source-out', 'source-atop', 'destination-over', 'destination-in', 'destination-out', 'destination-atop', 'lighter', 'darker', 'copy', 'xor'], function (mode) {\n      this[mode] = true;\n    }, {});\n    var ctx = CanvasProvider.getContext(1, 1);\n\n    if (ctx) {\n      Base.each(modes, function (func, mode) {\n        var darken = mode === 'darken',\n            ok = false;\n        ctx.save();\n\n        try {\n          ctx.fillStyle = darken ? '#300' : '#a00';\n          ctx.fillRect(0, 0, 1, 1);\n          ctx.globalCompositeOperation = mode;\n\n          if (ctx.globalCompositeOperation === mode) {\n            ctx.fillStyle = darken ? '#a00' : '#300';\n            ctx.fillRect(0, 0, 1, 1);\n            ok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n          }\n        } catch (e) {}\n\n        ctx.restore();\n        nativeModes[mode] = ok;\n      });\n      CanvasProvider.release(ctx);\n    }\n\n    this.process = function (mode, srcContext, dstContext, alpha, offset) {\n      var srcCanvas = srcContext.canvas,\n          normal = mode === 'normal';\n\n      if (normal || nativeModes[mode]) {\n        dstContext.save();\n        dstContext.setTransform(1, 0, 0, 1, 0, 0);\n        dstContext.globalAlpha = alpha;\n        if (!normal) dstContext.globalCompositeOperation = mode;\n        dstContext.drawImage(srcCanvas, offset.x, offset.y);\n        dstContext.restore();\n      } else {\n        var process = modes[mode];\n        if (!process) return;\n        var dstData = dstContext.getImageData(offset.x, offset.y, srcCanvas.width, srcCanvas.height),\n            dst = dstData.data,\n            src = srcContext.getImageData(0, 0, srcCanvas.width, srcCanvas.height).data;\n\n        for (var i = 0, l = dst.length; i < l; i += 4) {\n          sr = src[i];\n          br = dst[i];\n          sg = src[i + 1];\n          bg = dst[i + 1];\n          sb = src[i + 2];\n          bb = dst[i + 2];\n          sa = src[i + 3];\n          ba = dst[i + 3];\n          process();\n          var a1 = sa * alpha / 255,\n              a2 = 1 - a1;\n          dst[i] = a1 * dr + a2 * br;\n          dst[i + 1] = a1 * dg + a2 * bg;\n          dst[i + 2] = a1 * db + a2 * bb;\n          dst[i + 3] = sa * alpha + a2 * ba;\n        }\n\n        dstContext.putImageData(dstData, offset.x, offset.y);\n      }\n    };\n  }();\n  var SvgElement = new function () {\n    var svg = 'http://www.w3.org/2000/svg',\n        xmlns = 'http://www.w3.org/2000/xmlns',\n        xlink = 'http://www.w3.org/1999/xlink',\n        attributeNamespace = {\n      href: xlink,\n      xlink: xmlns,\n      xmlns: xmlns + '/',\n      'xmlns:xlink': xmlns + '/'\n    };\n\n    function create(tag, attributes, formatter) {\n      return set(document.createElementNS(svg, tag), attributes, formatter);\n    }\n\n    function get(node, name) {\n      var namespace = attributeNamespace[name],\n          value = namespace ? node.getAttributeNS(namespace, name) : node.getAttribute(name);\n      return value === 'null' ? null : value;\n    }\n\n    function set(node, attributes, formatter) {\n      for (var name in attributes) {\n        var value = attributes[name],\n            namespace = attributeNamespace[name];\n        if (typeof value === 'number' && formatter) value = formatter.number(value);\n\n        if (namespace) {\n          node.setAttributeNS(namespace, name, value);\n        } else {\n          node.setAttribute(name, value);\n        }\n      }\n\n      return node;\n    }\n\n    return {\n      svg: svg,\n      xmlns: xmlns,\n      xlink: xlink,\n      create: create,\n      get: get,\n      set: set\n    };\n  }();\n  var SvgStyles = Base.each({\n    fillColor: ['fill', 'color'],\n    fillRule: ['fill-rule', 'string'],\n    strokeColor: ['stroke', 'color'],\n    strokeWidth: ['stroke-width', 'number'],\n    strokeCap: ['stroke-linecap', 'string'],\n    strokeJoin: ['stroke-linejoin', 'string'],\n    strokeScaling: ['vector-effect', 'lookup', {\n      true: 'none',\n      false: 'non-scaling-stroke'\n    }, function (item, value) {\n      return !value && (item instanceof PathItem || item instanceof Shape || item instanceof TextItem);\n    }],\n    miterLimit: ['stroke-miterlimit', 'number'],\n    dashArray: ['stroke-dasharray', 'array'],\n    dashOffset: ['stroke-dashoffset', 'number'],\n    fontFamily: ['font-family', 'string'],\n    fontWeight: ['font-weight', 'string'],\n    fontSize: ['font-size', 'number'],\n    justification: ['text-anchor', 'lookup', {\n      left: 'start',\n      center: 'middle',\n      right: 'end'\n    }],\n    opacity: ['opacity', 'number'],\n    blendMode: ['mix-blend-mode', 'style']\n  }, function (entry, key) {\n    var part = Base.capitalize(key),\n        lookup = entry[2];\n    this[key] = {\n      type: entry[1],\n      property: key,\n      attribute: entry[0],\n      toSVG: lookup,\n      fromSVG: lookup && Base.each(lookup, function (value, name) {\n        this[value] = name;\n      }, {}),\n      exportFilter: entry[3],\n      get: 'get' + part,\n      set: 'set' + part\n    };\n  }, {});\n  new function () {\n    var formatter;\n\n    function getTransform(matrix, coordinates, center) {\n      var attrs = new Base(),\n          trans = matrix.getTranslation();\n\n      if (coordinates) {\n        var point;\n\n        if (matrix.isInvertible()) {\n          matrix = matrix._shiftless();\n          point = matrix._inverseTransform(trans);\n          trans = null;\n        } else {\n          point = new Point();\n        }\n\n        attrs[center ? 'cx' : 'x'] = point.x;\n        attrs[center ? 'cy' : 'y'] = point.y;\n      }\n\n      if (!matrix.isIdentity()) {\n        var decomposed = matrix.decompose();\n\n        if (decomposed) {\n          var parts = [],\n              angle = decomposed.rotation,\n              scale = decomposed.scaling,\n              skew = decomposed.skewing;\n          if (trans && !trans.isZero()) parts.push('translate(' + formatter.point(trans) + ')');\n          if (angle) parts.push('rotate(' + formatter.number(angle) + ')');\n          if (!Numerical.isZero(scale.x - 1) || !Numerical.isZero(scale.y - 1)) parts.push('scale(' + formatter.point(scale) + ')');\n          if (skew.x) parts.push('skewX(' + formatter.number(skew.x) + ')');\n          if (skew.y) parts.push('skewY(' + formatter.number(skew.y) + ')');\n          attrs.transform = parts.join(' ');\n        } else {\n          attrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n        }\n      }\n\n      return attrs;\n    }\n\n    function exportGroup(item, options) {\n      var attrs = getTransform(item._matrix),\n          children = item._children;\n      var node = SvgElement.create('g', attrs, formatter);\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n\n        var childNode = _exportSVG(child, options);\n\n        if (childNode) {\n          if (child.isClipMask()) {\n            var clip = SvgElement.create('clipPath');\n            clip.appendChild(childNode);\n            setDefinition(child, clip, 'clip');\n            SvgElement.set(node, {\n              'clip-path': 'url(#' + clip.id + ')'\n            });\n          } else {\n            node.appendChild(childNode);\n          }\n        }\n      }\n\n      return node;\n    }\n\n    function exportRaster(item, options) {\n      var attrs = getTransform(item._matrix, true),\n          size = item.getSize(),\n          image = item.getImage();\n      attrs.x -= size.width / 2;\n      attrs.y -= size.height / 2;\n      attrs.width = size.width;\n      attrs.height = size.height;\n      attrs.href = options.embedImages == false && image && image.src || item.toDataURL();\n      return SvgElement.create('image', attrs, formatter);\n    }\n\n    function exportPath(item, options) {\n      var matchShapes = options.matchShapes;\n\n      if (matchShapes) {\n        var shape = item.toShape(false);\n        if (shape) return exportShape(shape, options);\n      }\n\n      var segments = item._segments,\n          length = segments.length,\n          type,\n          attrs = getTransform(item._matrix);\n\n      if (matchShapes && length >= 2 && !item.hasHandles()) {\n        if (length > 2) {\n          type = item._closed ? 'polygon' : 'polyline';\n          var parts = [];\n\n          for (var i = 0; i < length; i++) {\n            parts.push(formatter.point(segments[i]._point));\n          }\n\n          attrs.points = parts.join(' ');\n        } else {\n          type = 'line';\n          var start = segments[0]._point,\n              end = segments[1]._point;\n          attrs.set({\n            x1: start.x,\n            y1: start.y,\n            x2: end.x,\n            y2: end.y\n          });\n        }\n      } else {\n        type = 'path';\n        attrs.d = item.getPathData(null, options.precision);\n      }\n\n      return SvgElement.create(type, attrs, formatter);\n    }\n\n    function exportShape(item) {\n      var type = item._type,\n          radius = item._radius,\n          attrs = getTransform(item._matrix, true, type !== 'rectangle');\n\n      if (type === 'rectangle') {\n        type = 'rect';\n        var size = item._size,\n            width = size.width,\n            height = size.height;\n        attrs.x -= width / 2;\n        attrs.y -= height / 2;\n        attrs.width = width;\n        attrs.height = height;\n        if (radius.isZero()) radius = null;\n      }\n\n      if (radius) {\n        if (type === 'circle') {\n          attrs.r = radius;\n        } else {\n          attrs.rx = radius.width;\n          attrs.ry = radius.height;\n        }\n      }\n\n      return SvgElement.create(type, attrs, formatter);\n    }\n\n    function exportCompoundPath(item, options) {\n      var attrs = getTransform(item._matrix);\n      var data = item.getPathData(null, options.precision);\n      if (data) attrs.d = data;\n      return SvgElement.create('path', attrs, formatter);\n    }\n\n    function exportSymbolItem(item, options) {\n      var attrs = getTransform(item._matrix, true),\n          definition = item._definition,\n          node = getDefinition(definition, 'symbol'),\n          definitionItem = definition._item,\n          bounds = definitionItem.getStrokeBounds();\n\n      if (!node) {\n        node = SvgElement.create('symbol', {\n          viewBox: formatter.rectangle(bounds)\n        });\n        node.appendChild(_exportSVG(definitionItem, options));\n        setDefinition(definition, node, 'symbol');\n      }\n\n      attrs.href = '#' + node.id;\n      attrs.x += bounds.x;\n      attrs.y += bounds.y;\n      attrs.width = bounds.width;\n      attrs.height = bounds.height;\n      attrs.overflow = 'visible';\n      return SvgElement.create('use', attrs, formatter);\n    }\n\n    function exportGradient(color) {\n      var gradientNode = getDefinition(color, 'color');\n\n      if (!gradientNode) {\n        var gradient = color.getGradient(),\n            radial = gradient._radial,\n            origin = color.getOrigin(),\n            destination = color.getDestination(),\n            attrs;\n\n        if (radial) {\n          attrs = {\n            cx: origin.x,\n            cy: origin.y,\n            r: origin.getDistance(destination)\n          };\n          var highlight = color.getHighlight();\n\n          if (highlight) {\n            attrs.fx = highlight.x;\n            attrs.fy = highlight.y;\n          }\n        } else {\n          attrs = {\n            x1: origin.x,\n            y1: origin.y,\n            x2: destination.x,\n            y2: destination.y\n          };\n        }\n\n        attrs.gradientUnits = 'userSpaceOnUse';\n        gradientNode = SvgElement.create((radial ? 'radial' : 'linear') + 'Gradient', attrs, formatter);\n        var stops = gradient._stops;\n\n        for (var i = 0, l = stops.length; i < l; i++) {\n          var stop = stops[i],\n              stopColor = stop._color,\n              alpha = stopColor.getAlpha(),\n              offset = stop._offset;\n          attrs = {\n            offset: offset == null ? i / (l - 1) : offset\n          };\n          if (stopColor) attrs['stop-color'] = stopColor.toCSS(true);\n          if (alpha < 1) attrs['stop-opacity'] = alpha;\n          gradientNode.appendChild(SvgElement.create('stop', attrs, formatter));\n        }\n\n        setDefinition(color, gradientNode, 'color');\n      }\n\n      return 'url(#' + gradientNode.id + ')';\n    }\n\n    function exportText(item) {\n      var node = SvgElement.create('text', getTransform(item._matrix, true), formatter);\n      node.textContent = item._content;\n      return node;\n    }\n\n    var exporters = {\n      Group: exportGroup,\n      Layer: exportGroup,\n      Raster: exportRaster,\n      Path: exportPath,\n      Shape: exportShape,\n      CompoundPath: exportCompoundPath,\n      SymbolItem: exportSymbolItem,\n      PointText: exportText\n    };\n\n    function applyStyle(item, node, isRoot) {\n      var attrs = {},\n          parent = !isRoot && item.getParent(),\n          style = [];\n      if (item._name != null) attrs.id = item._name;\n      Base.each(SvgStyles, function (entry) {\n        var get = entry.get,\n            type = entry.type,\n            value = item[get]();\n\n        if (entry.exportFilter ? entry.exportFilter(item, value) : !parent || !Base.equals(parent[get](), value)) {\n          if (type === 'color' && value != null) {\n            var alpha = value.getAlpha();\n            if (alpha < 1) attrs[entry.attribute + '-opacity'] = alpha;\n          }\n\n          if (type === 'style') {\n            style.push(entry.attribute + ': ' + value);\n          } else {\n            attrs[entry.attribute] = value == null ? 'none' : type === 'color' ? value.gradient ? exportGradient(value, item) : value.toCSS(true) : type === 'array' ? value.join(',') : type === 'lookup' ? entry.toSVG[value] : value;\n          }\n        }\n      });\n      if (style.length) attrs.style = style.join(';');\n      if (attrs.opacity === 1) delete attrs.opacity;\n      if (!item._visible) attrs.visibility = 'hidden';\n      return SvgElement.set(node, attrs, formatter);\n    }\n\n    var definitions;\n\n    function getDefinition(item, type) {\n      if (!definitions) definitions = {\n        ids: {},\n        svgs: {}\n      };\n      return item && definitions.svgs[type + '-' + (item._id || item.__id || (item.__id = UID.get('svg')))];\n    }\n\n    function setDefinition(item, node, type) {\n      if (!definitions) getDefinition();\n      var typeId = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n      node.id = type + '-' + typeId;\n      definitions.svgs[type + '-' + (item._id || item.__id)] = node;\n    }\n\n    function exportDefinitions(node, options) {\n      var svg = node,\n          defs = null;\n\n      if (definitions) {\n        svg = node.nodeName.toLowerCase() === 'svg' && node;\n\n        for (var i in definitions.svgs) {\n          if (!defs) {\n            if (!svg) {\n              svg = SvgElement.create('svg');\n              svg.appendChild(node);\n            }\n\n            defs = svg.insertBefore(SvgElement.create('defs'), svg.firstChild);\n          }\n\n          defs.appendChild(definitions.svgs[i]);\n        }\n\n        definitions = null;\n      }\n\n      return options.asString ? new self.XMLSerializer().serializeToString(svg) : svg;\n    }\n\n    function _exportSVG(item, options, isRoot) {\n      var exporter = exporters[item._class],\n          node = exporter && exporter(item, options);\n\n      if (node) {\n        var onExport = options.onExport;\n        if (onExport) node = onExport(item, node, options) || node;\n        var data = JSON.stringify(item._data);\n        if (data && data !== '{}' && data !== 'null') node.setAttribute('data-paper-data', data);\n      }\n\n      return node && applyStyle(item, node, isRoot);\n    }\n\n    function setOptions(options) {\n      if (!options) options = {};\n      formatter = new Formatter(options.precision);\n      return options;\n    }\n\n    Item.inject({\n      exportSVG: function exportSVG(options) {\n        options = setOptions(options);\n        return exportDefinitions(_exportSVG(this, options, true), options);\n      }\n    });\n    Project.inject({\n      exportSVG: function exportSVG(options) {\n        options = setOptions(options);\n        var children = this._children,\n            view = this.getView(),\n            bounds = Base.pick(options.bounds, 'view'),\n            mx = options.matrix || bounds === 'view' && view._matrix,\n            matrix = mx && Matrix.read([mx]),\n            rect = bounds === 'view' ? new _Rectangle([0, 0], view.getViewSize()) : bounds === 'content' ? Item._getBounds(children, matrix, {\n          stroke: true\n        }).rect : _Rectangle.read([bounds], 0, {\n          readNull: true\n        }),\n            attrs = {\n          version: '1.1',\n          xmlns: SvgElement.svg,\n          'xmlns:xlink': SvgElement.xlink\n        };\n\n        if (rect) {\n          attrs.width = rect.width;\n          attrs.height = rect.height;\n          if (rect.x || rect.x === 0 || rect.y || rect.y === 0) attrs.viewBox = formatter.rectangle(rect);\n        }\n\n        var node = SvgElement.create('svg', attrs, formatter),\n            parent = node;\n\n        if (matrix && !matrix.isIdentity()) {\n          parent = node.appendChild(SvgElement.create('g', getTransform(matrix), formatter));\n        }\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          parent.appendChild(_exportSVG(children[i], options, true));\n        }\n\n        return exportDefinitions(node, options);\n      }\n    });\n  }();\n  new function () {\n    var definitions = {},\n        rootSize;\n\n    function getValue(node, name, isString, allowNull, allowPercent, defaultValue) {\n      var value = SvgElement.get(node, name) || defaultValue,\n          res = value == null ? allowNull ? null : isString ? '' : 0 : isString ? value : parseFloat(value);\n      return /%\\s*$/.test(value) ? res / 100 * (allowPercent ? 1 : rootSize[/x|^width/.test(name) ? 'width' : 'height']) : res;\n    }\n\n    function getPoint(node, x, y, allowNull, allowPercent, defaultX, defaultY) {\n      x = getValue(node, x || 'x', false, allowNull, allowPercent, defaultX);\n      y = getValue(node, y || 'y', false, allowNull, allowPercent, defaultY);\n      return allowNull && (x == null || y == null) ? null : new Point(x, y);\n    }\n\n    function getSize(node, w, h, allowNull, allowPercent) {\n      w = getValue(node, w || 'width', false, allowNull, allowPercent);\n      h = getValue(node, h || 'height', false, allowNull, allowPercent);\n      return allowNull && (w == null || h == null) ? null : new Size(w, h);\n    }\n\n    function convertValue(value, type, lookup) {\n      return value === 'none' ? null : type === 'number' ? parseFloat(value) : type === 'array' ? value ? value.split(/[\\s,]+/g).map(parseFloat) : [] : type === 'color' ? getDefinition(value) || value : type === 'lookup' ? lookup[value] : value;\n    }\n\n    function importGroup(node, type, options, isRoot) {\n      var nodes = node.childNodes,\n          isClip = type === 'clippath',\n          isDefs = type === 'defs',\n          item = new Group(),\n          project = item._project,\n          currentStyle = project._currentStyle,\n          children = [];\n\n      if (!isClip && !isDefs) {\n        item = applyAttributes(item, node, isRoot);\n        project._currentStyle = item._style.clone();\n      }\n\n      if (isRoot) {\n        var defs = node.querySelectorAll('defs');\n\n        for (var i = 0, l = defs.length; i < l; i++) {\n          importNode(defs[i], options, false);\n        }\n      }\n\n      for (var i = 0, l = nodes.length; i < l; i++) {\n        var childNode = nodes[i],\n            child;\n        if (childNode.nodeType === 1 && !/^defs$/i.test(childNode.nodeName) && (child = importNode(childNode, options, false)) && !(child instanceof SymbolDefinition)) children.push(child);\n      }\n\n      item.addChildren(children);\n      if (isClip) item = applyAttributes(item.reduce(), node, isRoot);\n      project._currentStyle = currentStyle;\n\n      if (isClip || isDefs) {\n        item.remove();\n        item = null;\n      }\n\n      return item;\n    }\n\n    function importPoly(node, type) {\n      var coords = node.getAttribute('points').match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n          points = [];\n\n      for (var i = 0, l = coords.length; i < l; i += 2) {\n        points.push(new Point(parseFloat(coords[i]), parseFloat(coords[i + 1])));\n      }\n\n      var path = new Path(points);\n      if (type === 'polygon') path.closePath();\n      return path;\n    }\n\n    function importPath(node) {\n      return PathItem.create(node.getAttribute('d'));\n    }\n\n    function importGradient(node, type) {\n      var id = (getValue(node, 'href', true) || '').substring(1),\n          radial = type === 'radialgradient',\n          gradient;\n\n      if (id) {\n        gradient = definitions[id].getGradient();\n\n        if (gradient._radial ^ radial) {\n          gradient = gradient.clone();\n          gradient._radial = radial;\n        }\n      } else {\n        var nodes = node.childNodes,\n            stops = [];\n\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          var child = nodes[i];\n          if (child.nodeType === 1) stops.push(applyAttributes(new GradientStop(), child));\n        }\n\n        gradient = new Gradient(stops, radial);\n      }\n\n      var origin,\n          destination,\n          highlight,\n          scaleToBounds = getValue(node, 'gradientUnits', true) !== 'userSpaceOnUse';\n\n      if (radial) {\n        origin = getPoint(node, 'cx', 'cy', false, scaleToBounds, '50%', '50%');\n        destination = origin.add(getValue(node, 'r', false, false, scaleToBounds, '50%'), 0);\n        highlight = getPoint(node, 'fx', 'fy', true, scaleToBounds);\n      } else {\n        origin = getPoint(node, 'x1', 'y1', false, scaleToBounds, '0%', '0%');\n        destination = getPoint(node, 'x2', 'y2', false, scaleToBounds, '100%', '0%');\n      }\n\n      var color = applyAttributes(new Color(gradient, origin, destination, highlight), node);\n      color._scaleToBounds = scaleToBounds;\n      return null;\n    }\n\n    var importers = {\n      '#document': function document(node, type, options, isRoot) {\n        var nodes = node.childNodes;\n\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          var child = nodes[i];\n          if (child.nodeType === 1) return importNode(child, options, isRoot);\n        }\n      },\n      g: importGroup,\n      svg: importGroup,\n      clippath: importGroup,\n      polygon: importPoly,\n      polyline: importPoly,\n      path: importPath,\n      lineargradient: importGradient,\n      radialgradient: importGradient,\n      image: function image(node) {\n        var raster = new Raster(getValue(node, 'href', true));\n        raster.on('load', function () {\n          var size = getSize(node);\n          this.setSize(size);\n          var center = getPoint(node).add(size.divide(2));\n\n          this._matrix.append(new Matrix().translate(center));\n        });\n        return raster;\n      },\n      symbol: function symbol(node, type, options, isRoot) {\n        return new SymbolDefinition(importGroup(node, type, options, isRoot), true);\n      },\n      defs: importGroup,\n      use: function use(node) {\n        var id = (getValue(node, 'href', true) || '').substring(1),\n            definition = definitions[id],\n            point = getPoint(node);\n        return definition ? definition instanceof SymbolDefinition ? definition.place(point) : definition.clone().translate(point) : null;\n      },\n      circle: function circle(node) {\n        return new Shape.Circle(getPoint(node, 'cx', 'cy'), getValue(node, 'r'));\n      },\n      ellipse: function ellipse(node) {\n        return new Shape.Ellipse({\n          center: getPoint(node, 'cx', 'cy'),\n          radius: getSize(node, 'rx', 'ry')\n        });\n      },\n      rect: function rect(node) {\n        return new Shape.Rectangle(new _Rectangle(getPoint(node), getSize(node)), getSize(node, 'rx', 'ry'));\n      },\n      line: function line(node) {\n        return new Path.Line(getPoint(node, 'x1', 'y1'), getPoint(node, 'x2', 'y2'));\n      },\n      text: function text(node) {\n        var text = new PointText(getPoint(node).add(getPoint(node, 'dx', 'dy')));\n        text.setContent(node.textContent.trim() || '');\n        return text;\n      },\n      switch: importGroup\n    };\n\n    function applyTransform(item, value, name, node) {\n      if (item.transform) {\n        var transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n            matrix = new Matrix();\n\n        for (var i = 0, l = transforms.length; i < l; i++) {\n          var transform = transforms[i];\n          if (!transform) break;\n          var parts = transform.split(/\\(\\s*/),\n              command = parts[0],\n              v = parts[1].split(/[\\s,]+/g);\n\n          for (var j = 0, m = v.length; j < m; j++) {\n            v[j] = parseFloat(v[j]);\n          }\n\n          switch (command) {\n            case 'matrix':\n              matrix.append(new Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n              break;\n\n            case 'rotate':\n              matrix.rotate(v[0], v[1] || 0, v[2] || 0);\n              break;\n\n            case 'translate':\n              matrix.translate(v[0], v[1] || 0);\n              break;\n\n            case 'scale':\n              matrix.scale(v);\n              break;\n\n            case 'skewX':\n              matrix.skew(v[0], 0);\n              break;\n\n            case 'skewY':\n              matrix.skew(0, v[0]);\n              break;\n          }\n        }\n\n        item.transform(matrix);\n      }\n    }\n\n    function applyOpacity(item, value, name) {\n      var key = name === 'fill-opacity' ? 'getFillColor' : 'getStrokeColor',\n          color = item[key] && item[key]();\n      if (color) color.setAlpha(parseFloat(value));\n    }\n\n    var attributes = Base.set(Base.each(SvgStyles, function (entry) {\n      this[entry.attribute] = function (item, value) {\n        if (item[entry.set]) {\n          item[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\n          if (entry.type === 'color') {\n            var color = item[entry.get]();\n\n            if (color) {\n              if (color._scaleToBounds) {\n                var bounds = item.getBounds();\n                color.transform(new Matrix().translate(bounds.getPoint()).scale(bounds.getSize()));\n              }\n            }\n          }\n        }\n      };\n    }, {}), {\n      id: function id(item, value) {\n        definitions[value] = item;\n        if (item.setName) item.setName(value);\n      },\n      'clip-path': function clipPath(item, value) {\n        var clip = getDefinition(value);\n\n        if (clip) {\n          clip = clip.clone();\n          clip.setClipMask(true);\n\n          if (item instanceof Group) {\n            item.insertChild(0, clip);\n          } else {\n            return new Group(clip, item);\n          }\n        }\n      },\n      gradientTransform: applyTransform,\n      transform: applyTransform,\n      'fill-opacity': applyOpacity,\n      'stroke-opacity': applyOpacity,\n      visibility: function visibility(item, value) {\n        if (item.setVisible) item.setVisible(value === 'visible');\n      },\n      display: function display(item, value) {\n        if (item.setVisible) item.setVisible(value !== null);\n      },\n      'stop-color': function stopColor(item, value) {\n        if (item.setColor) item.setColor(value);\n      },\n      'stop-opacity': function stopOpacity(item, value) {\n        if (item._color) item._color.setAlpha(parseFloat(value));\n      },\n      offset: function offset(item, value) {\n        if (item.setOffset) {\n          var percent = value.match(/(.*)%$/);\n          item.setOffset(percent ? percent[1] / 100 : parseFloat(value));\n        }\n      },\n      viewBox: function viewBox(item, value, name, node, styles) {\n        var rect = new _Rectangle(convertValue(value, 'array')),\n            size = getSize(node, null, null, true),\n            group,\n            matrix;\n\n        if (item instanceof Group) {\n          var scale = size ? size.divide(rect.getSize()) : 1,\n              matrix = new Matrix().scale(scale).translate(rect.getPoint().negate());\n          group = item;\n        } else if (item instanceof SymbolDefinition) {\n          if (size) rect.setSize(size);\n          group = item._item;\n        }\n\n        if (group) {\n          if (getAttribute(node, 'overflow', styles) !== 'visible') {\n            var clip = new Shape.Rectangle(rect);\n            clip.setClipMask(true);\n            group.addChild(clip);\n          }\n\n          if (matrix) group.transform(matrix);\n        }\n      }\n    });\n\n    function getAttribute(node, name, styles) {\n      var attr = node.attributes[name],\n          value = attr && attr.value;\n\n      if (!value && node.style) {\n        var style = Base.camelize(name);\n        value = node.style[style];\n        if (!value && styles.node[style] !== styles.parent[style]) value = styles.node[style];\n      }\n\n      return !value ? undefined : value === 'none' ? null : value;\n    }\n\n    function applyAttributes(item, node, isRoot) {\n      var parent = node.parentNode,\n          styles = {\n        node: DomElement.getStyles(node) || {},\n        parent: !isRoot && !/^defs$/i.test(parent.tagName) && DomElement.getStyles(parent) || {}\n      };\n      Base.each(attributes, function (apply, name) {\n        var value = getAttribute(node, name, styles);\n        item = value !== undefined && apply(item, value, name, node, styles) || item;\n      });\n      return item;\n    }\n\n    function getDefinition(value) {\n      var match = value && value.match(/\\((?:[\"'#]*)([^\"')]+)/),\n          name = match && match[1],\n          res = name && definitions[window ? name.replace(window.location.href.split('#')[0] + '#', '') : name];\n\n      if (res && res._scaleToBounds) {\n        res = res.clone();\n        res._scaleToBounds = true;\n      }\n\n      return res;\n    }\n\n    function importNode(node, options, isRoot) {\n      var type = node.nodeName.toLowerCase(),\n          isElement = type !== '#document',\n          body = document.body,\n          container,\n          parent,\n          next;\n\n      if (isRoot && isElement) {\n        rootSize = paper.getView().getSize();\n        rootSize = getSize(node, null, null, true) || rootSize;\n        container = SvgElement.create('svg', {\n          style: 'stroke-width: 1px; stroke-miterlimit: 10'\n        });\n        parent = node.parentNode;\n        next = node.nextSibling;\n        container.appendChild(node);\n        body.appendChild(container);\n      }\n\n      var settings = paper.settings,\n          applyMatrix = settings.applyMatrix,\n          insertItems = settings.insertItems;\n      settings.applyMatrix = false;\n      settings.insertItems = false;\n      var importer = importers[type],\n          item = importer && importer(node, type, options, isRoot) || null;\n      settings.insertItems = insertItems;\n      settings.applyMatrix = applyMatrix;\n\n      if (item) {\n        if (isElement && !(item instanceof Group)) item = applyAttributes(item, node, isRoot);\n        var onImport = options.onImport,\n            data = isElement && node.getAttribute('data-paper-data');\n        if (onImport) item = onImport(node, item, options) || item;\n\n        if (options.expandShapes && item instanceof Shape) {\n          item.remove();\n          item = item.toPath();\n        }\n\n        if (data) item._data = JSON.parse(data);\n      }\n\n      if (container) {\n        body.removeChild(container);\n\n        if (parent) {\n          if (next) {\n            parent.insertBefore(node, next);\n          } else {\n            parent.appendChild(node);\n          }\n        }\n      }\n\n      if (isRoot) {\n        definitions = {};\n        if (item && Base.pick(options.applyMatrix, applyMatrix)) item.matrix.apply(true, true);\n      }\n\n      return item;\n    }\n\n    function _importSVG(source, options, owner) {\n      if (!source) return null;\n      options = typeof options === 'function' ? {\n        onLoad: options\n      } : options || {};\n      var scope = paper,\n          item = null;\n\n      function onLoad(svg) {\n        try {\n          var node = typeof svg === 'object' ? svg : new self.DOMParser().parseFromString(svg, 'image/svg+xml');\n\n          if (!node.nodeName) {\n            node = null;\n            throw new Error('Unsupported SVG source: ' + source);\n          }\n\n          paper = scope;\n          item = importNode(node, options, true);\n\n          if (!options || options.insert !== false) {\n            owner._insertItem(undefined, item);\n          }\n\n          var onLoad = options.onLoad;\n          if (onLoad) onLoad(item, svg);\n        } catch (e) {\n          onError(e);\n        }\n      }\n\n      function onError(message, status) {\n        var onError = options.onError;\n\n        if (onError) {\n          onError(message, status);\n        } else {\n          throw new Error(message);\n        }\n      }\n\n      if (typeof source === 'string' && !/^.*</.test(source)) {\n        var node = document.getElementById(source);\n\n        if (node) {\n          onLoad(node);\n        } else {\n          Http.request({\n            url: source,\n            async: true,\n            onLoad: onLoad,\n            onError: onError\n          });\n        }\n      } else if (typeof File !== 'undefined' && source instanceof File) {\n        var reader = new FileReader();\n\n        reader.onload = function () {\n          onLoad(reader.result);\n        };\n\n        reader.onerror = function () {\n          onError(reader.error);\n        };\n\n        return reader.readAsText(source);\n      } else {\n        onLoad(source);\n      }\n\n      return item;\n    }\n\n    Item.inject({\n      importSVG: function importSVG(node, options) {\n        return _importSVG(node, options, this);\n      }\n    });\n    Project.inject({\n      importSVG: function importSVG(node, options) {\n        this.activate();\n        return _importSVG(node, options, this);\n      }\n    });\n  }();\n  var paper = new (PaperScope.inject(Base.exports, {\n    Base: Base,\n    Numerical: Numerical,\n    Key: Key,\n    DomEvent: DomEvent,\n    DomElement: DomElement,\n    document: document,\n    window: window,\n    Symbol: SymbolDefinition,\n    PlacedSymbol: SymbolItem\n  }))();\n\n  if (paper.agent.node) {\n    require('./node/extend.js')(paper);\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define('paper', paper);\n  } else if (typeof module === 'object' && module) {\n    module.exports = paper;\n  }\n\n  return paper;\n}.call(this, typeof self === 'object' ? self : null);","/**\n * Module dependencies.\n */\nvar url = require('./url');\n\nvar parser = require('socket.io-parser');\n\nvar Manager = require('./manager');\n\nvar debug = require('debug')('socket.io-client');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n\n    io = cache[id];\n  }\n\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n\n  return io.socket(parsed.path, opts);\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = parser.protocol;\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');","/**\n * Module dependencies.\n */\nvar parseuri = require('parseuri');\n\nvar debug = require('debug')('socket.io-client:url');\n/**\n * Module exports.\n */\n\n\nmodule.exports = url;\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc) {\n  var obj = uri; // default to window.location\n\n  loc = loc || typeof location !== 'undefined' && location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host; // relative path support\n\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    } // parse\n\n\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  } // make sure we treat `localhost:80` and `localhost` equally\n\n\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host; // define unique id\n\n  obj.id = obj.protocol + '://' + host + ':' + obj.port; // define href\n\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n  return obj;\n}","var _toConsumableArray = require(\"E:\\\\dream-team-project\\\\My_portfolio\\\\About-me-React-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n\n\n  function disable() {\n    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n      return '-' + namespace;\n    }))).join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n\n\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n\n  return ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * Active `debug` instances.\n */\n\nexports.instances = [];\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/*global Blob,File*/\n\n/**\n * Module requirements\n */\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function (packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n\n  return {\n    packet: pack,\n    buffers: buffers\n  };\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = {\n      _placeholder: true,\n      num: buffers.length\n    };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n\n    return newData;\n  }\n\n  return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\n\nexports.reconstructPacket = function (packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\n\nexports.removeBlobs = function (data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj; // convert any blob\n\n    if (withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n      pendingBlobs++; // async filereader\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function () {\n        // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        } else {\n          bloblessData = this.result;\n        } // if nothing pending its callback time\n\n\n        if (! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) {\n      // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) {\n      // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n\n  _removeBlobs(bloblessData);\n\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","module.exports = require('./socket');\n/**\n * Exports parser\n *\n * @api public\n *\n */\n\nmodule.exports.parser = require('engine.io-parser');","/**\n * Module dependencies.\n */\nvar transports = require('./transports/index');\n\nvar Emitter = require('component-emitter');\n\nvar debug = require('debug')('engine.io-client:socket');\n\nvar index = require('indexof');\n\nvar parser = require('engine.io-parser');\n\nvar parseuri = require('parseuri');\n\nvar parseqs = require('parseqs');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Socket;\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure : typeof location !== 'undefined' && 'https:' === location.protocol;\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname || (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port ? location.port : this.secure ? 443 : 80);\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.withCredentials = false !== opts.withCredentials;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  } // SSL options for Node.js client\n\n\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode; // detect ReactNative environment\n\n  this.isReactNative = typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative'; // other options for Node.js or ReactNative client\n\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  } // set on handshake\n\n\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null; // set on heartbeat\n\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query); // append engine.io protocol identifier\n\n  query.EIO = parser.protocol; // transport name\n\n  query.transport = name; // per-transport options\n\n  var options = this.transportOptions[name] || {}; // session id if we already have one\n\n  if (this.id) query.sid = this.id;\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    withCredentials: options.withCredentials || this.withCredentials,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void 0,\n    isReactNative: this.isReactNative\n  });\n  return transport;\n};\n\nfunction clone(obj) {\n  var o = {};\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n\n  return o;\n}\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\n\n\nSocket.prototype.open = function () {\n  var transport;\n\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n\n  this.readyState = 'opening'; // Retry with the next transport if the transport is disabled (jsonp: false)\n\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  } // set up transport\n\n\n  this.transport = transport; // set up transport listeners\n\n  transport.on('drain', function () {\n    self.onDrain();\n  }).on('packet', function (packet) {\n    self.onPacket(packet);\n  }).on('error', function (e) {\n    self.onError(e);\n  }).on('close', function () {\n    self.onClose('transport close');\n  });\n};\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, {\n    probe: 1\n  });\n  var failed = false;\n  var self = this;\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n\n    if (failed) return;\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{\n      type: 'ping',\n      data: 'probe'\n    }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n          cleanup();\n          self.setTransport(transport);\n          transport.send([{\n            type: 'upgrade'\n          }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return; // Any callback called by transport should be ignored since now\n\n    failed = true;\n    cleanup();\n    transport.close();\n    transport = null;\n  } // Handle any error that happens while probing\n\n\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n    freezeTransport();\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose() {\n    onerror('transport closed');\n  } // When the socket is closed while we're probing\n\n\n  function onclose() {\n    onerror('socket closed');\n  } // When the socket is upgraded while we're probing\n\n\n  function onupgrade(to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  } // Remove all listeners on the transport and on self\n\n\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n  transport.open();\n};\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush(); // we check for `readyState` in case an `open`\n  // listener already closed the socket\n\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n/**\n * Handles a packet.\n *\n * @api private\n */\n\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n    this.emit('packet', packet); // Socket is live - any packet counts\n\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen(); // In case open handler closes socket\n\n  if ('closed' === this.readyState) return;\n  this.setPing(); // Prolong liveness of socket on heartbeat\n\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || self.pingInterval + self.pingTimeout);\n};\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\n\nSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n/**\n * Closes the connection.\n *\n * @api private\n */\n\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n/**\n * Called upon transport error\n *\n * @api private\n */\n\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this; // clear timers\n\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer); // stop event from firing again for transport\n\n    this.transport.removeAllListeners('close'); // ensure transport won't stay open\n\n    this.transport.close(); // ignore further transport communication\n\n    this.transport.removeAllListeners(); // set ready state\n\n    this.readyState = 'closed'; // clear session id\n\n    this.id = null; // emit close event\n\n    this.emit('close', reason, desc); // clean buffers after, so users can still\n    // grab the buffers on `close` event\n\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n\n  return filteredUpgrades;\n};","/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}","/* global attachEvent */\n\n/**\n * Module requirements.\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar Polling = require('./polling');\n\nvar Emitter = require('component-emitter');\n\nvar inherit = require('component-inherit');\n\nvar debug = require('debug')('engine.io-client:polling-xhr');\n/**\n * Module exports.\n */\n\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n/**\n * Empty function\n */\n\nfunction empty() {}\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\n\nfunction XHR(opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname || port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(XHR, Polling);\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n  opts.withCredentials = this.withCredentials; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout; // other options for Node.js client\n\n  opts.extraHeaders = this.extraHeaders;\n  return new Request(opts);\n};\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({\n    method: 'POST',\n    data: data,\n    isBinary: isBinary\n  });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\n\nfunction Request(opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n  this.requestTimeout = opts.requestTimeout; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.create();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Request.prototype);\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = {\n    agent: this.agent,\n    xdomain: this.xd,\n    xscheme: this.xs,\n    enablesXDR: this.enablesXDR\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {} // ie6 check\n\n\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = this.withCredentials;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n/**\n * Called if we have data.\n *\n * @api private\n */\n\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n/**\n * Called upon error.\n *\n * @api private\n */\n\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n/**\n * Cleans up house.\n *\n * @api private\n */\n\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  } // xmlhttprequest\n\n\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n/**\n * Called upon load.\n *\n * @api private\n */\n\n\nRequest.prototype.onLoad = function () {\n  var data;\n\n  try {\n    var contentType;\n\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n\n  if (null != data) {\n    this.onData(data);\n  }\n};\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n/**\n * Aborts the request.\n *\n * @api public\n */\n\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\nmodule.exports = Object.keys || function keys(obj) {\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n\n  return arr;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\nmodule.exports = function (arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) {\n    return arraybuffer.slice(start, end);\n  }\n\n  if (start < 0) {\n    start += bytes;\n  }\n\n  if (end < 0) {\n    end += bytes;\n  }\n\n  if (end > bytes) {\n    end = bytes;\n  }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n\n  return result.buffer;\n};","module.exports = after;\n\nfunction after(count, callback, err_cb) {\n  var bail = false;\n  err_cb = err_cb || noop;\n  proxy.count = count;\n  return count === 0 ? callback() : proxy;\n\n  function proxy(err, result) {\n    if (proxy.count <= 0) {\n      throw new Error('after called too many times');\n    }\n\n    --proxy.count; // after first error, rest are passed to err_cb\n\n    if (err) {\n      bail = true;\n      callback(err); // future error callbacks will go to error handler\n\n      callback = err_cb;\n    } else if (proxy.count === 0 && !bail) {\n      callback(null, result);\n    }\n  }\n}\n\nfunction noop() {}","/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\n\nfunction ucs2decode(string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  var value;\n  var extra;\n\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n\n      if ((extra & 0xFC00) == 0xDC00) {\n        // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n\n  return output;\n} // Taken from https://mths.be/punycode\n\n\nfunction ucs2encode(array) {\n  var length = array.length;\n  var index = -1;\n  var value;\n  var output = '';\n\n  while (++index < length) {\n    value = array[index];\n\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n\n    output += stringFromCharCode(value);\n  }\n\n  return output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n  if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n    if (strict) {\n      throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n    }\n\n    return false;\n  }\n\n  return true;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction createByte(codePoint, shift) {\n  return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n  if ((codePoint & 0xFFFFFF80) == 0) {\n    // 1-byte sequence\n    return stringFromCharCode(codePoint);\n  }\n\n  var symbol = '';\n\n  if ((codePoint & 0xFFFFF800) == 0) {\n    // 2-byte sequence\n    symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n  } else if ((codePoint & 0xFFFF0000) == 0) {\n    // 3-byte sequence\n    if (!checkScalarValue(codePoint, strict)) {\n      codePoint = 0xFFFD;\n    }\n\n    symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n    symbol += createByte(codePoint, 6);\n  } else if ((codePoint & 0xFFE00000) == 0) {\n    // 4-byte sequence\n    symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n    symbol += createByte(codePoint, 12);\n    symbol += createByte(codePoint, 6);\n  }\n\n  symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n  return symbol;\n}\n\nfunction utf8encode(string, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  var codePoints = ucs2decode(string);\n  var length = codePoints.length;\n  var index = -1;\n  var codePoint;\n  var byteString = '';\n\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint, strict);\n  }\n\n  return byteString;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction readContinuationByte() {\n  if (byteIndex >= byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  var continuationByte = byteArray[byteIndex] & 0xFF;\n  byteIndex++;\n\n  if ((continuationByte & 0xC0) == 0x80) {\n    return continuationByte & 0x3F;\n  } // If we end up here, it’s not a continuation byte\n\n\n  throw Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n  var byte1;\n  var byte2;\n  var byte3;\n  var byte4;\n  var codePoint;\n\n  if (byteIndex > byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  if (byteIndex == byteCount) {\n    return false;\n  } // Read first byte\n\n\n  byte1 = byteArray[byteIndex] & 0xFF;\n  byteIndex++; // 1-byte sequence (no continuation bytes)\n\n  if ((byte1 & 0x80) == 0) {\n    return byte1;\n  } // 2-byte sequence\n\n\n  if ((byte1 & 0xE0) == 0xC0) {\n    byte2 = readContinuationByte();\n    codePoint = (byte1 & 0x1F) << 6 | byte2;\n\n    if (codePoint >= 0x80) {\n      return codePoint;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 3-byte sequence (may include unpaired surrogates)\n\n\n  if ((byte1 & 0xF0) == 0xE0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n\n    if (codePoint >= 0x0800) {\n      return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 4-byte sequence\n\n\n  if ((byte1 & 0xF8) == 0xF0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    byte4 = readContinuationByte();\n    codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n\n    if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n      return codePoint;\n    }\n  }\n\n  throw Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\n\nfunction utf8decode(byteString, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  byteArray = ucs2decode(byteString);\n  byteCount = byteArray.length;\n  byteIndex = 0;\n  var codePoints = [];\n  var tmp;\n\n  while ((tmp = decodeSymbol(strict)) !== false) {\n    codePoints.push(tmp);\n  }\n\n  return ucs2encode(codePoints);\n}\n\nmodule.exports = {\n  version: '2.1.2',\n  encode: utf8encode,\n  decode: utf8decode\n};","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function () {\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"; // Use a lookup table to find the index.\n\n  var lookup = new Uint8Array(256);\n\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = \"\";\n\n    for (i = 0; i < len; i += 3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode = function (base64) {\n    var bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i + 1)];\n      encoded3 = lookup[base64.charCodeAt(i + 2)];\n      encoded4 = lookup[base64.charCodeAt(i + 3)];\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n\n    return arraybuffer;\n  };\n})();","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : false;\n/**\r\n * Check if Blob constructor is supported\r\n */\n\nvar blobSupported = function () {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\n\n\nvar blobSupportsArrayBufferView = blobSupported && function () {\n  try {\n    var b = new Blob([new Uint8Array([1, 2])]);\n    return b.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if BlobBuilder is supported\r\n */\n\n\nvar blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\n\nfunction mapArrayBufferViews(ary) {\n  return ary.map(function (chunk) {\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer; // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      return buf;\n    }\n\n    return chunk;\n  });\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary).forEach(function (part) {\n    bb.append(part);\n  });\n  return options.type ? bb.getBlob(options.type) : bb.getBlob();\n}\n\n;\n\nfunction BlobConstructor(ary, options) {\n  return new Blob(mapArrayBufferViews(ary), options || {});\n}\n\n;\n\nif (typeof Blob !== 'undefined') {\n  BlobBuilderConstructor.prototype = Blob.prototype;\n  BlobConstructor.prototype = Blob.prototype;\n}\n\nmodule.exports = function () {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n}();","var _toConsumableArray = require(\"E:\\\\dream-team-project\\\\My_portfolio\\\\About-me-React-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n\n\n  function disable() {\n    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n      return '-' + namespace;\n    }))).join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n\n\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n\n  return ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}","/**\n * Module requirements.\n */\nvar Polling = require('./polling');\n\nvar inherit = require('component-inherit');\n/**\n * Module exports.\n */\n\n\nmodule.exports = JSONPPolling;\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n/**\n * Noop.\n */\n\nfunction empty() {}\n/**\n * Until https://github.com/tc39/proposal-global is shipped.\n */\n\n\nfunction glob() {\n  return typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n}\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\n\nfunction JSONPPolling(opts) {\n  Polling.call(this, opts);\n  this.query = this.query || {}; // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    var global = glob();\n    callbacks = global.___eio = global.___eio || [];\n  } // callback identifier\n\n\n  this.index = callbacks.length; // add callback to jsonp global\n\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  }); // append to query string\n\n  this.query.j = this.index; // prevent spurious errors from being emitted when the window is unloaded\n\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(JSONPPolling, Polling);\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n\n  this.script = script;\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete() {\n    initIframe();\n    fn();\n  }\n\n  function initIframe() {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe(); // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parser = require('engine.io-parser');\n\nvar parseqs = require('parseqs');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) {}\n}\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(WS, Transport);\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocketImpl(uri, protocols) : new WebSocketImpl(uri) : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false; // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n\n  var total = packets.length;\n\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        } // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n\n\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done() {\n    self.emit('flush'); // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n/**\n * Called upon close\n *\n * @api private\n */\n\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Closes socket.\n *\n * @api private\n */\n\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = ''; // avoid port if default for schema\n\n  if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // append timestamp to URI\n\n\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  } // communicate binary support capabilities\n\n\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // prepend ? to query\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};","module.exports = toArray;\n\nfunction toArray(list, index) {\n  var array = [];\n  index = index || 0;\n\n  for (var i = index || 0; i < list.length; i++) {\n    array[i - index] = list[i];\n  }\n\n  return array;\n}","/**\n * Expose `Backoff`.\n */\nmodule.exports = Backoff;\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\n\nBackoff.prototype.duration = function () {\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\n  if (this.jitter) {\n    var rand = Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n  }\n\n  return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\n\nBackoff.prototype.reset = function () {\n  this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMin = function (min) {\n  this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMax = function (max) {\n  this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\n\n\nBackoff.prototype.setJitter = function (jitter) {\n  this.jitter = jitter;\n};"],"sourceRoot":""}