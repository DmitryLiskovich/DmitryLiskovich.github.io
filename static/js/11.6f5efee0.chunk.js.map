{"version":3,"sources":["components/Posts/reducer.js","components/Posts/Addpost.js","components/Posts/action.js","components/Posts/Posts.js"],"names":["initialState","id","title","note","store","createStore","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","payload","filter","item","parseInt","window","__REDUX_DEVTOOLS_EXTENSION__","Wrapper","connect","data","props","document","dispatch","deletePost","event","target","value","delPostRedux","notes","map","res","react_default","a","createElement","className","key","onClick","onSubmit","preventDefault","addPostRedux","required","name","placeholder","color","MainPost","es","Posts","__webpack_require__","d","__webpack_exports__"],"mappings":"+KACMA,EAAe,CAAC,CACpBC,GAAI,EACJC,MAAO,eACPC,KAAM,2ICIR,IAAMC,EAAQC,YDDC,WAA8C,IAA7BC,EAA6BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBP,EAAcU,EAAOH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAOC,EAAOC,MACZ,IAAK,WAAY,SAAAC,OAAAC,OAAAC,EAAA,EAAAD,CAAWP,GAAX,CAAkBI,EAAOK,UAC1C,IAAK,cAOH,OANcT,EAAMU,OAAO,SAACC,GAC1B,OAAGA,EAAKhB,KAAOiB,SAASR,EAAOK,QAAQd,MAO3C,QAAS,OAAOK,ICXea,OAAOC,8BAAgCD,OAAOC,gCAQzEC,EAAUC,YANQ,SAAChB,GACvB,MAAM,CACJiB,KAAMjB,IAIMgB,CAWlB,SAAkBE,GAEhBC,SAASvB,MAAQ,QAEjB,IAAMwB,EAAWF,EAAME,SAevB,SAASC,EAAWC,GAElB,IAAML,EAAO,CACXtB,GAAI2B,EAAMC,OAAOC,OAEnBJ,EC3CG,SAAsBH,GAC3B,MAAM,CACJZ,KAAM,cACNI,QAASQ,GDwCAQ,CAAaR,IAGxB,IAAIS,EAAQR,EAAMD,KAAKU,IAAI,SAAAC,GACzB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKL,EAAIjC,IAC7BkC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZJ,EAAIhC,MACLiC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAQE,QAASb,EAAYG,MAAOI,EAAIjC,IAA1D,OAGJkC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZJ,EAAI/B,UAOf,OACEgC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAMI,SAzCZ,SAAiBb,GACfA,EAAMc,iBACN,IAAMnB,EAAO,CACXtB,GAAIuB,EAAMD,KAAKf,OAAS,EAAIgB,EAAMD,KAAKC,EAAMD,KAAKf,OAAO,GAAGP,GAAK,EAAI,EACrEC,MAAO0B,EAAMC,OAAO,GAAGC,MACvB3B,KAAMyB,EAAMC,OAAO,GAAGC,OAExBJ,ECxCG,SAAsBH,GAC3B,MAAM,CACJZ,KAAM,WACNI,QAASQ,GDqCAoB,CAAapB,IACtBK,EAAMC,OAAO,GAAGC,MAAM,GACtBF,EAAMC,OAAO,GAAGC,MAAM,KAiCvBK,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOO,UAAQ,EAACjC,KAAK,OAAOkC,KAAK,QAAQ5C,GAAG,QAAQ6C,YAAY,UAChEX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,YAAUO,UAAQ,EAACC,KAAK,OAAO5C,GAAG,OAAO6C,YAAY,SACrDX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAe3B,KAAK,SAASoC,MAAM,OAAOjB,MAAM,SAE5DK,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZN,OAzEM,SAASgB,IACtB,OACAb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAU7C,MAAQA,GAChB+B,EAAAC,EAAAC,cAAChB,EAAD,OElBS,SAAS6B,IACtB,OACEf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACW,EAAD,OANNG,EAAAC,EAAAC,EAAA,4BAAAH","file":"static/js/11.6f5efee0.chunk.js","sourcesContent":["\r\nconst initialState = [{\r\n  id: 0,\r\n  title: 'A first note',\r\n  note: 'Need create server and get data from MongoDB. But i will not do it :). I don`t know how this will work at GH page. Created with Redux.'\r\n}];\r\n\r\nexport default function reducer(state = initialState, action){\r\n  switch(action.type){\r\n    case 'ADD_POST': return [...state, action.payload];\r\n    case 'DELETE_POST': {\r\n      let newPost = state.filter((item) => {\r\n        if(item.id === parseInt(action.payload.id)){\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      return newPost;\r\n    };\r\n    default: return state;\r\n  }\r\n}","import React from 'react';\r\nimport { createStore } from 'redux';\r\nimport { connect, Provider } from 'react-redux';\r\n\r\nimport './post.scss'\r\nimport { addPostRedux, delPostRedux } from './action';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n  const mapStateToProps = (state) =>{\r\n    return{\r\n      data: state\r\n    }\r\n  }\r\n\r\n  const Wrapper = connect(mapStateToProps)(Postform);\r\n\r\n  export default function MainPost(){\r\n    return(\r\n    <Provider store={ store }>\r\n      <Wrapper>\r\n      </Wrapper>\r\n    </Provider>\r\n    );\r\n  }\r\n\r\nfunction Postform(props) {\r\n\r\n  document.title = 'Notes';\r\n\r\n  const dispatch = props.dispatch;\r\n  //Need add work with server\r\n\r\n  function addPost(event){\r\n    event.preventDefault();\r\n    const data = {\r\n      id: props.data.length > 0 ? props.data[props.data.length-1].id + 1 : 0,\r\n      title: event.target[0].value,\r\n      note: event.target[1].value\r\n    };\r\n    dispatch(addPostRedux(data));\r\n    event.target[0].value='';\r\n    event.target[1].value='';\r\n  }\r\n\r\n  function deletePost(event){\r\n\r\n    const data = {\r\n      id: event.target.value\r\n    };\r\n    dispatch(delPostRedux(data))\r\n  }\r\n\r\n  let notes = props.data.map(res=>{\r\n    return(\r\n      <div className='note' key={res.id}>\r\n        <div className='note-wrapp'>\r\n          <div className='note-header'>\r\n            <div className='header-toast'>\r\n              {res.title}\r\n              <button className='close' onClick={deletePost} value={res.id}>X</button>\r\n            </div>\r\n          </div>\r\n          <div className='note-body'>\r\n            {res.note}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      <div className='notes-main'>\r\n        <form onSubmit={addPost}>\r\n\t\t\t<h1>You can create your notes</h1>\r\n\t\t\t<br></br>\r\n\t\t\t<label>Title</label>\r\n\t\t\t<input required type='text' name='title' id='title' placeholder='Title'></input>\r\n\t\t\t<br></br>\r\n\t\t\t<label>Note</label>\r\n\t\t\t<textarea required name='note' id='note' placeholder='Note'></textarea>\r\n\t\t\t<br></br>\r\n\t\t\t<input className='submitButton' type='submit' color='info' value='Add'></input>\r\n        </form>\r\n        <br></br>\r\n      </div>\r\n      <br></br>\r\n      <div>\r\n        <div className='notes-wrapper'>\r\n          {notes}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","\r\nexport function addPostRedux(data) {\r\n  return{\r\n    type: 'ADD_POST',\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport function delPostRedux(data) {\r\n  return{\r\n    type: 'DELETE_POST',\r\n    payload: data,\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Postform from './Addpost';\r\n\r\nexport default function Posts() {\r\n  return(\r\n    <div>\r\n      <Postform></Postform>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"sourceRoot":""}