{"version":3,"sources":["../node_modules/peerjs/dist/peerjs.min.js","../node_modules/paper/dist/paper-core.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["parcelRequire","e","r","t","n","i","o","f","__webpack_require__","c","Error","code","p","resolve","cache","l","Module","call","exports","this","isParcelRequire","id","bundle","modules","parent","register","length","module","EgBh","require","useBlobBuilder","Blob","useArrayBufferView","Uint8Array","size","binaryFeatures","BlobBuilder","_pieces","_parts","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","prototype","append","push","flush","buffer","getBuffer","u","getBlob","BufferBuilder","kdPp","unpack","pack","index","dataBuffer","dataView","byteLength","bufferBuilder","charCodeAt","unpack_uint8","unpack_raw","unpack_string","unpack_array","unpack_map","unpack_float","unpack_double","unpack_uint16","unpack_uint32","unpack_uint64","unpack_int8","unpack_int16","unpack_int32","unpack_int64","read","Math","pow","slice","String","fromCharCode","Array","subarray","pack_string","floor","pack_integer","pack_double","constructor","pack_array","File","pack_bin","ArrayBuffer","Object","toString","startsWith","pack_object","Date","toBinaryPack","pack_uint8","pack_uint16","pack_uint32","replace","a","pack_int8","pack_int16","pack_int32","pack_int64","pack_uint64","log","LN2","keys","hasOwnProperty","./bufferbuilder","iSxC","Symbol","iterator","defineProperty","value","extractVersion","wrapPeerConnectionEvent","RTCPeerConnection","addEventListener","apply","arguments","_eventMap","removeEventListener","get","set","enumerable","configurable","disableLog","disableWarnings","console","deprecated","warn","detectBrowser","navigator","browser","version","mozGetUserMedia","userAgent","webkitGetUserMedia","isSecureContext","webkitRTCPeerConnection","RTCIceGatherer","mediaDevices","match","supportsUnifiedPlan","RTCRtpTransceiver","compactObject","d","reduce","s","assign","writable","walkStats","filterStats","Map","forEach","type","trackIdentifier","trackId","parseInt","has","endsWith","s6SN","shimGetUserMedia","mandatory","optional","ideal","exact","min","max","charAt","toUpperCase","advanced","concat","JSON","parse","stringify","audio","video","facingMode","getSupportedConstraints","enumerateDevices","then","filter","kind","find","some","label","toLowerCase","includes","deviceId","name","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia","bind","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","Promise","reject","__esModule","default","getOwnPropertyDescriptor","WeakMap","../utils.js","VHa8","shimGetDisplayMedia","getDisplayMedia","width","height","frameRate","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","error","uI5X","shimMediaStream","MediaStream","webkitMediaStream","shimOnTrack","transceiver","receiver","_ontrack","setRemoteDescription","_ontrackpoly","stream","getReceivers","track","Event","streams","dispatchEvent","shimGetSendersWithDtmf","_t","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","addTrack","removeTrack","indexOf","splice","addStream","removeStream","RTCRtpSender","shimGetStats","getStats","_arguments","result","timestamp","localcandidate","remotecandidate","names","stat","map","shimSenderReceiverGetStats","RTCRtpReceiver","srcElement","MediaStreamTrack","shimAddTrackRemoveTrackWithNative","shimAddTrackRemoveTrack","getLocalStreams","_reverseStreams","_streams","signalingState","setLocalDescription","sdp","RegExp","RTCSessionDescription","shimPeerConnection","RTCIceCandidate","addIceCandidate","candidate","fixNegotiationNeeded","target","_shimmedLocalStreams","./getusermedia","./getdisplaymedia","NZ1C","filterIceServers","urls","url","../utils","YHvh","generateIdentifier","random","substr","localCName","splitLines","trim","split","splitSections","getDescription","getMediaSections","shift","matchPrefix","parseCandidate","foundation","substring","component","protocol","priority","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","join","parseIceOptions","parseRtpMap","payloadType","clockRate","channels","numChannels","writeRtpMap","preferredPayloadType","parseExtmap","direction","uri","writeExtmap","preferredId","parseFmtp","writeFmtp","parameters","parseRtcpFb","parameter","writeRtcpFb","rtcpFeedback","parseSsrcMedia","ssrc","attribute","parseSsrcGroup","semantics","ssrcs","getMid","parseFingerprint","algorithm","getDtlsParameters","role","fingerprints","writeDtlsParameters","getIceParameters","password","writeIceParameters","parseRtpParameters","codecs","headerExtensions","fecMechanisms","rtcp","writeRtpDescription","maxptime","parseRtpEncodingParameters","apt","codecPayloadType","rtx","fec","mechanism","maxBitrate","parseRtcpParameters","cname","reducedSize","compound","mux","parseMsid","parseSctpDescription","parseMLine","isNaN","fmt","maxMessageSize","writeSctpDescription","generateSessionId","writeSessionBoilerplate","writeMediaSection","iceGatherer","getLocalParameters","dtlsTransport","mid","rtpSender","rtpReceiver","sendEncodingParameters","getDirection","getKind","isRejected","parseOLine","username","sessionId","sessionVersion","netType","addressType","isValidSDP","NJ2u","_initialTrackId","_a","offer","answer","getRemoteCandidates","addRemoteCandidate","NotSupportedError","InvalidAccessError","TypeError","OperationError","MediaStreamTrackEvent","setTimeout","_dispatchEvent","document","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","iceServers","_iceGatherers","iceCandidatePoolSize","gatherPolicy","_config","transceivers","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","getConfiguration","getRemoteStreams","_createTransceiver","iceTransport","localCapabilities","remoteCapabilities","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","clone","enabled","_createIceGatherer","bufferedCandidateEvents","bufferCandidates","state","_gather","onlocalcandidate","sdpMid","sdpMLineIndex","toJSON","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","encodings","rtcpParameters","send","receive","rejected","v","start","h","_updateSignalingState","m","g","y","S","T","E","C","P","w","R","_","k","b","x","D","I","L","M","O","G","j","setTransport","setRemoteCandidates","getCapabilities","N","A","close","new","closed","checking","connected","completed","disconnected","failed","connecting","createOffer","offerToReceiveAudio","offerToReceiveVideo","getLocalCandidates","createAnswer","all","inboundrtp","outboundrtp","candidatepair","YdKx","catch","P3bV","XRic","RTCDtmfSender","RTCDTMFSender","shimReplaceTrack","replaceTrack","setTrack","./filtericeservers","rtcpeerconnection-shim","GzSv","getSettings","applyConstraints","UuGU","mediaSource","Fzdr","RTCTrackEvent","mozRTCPeerConnection","_arguments2","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","addTransceiver","setParametersPromises","sendEncodings","test","rid","parseFloat","scaleResolutionDownBy","RangeError","maxFramerate","sender","getParameters","setParameters","shimCreateOffer","finally","shimCreateAnswer","t1lL","shimLocalStreamsAPI","_localStreams","shimRemoteStreamsAPI","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","shimConstraints","shimRTCIceServerUrls","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","getTransceivers","setDirection","GOQK","shimRTCIceCandidate","shimMaxMessageSize","_sctp","_this$getConfiguratio","sdpSemantics","Number","POSITIVE_INFINITY","shimSendThrowTypeError","createDataChannel","channel","readyState","sctp","shimConnectionState","_onconnectionstatechange","_connectionstatechangepoly","_lastConnectionState","removeAllowExtmapMixed","./utils","KtlG","adapterFactory","shimChrome","shimFirefox","shimEdge","shimSafari","browserDetails","commonShim","browserShim","./chrome/chrome_shim","./edge/edge_shim","./firefox/firefox_shim","./safari/safari_shim","./common_shim","tI1X","./adapter_factory.js","sXtV","__importDefault","webRTCAdapter","webrtc-adapter","I31f","Supports","isIOS","platform","supportedBrowsers","minFirefoxVersion","minChromeVersion","minSafariVersion","isWebRTCSupported","isBrowserSupported","getBrowser","getVersion","isUnifiedPlanSupported","./adapter","BHXf","__importStar","credential","util","CLOUD_HOST","CLOUD_PORT","chunkedBrowsers","Chrome","chrome","chunkedMTU","defaultConfig","browserVersion","supports","webRTC","audioVideo","data","binaryBlob","reliable","ordered","binaryType","_dataCount","noop","validateId","chunk","ceil","__peerData","total","blobToArrayBuffer","FileReader","onload","readAsArrayBuffer","binaryStringToArrayBuffer","randomToken","isSecure","location","peerjs-js-binarypack","./supports","JJlS","fn","context","once","_events","_eventsCount","create","__proto__","eventNames","getOwnPropertySymbols","listeners","listenerCount","emit","removeListener","on","removeAllListeners","off","addListener","prefixed","EventEmitter","WOs9","__read","next","done","return","__spread","Disabled","Errors","Warnings","All","LogLevel","_logLevel","_print","setLogFunction","ZRYf","Open","Stream","Data","Close","IceStateChanged","ConnectionEventType","Media","ConnectionType","Connection","Call","Disconnected","PeerEventType","BrowserIncompatible","InvalidID","InvalidKey","Network","PeerUnavailable","SslUnavailable","ServerError","SocketError","SocketClosed","UnavailableID","WebRTC","PeerErrorType","Binary","BinaryUTF8","SerializationType","Message","SocketEventType","Heartbeat","Candidate","Offer","Answer","IdTaken","Leave","Expire","ServerMessageType","wJlv","__extends","_e","setPrototypeOf","__values","pingInterval","_disconnected","_messagesQueue","_baseUrl","_id","_socket","WebSocket","onmessage","onclose","_cleanup","onopen","_sendQueuedMessages","_scheduleHeartbeat","_wsPingTimer","_sendHeartbeat","_wsOpen","clearTimeout","Socket","eventemitter3","./logger","./enums","HCdX","__assign","__awaiter","throw","__generator","sent","trys","ops","pop","connection","startConnection","_startPeerConnection","peerConnection","_stream","_addTracksToConnection","originator","initialize","_makeOffer","handleSDP","provider","options","config","_setupListeners","peer","connectionId","socket","payload","dst","getConnection","_addStreamToMediaConnection","cleanup","dataChannel","constraints","sdpTransform","metadata","serialization","emitError","_makeAnswer","handleCandidate","Negotiator","./util","tQFK","_t2","_open","BaseConnection","dbHP","_e2","_localStream","ID_PREFIX","_negotiator","_remoteStream","handleMessage","_payload","_getMessages","_removeConnection","open","MediaConnection","./negotiator","./baseconnection","GGp6","_e3","fileReader","_queue","_processing","doNextTask","destroy","queue","enque","processing","abort","EncodingQueue","GBTQ","_e4","_buffer","_bufferSize","_buffering","_chunkedData","_encodingQueue","_bufferedSend","_dc","_configureDataChannel","_handleDataMessage","_handleChunk","count","_sendChunks","_trySend","bufferedAmount","MAX_BUFFERED_AMOUNT","_tryBuffer","DataConnection","./encodingQueue","in7L","_options","_buildUrl","secure","host","path","key","getTime","retrieveId","fetch","status","text","listAllPeers","json","API","Hxpd","_e5","_lastServerId","_destroyed","_connections","_lostMessages","debug","DEFAULT_KEY","token","hostname","logFunction","logLevel","_api","_createServerConnection","_delayedAbort","_initialize","_abort","_handleMessage","disconnect","src","msg","_cleanupPeer","delete","_addConnection","_storeMessage","connect","destroyed","reconnect","_e6","Peer","./socket","./mediaconnection","./dataconnection","./api","iTK6","peerjs","./peer","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","self","undefined","Base","hidden","array","_slice","describe","define","iter","_each","obj","desc","_inject","dest","beans","preserve","beansNames","field","val","bean","isFunc","res","prev","base","isPlainObject","part","inject","statics","extend","ctor","proto","each","pick","list","begin","end","_class","_name","Formatter","instance","number","getClassName","importJSON","exportJSON","serialize","props","exclude","_prioritize","equals","obj1","obj2","isArray","amount","peek","__index","readIndex","_readIndex","readNull","filtered","__filtered","remain","readList","entry","readNamed","getNamed","hasValue","source","getSource","__unfiltered","readSupported","that","__source","arg","hasNamed","prioritize","processed","handleKey","isPlainValue","asString","compact","dictionary","isRoot","formatter","precision","definitions","references","add","item","ref","unshift","_serialize","_compactSerialize","deserialize","_data","_setDictionary","_isRoot","isFirst","hasDictionary","isDictionary","args","useTarget","Item","Layer","insert","items","itemsLength","startLength","remove","_index","removed","capitalize","str","camelize","chr","hyphenate","Emitter","func","types","_eventTypes","handlers","_callbacks","install","uninstall","handler","event","setTarget","currentTarget","responds","attach","detach","fire","_installEvents","events","isString","PaperScope","paper","settings","applyMatrix","insertItems","handleSize","hitTolerance","project","projects","tools","_scopes","support","ctx","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","agent","user","os","exec","v1","v2","rv","versionNumber","trident","jsdom","webkit","atom","getView","_view","getPaper","execute","scope","setup","element","Project","createCanvas","getCanvas","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","CollisionDetection","findItemBoundsCollisions","items1","items2","tolerance","getBounds","bounds","rect","left","top","right","bottom","bounds1","bounds2","findBoundsCollisions","findCurveBoundsCollisions","curves1","curves2","bothAxis","curves","hor","ver","boundsA","boundsB","sweepVertical","onlySweepAxisCollisions","allBounds","lengthA","lengthAll","binarySearch","indices","coord","lo","hi","pri0","pri1","sec0","sec1","allIndicesByPri0","sort","i1","i2","activeIndicesByPri1","allCollisions","curIndex","curBounds","origIndex","isCurrentA","isCurrentB","curCollisions","pruneCount","activeIndex","curSec1","curSec0","activeBounds","isActiveA","isActiveB","collisions","multiplier","round","pair","val1","val2","separator","point","rectangle","Numerical","abscissas","weights","abs","sqrt","log2","LOG2E","clamp","getDiscriminant","ad","bd","cd","q","getNormalizationFactor","norm","EPSILON","MACHINE_EPSILON","CURVETIME_EPSILON","GEOMETRIC_EPSILON","TRIGONOMETRIC_EPSILON","KAPPA","isZero","isMachineZero","integrate","B","sum","Ax","findRoot","df","fx","dx","nx","solveQuadratic","roots","x1","x2","Infinity","Q","boundless","minB","maxB","isFinite","solveCubic","b1","c2","qd","evaluate","x0","tmp","td","rd","UID","_pools","pool","Point","arg0","arg1","reading","hasY","_set","setAngle","angle","getLength","setLength","_angle","cos","sin","scale","getAngle","getAngleInRadians","PI","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","div","NaN","dot","acos","atan2","getQuadrant","getDirectedAngle","cross","getDistance","normalize","current","rotate","center","subtract","transform","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","_Rectangle","contains","isClose","isCollinear","isColinear","isOrthogonal","_isNaN","isInQuadrant","point1","point2","y1","y2","op","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","isSelected","_selection","_getSelection","setSelected","selected","_changeSelection","Size","hasHeight","_isNaN2","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","to","frm","rt","getPoint","_dontLink","setPoint","getSize","_fw","_fh","setSize","sx","_sx","sy","_sy","getLeft","setLeft","getTop","setTop","getRight","setRight","getBottom","setBottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","epsilon","intersect","unite","include","expand","parts","xFirst","LinkedRectangle","internal","Matrix","ok","_b","_c","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","a1","c1","d1","a2","b2","d2","tx2","ty2","prepend","tx1","ty1","appended","prepended","invert","det","inverted","concatenate","preConcatenate","chain","_shiftless","_orNullIfIdentity","isInvertible","isSingular","_transformCoordinates","_transformCorners","coords","_transformBounds","inverseTransform","_inverseTransform","decompose","degrees","asin","translation","getTranslation","rotation","scaling","skewing","getScaling","getRotation","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","line","isInfinite","getSide","getSignedDistance","p1x","p1y","v1x","v1y","p2x","p2y","v2x","v2y","dy","u1","u2","px","py","vx","vy","ccw","_children","_namedChildren","_activeLayer","_currentStyle","Style","View","_selectionItems","_selectionCount","_updateVersion","flags","view","_needsUpdate","_requested","_autoUpdate","requestUpdate","changes","_changes","changesById","_changesById","children","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getLayers","getActiveLayer","getSymbolDefinitions","ids","getItems","class","SymbolItem","definition","_definition","getSymbols","getSelectedItems","selectionItems","selection","isInserted","_updateSelection","selectAll","setFullySelected","deselectAll","addLayer","layer","insertLayer","_remove","_setProject","setName","_insertItem","_created","NO_INSERT","insertChild","_getItems","getItem","removeOn","sets","_removeSets","mousedrag","other","draw","pixelRatio","save","param","offset","viewMatrix","matrices","updateMatrix","restore","strokeWidth","_drawSelection","_serializeFields","_canApplyMatrix","_canScaleStroke","_pivot","_visible","_blendMode","_opacity","_locked","_guide","_clipMask","_selectBounds","_selectChildren","pivot","visible","blendMode","opacity","locked","guide","clipMask","_countItemEvent","onFrame","_animateItem","onLoad","onError","_itemHandlers","hasProps","_matrix","_parent","_style","fields","fontSize","Group","_defaults","symbol","_symbol","cacheParent","_project","_bounds","_position","_decomposed","_globalMatrix","_clearBoundsCache","getId","getName","_removeNamed","_getOwner","namedChildren","getStyle","setStyle","getSelection","setSelection","flag","isFullySelected","isClipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","position","_getPositionFromBounds","setPosition","getPivot","setPivot","getStrokeBounds","stroke","getHandleBounds","handle","getInternalBounds","hasMatrix","opts","_boundsOptions","getStrokeScaling","cacheItem","_getCachedBounds","setBounds","_backup","_getBounds","_updateBoundsCache","_getBoundsCacheKey","noInternal","cacheKey","cached","nonscaling","hasStroke","_getStrokeMatrix","_item","getViewMatrix","_boundsCache","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","parents","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","setParent","addChild","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","copy","deep","copyAttributes","copyContent","insertAbove","orig","excludeMatrix","rasterize","resolution","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","raster","Raster","canvas","setCanvas","_contains","_asPathItem","Path","Rectangle","getIntersections","hitTest","_hitTest","HitResult","hitTestAll","hitTestChildren","_exclude","child","_hitTestChildren","parentViewMatrix","guides","tolerancePadding","_tolerancePadding","_getStrokePadding","checkSelf","hit","checkPoint","pt","checkPosition","checkCenter","checkBounds","points","_hitTestSelf","fill","hasFill","matches","compare","matchObject","firstOnly","overlapping","inside","recursive","childMatrix","insertChildren","inserted","notifySelf","_insertAt","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","addTo","copyTo","namedArray","notifyParent","_dispose","replaceWith","reverseChildren","reverse","numChildren","isEditable","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","transformMatrix","fillColor","getFillColor","strokeColor","getStrokeColor","_transformContent","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","fillStyle","toCanvasStyle","strokeStyle","lineWidth","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","blur","getShadowBlur","getShadowOffset","shadowColor","getShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","mainCtx","itemOffset","prevOffset","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","strokeMatrix","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","getFillRule","process","_isUpdated","updateVersion","CompoundPath","updated","itemSelected","boundsSelected","positionSelected","_drawSelected","color","getSelectedColor","half","pos","beginPath","arc","deltas","delta","moveTo","lineTo","closePath","fillRect","hash","tween","easing","duration","Tween","_handleFrame","time","running","tweenTo","tweenFrom","_clipItem","_getClipItem","isClipped","setClipped","clipped","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","toShape","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","bezierCurveTo","getCornerCenter","halfSize","dir","corner","quadrant","isOnEllipseStroke","padding","vector","hitStroke","hitFill","strokeRadius","strokePadding","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","_smoothing","image","object","getElementById","getContent","naturalHeight","setImage","setSource","_loaded","_image","_canvas","_setImage","copyCanvas","drawImage","_crossOrigin","getElement","getLoaded","getPpi","getImage","DomEvent","load","complete","naturalWidth","_context","_change","setContext","toDataURL","Image","getCrossOrigin","setCrossOrigin","getSmoothing","setSmoothing","smoothing","getSubCanvas","getSubRaster","getAverageColor","PathItem","_sampleContext","clearRect","sampleSize","pixels","getImageData","alpha","Color","getPixel","setPixel","components","_convert","_alpha","imageData","createImageData","putImageData","setImageData","DomElement","setPrefixed","setDefinition","SymbolDefinition","getDefinition","getSymbol","setSymbol","dontCenter","setItem","_dontCenter","place","values","segments","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","_point","hasHandles","_handleIn","_handleOut","_path","curve","_curves","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","isSmooth","clearHandles","oldSelection","getPath","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","getNext","smooth","_first","_last","factor","getPrevious","p0","p1","p2","d1_a","d1_2a","d2_a","d2_2a","isLast","reversed","removeSegment","segment","interpolate","handleIn1","handleIn2","handleOut2","handleOut1","change","Curve","arg6","arg7","seg1","seg2","handle1","handle2","segment1","segment2","_segment2","getPoint1","getHandle1","getHandle2","getPoint2","_length","classify","setPoint1","setPoint2","setHandle1","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","divideAt","divideAtTime","getTimeAt","_setHandles","subdivide","setHandles","splitAt","splitAtTime","getLocationAtTime","isTime","straight","h1","h2","y0","x3","y3","x4","y4","x5","y5","x6","y6","x7","y7","x8","y8","x9","y9","getMonoCurves","io","o0","o1","o2","o3","isStraight","v0","v3","getTimeOf","p3","getNearestTime","minDist","minT","refine","dist","step","flip","isFlatEnough","flatness","ux","uy","_addBounds","minPad","maxPad","s1","s2","isLinear","third","hasLength","isHorizontal","getTangentAtTime","isVertical","getLocationAt","_isTime","getParameterAt","getTimesWithTangent","tangent","getOffsetAtTime","getLocationOf","getOffsetOf","loc","getOffset","getParameterOf","getNearestLocation","getNearestPoint","methods","_evaluateMethods","getLengthIntegrand","ax","bx","ay","by","getIterations","normalized","len","d3","t1","t2","hasRoots","t1Ok","t2Ok","f1","f2","ds","forward","rangeLength","diff","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","getPeaks","addLocation","locations","overlap","excludeStart","excludeEnd","loc1","loc2","_intersection","clipConvexHull","hullTop","hullBottom","dMin","dMax","clipConvexHullPart","threshold","qx","qy","getCurveLineIntersections","getCurveIntersections","overlaps","getOverlaps","straight1","straight2","before","addCurveIntersections","recursion","calls","tMin","tMax","uMin","uMax","tMinClip","tMaxClip","q0x","q0y","q3x","q3y","dp0","dp1","dp2","dp3","hull","dq0","dq1","dq2","dq3","dist1","dist2","distRatio","getConvexHull","tMinNew","tMaxNew","uDiff","getSelfIntersection","info","getSquaredLineLength","straightBoth","l1","l2","pairs","matrix1","matrix2","_returnFirst","length1","length2","values1","values2","boundsCollisions","index1","curve1","collisions1","index2","curve2","den","times","t0","_overlap","_distance","_setCurve","_time","getPointAtTime","_next","_previous","_version","_curve","_segment","_setSegment","getSegment","trySegment","_offset","_curveOffset","getParameter","getCurveOffset","getIntersection","getLastSegment","_ignoreOther","isTouching","inter","isCrossing","t1Inside","t2Inside","c4","c3","offsets","addOffsets","isInRange","getPointAt","v4","a3","a4","hasOverlap","merge","search","found","path1","path2","expanded","pathData","first","isClockwise","setClockwise","clockwise","setPathData","previous","control","relative","getCoord","command","lower","move","cubicCurveTo","quadraticCurveTo","arcTo","winding","_getWinding","onPath","windingL","windingR","getCrossings","minLoc","isPath","itemsFrom","itemsTo","setClosed","paths1","paths2","matched","boundsOverlaps","findBoundsOverlaps","pathBoundsOverlaps","setSegments","_segmentSelection","_area","getSegments","fullySelected","last","_add","getFirstSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","addSegment","skipLine","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newSelection","last1","last2","first2","first1","simplify","flatten","PathFlattener","PathFitter","fit","_default","loop","asymmetric","paddingLeft","paddingRight","knots","n_1","rf","hx","hy","topCenter","seg3","seg4","isArc","pt1","pt2","shape","pos2","end2","pos1","end1","start2","cap","numSegments","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","isJoin","_addBevelJoin","_addSquareCap","getOffsetsWithTangent","curveStart","curveTimes","drawSegments","drawSegment","dashLength","flattener","drawPart","pX","pY","miniSize","miniHalf","drawHandle","hX","hY","drawHandles","getCurrentSegment","moveBy","curveTo","through","extent","middle","large","rxSq","rySq","xSq","ySq","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","method","prevCoords","processSegment","joinBounds","addPoint","addRound","addJoin","addCap","phi","isArea","normal1","getNormalAtTime","normal2","normal","joinPadding","joinRadius","SQRT2","paddingX","paddingY","xn","xx","yn","yx","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tl","tr","getTopRight","br","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","paths","getCurrentPath","check","operators","1","2","-1","getPaths","preparePath","resolveCrossings","reorient","createResult","filterIntersection","traceBoolean","operation","trace","splitBoolean","_path1","_path2","operator","crossings","divideLocations","collectPaths","_overlapsOnly","curvesValues","curveCollisions","curveCollisionsMap","propagateWinding","_winding","tracePaths","reorientPaths","added","addPath","linkIntersections","clearCurveHandles","lookup","container","sorted","entry1","containerWinding","getInteriorPoint","entry2","clearLater","renormalizeLocs","prevCurve","prevTime","results","clearCurves","clearLookup","origTime","newCurve","getWinding","dontFlip","vPrev","vClose","curvesList","ia","pv","pa","po","qualityEpsilon","paL","paR","pathWindingL","pathWindingR","onAnyPath","quality","addWinding","a0","windingPrev","a3Prev","handleCurve","monoCurves","totalLength","curveLength","operand","SQRT1_2","wind","pathWinding","starts","isValid","_visited","isStart","visitPath","getCrossingSegments","collectStarts","collect","nextInter","_prev","inter1","inter2","over1","over2","branch","visited","valid","finished","branches","hasOverlaps","hasCrossings","intersections","nonZero","intercepts","mv","mo0","mo3","maxRecursion","ignoreStraight","minSpan","addCurve","computeParts","halves","tMid","_get","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","tanCenter","X","b0","b3","alpha1","alpha2","detC0C1","detC0X","c0","segLength","eps","degree","maxDist","TextItem","content","_content","_lines","setContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","font","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","colorCtx","gray","rgb","hsb","hsl","gradient","componentParsers","namedColors","transparent","hsbIndices","converters","rgb-hsb","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","t3","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","parser","_components","Gradient","_removeOwner","_addOwner","_properties","argType","converted","string","isHSL","unit","turn","grad","fromCSS","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","canvasGradient","_stops","origin","destination","highlight","inverse","_radial","createRadialGradient","createLinearGradient","addColorStop","_color","_types","_setOwner","components1","components2","setStops","setRadial","_owners","getStops","GradientStop","getRadial","stops1","stops2","rampPoint","setColor","setOffset","getRampPoint","setRampPoint","getColor","itemDefaults","fillRule","strokeScaling","shadowOffset","selectedColor","groupDefaults","fontFamily","fontWeight","textDefaults","_values","isColor","isPoint","applyToChildren","old","_dontMerge","childValue","Font","WindingRule","isStyle","style1","style2","secondary","defaults2","value1","value2","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","passive","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","getRelatedTarget","relatedTarget","toElement","requestAnimationFrame","timer","nativeRequest","requested","callbacks","handleCallbacks","functions","callback","setInterval","getCanvasSize","setAttribute","_viewEvents","userDrag","userSelect","touchCallout","contentZooming","tapHighlightColor","_windowEvents","resize","setViewSize","Stats","_stats","stats","domElement","appendChild","_element","_pixelRatio","devicePixelRatio","_setElementSize","_viewSize","_views","_viewsById","_focused","_frameItems","_frameItemCount","_itemEvents","native","virtual","node","_animate","play","pause","_count","getAutoUpdate","setAutoUpdate","autoUpdate","update","now","animate","_handleFrameItems","getPixelRatio","getViewSize","isVisible","parentNode","temp","createElement","removeChild","getZoom","setZoom","zoom","scrollBy","projectToView","viewToProject","getEventPoint","CanvasView","prevFocus","tempFocus","mousedown","mousemove","mouseup","dragging","mouseDown","pointerEnabled","msPointerEnabled","viewEvents","docEvents","mouseout","nodeName","handleMouseMove","scroll","updateFocus","_handleMouseEvent","downPoint","lastPoint","downItem","overItem","dragItem","clickItem","clickTime","dblClick","called","prevented","fallbacks","doubleclick","wasInView","itemEventsMap","click","mouseenter","mouseleave","itemEvents","hitItems","nativeMove","tool","inView","hitItem","mouse","emitMouseEvent","drag","emitMouseEvents","down","up","cancelable","preventDefault","_handleKeyEvent","character","keyEvent","KeyEvent","sign","_resetState","prevPoint","stopItem","mouseEvent","stopped","MouseEvent","fallback","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","prevFont","measureText","stopPropagation","getTimeStamp","timeStamp","getModifiers","Key","modifiers","metaFixMap","downKey","keyLookup","\t"," ","\b","","Spacebar","Del","Win","Esc","charLookup","tab","space","enter","keyMap","charMap","alt","meta","capsLock","option","mac","getKey","keyIdentifier","keyCode","keydown","altKey","metaKey","ctrlKey","keypress","charCode","keyup","isDown","ToolEvent","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","setCount","_moveCount","_downCount","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","maxDistance","getFixedDistance","setFixedDistance","distance","easings","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","isFunction","_then","_startTime","_keys","_parsedKeys","_parseKeys","_from","_getState","_to","progress","getValue","__add","__subtract","__multiply","_setProperty","onUpdate","startTime","_getProperty","resolved","_resolveValue","_calculate","parsed","PaperScript","calculateBinary","Http","request","xhr","XMLHttpRequest","async","mimeType","overrideMimeType","responseText","canvases","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","average","negation","mode","srcContext","dstContext","srcCanvas","dstData","SvgElement","svg","xmlns","xlink","attributeNamespace","href","xmlns:xlink","attributes","namespace","setAttributeNS","tag","createElementNS","getAttributeNS","SvgStyles","true","false","property","toSVG","fromSVG","exportFilter","getTransform","coordinates","attrs","trans","exportGroup","childNode","_exportSVG","clip-path","exportShape","exporters","embedImages","matchShapes","definitionItem","viewBox","overflow","textContent","applyStyle","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","exportGradient","visibility","svgs","__id","typeId","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","exportSVG","rootSize","allowNull","allowPercent","defaultValue","defaultX","defaultY","convertValue","importGroup","nodes","childNodes","isClip","isDefs","currentStyle","applyAttributes","querySelectorAll","importNode","importPoly","importGradient","scaleToBounds","_scaleToBounds","importers","#document","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","switch","applyTransform","transforms","applyOpacity","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-color","stop-opacity","percent","styles","group","tagName","isElement","nextSibling","importer","onImport","expandShapes","_importSVG","DOMParser","parseFromString","reader","readAsText","importSVG","PlacedSymbol","_toConsumableArray","arr","arr2","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","__webpack_exports__"],"mappings":"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","file":"static/js/11.b7422e19.chunk.js","sourcesContent":["parcelRequire = function (e, r, t, n) {\n  var i,\n      o = \"function\" == typeof parcelRequire && parcelRequire,\n      u = \"function\" == typeof require && require;\n\n  function f(t, n) {\n    if (!r[t]) {\n      if (!e[t]) {\n        var i = \"function\" == typeof parcelRequire && parcelRequire;\n        if (!n && i) return i(t, !0);\n        if (o) return o(t, !0);\n        if (u && \"string\" == typeof t) return u(t);\n        var c = new Error(\"Cannot find module '\" + t + \"'\");\n        throw c.code = \"MODULE_NOT_FOUND\", c;\n      }\n\n      p.resolve = function (r) {\n        return e[t][1][r] || r;\n      }, p.cache = {};\n      var l = r[t] = new f.Module(t);\n      e[t][0].call(l.exports, p, l, l.exports, this);\n    }\n\n    return r[t].exports;\n\n    function p(e) {\n      return f(p.resolve(e));\n    }\n  }\n\n  f.isParcelRequire = !0, f.Module = function (e) {\n    this.id = e, this.bundle = f, this.exports = {};\n  }, f.modules = e, f.cache = r, f.parent = o, f.register = function (r, t) {\n    e[r] = [function (e, r) {\n      r.exports = t;\n    }, {}];\n  };\n\n  for (var c = 0; c < t.length; c++) {\n    try {\n      f(t[c]);\n    } catch (e) {\n      i || (i = e);\n    }\n  }\n\n  if (t.length) {\n    var l = f(t[t.length - 1]);\n    \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = l : \"function\" == typeof define && define.amd ? define(function () {\n      return l;\n    }) : n && (this[n] = l);\n  }\n\n  if (parcelRequire = f, i) throw i;\n  return f;\n}({\n  \"EgBh\": [function (require, module, exports) {\n    var e = {};\n    e.useBlobBuilder = function () {\n      try {\n        return new Blob([]), !1;\n      } catch (e) {\n        return !0;\n      }\n    }(), e.useArrayBufferView = !e.useBlobBuilder && function () {\n      try {\n        return 0 === new Blob([new Uint8Array([])]).size;\n      } catch (e) {\n        return !0;\n      }\n    }(), module.exports.binaryFeatures = e;\n    var r = module.exports.BlobBuilder;\n\n    function t() {\n      this._pieces = [], this._parts = [];\n    }\n\n    \"undefined\" != typeof window && (r = module.exports.BlobBuilder = window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder), t.prototype.append = function (e) {\n      \"number\" == typeof e ? this._pieces.push(e) : (this.flush(), this._parts.push(e));\n    }, t.prototype.flush = function () {\n      if (this._pieces.length > 0) {\n        var r = new Uint8Array(this._pieces);\n        e.useArrayBufferView || (r = r.buffer), this._parts.push(r), this._pieces = [];\n      }\n    }, t.prototype.getBuffer = function () {\n      if (this.flush(), e.useBlobBuilder) {\n        for (var t = new r(), i = 0, u = this._parts.length; i < u; i++) {\n          t.append(this._parts[i]);\n        }\n\n        return t.getBlob();\n      }\n\n      return new Blob(this._parts);\n    }, module.exports.BufferBuilder = t;\n  }, {}],\n  \"kdPp\": [function (require, module, exports) {\n    var t = require(\"./bufferbuilder\").BufferBuilder,\n        e = require(\"./bufferbuilder\").binaryFeatures,\n        i = {\n      unpack: function unpack(t) {\n        return new r(t).unpack();\n      },\n      pack: function pack(t) {\n        var e = new n();\n        return e.pack(t), e.getBuffer();\n      }\n    };\n\n    function r(t) {\n      this.index = 0, this.dataBuffer = t, this.dataView = new Uint8Array(this.dataBuffer), this.length = this.dataBuffer.byteLength;\n    }\n\n    function n() {\n      this.bufferBuilder = new t();\n    }\n\n    function u(t) {\n      var e = t.charCodeAt(0);\n      return e <= 2047 ? \"00\" : e <= 65535 ? \"000\" : e <= 2097151 ? \"0000\" : e <= 67108863 ? \"00000\" : \"000000\";\n    }\n\n    function a(t) {\n      return t.length > 600 ? new Blob([t]).size : t.replace(/[^\\u0000-\\u007F]/g, u).length;\n    }\n\n    module.exports = i, r.prototype.unpack = function () {\n      var t,\n          e = this.unpack_uint8();\n      if (e < 128) return e;\n      if ((224 ^ e) < 32) return (224 ^ e) - 32;\n      if ((t = 160 ^ e) <= 15) return this.unpack_raw(t);\n      if ((t = 176 ^ e) <= 15) return this.unpack_string(t);\n      if ((t = 144 ^ e) <= 15) return this.unpack_array(t);\n      if ((t = 128 ^ e) <= 15) return this.unpack_map(t);\n\n      switch (e) {\n        case 192:\n          return null;\n\n        case 193:\n          return;\n\n        case 194:\n          return !1;\n\n        case 195:\n          return !0;\n\n        case 202:\n          return this.unpack_float();\n\n        case 203:\n          return this.unpack_double();\n\n        case 204:\n          return this.unpack_uint8();\n\n        case 205:\n          return this.unpack_uint16();\n\n        case 206:\n          return this.unpack_uint32();\n\n        case 207:\n          return this.unpack_uint64();\n\n        case 208:\n          return this.unpack_int8();\n\n        case 209:\n          return this.unpack_int16();\n\n        case 210:\n          return this.unpack_int32();\n\n        case 211:\n          return this.unpack_int64();\n\n        case 212:\n        case 213:\n        case 214:\n        case 215:\n          return;\n\n        case 216:\n          return t = this.unpack_uint16(), this.unpack_string(t);\n\n        case 217:\n          return t = this.unpack_uint32(), this.unpack_string(t);\n\n        case 218:\n          return t = this.unpack_uint16(), this.unpack_raw(t);\n\n        case 219:\n          return t = this.unpack_uint32(), this.unpack_raw(t);\n\n        case 220:\n          return t = this.unpack_uint16(), this.unpack_array(t);\n\n        case 221:\n          return t = this.unpack_uint32(), this.unpack_array(t);\n\n        case 222:\n          return t = this.unpack_uint16(), this.unpack_map(t);\n\n        case 223:\n          return t = this.unpack_uint32(), this.unpack_map(t);\n      }\n    }, r.prototype.unpack_uint8 = function () {\n      var t = 255 & this.dataView[this.index];\n      return this.index++, t;\n    }, r.prototype.unpack_uint16 = function () {\n      var t = this.read(2),\n          e = 256 * (255 & t[0]) + (255 & t[1]);\n      return this.index += 2, e;\n    }, r.prototype.unpack_uint32 = function () {\n      var t = this.read(4),\n          e = 256 * (256 * (256 * t[0] + t[1]) + t[2]) + t[3];\n      return this.index += 4, e;\n    }, r.prototype.unpack_uint64 = function () {\n      var t = this.read(8),\n          e = 256 * (256 * (256 * (256 * (256 * (256 * (256 * t[0] + t[1]) + t[2]) + t[3]) + t[4]) + t[5]) + t[6]) + t[7];\n      return this.index += 8, e;\n    }, r.prototype.unpack_int8 = function () {\n      var t = this.unpack_uint8();\n      return t < 128 ? t : t - 256;\n    }, r.prototype.unpack_int16 = function () {\n      var t = this.unpack_uint16();\n      return t < 32768 ? t : t - 65536;\n    }, r.prototype.unpack_int32 = function () {\n      var t = this.unpack_uint32();\n      return t < Math.pow(2, 31) ? t : t - Math.pow(2, 32);\n    }, r.prototype.unpack_int64 = function () {\n      var t = this.unpack_uint64();\n      return t < Math.pow(2, 63) ? t : t - Math.pow(2, 64);\n    }, r.prototype.unpack_raw = function (t) {\n      if (this.length < this.index + t) throw new Error(\"BinaryPackFailure: index is out of range \" + this.index + \" \" + t + \" \" + this.length);\n      var e = this.dataBuffer.slice(this.index, this.index + t);\n      return this.index += t, e;\n    }, r.prototype.unpack_string = function (t) {\n      for (var e, i, r = this.read(t), n = 0, u = \"\"; n < t;) {\n        (e = r[n]) < 128 ? (u += String.fromCharCode(e), n++) : (192 ^ e) < 32 ? (i = (192 ^ e) << 6 | 63 & r[n + 1], u += String.fromCharCode(i), n += 2) : (i = (15 & e) << 12 | (63 & r[n + 1]) << 6 | 63 & r[n + 2], u += String.fromCharCode(i), n += 3);\n      }\n\n      return this.index += t, u;\n    }, r.prototype.unpack_array = function (t) {\n      for (var e = new Array(t), i = 0; i < t; i++) {\n        e[i] = this.unpack();\n      }\n\n      return e;\n    }, r.prototype.unpack_map = function (t) {\n      for (var e = {}, i = 0; i < t; i++) {\n        var r = this.unpack(),\n            n = this.unpack();\n        e[r] = n;\n      }\n\n      return e;\n    }, r.prototype.unpack_float = function () {\n      var t = this.unpack_uint32(),\n          e = (t >> 23 & 255) - 127;\n      return (0 === t >> 31 ? 1 : -1) * (8388607 & t | 8388608) * Math.pow(2, e - 23);\n    }, r.prototype.unpack_double = function () {\n      var t = this.unpack_uint32(),\n          e = this.unpack_uint32(),\n          i = (t >> 20 & 2047) - 1023;\n      return (0 === t >> 31 ? 1 : -1) * ((1048575 & t | 1048576) * Math.pow(2, i - 20) + e * Math.pow(2, i - 52));\n    }, r.prototype.read = function (t) {\n      var e = this.index;\n      if (e + t <= this.length) return this.dataView.subarray(e, e + t);\n      throw new Error(\"BinaryPackFailure: read index out of range\");\n    }, n.prototype.getBuffer = function () {\n      return this.bufferBuilder.getBuffer();\n    }, n.prototype.pack = function (t) {\n      var i = typeof t;\n      if (\"string\" === i) this.pack_string(t);else if (\"number\" === i) Math.floor(t) === t ? this.pack_integer(t) : this.pack_double(t);else if (\"boolean\" === i) !0 === t ? this.bufferBuilder.append(195) : !1 === t && this.bufferBuilder.append(194);else if (\"undefined\" === i) this.bufferBuilder.append(192);else {\n        if (\"object\" !== i) throw new Error('Type \"' + i + '\" not yet supported');\n        if (null === t) this.bufferBuilder.append(192);else {\n          var r = t.constructor;\n          if (r == Array) this.pack_array(t);else if (r == Blob || r == File || t instanceof Blob || t instanceof File) this.pack_bin(t);else if (r == ArrayBuffer) e.useArrayBufferView ? this.pack_bin(new Uint8Array(t)) : this.pack_bin(t);else if (\"BYTES_PER_ELEMENT\" in t) e.useArrayBufferView ? this.pack_bin(new Uint8Array(t.buffer)) : this.pack_bin(t.buffer);else if (r == Object || r.toString().startsWith(\"class\")) this.pack_object(t);else if (r == Date) this.pack_string(t.toString());else {\n            if (\"function\" != typeof t.toBinaryPack) throw new Error('Type \"' + r.toString() + '\" not yet supported');\n            this.bufferBuilder.append(t.toBinaryPack());\n          }\n        }\n      }\n      this.bufferBuilder.flush();\n    }, n.prototype.pack_bin = function (t) {\n      var e = t.length || t.byteLength || t.size;\n      if (e <= 15) this.pack_uint8(160 + e);else if (e <= 65535) this.bufferBuilder.append(218), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(219), this.pack_uint32(e);\n      }\n      this.bufferBuilder.append(t);\n    }, n.prototype.pack_string = function (t) {\n      var e = a(t);\n      if (e <= 15) this.pack_uint8(176 + e);else if (e <= 65535) this.bufferBuilder.append(216), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(217), this.pack_uint32(e);\n      }\n      this.bufferBuilder.append(t);\n    }, n.prototype.pack_array = function (t) {\n      var e = t.length;\n      if (e <= 15) this.pack_uint8(144 + e);else if (e <= 65535) this.bufferBuilder.append(220), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(221), this.pack_uint32(e);\n      }\n\n      for (var i = 0; i < e; i++) {\n        this.pack(t[i]);\n      }\n    }, n.prototype.pack_integer = function (t) {\n      if (t >= -32 && t <= 127) this.bufferBuilder.append(255 & t);else if (t >= 0 && t <= 255) this.bufferBuilder.append(204), this.pack_uint8(t);else if (t >= -128 && t <= 127) this.bufferBuilder.append(208), this.pack_int8(t);else if (t >= 0 && t <= 65535) this.bufferBuilder.append(205), this.pack_uint16(t);else if (t >= -32768 && t <= 32767) this.bufferBuilder.append(209), this.pack_int16(t);else if (t >= 0 && t <= 4294967295) this.bufferBuilder.append(206), this.pack_uint32(t);else if (t >= -2147483648 && t <= 2147483647) this.bufferBuilder.append(210), this.pack_int32(t);else if (t >= -0x8000000000000000 && t <= 0x8000000000000000) this.bufferBuilder.append(211), this.pack_int64(t);else {\n        if (!(t >= 0 && t <= 0x10000000000000000)) throw new Error(\"Invalid integer\");\n        this.bufferBuilder.append(207), this.pack_uint64(t);\n      }\n    }, n.prototype.pack_double = function (t) {\n      var e = 0;\n      t < 0 && (e = 1, t = -t);\n      var i = Math.floor(Math.log(t) / Math.LN2),\n          r = t / Math.pow(2, i) - 1,\n          n = Math.floor(r * Math.pow(2, 52)),\n          u = Math.pow(2, 32),\n          a = e << 31 | i + 1023 << 20 | n / u & 1048575,\n          p = n % u;\n      this.bufferBuilder.append(203), this.pack_int32(a), this.pack_int32(p);\n    }, n.prototype.pack_object = function (t) {\n      var e = Object.keys(t).length;\n      if (e <= 15) this.pack_uint8(128 + e);else if (e <= 65535) this.bufferBuilder.append(222), this.pack_uint16(e);else {\n        if (!(e <= 4294967295)) throw new Error(\"Invalid length\");\n        this.bufferBuilder.append(223), this.pack_uint32(e);\n      }\n\n      for (var i in t) {\n        t.hasOwnProperty(i) && (this.pack(i), this.pack(t[i]));\n      }\n    }, n.prototype.pack_uint8 = function (t) {\n      this.bufferBuilder.append(t);\n    }, n.prototype.pack_uint16 = function (t) {\n      this.bufferBuilder.append(t >> 8), this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_uint32 = function (t) {\n      var e = 4294967295 & t;\n      this.bufferBuilder.append((4278190080 & e) >>> 24), this.bufferBuilder.append((16711680 & e) >>> 16), this.bufferBuilder.append((65280 & e) >>> 8), this.bufferBuilder.append(255 & e);\n    }, n.prototype.pack_uint64 = function (t) {\n      var e = t / Math.pow(2, 32),\n          i = t % Math.pow(2, 32);\n      this.bufferBuilder.append((4278190080 & e) >>> 24), this.bufferBuilder.append((16711680 & e) >>> 16), this.bufferBuilder.append((65280 & e) >>> 8), this.bufferBuilder.append(255 & e), this.bufferBuilder.append((4278190080 & i) >>> 24), this.bufferBuilder.append((16711680 & i) >>> 16), this.bufferBuilder.append((65280 & i) >>> 8), this.bufferBuilder.append(255 & i);\n    }, n.prototype.pack_int8 = function (t) {\n      this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_int16 = function (t) {\n      this.bufferBuilder.append((65280 & t) >> 8), this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_int32 = function (t) {\n      this.bufferBuilder.append(t >>> 24 & 255), this.bufferBuilder.append((16711680 & t) >>> 16), this.bufferBuilder.append((65280 & t) >>> 8), this.bufferBuilder.append(255 & t);\n    }, n.prototype.pack_int64 = function (t) {\n      var e = Math.floor(t / Math.pow(2, 32)),\n          i = t % Math.pow(2, 32);\n      this.bufferBuilder.append((4278190080 & e) >>> 24), this.bufferBuilder.append((16711680 & e) >>> 16), this.bufferBuilder.append((65280 & e) >>> 8), this.bufferBuilder.append(255 & e), this.bufferBuilder.append((4278190080 & i) >>> 24), this.bufferBuilder.append((16711680 & i) >>> 16), this.bufferBuilder.append((65280 & i) >>> 8), this.bufferBuilder.append(255 & i);\n    };\n  }, {\n    \"./bufferbuilder\": \"EgBh\"\n  }],\n  \"iSxC\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e, t, n) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = n, e;\n    }\n\n    function t(e) {\n      return (t = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.extractVersion = o, exports.wrapPeerConnectionEvent = i, exports.disableLog = s, exports.disableWarnings = a, exports.log = u, exports.deprecated = c, exports.detectBrowser = p, exports.compactObject = d, exports.walkStats = l, exports.filterStats = b;\n    var n = !0,\n        r = !0;\n\n    function o(e, t, n) {\n      var r = e.match(t);\n      return r && r.length >= n && parseInt(r[n], 10);\n    }\n\n    function i(e, t, n) {\n      if (e.RTCPeerConnection) {\n        var r = e.RTCPeerConnection.prototype,\n            o = r.addEventListener;\n\n        r.addEventListener = function (e, r) {\n          if (e !== t) return o.apply(this, arguments);\n\n          var i = function i(e) {\n            var t = n(e);\n            t && r(t);\n          };\n\n          return this._eventMap = this._eventMap || {}, this._eventMap[r] = i, o.apply(this, [e, i]);\n        };\n\n        var i = r.removeEventListener;\n        r.removeEventListener = function (e, n) {\n          if (e !== t || !this._eventMap || !this._eventMap[n]) return i.apply(this, arguments);\n          var r = this._eventMap[n];\n          return delete this._eventMap[n], i.apply(this, [e, r]);\n        }, Object.defineProperty(r, \"on\" + t, {\n          get: function get() {\n            return this[\"_on\" + t];\n          },\n          set: function set(e) {\n            this[\"_on\" + t] && (this.removeEventListener(t, this[\"_on\" + t]), delete this[\"_on\" + t]), e && this.addEventListener(t, this[\"_on\" + t] = e);\n          },\n          enumerable: !0,\n          configurable: !0\n        });\n      }\n    }\n\n    function s(e) {\n      return \"boolean\" != typeof e ? new Error(\"Argument type: \" + t(e) + \". Please use a boolean.\") : (n = e, e ? \"adapter.js logging disabled\" : \"adapter.js logging enabled\");\n    }\n\n    function a(e) {\n      return \"boolean\" != typeof e ? new Error(\"Argument type: \" + t(e) + \". Please use a boolean.\") : (r = !e, \"adapter.js deprecation warnings \" + (e ? \"disabled\" : \"enabled\"));\n    }\n\n    function u() {\n      if (\"object\" === (\"undefined\" == typeof window ? \"undefined\" : t(window))) {\n        if (n) return;\n        \"undefined\" != typeof console && \"function\" == typeof console.log && console.log.apply(console, arguments);\n      }\n    }\n\n    function c(e, t) {\n      r && console.warn(e + \" is deprecated, please use \" + t + \" instead.\");\n    }\n\n    function p(e) {\n      var t = e.navigator,\n          n = {\n        browser: null,\n        version: null\n      };\n      if (void 0 === e || !e.navigator) return n.browser = \"Not a browser.\", n;\n      if (t.mozGetUserMedia) n.browser = \"firefox\", n.version = o(t.userAgent, /Firefox\\/(\\d+)\\./, 1);else if (t.webkitGetUserMedia || !1 === e.isSecureContext && e.webkitRTCPeerConnection && !e.RTCIceGatherer) n.browser = \"chrome\", n.version = o(t.userAgent, /Chrom(e|ium)\\/(\\d+)\\./, 2);else if (t.mediaDevices && t.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) n.browser = \"edge\", n.version = o(t.userAgent, /Edge\\/(\\d+).(\\d+)$/, 2);else {\n        if (!e.RTCPeerConnection || !t.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) return n.browser = \"Not a supported browser.\", n;\n        n.browser = \"safari\", n.version = o(t.userAgent, /AppleWebKit\\/(\\d+)\\./, 1), n.supportsUnifiedPlan = e.RTCRtpTransceiver && \"currentDirection\" in e.RTCRtpTransceiver.prototype;\n      }\n      return n;\n    }\n\n    function f(e) {\n      return \"[object Object]\" === Object.prototype.toString.call(e);\n    }\n\n    function d(t) {\n      return f(t) ? Object.keys(t).reduce(function (n, r) {\n        var o = f(t[r]),\n            i = o ? d(t[r]) : t[r],\n            s = o && !Object.keys(i).length;\n        return void 0 === i || s ? n : Object.assign(n, e({}, r, i));\n      }, {}) : t;\n    }\n\n    function l(e, t, n) {\n      t && !n.has(t.id) && (n.set(t.id, t), Object.keys(t).forEach(function (r) {\n        r.endsWith(\"Id\") ? l(e, e.get(t[r]), n) : r.endsWith(\"Ids\") && t[r].forEach(function (t) {\n          l(e, e.get(t), n);\n        });\n      }));\n    }\n\n    function b(e, t, n) {\n      var r = n ? \"outbound-rtp\" : \"inbound-rtp\",\n          o = new Map();\n      if (null === t) return o;\n      var i = [];\n      return e.forEach(function (e) {\n        \"track\" === e.type && e.trackIdentifier === t.id && i.push(e);\n      }), i.forEach(function (t) {\n        e.forEach(function (n) {\n          n.type === r && n.trackId === t.id && l(e, n, o);\n        });\n      }), o;\n    }\n  }, {}],\n  \"s6SN\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetUserMedia = i;\n    var e = t(require(\"../utils.js\"));\n\n    function r() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return r = function r() {\n        return e;\n      }, e;\n    }\n\n    function t(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = r();\n      if (t && t.has(e)) return t.get(e);\n      var o = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(o, i, a) : o[i] = e[i];\n        }\n      }\n\n      return o.default = e, t && t.set(e, o), o;\n    }\n\n    function o(e) {\n      return (o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    var n = e.log;\n\n    function i(r) {\n      var t = r && r.navigator;\n\n      if (t.mediaDevices) {\n        var i = e.detectBrowser(r),\n            a = function a(e) {\n          if (\"object\" !== o(e) || e.mandatory || e.optional) return e;\n          var r = {};\n          return Object.keys(e).forEach(function (t) {\n            if (\"require\" !== t && \"advanced\" !== t && \"mediaSource\" !== t) {\n              var n = \"object\" === o(e[t]) ? e[t] : {\n                ideal: e[t]\n              };\n              void 0 !== n.exact && \"number\" == typeof n.exact && (n.min = n.max = n.exact);\n\n              var i = function i(e, r) {\n                return e ? e + r.charAt(0).toUpperCase() + r.slice(1) : \"deviceId\" === r ? \"sourceId\" : r;\n              };\n\n              if (void 0 !== n.ideal) {\n                r.optional = r.optional || [];\n                var a = {};\n                \"number\" == typeof n.ideal ? (a[i(\"min\", t)] = n.ideal, r.optional.push(a), (a = {})[i(\"max\", t)] = n.ideal, r.optional.push(a)) : (a[i(\"\", t)] = n.ideal, r.optional.push(a));\n              }\n\n              void 0 !== n.exact && \"number\" != typeof n.exact ? (r.mandatory = r.mandatory || {}, r.mandatory[i(\"\", t)] = n.exact) : [\"min\", \"max\"].forEach(function (e) {\n                void 0 !== n[e] && (r.mandatory = r.mandatory || {}, r.mandatory[i(e, t)] = n[e]);\n              });\n            }\n          }), e.advanced && (r.optional = (r.optional || []).concat(e.advanced)), r;\n        },\n            c = function c(e, r) {\n          if (i.version >= 61) return r(e);\n\n          if ((e = JSON.parse(JSON.stringify(e))) && \"object\" === o(e.audio)) {\n            var c = function c(e, r, t) {\n              r in e && !(t in e) && (e[t] = e[r], delete e[r]);\n            };\n\n            c((e = JSON.parse(JSON.stringify(e))).audio, \"autoGainControl\", \"googAutoGainControl\"), c(e.audio, \"noiseSuppression\", \"googNoiseSuppression\"), e.audio = a(e.audio);\n          }\n\n          if (e && \"object\" === o(e.video)) {\n            var d = e.video.facingMode;\n            d = d && (\"object\" === o(d) ? d : {\n              ideal: d\n            });\n            var u,\n                s = i.version < 66;\n            if (d && (\"user\" === d.exact || \"environment\" === d.exact || \"user\" === d.ideal || \"environment\" === d.ideal) && (!t.mediaDevices.getSupportedConstraints || !t.mediaDevices.getSupportedConstraints().facingMode || s)) if (delete e.video.facingMode, \"environment\" === d.exact || \"environment\" === d.ideal ? u = [\"back\", \"rear\"] : \"user\" !== d.exact && \"user\" !== d.ideal || (u = [\"front\"]), u) return t.mediaDevices.enumerateDevices().then(function (t) {\n              var o = (t = t.filter(function (e) {\n                return \"videoinput\" === e.kind;\n              })).find(function (e) {\n                return u.some(function (r) {\n                  return e.label.toLowerCase().includes(r);\n                });\n              });\n              return !o && t.length && u.includes(\"back\") && (o = t[t.length - 1]), o && (e.video.deviceId = d.exact ? {\n                exact: o.deviceId\n              } : {\n                ideal: o.deviceId\n              }), e.video = a(e.video), n(\"chrome: \" + JSON.stringify(e)), r(e);\n            });\n            e.video = a(e.video);\n          }\n\n          return n(\"chrome: \" + JSON.stringify(e)), r(e);\n        },\n            d = function d(e) {\n          return i.version >= 64 ? e : {\n            name: {\n              PermissionDeniedError: \"NotAllowedError\",\n              PermissionDismissedError: \"NotAllowedError\",\n              InvalidStateError: \"NotAllowedError\",\n              DevicesNotFoundError: \"NotFoundError\",\n              ConstraintNotSatisfiedError: \"OverconstrainedError\",\n              TrackStartError: \"NotReadableError\",\n              MediaDeviceFailedDueToShutdown: \"NotAllowedError\",\n              MediaDeviceKillSwitchOn: \"NotAllowedError\",\n              TabCaptureError: \"AbortError\",\n              ScreenCaptureError: \"AbortError\",\n              DeviceCaptureError: \"AbortError\"\n            }[e.name] || e.name,\n            message: e.message,\n            constraint: e.constraint || e.constraintName,\n            toString: function toString() {\n              return this.name + (this.message && \": \") + this.message;\n            }\n          };\n        };\n\n        if (t.getUserMedia = function (e, r, o) {\n          c(e, function (e) {\n            t.webkitGetUserMedia(e, r, function (e) {\n              o && o(d(e));\n            });\n          });\n        }.bind(t), t.mediaDevices.getUserMedia) {\n          var u = t.mediaDevices.getUserMedia.bind(t.mediaDevices);\n\n          t.mediaDevices.getUserMedia = function (e) {\n            return c(e, function (e) {\n              return u(e).then(function (r) {\n                if (e.audio && !r.getAudioTracks().length || e.video && !r.getVideoTracks().length) throw r.getTracks().forEach(function (e) {\n                  e.stop();\n                }), new DOMException(\"\", \"NotFoundError\");\n                return r;\n              }, function (e) {\n                return Promise.reject(d(e));\n              });\n            });\n          };\n        }\n      }\n    }\n  }, {\n    \"../utils.js\": \"iSxC\"\n  }],\n  \"VHa8\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e, i) {\n      e.navigator.mediaDevices && \"getDisplayMedia\" in e.navigator.mediaDevices || e.navigator.mediaDevices && (\"function\" == typeof i ? e.navigator.mediaDevices.getDisplayMedia = function (a) {\n        return i(a).then(function (i) {\n          var t = a.video && a.video.width,\n              o = a.video && a.video.height,\n              d = a.video && a.video.frameRate;\n          return a.video = {\n            mandatory: {\n              chromeMediaSource: \"desktop\",\n              chromeMediaSourceId: i,\n              maxFrameRate: d || 3\n            }\n          }, t && (a.video.mandatory.maxWidth = t), o && (a.video.mandatory.maxHeight = o), e.navigator.mediaDevices.getUserMedia(a);\n        });\n      } : console.error(\"shimGetDisplayMedia: getSourceId argument is not a function\"));\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetDisplayMedia = e;\n  }, {}],\n  \"uI5X\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimMediaStream = a, exports.shimOnTrack = c, exports.shimGetSendersWithDtmf = p, exports.shimGetStats = d, exports.shimSenderReceiverGetStats = h, exports.shimAddTrackRemoveTrackWithNative = f, exports.shimAddTrackRemoveTrack = m, exports.shimPeerConnection = u, exports.fixNegotiationNeeded = l, Object.defineProperty(exports, \"shimGetUserMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return t.shimGetUserMedia;\n      }\n    }), Object.defineProperty(exports, \"shimGetDisplayMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return r.shimGetDisplayMedia;\n      }\n    });\n\n    var e = i(require(\"../utils.js\")),\n        t = require(\"./getusermedia\"),\n        r = require(\"./getdisplaymedia\");\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function i(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = n();\n      if (t && t.has(e)) return t.get(e);\n      var r = {},\n          i = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var o in e) {\n        if (Object.prototype.hasOwnProperty.call(e, o)) {\n          var s = i ? Object.getOwnPropertyDescriptor(e, o) : null;\n          s && (s.get || s.set) ? Object.defineProperty(r, o, s) : r[o] = e[o];\n        }\n      }\n\n      return r.default = e, t && t.set(e, r), r;\n    }\n\n    function o(e, t, r) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: r,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = r, e;\n    }\n\n    function s(e) {\n      return (s = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function a(e) {\n      e.MediaStream = e.MediaStream || e.webkitMediaStream;\n    }\n\n    function c(t) {\n      if (\"object\" !== s(t) || !t.RTCPeerConnection || \"ontrack\" in t.RTCPeerConnection.prototype) e.wrapPeerConnectionEvent(t, \"track\", function (e) {\n        return e.transceiver || Object.defineProperty(e, \"transceiver\", {\n          value: {\n            receiver: e.receiver\n          }\n        }), e;\n      });else {\n        Object.defineProperty(t.RTCPeerConnection.prototype, \"ontrack\", {\n          get: function get() {\n            return this._ontrack;\n          },\n          set: function set(e) {\n            this._ontrack && this.removeEventListener(\"track\", this._ontrack), this.addEventListener(\"track\", this._ontrack = e);\n          },\n          enumerable: !0,\n          configurable: !0\n        });\n        var r = t.RTCPeerConnection.prototype.setRemoteDescription;\n\n        t.RTCPeerConnection.prototype.setRemoteDescription = function () {\n          var e = this;\n          return this._ontrackpoly || (this._ontrackpoly = function (r) {\n            r.stream.addEventListener(\"addtrack\", function (n) {\n              var i;\n              i = t.RTCPeerConnection.prototype.getReceivers ? e.getReceivers().find(function (e) {\n                return e.track && e.track.id === n.track.id;\n              }) : {\n                track: n.track\n              };\n              var o = new Event(\"track\");\n              o.track = n.track, o.receiver = i, o.transceiver = {\n                receiver: i\n              }, o.streams = [r.stream], e.dispatchEvent(o);\n            }), r.stream.getTracks().forEach(function (n) {\n              var i;\n              i = t.RTCPeerConnection.prototype.getReceivers ? e.getReceivers().find(function (e) {\n                return e.track && e.track.id === n.id;\n              }) : {\n                track: n\n              };\n              var o = new Event(\"track\");\n              o.track = n, o.receiver = i, o.transceiver = {\n                receiver: i\n              }, o.streams = [r.stream], e.dispatchEvent(o);\n            });\n          }, this.addEventListener(\"addstream\", this._ontrackpoly)), r.apply(this, arguments);\n        };\n      }\n    }\n\n    function p(e) {\n      if (\"object\" === s(e) && e.RTCPeerConnection && !(\"getSenders\" in e.RTCPeerConnection.prototype) && \"createDTMFSender\" in e.RTCPeerConnection.prototype) {\n        var t = function t(e, _t) {\n          return {\n            track: _t,\n\n            get dtmf() {\n              return void 0 === this._dtmf && (\"audio\" === _t.kind ? this._dtmf = e.createDTMFSender(_t) : this._dtmf = null), this._dtmf;\n            },\n\n            _pc: e\n          };\n        };\n\n        if (!e.RTCPeerConnection.prototype.getSenders) {\n          e.RTCPeerConnection.prototype.getSenders = function () {\n            return this._senders = this._senders || [], this._senders.slice();\n          };\n\n          var r = e.RTCPeerConnection.prototype.addTrack;\n\n          e.RTCPeerConnection.prototype.addTrack = function (e, n) {\n            var i = r.apply(this, arguments);\n            return i || (i = t(this, e), this._senders.push(i)), i;\n          };\n\n          var n = e.RTCPeerConnection.prototype.removeTrack;\n\n          e.RTCPeerConnection.prototype.removeTrack = function (e) {\n            n.apply(this, arguments);\n\n            var t = this._senders.indexOf(e);\n\n            -1 !== t && this._senders.splice(t, 1);\n          };\n        }\n\n        var i = e.RTCPeerConnection.prototype.addStream;\n\n        e.RTCPeerConnection.prototype.addStream = function (e) {\n          var r = this;\n          this._senders = this._senders || [], i.apply(this, [e]), e.getTracks().forEach(function (e) {\n            r._senders.push(t(r, e));\n          });\n        };\n\n        var o = e.RTCPeerConnection.prototype.removeStream;\n\n        e.RTCPeerConnection.prototype.removeStream = function (e) {\n          var t = this;\n          this._senders = this._senders || [], o.apply(this, [e]), e.getTracks().forEach(function (e) {\n            var r = t._senders.find(function (t) {\n              return t.track === e;\n            });\n\n            r && t._senders.splice(t._senders.indexOf(r), 1);\n          });\n        };\n      } else if (\"object\" === s(e) && e.RTCPeerConnection && \"getSenders\" in e.RTCPeerConnection.prototype && \"createDTMFSender\" in e.RTCPeerConnection.prototype && e.RTCRtpSender && !(\"dtmf\" in e.RTCRtpSender.prototype)) {\n        var a = e.RTCPeerConnection.prototype.getSenders;\n        e.RTCPeerConnection.prototype.getSenders = function () {\n          var e = this,\n              t = a.apply(this, []);\n          return t.forEach(function (t) {\n            return t._pc = e;\n          }), t;\n        }, Object.defineProperty(e.RTCRtpSender.prototype, \"dtmf\", {\n          get: function get() {\n            return void 0 === this._dtmf && (\"audio\" === this.track.kind ? this._dtmf = this._pc.createDTMFSender(this.track) : this._dtmf = null), this._dtmf;\n          }\n        });\n      }\n    }\n\n    function d(e) {\n      if (e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.getStats;\n\n        e.RTCPeerConnection.prototype.getStats = function () {\n          var e = this,\n              _arguments = Array.prototype.slice.call(arguments),\n              r = _arguments[0],\n              n = _arguments[1],\n              i = _arguments[2];\n\n          if (arguments.length > 0 && \"function\" == typeof r) return t.apply(this, arguments);\n          if (0 === t.length && (0 === arguments.length || \"function\" != typeof r)) return t.apply(this, []);\n\n          var o = function o(e) {\n            var t = {};\n            return e.result().forEach(function (e) {\n              var r = {\n                id: e.id,\n                timestamp: e.timestamp,\n                type: {\n                  localcandidate: \"local-candidate\",\n                  remotecandidate: \"remote-candidate\"\n                }[e.type] || e.type\n              };\n              e.names().forEach(function (t) {\n                r[t] = e.stat(t);\n              }), t[r.id] = r;\n            }), t;\n          },\n              s = function s(e) {\n            return new Map(Object.keys(e).map(function (t) {\n              return [t, e[t]];\n            }));\n          };\n\n          if (arguments.length >= 2) {\n            return t.apply(this, [function (e) {\n              n(s(o(e)));\n            }, r]);\n          }\n\n          return new Promise(function (r, n) {\n            t.apply(e, [function (e) {\n              r(s(o(e)));\n            }, n]);\n          }).then(n, i);\n        };\n      }\n    }\n\n    function h(t) {\n      if (\"object\" === s(t) && t.RTCPeerConnection && t.RTCRtpSender && t.RTCRtpReceiver) {\n        if (!(\"getStats\" in t.RTCRtpSender.prototype)) {\n          var r = t.RTCPeerConnection.prototype.getSenders;\n          r && (t.RTCPeerConnection.prototype.getSenders = function () {\n            var e = this,\n                t = r.apply(this, []);\n            return t.forEach(function (t) {\n              return t._pc = e;\n            }), t;\n          });\n          var n = t.RTCPeerConnection.prototype.addTrack;\n          n && (t.RTCPeerConnection.prototype.addTrack = function () {\n            var e = n.apply(this, arguments);\n            return e._pc = this, e;\n          }), t.RTCRtpSender.prototype.getStats = function () {\n            var t = this;\n            return this._pc.getStats().then(function (r) {\n              return e.filterStats(r, t.track, !0);\n            });\n          };\n        }\n\n        if (!(\"getStats\" in t.RTCRtpReceiver.prototype)) {\n          var i = t.RTCPeerConnection.prototype.getReceivers;\n          i && (t.RTCPeerConnection.prototype.getReceivers = function () {\n            var e = this,\n                t = i.apply(this, []);\n            return t.forEach(function (t) {\n              return t._pc = e;\n            }), t;\n          }), e.wrapPeerConnectionEvent(t, \"track\", function (e) {\n            return e.receiver._pc = e.srcElement, e;\n          }), t.RTCRtpReceiver.prototype.getStats = function () {\n            var t = this;\n            return this._pc.getStats().then(function (r) {\n              return e.filterStats(r, t.track, !1);\n            });\n          };\n        }\n\n        if (\"getStats\" in t.RTCRtpSender.prototype && \"getStats\" in t.RTCRtpReceiver.prototype) {\n          var o = t.RTCPeerConnection.prototype.getStats;\n\n          t.RTCPeerConnection.prototype.getStats = function () {\n            if (arguments.length > 0 && arguments[0] instanceof t.MediaStreamTrack) {\n              var e,\n                  r,\n                  n,\n                  i = arguments[0];\n              return this.getSenders().forEach(function (t) {\n                t.track === i && (e ? n = !0 : e = t);\n              }), this.getReceivers().forEach(function (e) {\n                return e.track === i && (r ? n = !0 : r = e), e.track === i;\n              }), n || e && r ? Promise.reject(new DOMException(\"There are more than one sender or receiver for the track.\", \"InvalidAccessError\")) : e ? e.getStats() : r ? r.getStats() : Promise.reject(new DOMException(\"There is no sender or receiver for the track.\", \"InvalidAccessError\"));\n            }\n\n            return o.apply(this, arguments);\n          };\n        }\n      }\n    }\n\n    function f(e) {\n      e.RTCPeerConnection.prototype.getLocalStreams = function () {\n        var e = this;\n        return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, Object.keys(this._shimmedLocalStreams).map(function (t) {\n          return e._shimmedLocalStreams[t][0];\n        });\n      };\n\n      var t = e.RTCPeerConnection.prototype.addTrack;\n\n      e.RTCPeerConnection.prototype.addTrack = function (e, r) {\n        if (!r) return t.apply(this, arguments);\n        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n        var n = t.apply(this, arguments);\n        return this._shimmedLocalStreams[r.id] ? -1 === this._shimmedLocalStreams[r.id].indexOf(n) && this._shimmedLocalStreams[r.id].push(n) : this._shimmedLocalStreams[r.id] = [r, n], n;\n      };\n\n      var r = e.RTCPeerConnection.prototype.addStream;\n\n      e.RTCPeerConnection.prototype.addStream = function (e) {\n        var t = this;\n        this._shimmedLocalStreams = this._shimmedLocalStreams || {}, e.getTracks().forEach(function (e) {\n          if (t.getSenders().find(function (t) {\n            return t.track === e;\n          })) throw new DOMException(\"Track already exists.\", \"InvalidAccessError\");\n        });\n        var n = this.getSenders();\n        r.apply(this, arguments);\n        var i = this.getSenders().filter(function (e) {\n          return -1 === n.indexOf(e);\n        });\n        this._shimmedLocalStreams[e.id] = [e].concat(i);\n      };\n\n      var n = e.RTCPeerConnection.prototype.removeStream;\n\n      e.RTCPeerConnection.prototype.removeStream = function (e) {\n        return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, delete this._shimmedLocalStreams[e.id], n.apply(this, arguments);\n      };\n\n      var i = e.RTCPeerConnection.prototype.removeTrack;\n\n      e.RTCPeerConnection.prototype.removeTrack = function (e) {\n        var t = this;\n        return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, e && Object.keys(this._shimmedLocalStreams).forEach(function (r) {\n          var n = t._shimmedLocalStreams[r].indexOf(e);\n\n          -1 !== n && t._shimmedLocalStreams[r].splice(n, 1), 1 === t._shimmedLocalStreams[r].length && delete t._shimmedLocalStreams[r];\n        }), i.apply(this, arguments);\n      };\n    }\n\n    function m(t) {\n      if (t.RTCPeerConnection) {\n        var r = e.detectBrowser(t);\n        if (t.RTCPeerConnection.prototype.addTrack && r.version >= 65) return f(t);\n        var n = t.RTCPeerConnection.prototype.getLocalStreams;\n\n        t.RTCPeerConnection.prototype.getLocalStreams = function () {\n          var e = this,\n              t = n.apply(this);\n          return this._reverseStreams = this._reverseStreams || {}, t.map(function (t) {\n            return e._reverseStreams[t.id];\n          });\n        };\n\n        var i = t.RTCPeerConnection.prototype.addStream;\n\n        t.RTCPeerConnection.prototype.addStream = function (e) {\n          var r = this;\n\n          if (this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}, e.getTracks().forEach(function (e) {\n            if (r.getSenders().find(function (t) {\n              return t.track === e;\n            })) throw new DOMException(\"Track already exists.\", \"InvalidAccessError\");\n          }), !this._reverseStreams[e.id]) {\n            var n = new t.MediaStream(e.getTracks());\n            this._streams[e.id] = n, this._reverseStreams[n.id] = e, e = n;\n          }\n\n          i.apply(this, [e]);\n        };\n\n        var s = t.RTCPeerConnection.prototype.removeStream;\n        t.RTCPeerConnection.prototype.removeStream = function (e) {\n          this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}, s.apply(this, [this._streams[e.id] || e]), delete this._reverseStreams[this._streams[e.id] ? this._streams[e.id].id : e.id], delete this._streams[e.id];\n        }, t.RTCPeerConnection.prototype.addTrack = function (e, r) {\n          var n = this;\n          if (\"closed\" === this.signalingState) throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\", \"InvalidStateError\");\n          var i = [].slice.call(arguments, 1);\n          if (1 !== i.length || !i[0].getTracks().find(function (t) {\n            return t === e;\n          })) throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\", \"NotSupportedError\");\n          if (this.getSenders().find(function (t) {\n            return t.track === e;\n          })) throw new DOMException(\"Track already exists.\", \"InvalidAccessError\");\n          this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {};\n          var o = this._streams[r.id];\n          if (o) o.addTrack(e), Promise.resolve().then(function () {\n            n.dispatchEvent(new Event(\"negotiationneeded\"));\n          });else {\n            var s = new t.MediaStream([e]);\n            this._streams[r.id] = s, this._reverseStreams[s.id] = r, this.addStream(s);\n          }\n          return this.getSenders().find(function (t) {\n            return t.track === e;\n          });\n        }, [\"createOffer\", \"createAnswer\"].forEach(function (e) {\n          var r = t.RTCPeerConnection.prototype[e],\n              n = o({}, e, function () {\n            var e = this,\n                t = arguments;\n            return arguments.length && \"function\" == typeof arguments[0] ? r.apply(this, [function (r) {\n              var n = p(e, r);\n              t[0].apply(null, [n]);\n            }, function (e) {\n              t[1] && t[1].apply(null, e);\n            }, arguments[2]]) : r.apply(this, arguments).then(function (t) {\n              return p(e, t);\n            });\n          });\n          t.RTCPeerConnection.prototype[e] = n[e];\n        });\n        var a = t.RTCPeerConnection.prototype.setLocalDescription;\n\n        t.RTCPeerConnection.prototype.setLocalDescription = function () {\n          return arguments.length && arguments[0].type ? (arguments[0] = (e = this, t = arguments[0], r = t.sdp, Object.keys(e._reverseStreams || []).forEach(function (t) {\n            var n = e._reverseStreams[t],\n                i = e._streams[n.id];\n            r = r.replace(new RegExp(n.id, \"g\"), i.id);\n          }), new RTCSessionDescription({\n            type: t.type,\n            sdp: r\n          })), a.apply(this, arguments)) : a.apply(this, arguments);\n          var e, t, r;\n        };\n\n        var c = Object.getOwnPropertyDescriptor(t.RTCPeerConnection.prototype, \"localDescription\");\n        Object.defineProperty(t.RTCPeerConnection.prototype, \"localDescription\", {\n          get: function get() {\n            var e = c.get.apply(this);\n            return \"\" === e.type ? e : p(this, e);\n          }\n        }), t.RTCPeerConnection.prototype.removeTrack = function (e) {\n          var t,\n              r = this;\n          if (\"closed\" === this.signalingState) throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\", \"InvalidStateError\");\n          if (!e._pc) throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\", \"TypeError\");\n          if (!(e._pc === this)) throw new DOMException(\"Sender was not created by this connection.\", \"InvalidAccessError\");\n          this._streams = this._streams || {}, Object.keys(this._streams).forEach(function (n) {\n            r._streams[n].getTracks().find(function (t) {\n              return e.track === t;\n            }) && (t = r._streams[n]);\n          }), t && (1 === t.getTracks().length ? this.removeStream(this._reverseStreams[t.id]) : t.removeTrack(e.track), this.dispatchEvent(new Event(\"negotiationneeded\")));\n        };\n      }\n\n      function p(e, t) {\n        var r = t.sdp;\n        return Object.keys(e._reverseStreams || []).forEach(function (t) {\n          var n = e._reverseStreams[t],\n              i = e._streams[n.id];\n          r = r.replace(new RegExp(i.id, \"g\"), n.id);\n        }), new RTCSessionDescription({\n          type: t.type,\n          sdp: r\n        });\n      }\n    }\n\n    function u(t) {\n      var r = e.detectBrowser(t);\n\n      if (!t.RTCPeerConnection && t.webkitRTCPeerConnection && (t.RTCPeerConnection = t.webkitRTCPeerConnection), t.RTCPeerConnection) {\n        r.version < 53 && [\"setLocalDescription\", \"setRemoteDescription\", \"addIceCandidate\"].forEach(function (e) {\n          var r = t.RTCPeerConnection.prototype[e],\n              n = o({}, e, function () {\n            return arguments[0] = new (\"addIceCandidate\" === e ? t.RTCIceCandidate : t.RTCSessionDescription)(arguments[0]), r.apply(this, arguments);\n          });\n          t.RTCPeerConnection.prototype[e] = n[e];\n        });\n        var n = t.RTCPeerConnection.prototype.addIceCandidate;\n\n        t.RTCPeerConnection.prototype.addIceCandidate = function () {\n          return arguments[0] ? r.version < 78 && arguments[0] && \"\" === arguments[0].candidate ? Promise.resolve() : n.apply(this, arguments) : (arguments[1] && arguments[1].apply(null), Promise.resolve());\n        };\n      }\n    }\n\n    function l(t) {\n      e.wrapPeerConnectionEvent(t, \"negotiationneeded\", function (e) {\n        if (\"stable\" === e.target.signalingState) return e;\n      });\n    }\n  }, {\n    \"../utils.js\": \"iSxC\",\n    \"./getusermedia\": \"s6SN\",\n    \"./getdisplaymedia\": \"VHa8\"\n  }],\n  \"NZ1C\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.filterIceServers = n;\n    var r = t(require(\"../utils\"));\n\n    function e() {\n      if (\"function\" != typeof WeakMap) return null;\n      var r = new WeakMap();\n      return e = function e() {\n        return r;\n      }, r;\n    }\n\n    function t(r) {\n      if (r && r.__esModule) return r;\n      if (null === r || \"object\" != typeof r && \"function\" != typeof r) return {\n        default: r\n      };\n      var t = e();\n      if (t && t.has(r)) return t.get(r);\n      var n = {},\n          u = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in r) {\n        if (Object.prototype.hasOwnProperty.call(r, i)) {\n          var f = u ? Object.getOwnPropertyDescriptor(r, i) : null;\n          f && (f.get || f.set) ? Object.defineProperty(n, i, f) : n[i] = r[i];\n        }\n      }\n\n      return n.default = r, t && t.set(r, n), n;\n    }\n\n    function n(e, t) {\n      var n = !1;\n      return (e = JSON.parse(JSON.stringify(e))).filter(function (e) {\n        if (e && (e.urls || e.url)) {\n          var t = e.urls || e.url;\n          e.url && !e.urls && r.deprecated(\"RTCIceServer.url\", \"RTCIceServer.urls\");\n          var u = \"string\" == typeof t;\n          return u && (t = [t]), t = t.filter(function (r) {\n            if (0 === r.indexOf(\"stun:\")) return !1;\n            var e = r.startsWith(\"turn\") && !r.startsWith(\"turn:[\") && r.includes(\"transport=udp\");\n            return e && !n ? (n = !0, !0) : e && !n;\n          }), delete e.url, e.urls = u ? t[0] : t, !!t.length;\n        }\n      });\n    }\n  }, {\n    \"../utils\": \"iSxC\"\n  }],\n  \"YHvh\": [function (require, module, exports) {\n    \"use strict\";\n\n    var r = {\n      generateIdentifier: function generateIdentifier() {\n        return Math.random().toString(36).substr(2, 10);\n      }\n    };\n    r.localCName = r.generateIdentifier(), r.splitLines = function (r) {\n      return r.trim().split(\"\\n\").map(function (r) {\n        return r.trim();\n      });\n    }, r.splitSections = function (r) {\n      return r.split(\"\\nm=\").map(function (r, e) {\n        return (e > 0 ? \"m=\" + r : r).trim() + \"\\r\\n\";\n      });\n    }, r.getDescription = function (e) {\n      var t = r.splitSections(e);\n      return t && t[0];\n    }, r.getMediaSections = function (e) {\n      var t = r.splitSections(e);\n      return t.shift(), t;\n    }, r.matchPrefix = function (e, t) {\n      return r.splitLines(e).filter(function (r) {\n        return 0 === r.indexOf(t);\n      });\n    }, r.parseCandidate = function (r) {\n      for (var e, t = {\n        foundation: (e = 0 === r.indexOf(\"a=candidate:\") ? r.substring(12).split(\" \") : r.substring(10).split(\" \"))[0],\n        component: parseInt(e[1], 10),\n        protocol: e[2].toLowerCase(),\n        priority: parseInt(e[3], 10),\n        ip: e[4],\n        address: e[4],\n        port: parseInt(e[5], 10),\n        type: e[7]\n      }, n = 8; n < e.length; n += 2) {\n        switch (e[n]) {\n          case \"raddr\":\n            t.relatedAddress = e[n + 1];\n            break;\n\n          case \"rport\":\n            t.relatedPort = parseInt(e[n + 1], 10);\n            break;\n\n          case \"tcptype\":\n            t.tcpType = e[n + 1];\n            break;\n\n          case \"ufrag\":\n            t.ufrag = e[n + 1], t.usernameFragment = e[n + 1];\n            break;\n\n          default:\n            t[e[n]] = e[n + 1];\n        }\n      }\n\n      return t;\n    }, r.writeCandidate = function (r) {\n      var e = [];\n      e.push(r.foundation), e.push(r.component), e.push(r.protocol.toUpperCase()), e.push(r.priority), e.push(r.address || r.ip), e.push(r.port);\n      var t = r.type;\n      return e.push(\"typ\"), e.push(t), \"host\" !== t && r.relatedAddress && r.relatedPort && (e.push(\"raddr\"), e.push(r.relatedAddress), e.push(\"rport\"), e.push(r.relatedPort)), r.tcpType && \"tcp\" === r.protocol.toLowerCase() && (e.push(\"tcptype\"), e.push(r.tcpType)), (r.usernameFragment || r.ufrag) && (e.push(\"ufrag\"), e.push(r.usernameFragment || r.ufrag)), \"candidate:\" + e.join(\" \");\n    }, r.parseIceOptions = function (r) {\n      return r.substr(14).split(\" \");\n    }, r.parseRtpMap = function (r) {\n      var e = r.substr(9).split(\" \"),\n          t = {\n        payloadType: parseInt(e.shift(), 10)\n      };\n      return e = e[0].split(\"/\"), t.name = e[0], t.clockRate = parseInt(e[1], 10), t.channels = 3 === e.length ? parseInt(e[2], 10) : 1, t.numChannels = t.channels, t;\n    }, r.writeRtpMap = function (r) {\n      var e = r.payloadType;\n      void 0 !== r.preferredPayloadType && (e = r.preferredPayloadType);\n      var t = r.channels || r.numChannels || 1;\n      return \"a=rtpmap:\" + e + \" \" + r.name + \"/\" + r.clockRate + (1 !== t ? \"/\" + t : \"\") + \"\\r\\n\";\n    }, r.parseExtmap = function (r) {\n      var e = r.substr(9).split(\" \");\n      return {\n        id: parseInt(e[0], 10),\n        direction: e[0].indexOf(\"/\") > 0 ? e[0].split(\"/\")[1] : \"sendrecv\",\n        uri: e[1]\n      };\n    }, r.writeExtmap = function (r) {\n      return \"a=extmap:\" + (r.id || r.preferredId) + (r.direction && \"sendrecv\" !== r.direction ? \"/\" + r.direction : \"\") + \" \" + r.uri + \"\\r\\n\";\n    }, r.parseFmtp = function (r) {\n      for (var e, t = {}, n = r.substr(r.indexOf(\" \") + 1).split(\";\"), a = 0; a < n.length; a++) {\n        t[(e = n[a].trim().split(\"=\"))[0].trim()] = e[1];\n      }\n\n      return t;\n    }, r.writeFmtp = function (r) {\n      var e = \"\",\n          t = r.payloadType;\n\n      if (void 0 !== r.preferredPayloadType && (t = r.preferredPayloadType), r.parameters && Object.keys(r.parameters).length) {\n        var n = [];\n        Object.keys(r.parameters).forEach(function (e) {\n          r.parameters[e] ? n.push(e + \"=\" + r.parameters[e]) : n.push(e);\n        }), e += \"a=fmtp:\" + t + \" \" + n.join(\";\") + \"\\r\\n\";\n      }\n\n      return e;\n    }, r.parseRtcpFb = function (r) {\n      var e = r.substr(r.indexOf(\" \") + 1).split(\" \");\n      return {\n        type: e.shift(),\n        parameter: e.join(\" \")\n      };\n    }, r.writeRtcpFb = function (r) {\n      var e = \"\",\n          t = r.payloadType;\n      return void 0 !== r.preferredPayloadType && (t = r.preferredPayloadType), r.rtcpFeedback && r.rtcpFeedback.length && r.rtcpFeedback.forEach(function (r) {\n        e += \"a=rtcp-fb:\" + t + \" \" + r.type + (r.parameter && r.parameter.length ? \" \" + r.parameter : \"\") + \"\\r\\n\";\n      }), e;\n    }, r.parseSsrcMedia = function (r) {\n      var e = r.indexOf(\" \"),\n          t = {\n        ssrc: parseInt(r.substr(7, e - 7), 10)\n      },\n          n = r.indexOf(\":\", e);\n      return n > -1 ? (t.attribute = r.substr(e + 1, n - e - 1), t.value = r.substr(n + 1)) : t.attribute = r.substr(e + 1), t;\n    }, r.parseSsrcGroup = function (r) {\n      var e = r.substr(13).split(\" \");\n      return {\n        semantics: e.shift(),\n        ssrcs: e.map(function (r) {\n          return parseInt(r, 10);\n        })\n      };\n    }, r.getMid = function (e) {\n      var t = r.matchPrefix(e, \"a=mid:\")[0];\n      if (t) return t.substr(6);\n    }, r.parseFingerprint = function (r) {\n      var e = r.substr(14).split(\" \");\n      return {\n        algorithm: e[0].toLowerCase(),\n        value: e[1]\n      };\n    }, r.getDtlsParameters = function (e, t) {\n      return {\n        role: \"auto\",\n        fingerprints: r.matchPrefix(e + t, \"a=fingerprint:\").map(r.parseFingerprint)\n      };\n    }, r.writeDtlsParameters = function (r, e) {\n      var t = \"a=setup:\" + e + \"\\r\\n\";\n      return r.fingerprints.forEach(function (r) {\n        t += \"a=fingerprint:\" + r.algorithm + \" \" + r.value + \"\\r\\n\";\n      }), t;\n    }, r.getIceParameters = function (e, t) {\n      var n = r.splitLines(e);\n      return {\n        usernameFragment: (n = n.concat(r.splitLines(t))).filter(function (r) {\n          return 0 === r.indexOf(\"a=ice-ufrag:\");\n        })[0].substr(12),\n        password: n.filter(function (r) {\n          return 0 === r.indexOf(\"a=ice-pwd:\");\n        })[0].substr(10)\n      };\n    }, r.writeIceParameters = function (r) {\n      return \"a=ice-ufrag:\" + r.usernameFragment + \"\\r\\na=ice-pwd:\" + r.password + \"\\r\\n\";\n    }, r.parseRtpParameters = function (e) {\n      for (var t = {\n        codecs: [],\n        headerExtensions: [],\n        fecMechanisms: [],\n        rtcp: []\n      }, n = r.splitLines(e)[0].split(\" \"), a = 3; a < n.length; a++) {\n        var s = n[a],\n            i = r.matchPrefix(e, \"a=rtpmap:\" + s + \" \")[0];\n\n        if (i) {\n          var p = r.parseRtpMap(i),\n              c = r.matchPrefix(e, \"a=fmtp:\" + s + \" \");\n\n          switch (p.parameters = c.length ? r.parseFmtp(c[0]) : {}, p.rtcpFeedback = r.matchPrefix(e, \"a=rtcp-fb:\" + s + \" \").map(r.parseRtcpFb), t.codecs.push(p), p.name.toUpperCase()) {\n            case \"RED\":\n            case \"ULPFEC\":\n              t.fecMechanisms.push(p.name.toUpperCase());\n          }\n        }\n      }\n\n      return r.matchPrefix(e, \"a=extmap:\").forEach(function (e) {\n        t.headerExtensions.push(r.parseExtmap(e));\n      }), t;\n    }, r.writeRtpDescription = function (e, t) {\n      var n = \"\";\n      n += \"m=\" + e + \" \", n += t.codecs.length > 0 ? \"9\" : \"0\", n += \" UDP/TLS/RTP/SAVPF \", n += t.codecs.map(function (r) {\n        return void 0 !== r.preferredPayloadType ? r.preferredPayloadType : r.payloadType;\n      }).join(\" \") + \"\\r\\n\", n += \"c=IN IP4 0.0.0.0\\r\\n\", n += \"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\", t.codecs.forEach(function (e) {\n        n += r.writeRtpMap(e), n += r.writeFmtp(e), n += r.writeRtcpFb(e);\n      });\n      var a = 0;\n      return t.codecs.forEach(function (r) {\n        r.maxptime > a && (a = r.maxptime);\n      }), a > 0 && (n += \"a=maxptime:\" + a + \"\\r\\n\"), n += \"a=rtcp-mux\\r\\n\", t.headerExtensions && t.headerExtensions.forEach(function (e) {\n        n += r.writeExtmap(e);\n      }), n;\n    }, r.parseRtpEncodingParameters = function (e) {\n      var t,\n          n = [],\n          a = r.parseRtpParameters(e),\n          s = -1 !== a.fecMechanisms.indexOf(\"RED\"),\n          i = -1 !== a.fecMechanisms.indexOf(\"ULPFEC\"),\n          p = r.matchPrefix(e, \"a=ssrc:\").map(function (e) {\n        return r.parseSsrcMedia(e);\n      }).filter(function (r) {\n        return \"cname\" === r.attribute;\n      }),\n          c = p.length > 0 && p[0].ssrc,\n          o = r.matchPrefix(e, \"a=ssrc-group:FID\").map(function (r) {\n        return r.substr(17).split(\" \").map(function (r) {\n          return parseInt(r, 10);\n        });\n      });\n      o.length > 0 && o[0].length > 1 && o[0][0] === c && (t = o[0][1]), a.codecs.forEach(function (r) {\n        if (\"RTX\" === r.name.toUpperCase() && r.parameters.apt) {\n          var e = {\n            ssrc: c,\n            codecPayloadType: parseInt(r.parameters.apt, 10)\n          };\n          c && t && (e.rtx = {\n            ssrc: t\n          }), n.push(e), s && ((e = JSON.parse(JSON.stringify(e))).fec = {\n            ssrc: c,\n            mechanism: i ? \"red+ulpfec\" : \"red\"\n          }, n.push(e));\n        }\n      }), 0 === n.length && c && n.push({\n        ssrc: c\n      });\n      var u = r.matchPrefix(e, \"b=\");\n      return u.length && (u = 0 === u[0].indexOf(\"b=TIAS:\") ? parseInt(u[0].substr(7), 10) : 0 === u[0].indexOf(\"b=AS:\") ? 1e3 * parseInt(u[0].substr(5), 10) * .95 - 16e3 : void 0, n.forEach(function (r) {\n        r.maxBitrate = u;\n      })), n;\n    }, r.parseRtcpParameters = function (e) {\n      var t = {},\n          n = r.matchPrefix(e, \"a=ssrc:\").map(function (e) {\n        return r.parseSsrcMedia(e);\n      }).filter(function (r) {\n        return \"cname\" === r.attribute;\n      })[0];\n      n && (t.cname = n.value, t.ssrc = n.ssrc);\n      var a = r.matchPrefix(e, \"a=rtcp-rsize\");\n      t.reducedSize = a.length > 0, t.compound = 0 === a.length;\n      var s = r.matchPrefix(e, \"a=rtcp-mux\");\n      return t.mux = s.length > 0, t;\n    }, r.parseMsid = function (e) {\n      var t,\n          n = r.matchPrefix(e, \"a=msid:\");\n      if (1 === n.length) return {\n        stream: (t = n[0].substr(7).split(\" \"))[0],\n        track: t[1]\n      };\n      var a = r.matchPrefix(e, \"a=ssrc:\").map(function (e) {\n        return r.parseSsrcMedia(e);\n      }).filter(function (r) {\n        return \"msid\" === r.attribute;\n      });\n      return a.length > 0 ? {\n        stream: (t = a[0].value.split(\" \"))[0],\n        track: t[1]\n      } : void 0;\n    }, r.parseSctpDescription = function (e) {\n      var t,\n          n = r.parseMLine(e),\n          a = r.matchPrefix(e, \"a=max-message-size:\");\n      a.length > 0 && (t = parseInt(a[0].substr(19), 10)), isNaN(t) && (t = 65536);\n      var s = r.matchPrefix(e, \"a=sctp-port:\");\n      if (s.length > 0) return {\n        port: parseInt(s[0].substr(12), 10),\n        protocol: n.fmt,\n        maxMessageSize: t\n      };\n\n      if (r.matchPrefix(e, \"a=sctpmap:\").length > 0) {\n        var i = r.matchPrefix(e, \"a=sctpmap:\")[0].substr(10).split(\" \");\n        return {\n          port: parseInt(i[0], 10),\n          protocol: i[1],\n          maxMessageSize: t\n        };\n      }\n    }, r.writeSctpDescription = function (r, e) {\n      var t = [];\n      return t = \"DTLS/SCTP\" !== r.protocol ? [\"m=\" + r.kind + \" 9 \" + r.protocol + \" \" + e.protocol + \"\\r\\n\", \"c=IN IP4 0.0.0.0\\r\\n\", \"a=sctp-port:\" + e.port + \"\\r\\n\"] : [\"m=\" + r.kind + \" 9 \" + r.protocol + \" \" + e.port + \"\\r\\n\", \"c=IN IP4 0.0.0.0\\r\\n\", \"a=sctpmap:\" + e.port + \" \" + e.protocol + \" 65535\\r\\n\"], void 0 !== e.maxMessageSize && t.push(\"a=max-message-size:\" + e.maxMessageSize + \"\\r\\n\"), t.join(\"\");\n    }, r.generateSessionId = function () {\n      return Math.random().toString().substr(2, 21);\n    }, r.writeSessionBoilerplate = function (e, t, n) {\n      var a = void 0 !== t ? t : 2;\n      return \"v=0\\r\\no=\" + (n || \"thisisadapterortc\") + \" \" + (e || r.generateSessionId()) + \" \" + a + \" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\";\n    }, r.writeMediaSection = function (e, t, n, a) {\n      var s = r.writeRtpDescription(e.kind, t);\n\n      if (s += r.writeIceParameters(e.iceGatherer.getLocalParameters()), s += r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), \"offer\" === n ? \"actpass\" : \"active\"), s += \"a=mid:\" + e.mid + \"\\r\\n\", e.direction ? s += \"a=\" + e.direction + \"\\r\\n\" : e.rtpSender && e.rtpReceiver ? s += \"a=sendrecv\\r\\n\" : e.rtpSender ? s += \"a=sendonly\\r\\n\" : e.rtpReceiver ? s += \"a=recvonly\\r\\n\" : s += \"a=inactive\\r\\n\", e.rtpSender) {\n        var i = \"msid:\" + a.id + \" \" + e.rtpSender.track.id + \"\\r\\n\";\n        s += \"a=\" + i, s += \"a=ssrc:\" + e.sendEncodingParameters[0].ssrc + \" \" + i, e.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + e.sendEncodingParameters[0].rtx.ssrc + \" \" + i, s += \"a=ssrc-group:FID \" + e.sendEncodingParameters[0].ssrc + \" \" + e.sendEncodingParameters[0].rtx.ssrc + \"\\r\\n\");\n      }\n\n      return s += \"a=ssrc:\" + e.sendEncodingParameters[0].ssrc + \" cname:\" + r.localCName + \"\\r\\n\", e.rtpSender && e.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + e.sendEncodingParameters[0].rtx.ssrc + \" cname:\" + r.localCName + \"\\r\\n\"), s;\n    }, r.getDirection = function (e, t) {\n      for (var n = r.splitLines(e), a = 0; a < n.length; a++) {\n        switch (n[a]) {\n          case \"a=sendrecv\":\n          case \"a=sendonly\":\n          case \"a=recvonly\":\n          case \"a=inactive\":\n            return n[a].substr(2);\n        }\n      }\n\n      return t ? r.getDirection(t) : \"sendrecv\";\n    }, r.getKind = function (e) {\n      return r.splitLines(e)[0].split(\" \")[0].substr(2);\n    }, r.isRejected = function (r) {\n      return \"0\" === r.split(\" \", 2)[1];\n    }, r.parseMLine = function (e) {\n      var t = r.splitLines(e)[0].substr(2).split(\" \");\n      return {\n        kind: t[0],\n        port: parseInt(t[1], 10),\n        protocol: t[2],\n        fmt: t.slice(3).join(\" \")\n      };\n    }, r.parseOLine = function (e) {\n      var t = r.matchPrefix(e, \"o=\")[0].substr(2).split(\" \");\n      return {\n        username: t[0],\n        sessionId: t[1],\n        sessionVersion: parseInt(t[2], 10),\n        netType: t[3],\n        addressType: t[4],\n        address: t[5]\n      };\n    }, r.isValidSDP = function (e) {\n      if (\"string\" != typeof e || 0 === e.length) return !1;\n\n      for (var t = r.splitLines(e), n = 0; n < t.length; n++) {\n        if (t[n].length < 2 || \"=\" !== t[n].charAt(1)) return !1;\n      }\n\n      return !0;\n    }, \"object\" == typeof module && (module.exports = r);\n  }, {}],\n  \"NJ2u\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = require(\"sdp\");\n\n    function t(e) {\n      return {\n        inboundrtp: \"inbound-rtp\",\n        outboundrtp: \"outbound-rtp\",\n        candidatepair: \"candidate-pair\",\n        localcandidate: \"local-candidate\",\n        remotecandidate: \"remote-candidate\"\n      }[e.type] || e.type;\n    }\n\n    function r(t, r, n, a, i) {\n      var s = e.writeRtpDescription(t.kind, r);\n\n      if (s += e.writeIceParameters(t.iceGatherer.getLocalParameters()), s += e.writeDtlsParameters(t.dtlsTransport.getLocalParameters(), \"offer\" === n ? \"actpass\" : i || \"active\"), s += \"a=mid:\" + t.mid + \"\\r\\n\", t.rtpSender && t.rtpReceiver ? s += \"a=sendrecv\\r\\n\" : t.rtpSender ? s += \"a=sendonly\\r\\n\" : t.rtpReceiver ? s += \"a=recvonly\\r\\n\" : s += \"a=inactive\\r\\n\", t.rtpSender) {\n        var o = t.rtpSender._initialTrackId || t.rtpSender.track.id;\n        t.rtpSender._initialTrackId = o;\n        var c = \"msid:\" + (a ? a.id : \"-\") + \" \" + o + \"\\r\\n\";\n        s += \"a=\" + c, s += \"a=ssrc:\" + t.sendEncodingParameters[0].ssrc + \" \" + c, t.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + t.sendEncodingParameters[0].rtx.ssrc + \" \" + c, s += \"a=ssrc-group:FID \" + t.sendEncodingParameters[0].ssrc + \" \" + t.sendEncodingParameters[0].rtx.ssrc + \"\\r\\n\");\n      }\n\n      return s += \"a=ssrc:\" + t.sendEncodingParameters[0].ssrc + \" cname:\" + e.localCName + \"\\r\\n\", t.rtpSender && t.sendEncodingParameters[0].rtx && (s += \"a=ssrc:\" + t.sendEncodingParameters[0].rtx.ssrc + \" cname:\" + e.localCName + \"\\r\\n\"), s;\n    }\n\n    function n(e, t) {\n      var r = !1;\n      return (e = JSON.parse(JSON.stringify(e))).filter(function (e) {\n        if (e && (e.urls || e.url)) {\n          var n = e.urls || e.url;\n          e.url && !e.urls && console.warn(\"RTCIceServer.url is deprecated! Use urls instead.\");\n          var a = \"string\" == typeof n;\n          return a && (n = [n]), n = n.filter(function (e) {\n            return 0 === e.indexOf(\"turn:\") && -1 !== e.indexOf(\"transport=udp\") && -1 === e.indexOf(\"turn:[\") && !r ? (r = !0, !0) : 0 === e.indexOf(\"stun:\") && t >= 14393 && -1 === e.indexOf(\"?transport=udp\");\n          }), delete e.url, e.urls = a ? n[0] : n, !!n.length;\n        }\n      });\n    }\n\n    function a(e, t) {\n      var r = {\n        codecs: [],\n        headerExtensions: [],\n        fecMechanisms: []\n      },\n          n = function n(e, t) {\n        e = parseInt(e, 10);\n\n        for (var r = 0; r < t.length; r++) {\n          if (t[r].payloadType === e || t[r].preferredPayloadType === e) return t[r];\n        }\n      },\n          a = function a(e, t, r, _a) {\n        var i = n(e.parameters.apt, r),\n            s = n(t.parameters.apt, _a);\n        return i && s && i.name.toLowerCase() === s.name.toLowerCase();\n      };\n\n      return e.codecs.forEach(function (n) {\n        for (var i = 0; i < t.codecs.length; i++) {\n          var s = t.codecs[i];\n\n          if (n.name.toLowerCase() === s.name.toLowerCase() && n.clockRate === s.clockRate) {\n            if (\"rtx\" === n.name.toLowerCase() && n.parameters && s.parameters.apt && !a(n, s, e.codecs, t.codecs)) continue;\n            (s = JSON.parse(JSON.stringify(s))).numChannels = Math.min(n.numChannels, s.numChannels), r.codecs.push(s), s.rtcpFeedback = s.rtcpFeedback.filter(function (e) {\n              for (var t = 0; t < n.rtcpFeedback.length; t++) {\n                if (n.rtcpFeedback[t].type === e.type && n.rtcpFeedback[t].parameter === e.parameter) return !0;\n              }\n\n              return !1;\n            });\n            break;\n          }\n        }\n      }), e.headerExtensions.forEach(function (e) {\n        for (var n = 0; n < t.headerExtensions.length; n++) {\n          var a = t.headerExtensions[n];\n\n          if (e.uri === a.uri) {\n            r.headerExtensions.push(a);\n            break;\n          }\n        }\n      }), r;\n    }\n\n    function i(e, t, r) {\n      return -1 !== {\n        offer: {\n          setLocalDescription: [\"stable\", \"have-local-offer\"],\n          setRemoteDescription: [\"stable\", \"have-remote-offer\"]\n        },\n        answer: {\n          setLocalDescription: [\"have-remote-offer\", \"have-local-pranswer\"],\n          setRemoteDescription: [\"have-local-offer\", \"have-remote-pranswer\"]\n        }\n      }[t][e].indexOf(r);\n    }\n\n    function s(e, t) {\n      var r = e.getRemoteCandidates().find(function (e) {\n        return t.foundation === e.foundation && t.ip === e.ip && t.port === e.port && t.priority === e.priority && t.protocol === e.protocol && t.type === e.type;\n      });\n      return r || e.addRemoteCandidate(t), !r;\n    }\n\n    function o(e, t) {\n      var r = new Error(t);\n      return r.name = e, r.code = {\n        NotSupportedError: 9,\n        InvalidStateError: 11,\n        InvalidAccessError: 15,\n        TypeError: void 0,\n        OperationError: void 0\n      }[e], r;\n    }\n\n    module.exports = function (c, d) {\n      function p(e, t) {\n        t.addTrack(e), t.dispatchEvent(new c.MediaStreamTrackEvent(\"addtrack\", {\n          track: e\n        }));\n      }\n\n      function l(e, t, r, n) {\n        var a = new Event(\"track\");\n        a.track = t, a.receiver = r, a.transceiver = {\n          receiver: r\n        }, a.streams = n, c.setTimeout(function () {\n          e._dispatchEvent(\"track\", a);\n        });\n      }\n\n      var f = function f(t) {\n        var r = this,\n            a = document.createDocumentFragment();\n        if ([\"addEventListener\", \"removeEventListener\", \"dispatchEvent\"].forEach(function (e) {\n          r[e] = a[e].bind(a);\n        }), this.canTrickleIceCandidates = null, this.needNegotiation = !1, this.localStreams = [], this.remoteStreams = [], this._localDescription = null, this._remoteDescription = null, this.signalingState = \"stable\", this.iceConnectionState = \"new\", this.connectionState = \"new\", this.iceGatheringState = \"new\", t = JSON.parse(JSON.stringify(t || {})), this.usingBundle = \"max-bundle\" === t.bundlePolicy, \"negotiate\" === t.rtcpMuxPolicy) throw o(\"NotSupportedError\", \"rtcpMuxPolicy 'negotiate' is not supported\");\n\n        switch (t.rtcpMuxPolicy || (t.rtcpMuxPolicy = \"require\"), t.iceTransportPolicy) {\n          case \"all\":\n          case \"relay\":\n            break;\n\n          default:\n            t.iceTransportPolicy = \"all\";\n        }\n\n        switch (t.bundlePolicy) {\n          case \"balanced\":\n          case \"max-compat\":\n          case \"max-bundle\":\n            break;\n\n          default:\n            t.bundlePolicy = \"balanced\";\n        }\n\n        if (t.iceServers = n(t.iceServers || [], d), this._iceGatherers = [], t.iceCandidatePoolSize) for (var i = t.iceCandidatePoolSize; i > 0; i--) {\n          this._iceGatherers.push(new c.RTCIceGatherer({\n            iceServers: t.iceServers,\n            gatherPolicy: t.iceTransportPolicy\n          }));\n        } else t.iceCandidatePoolSize = 0;\n        this._config = t, this.transceivers = [], this._sdpSessionId = e.generateSessionId(), this._sdpSessionVersion = 0, this._dtlsRole = void 0, this._isClosed = !1;\n      };\n\n      Object.defineProperty(f.prototype, \"localDescription\", {\n        configurable: !0,\n        get: function get() {\n          return this._localDescription;\n        }\n      }), Object.defineProperty(f.prototype, \"remoteDescription\", {\n        configurable: !0,\n        get: function get() {\n          return this._remoteDescription;\n        }\n      }), f.prototype.onicecandidate = null, f.prototype.onaddstream = null, f.prototype.ontrack = null, f.prototype.onremovestream = null, f.prototype.onsignalingstatechange = null, f.prototype.oniceconnectionstatechange = null, f.prototype.onconnectionstatechange = null, f.prototype.onicegatheringstatechange = null, f.prototype.onnegotiationneeded = null, f.prototype.ondatachannel = null, f.prototype._dispatchEvent = function (e, t) {\n        this._isClosed || (this.dispatchEvent(t), \"function\" == typeof this[\"on\" + e] && this[\"on\" + e](t));\n      }, f.prototype._emitGatheringStateChange = function () {\n        var e = new Event(\"icegatheringstatechange\");\n\n        this._dispatchEvent(\"icegatheringstatechange\", e);\n      }, f.prototype.getConfiguration = function () {\n        return this._config;\n      }, f.prototype.getLocalStreams = function () {\n        return this.localStreams;\n      }, f.prototype.getRemoteStreams = function () {\n        return this.remoteStreams;\n      }, f.prototype._createTransceiver = function (e, t) {\n        var r = this.transceivers.length > 0,\n            n = {\n          track: null,\n          iceGatherer: null,\n          iceTransport: null,\n          dtlsTransport: null,\n          localCapabilities: null,\n          remoteCapabilities: null,\n          rtpSender: null,\n          rtpReceiver: null,\n          kind: e,\n          mid: null,\n          sendEncodingParameters: null,\n          recvEncodingParameters: null,\n          stream: null,\n          associatedRemoteMediaStreams: [],\n          wantReceive: !0\n        };\n        if (this.usingBundle && r) n.iceTransport = this.transceivers[0].iceTransport, n.dtlsTransport = this.transceivers[0].dtlsTransport;else {\n          var a = this._createIceAndDtlsTransports();\n\n          n.iceTransport = a.iceTransport, n.dtlsTransport = a.dtlsTransport;\n        }\n        return t || this.transceivers.push(n), n;\n      }, f.prototype.addTrack = function (e, t) {\n        if (this._isClosed) throw o(\"InvalidStateError\", \"Attempted to call addTrack on a closed peerconnection.\");\n        var r;\n        if (this.transceivers.find(function (t) {\n          return t.track === e;\n        })) throw o(\"InvalidAccessError\", \"Track already exists.\");\n\n        for (var n = 0; n < this.transceivers.length; n++) {\n          this.transceivers[n].track || this.transceivers[n].kind !== e.kind || (r = this.transceivers[n]);\n        }\n\n        return r || (r = this._createTransceiver(e.kind)), this._maybeFireNegotiationNeeded(), -1 === this.localStreams.indexOf(t) && this.localStreams.push(t), r.track = e, r.stream = t, r.rtpSender = new c.RTCRtpSender(e, r.dtlsTransport), r.rtpSender;\n      }, f.prototype.addStream = function (e) {\n        var t = this;\n        if (d >= 15025) e.getTracks().forEach(function (r) {\n          t.addTrack(r, e);\n        });else {\n          var r = e.clone();\n          e.getTracks().forEach(function (e, t) {\n            var n = r.getTracks()[t];\n            e.addEventListener(\"enabled\", function (e) {\n              n.enabled = e.enabled;\n            });\n          }), r.getTracks().forEach(function (e) {\n            t.addTrack(e, r);\n          });\n        }\n      }, f.prototype.removeTrack = function (e) {\n        if (this._isClosed) throw o(\"InvalidStateError\", \"Attempted to call removeTrack on a closed peerconnection.\");\n        if (!(e instanceof c.RTCRtpSender)) throw new TypeError(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\");\n        var t = this.transceivers.find(function (t) {\n          return t.rtpSender === e;\n        });\n        if (!t) throw o(\"InvalidAccessError\", \"Sender was not created by this connection.\");\n        var r = t.stream;\n        t.rtpSender.stop(), t.rtpSender = null, t.track = null, t.stream = null, -1 === this.transceivers.map(function (e) {\n          return e.stream;\n        }).indexOf(r) && this.localStreams.indexOf(r) > -1 && this.localStreams.splice(this.localStreams.indexOf(r), 1), this._maybeFireNegotiationNeeded();\n      }, f.prototype.removeStream = function (e) {\n        var t = this;\n        e.getTracks().forEach(function (e) {\n          var r = t.getSenders().find(function (t) {\n            return t.track === e;\n          });\n          r && t.removeTrack(r);\n        });\n      }, f.prototype.getSenders = function () {\n        return this.transceivers.filter(function (e) {\n          return !!e.rtpSender;\n        }).map(function (e) {\n          return e.rtpSender;\n        });\n      }, f.prototype.getReceivers = function () {\n        return this.transceivers.filter(function (e) {\n          return !!e.rtpReceiver;\n        }).map(function (e) {\n          return e.rtpReceiver;\n        });\n      }, f.prototype._createIceGatherer = function (e, t) {\n        var r = this;\n        if (t && e > 0) return this.transceivers[0].iceGatherer;\n        if (this._iceGatherers.length) return this._iceGatherers.shift();\n        var n = new c.RTCIceGatherer({\n          iceServers: this._config.iceServers,\n          gatherPolicy: this._config.iceTransportPolicy\n        });\n        return Object.defineProperty(n, \"state\", {\n          value: \"new\",\n          writable: !0\n        }), this.transceivers[e].bufferedCandidateEvents = [], this.transceivers[e].bufferCandidates = function (t) {\n          var a = !t.candidate || 0 === Object.keys(t.candidate).length;\n          n.state = a ? \"completed\" : \"gathering\", null !== r.transceivers[e].bufferedCandidateEvents && r.transceivers[e].bufferedCandidateEvents.push(t);\n        }, n.addEventListener(\"localcandidate\", this.transceivers[e].bufferCandidates), n;\n      }, f.prototype._gather = function (t, r) {\n        var n = this,\n            a = this.transceivers[r].iceGatherer;\n\n        if (!a.onlocalcandidate) {\n          var i = this.transceivers[r].bufferedCandidateEvents;\n          this.transceivers[r].bufferedCandidateEvents = null, a.removeEventListener(\"localcandidate\", this.transceivers[r].bufferCandidates), a.onlocalcandidate = function (i) {\n            if (!(n.usingBundle && r > 0)) {\n              var s = new Event(\"icecandidate\");\n              s.candidate = {\n                sdpMid: t,\n                sdpMLineIndex: r\n              };\n              var o = i.candidate,\n                  c = !o || 0 === Object.keys(o).length;\n              if (c) \"new\" !== a.state && \"gathering\" !== a.state || (a.state = \"completed\");else {\n                \"new\" === a.state && (a.state = \"gathering\"), o.component = 1, o.ufrag = a.getLocalParameters().usernameFragment;\n                var d = e.writeCandidate(o);\n                s.candidate = Object.assign(s.candidate, e.parseCandidate(d)), s.candidate.candidate = d, s.candidate.toJSON = function () {\n                  return {\n                    candidate: s.candidate.candidate,\n                    sdpMid: s.candidate.sdpMid,\n                    sdpMLineIndex: s.candidate.sdpMLineIndex,\n                    usernameFragment: s.candidate.usernameFragment\n                  };\n                };\n              }\n              var p = e.getMediaSections(n._localDescription.sdp);\n              p[s.candidate.sdpMLineIndex] += c ? \"a=end-of-candidates\\r\\n\" : \"a=\" + s.candidate.candidate + \"\\r\\n\", n._localDescription.sdp = e.getDescription(n._localDescription.sdp) + p.join(\"\");\n              var l = n.transceivers.every(function (e) {\n                return e.iceGatherer && \"completed\" === e.iceGatherer.state;\n              });\n              \"gathering\" !== n.iceGatheringState && (n.iceGatheringState = \"gathering\", n._emitGatheringStateChange()), c || n._dispatchEvent(\"icecandidate\", s), l && (n._dispatchEvent(\"icecandidate\", new Event(\"icecandidate\")), n.iceGatheringState = \"complete\", n._emitGatheringStateChange());\n            }\n          }, c.setTimeout(function () {\n            i.forEach(function (e) {\n              a.onlocalcandidate(e);\n            });\n          }, 0);\n        }\n      }, f.prototype._createIceAndDtlsTransports = function () {\n        var e = this,\n            t = new c.RTCIceTransport(null);\n\n        t.onicestatechange = function () {\n          e._updateIceConnectionState(), e._updateConnectionState();\n        };\n\n        var r = new c.RTCDtlsTransport(t);\n        return r.ondtlsstatechange = function () {\n          e._updateConnectionState();\n        }, r.onerror = function () {\n          Object.defineProperty(r, \"state\", {\n            value: \"failed\",\n            writable: !0\n          }), e._updateConnectionState();\n        }, {\n          iceTransport: t,\n          dtlsTransport: r\n        };\n      }, f.prototype._disposeIceAndDtlsTransports = function (e) {\n        var t = this.transceivers[e].iceGatherer;\n        t && (delete t.onlocalcandidate, delete this.transceivers[e].iceGatherer);\n        var r = this.transceivers[e].iceTransport;\n        r && (delete r.onicestatechange, delete this.transceivers[e].iceTransport);\n        var n = this.transceivers[e].dtlsTransport;\n        n && (delete n.ondtlsstatechange, delete n.onerror, delete this.transceivers[e].dtlsTransport);\n      }, f.prototype._transceive = function (t, r, n) {\n        var i = a(t.localCapabilities, t.remoteCapabilities);\n        r && t.rtpSender && (i.encodings = t.sendEncodingParameters, i.rtcp = {\n          cname: e.localCName,\n          compound: t.rtcpParameters.compound\n        }, t.recvEncodingParameters.length && (i.rtcp.ssrc = t.recvEncodingParameters[0].ssrc), t.rtpSender.send(i)), n && t.rtpReceiver && i.codecs.length > 0 && (\"video\" === t.kind && t.recvEncodingParameters && d < 15019 && t.recvEncodingParameters.forEach(function (e) {\n          delete e.rtx;\n        }), t.recvEncodingParameters.length ? i.encodings = t.recvEncodingParameters : i.encodings = [{}], i.rtcp = {\n          compound: t.rtcpParameters.compound\n        }, t.rtcpParameters.cname && (i.rtcp.cname = t.rtcpParameters.cname), t.sendEncodingParameters.length && (i.rtcp.ssrc = t.sendEncodingParameters[0].ssrc), t.rtpReceiver.receive(i));\n      }, f.prototype.setLocalDescription = function (t) {\n        var r,\n            n,\n            s = this;\n        if (-1 === [\"offer\", \"answer\"].indexOf(t.type)) return Promise.reject(o(\"TypeError\", 'Unsupported type \"' + t.type + '\"'));\n        if (!i(\"setLocalDescription\", t.type, s.signalingState) || s._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not set local \" + t.type + \" in state \" + s.signalingState));\n        if (\"offer\" === t.type) r = e.splitSections(t.sdp), n = r.shift(), r.forEach(function (t, r) {\n          var n = e.parseRtpParameters(t);\n          s.transceivers[r].localCapabilities = n;\n        }), s.transceivers.forEach(function (e, t) {\n          s._gather(e.mid, t);\n        });else if (\"answer\" === t.type) {\n          r = e.splitSections(s._remoteDescription.sdp), n = r.shift();\n          var c = e.matchPrefix(n, \"a=ice-lite\").length > 0;\n          r.forEach(function (t, r) {\n            var i = s.transceivers[r],\n                o = i.iceGatherer,\n                d = i.iceTransport,\n                p = i.dtlsTransport,\n                l = i.localCapabilities,\n                f = i.remoteCapabilities;\n\n            if (!(e.isRejected(t) && 0 === e.matchPrefix(t, \"a=bundle-only\").length) && !i.rejected) {\n              var u = e.getIceParameters(t, n),\n                  v = e.getDtlsParameters(t, n);\n              c && (v.role = \"server\"), s.usingBundle && 0 !== r || (s._gather(i.mid, r), \"new\" === d.state && d.start(o, u, c ? \"controlling\" : \"controlled\"), \"new\" === p.state && p.start(v));\n              var h = a(l, f);\n\n              s._transceive(i, h.codecs.length > 0, !1);\n            }\n          });\n        }\n        return s._localDescription = {\n          type: t.type,\n          sdp: t.sdp\n        }, \"offer\" === t.type ? s._updateSignalingState(\"have-local-offer\") : s._updateSignalingState(\"stable\"), Promise.resolve();\n      }, f.prototype.setRemoteDescription = function (t) {\n        var r = this;\n        if (-1 === [\"offer\", \"answer\"].indexOf(t.type)) return Promise.reject(o(\"TypeError\", 'Unsupported type \"' + t.type + '\"'));\n        if (!i(\"setRemoteDescription\", t.type, r.signalingState) || r._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not set remote \" + t.type + \" in state \" + r.signalingState));\n        var n = {};\n        r.remoteStreams.forEach(function (e) {\n          n[e.id] = e;\n        });\n        var f = [],\n            u = e.splitSections(t.sdp),\n            v = u.shift(),\n            h = e.matchPrefix(v, \"a=ice-lite\").length > 0,\n            m = e.matchPrefix(v, \"a=group:BUNDLE \").length > 0;\n        r.usingBundle = m;\n        var g = e.matchPrefix(v, \"a=ice-options:\")[0];\n        return r.canTrickleIceCandidates = !!g && g.substr(14).split(\" \").indexOf(\"trickle\") >= 0, u.forEach(function (i, o) {\n          var l = e.splitLines(i),\n              u = e.getKind(i),\n              g = e.isRejected(i) && 0 === e.matchPrefix(i, \"a=bundle-only\").length,\n              y = l[0].substr(2).split(\" \")[2],\n              S = e.getDirection(i, v),\n              T = e.parseMsid(i),\n              E = e.getMid(i) || e.generateIdentifier();\n          if (g || \"application\" === u && (\"DTLS/SCTP\" === y || \"UDP/DTLS/SCTP\" === y)) r.transceivers[o] = {\n            mid: E,\n            kind: u,\n            protocol: y,\n            rejected: !0\n          };else {\n            var C, P, w, R, _, k, b, x, D;\n\n            !g && r.transceivers[o] && r.transceivers[o].rejected && (r.transceivers[o] = r._createTransceiver(u, !0));\n            var I,\n                L,\n                M = e.parseRtpParameters(i);\n            g || (I = e.getIceParameters(i, v), (L = e.getDtlsParameters(i, v)).role = \"client\"), b = e.parseRtpEncodingParameters(i);\n            var O = e.parseRtcpParameters(i),\n                G = e.matchPrefix(i, \"a=end-of-candidates\", v).length > 0,\n                j = e.matchPrefix(i, \"a=candidate:\").map(function (t) {\n              return e.parseCandidate(t);\n            }).filter(function (e) {\n              return 1 === e.component;\n            });\n\n            if ((\"offer\" === t.type || \"answer\" === t.type) && !g && m && o > 0 && r.transceivers[o] && (r._disposeIceAndDtlsTransports(o), r.transceivers[o].iceGatherer = r.transceivers[0].iceGatherer, r.transceivers[o].iceTransport = r.transceivers[0].iceTransport, r.transceivers[o].dtlsTransport = r.transceivers[0].dtlsTransport, r.transceivers[o].rtpSender && r.transceivers[o].rtpSender.setTransport(r.transceivers[0].dtlsTransport), r.transceivers[o].rtpReceiver && r.transceivers[o].rtpReceiver.setTransport(r.transceivers[0].dtlsTransport)), \"offer\" !== t.type || g) {\n              if (\"answer\" === t.type && !g) {\n                P = (C = r.transceivers[o]).iceGatherer, w = C.iceTransport, R = C.dtlsTransport, _ = C.rtpReceiver, k = C.sendEncodingParameters, x = C.localCapabilities, r.transceivers[o].recvEncodingParameters = b, r.transceivers[o].remoteCapabilities = M, r.transceivers[o].rtcpParameters = O, j.length && \"new\" === w.state && (!h && !G || m && 0 !== o ? j.forEach(function (e) {\n                  s(C.iceTransport, e);\n                }) : w.setRemoteCandidates(j)), m && 0 !== o || (\"new\" === w.state && w.start(P, I, \"controlling\"), \"new\" === R.state && R.start(L)), !a(C.localCapabilities, C.remoteCapabilities).codecs.filter(function (e) {\n                  return \"rtx\" === e.name.toLowerCase();\n                }).length && C.sendEncodingParameters[0].rtx && delete C.sendEncodingParameters[0].rtx, r._transceive(C, \"sendrecv\" === S || \"recvonly\" === S, \"sendrecv\" === S || \"sendonly\" === S), !_ || \"sendrecv\" !== S && \"sendonly\" !== S ? delete C.rtpReceiver : (D = _.track, T ? (n[T.stream] || (n[T.stream] = new c.MediaStream()), p(D, n[T.stream]), f.push([D, _, n[T.stream]])) : (n.default || (n.default = new c.MediaStream()), p(D, n.default), f.push([D, _, n.default])));\n              }\n            } else {\n              (C = r.transceivers[o] || r._createTransceiver(u)).mid = E, C.iceGatherer || (C.iceGatherer = r._createIceGatherer(o, m)), j.length && \"new\" === C.iceTransport.state && (!G || m && 0 !== o ? j.forEach(function (e) {\n                s(C.iceTransport, e);\n              }) : C.iceTransport.setRemoteCandidates(j)), x = c.RTCRtpReceiver.getCapabilities(u), d < 15019 && (x.codecs = x.codecs.filter(function (e) {\n                return \"rtx\" !== e.name;\n              })), k = C.sendEncodingParameters || [{\n                ssrc: 1001 * (2 * o + 2)\n              }];\n              var N,\n                  A = !1;\n\n              if (\"sendrecv\" === S || \"sendonly\" === S) {\n                if (A = !C.rtpReceiver, _ = C.rtpReceiver || new c.RTCRtpReceiver(C.dtlsTransport, u), A) D = _.track, T && \"-\" === T.stream || (T ? (n[T.stream] || (n[T.stream] = new c.MediaStream(), Object.defineProperty(n[T.stream], \"id\", {\n                  get: function get() {\n                    return T.stream;\n                  }\n                })), Object.defineProperty(D, \"id\", {\n                  get: function get() {\n                    return T.track;\n                  }\n                }), N = n[T.stream]) : (n.default || (n.default = new c.MediaStream()), N = n.default)), N && (p(D, N), C.associatedRemoteMediaStreams.push(N)), f.push([D, _, N]);\n              } else C.rtpReceiver && C.rtpReceiver.track && (C.associatedRemoteMediaStreams.forEach(function (e) {\n                var t,\n                    r,\n                    n = e.getTracks().find(function (e) {\n                  return e.id === C.rtpReceiver.track.id;\n                });\n                n && (t = n, (r = e).removeTrack(t), r.dispatchEvent(new c.MediaStreamTrackEvent(\"removetrack\", {\n                  track: t\n                })));\n              }), C.associatedRemoteMediaStreams = []);\n\n              C.localCapabilities = x, C.remoteCapabilities = M, C.rtpReceiver = _, C.rtcpParameters = O, C.sendEncodingParameters = k, C.recvEncodingParameters = b, r._transceive(r.transceivers[o], !1, A);\n            }\n          }\n        }), void 0 === r._dtlsRole && (r._dtlsRole = \"offer\" === t.type ? \"active\" : \"passive\"), r._remoteDescription = {\n          type: t.type,\n          sdp: t.sdp\n        }, \"offer\" === t.type ? r._updateSignalingState(\"have-remote-offer\") : r._updateSignalingState(\"stable\"), Object.keys(n).forEach(function (e) {\n          var t = n[e];\n\n          if (t.getTracks().length) {\n            if (-1 === r.remoteStreams.indexOf(t)) {\n              r.remoteStreams.push(t);\n              var a = new Event(\"addstream\");\n              a.stream = t, c.setTimeout(function () {\n                r._dispatchEvent(\"addstream\", a);\n              });\n            }\n\n            f.forEach(function (e) {\n              var n = e[0],\n                  a = e[1];\n              t.id === e[2].id && l(r, n, a, [t]);\n            });\n          }\n        }), f.forEach(function (e) {\n          e[2] || l(r, e[0], e[1], []);\n        }), c.setTimeout(function () {\n          r && r.transceivers && r.transceivers.forEach(function (e) {\n            e.iceTransport && \"new\" === e.iceTransport.state && e.iceTransport.getRemoteCandidates().length > 0 && (console.warn(\"Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification\"), e.iceTransport.addRemoteCandidate({}));\n          });\n        }, 4e3), Promise.resolve();\n      }, f.prototype.close = function () {\n        this.transceivers.forEach(function (e) {\n          e.iceTransport && e.iceTransport.stop(), e.dtlsTransport && e.dtlsTransport.stop(), e.rtpSender && e.rtpSender.stop(), e.rtpReceiver && e.rtpReceiver.stop();\n        }), this._isClosed = !0, this._updateSignalingState(\"closed\");\n      }, f.prototype._updateSignalingState = function (e) {\n        this.signalingState = e;\n        var t = new Event(\"signalingstatechange\");\n\n        this._dispatchEvent(\"signalingstatechange\", t);\n      }, f.prototype._maybeFireNegotiationNeeded = function () {\n        var e = this;\n        \"stable\" === this.signalingState && !0 !== this.needNegotiation && (this.needNegotiation = !0, c.setTimeout(function () {\n          if (e.needNegotiation) {\n            e.needNegotiation = !1;\n            var t = new Event(\"negotiationneeded\");\n\n            e._dispatchEvent(\"negotiationneeded\", t);\n          }\n        }, 0));\n      }, f.prototype._updateIceConnectionState = function () {\n        var e,\n            t = {\n          new: 0,\n          closed: 0,\n          checking: 0,\n          connected: 0,\n          completed: 0,\n          disconnected: 0,\n          failed: 0\n        };\n\n        if (this.transceivers.forEach(function (e) {\n          e.iceTransport && !e.rejected && t[e.iceTransport.state]++;\n        }), e = \"new\", t.failed > 0 ? e = \"failed\" : t.checking > 0 ? e = \"checking\" : t.disconnected > 0 ? e = \"disconnected\" : t.new > 0 ? e = \"new\" : t.connected > 0 ? e = \"connected\" : t.completed > 0 && (e = \"completed\"), e !== this.iceConnectionState) {\n          this.iceConnectionState = e;\n          var r = new Event(\"iceconnectionstatechange\");\n\n          this._dispatchEvent(\"iceconnectionstatechange\", r);\n        }\n      }, f.prototype._updateConnectionState = function () {\n        var e,\n            t = {\n          new: 0,\n          closed: 0,\n          connecting: 0,\n          connected: 0,\n          completed: 0,\n          disconnected: 0,\n          failed: 0\n        };\n\n        if (this.transceivers.forEach(function (e) {\n          e.iceTransport && e.dtlsTransport && !e.rejected && (t[e.iceTransport.state]++, t[e.dtlsTransport.state]++);\n        }), t.connected += t.completed, e = \"new\", t.failed > 0 ? e = \"failed\" : t.connecting > 0 ? e = \"connecting\" : t.disconnected > 0 ? e = \"disconnected\" : t.new > 0 ? e = \"new\" : t.connected > 0 && (e = \"connected\"), e !== this.connectionState) {\n          this.connectionState = e;\n          var r = new Event(\"connectionstatechange\");\n\n          this._dispatchEvent(\"connectionstatechange\", r);\n        }\n      }, f.prototype.createOffer = function () {\n        var t = this;\n        if (t._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not call createOffer after close\"));\n        var n = t.transceivers.filter(function (e) {\n          return \"audio\" === e.kind;\n        }).length,\n            a = t.transceivers.filter(function (e) {\n          return \"video\" === e.kind;\n        }).length,\n            i = arguments[0];\n\n        if (i) {\n          if (i.mandatory || i.optional) throw new TypeError(\"Legacy mandatory/optional constraints not supported.\");\n          void 0 !== i.offerToReceiveAudio && (n = !0 === i.offerToReceiveAudio ? 1 : !1 === i.offerToReceiveAudio ? 0 : i.offerToReceiveAudio), void 0 !== i.offerToReceiveVideo && (a = !0 === i.offerToReceiveVideo ? 1 : !1 === i.offerToReceiveVideo ? 0 : i.offerToReceiveVideo);\n        }\n\n        for (t.transceivers.forEach(function (e) {\n          \"audio\" === e.kind ? --n < 0 && (e.wantReceive = !1) : \"video\" === e.kind && --a < 0 && (e.wantReceive = !1);\n        }); n > 0 || a > 0;) {\n          n > 0 && (t._createTransceiver(\"audio\"), n--), a > 0 && (t._createTransceiver(\"video\"), a--);\n        }\n\n        var s = e.writeSessionBoilerplate(t._sdpSessionId, t._sdpSessionVersion++);\n        t.transceivers.forEach(function (r, n) {\n          var a = r.track,\n              i = r.kind,\n              s = r.mid || e.generateIdentifier();\n          r.mid = s, r.iceGatherer || (r.iceGatherer = t._createIceGatherer(n, t.usingBundle));\n          var o = c.RTCRtpSender.getCapabilities(i);\n          d < 15019 && (o.codecs = o.codecs.filter(function (e) {\n            return \"rtx\" !== e.name;\n          })), o.codecs.forEach(function (e) {\n            \"H264\" === e.name && void 0 === e.parameters[\"level-asymmetry-allowed\"] && (e.parameters[\"level-asymmetry-allowed\"] = \"1\"), r.remoteCapabilities && r.remoteCapabilities.codecs && r.remoteCapabilities.codecs.forEach(function (t) {\n              e.name.toLowerCase() === t.name.toLowerCase() && e.clockRate === t.clockRate && (e.preferredPayloadType = t.payloadType);\n            });\n          }), o.headerExtensions.forEach(function (e) {\n            (r.remoteCapabilities && r.remoteCapabilities.headerExtensions || []).forEach(function (t) {\n              e.uri === t.uri && (e.id = t.id);\n            });\n          });\n          var p = r.sendEncodingParameters || [{\n            ssrc: 1001 * (2 * n + 1)\n          }];\n          a && d >= 15019 && \"video\" === i && !p[0].rtx && (p[0].rtx = {\n            ssrc: p[0].ssrc + 1\n          }), r.wantReceive && (r.rtpReceiver = new c.RTCRtpReceiver(r.dtlsTransport, i)), r.localCapabilities = o, r.sendEncodingParameters = p;\n        }), \"max-compat\" !== t._config.bundlePolicy && (s += \"a=group:BUNDLE \" + t.transceivers.map(function (e) {\n          return e.mid;\n        }).join(\" \") + \"\\r\\n\"), s += \"a=ice-options:trickle\\r\\n\", t.transceivers.forEach(function (n, a) {\n          s += r(n, n.localCapabilities, \"offer\", n.stream, t._dtlsRole), s += \"a=rtcp-rsize\\r\\n\", !n.iceGatherer || \"new\" === t.iceGatheringState || 0 !== a && t.usingBundle || (n.iceGatherer.getLocalCandidates().forEach(function (t) {\n            t.component = 1, s += \"a=\" + e.writeCandidate(t) + \"\\r\\n\";\n          }), \"completed\" === n.iceGatherer.state && (s += \"a=end-of-candidates\\r\\n\"));\n        });\n        var p = new c.RTCSessionDescription({\n          type: \"offer\",\n          sdp: s\n        });\n        return Promise.resolve(p);\n      }, f.prototype.createAnswer = function () {\n        var t = this;\n        if (t._isClosed) return Promise.reject(o(\"InvalidStateError\", \"Can not call createAnswer after close\"));\n        if (\"have-remote-offer\" !== t.signalingState && \"have-local-pranswer\" !== t.signalingState) return Promise.reject(o(\"InvalidStateError\", \"Can not call createAnswer in signalingState \" + t.signalingState));\n        var n = e.writeSessionBoilerplate(t._sdpSessionId, t._sdpSessionVersion++);\n        t.usingBundle && (n += \"a=group:BUNDLE \" + t.transceivers.map(function (e) {\n          return e.mid;\n        }).join(\" \") + \"\\r\\n\"), n += \"a=ice-options:trickle\\r\\n\";\n        var i = e.getMediaSections(t._remoteDescription.sdp).length;\n        t.transceivers.forEach(function (e, s) {\n          if (!(s + 1 > i)) {\n            if (e.rejected) return \"application\" === e.kind ? \"DTLS/SCTP\" === e.protocol ? n += \"m=application 0 DTLS/SCTP 5000\\r\\n\" : n += \"m=application 0 \" + e.protocol + \" webrtc-datachannel\\r\\n\" : \"audio\" === e.kind ? n += \"m=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\na=rtpmap:0 PCMU/8000\\r\\n\" : \"video\" === e.kind && (n += \"m=video 0 UDP/TLS/RTP/SAVPF 120\\r\\na=rtpmap:120 VP8/90000\\r\\n\"), void (n += \"c=IN IP4 0.0.0.0\\r\\na=inactive\\r\\na=mid:\" + e.mid + \"\\r\\n\");\n            var o;\n            if (e.stream) \"audio\" === e.kind ? o = e.stream.getAudioTracks()[0] : \"video\" === e.kind && (o = e.stream.getVideoTracks()[0]), o && d >= 15019 && \"video\" === e.kind && !e.sendEncodingParameters[0].rtx && (e.sendEncodingParameters[0].rtx = {\n              ssrc: e.sendEncodingParameters[0].ssrc + 1\n            });\n            var c = a(e.localCapabilities, e.remoteCapabilities);\n            !c.codecs.filter(function (e) {\n              return \"rtx\" === e.name.toLowerCase();\n            }).length && e.sendEncodingParameters[0].rtx && delete e.sendEncodingParameters[0].rtx, n += r(e, c, \"answer\", e.stream, t._dtlsRole), e.rtcpParameters && e.rtcpParameters.reducedSize && (n += \"a=rtcp-rsize\\r\\n\");\n          }\n        });\n        var s = new c.RTCSessionDescription({\n          type: \"answer\",\n          sdp: n\n        });\n        return Promise.resolve(s);\n      }, f.prototype.addIceCandidate = function (t) {\n        var r,\n            n = this;\n        return t && void 0 === t.sdpMLineIndex && !t.sdpMid ? Promise.reject(new TypeError(\"sdpMLineIndex or sdpMid required\")) : new Promise(function (a, i) {\n          if (!n._remoteDescription) return i(o(\"InvalidStateError\", \"Can not add ICE candidate without a remote description\"));\n\n          if (t && \"\" !== t.candidate) {\n            var c = t.sdpMLineIndex;\n            if (t.sdpMid) for (var d = 0; d < n.transceivers.length; d++) {\n              if (n.transceivers[d].mid === t.sdpMid) {\n                c = d;\n                break;\n              }\n            }\n            var p = n.transceivers[c];\n            if (!p) return i(o(\"OperationError\", \"Can not add ICE candidate\"));\n            if (p.rejected) return a();\n            var l = Object.keys(t.candidate).length > 0 ? e.parseCandidate(t.candidate) : {};\n            if (\"tcp\" === l.protocol && (0 === l.port || 9 === l.port)) return a();\n            if (l.component && 1 !== l.component) return a();\n            if ((0 === c || c > 0 && p.iceTransport !== n.transceivers[0].iceTransport) && !s(p.iceTransport, l)) return i(o(\"OperationError\", \"Can not add ICE candidate\"));\n            var f = t.candidate.trim();\n            0 === f.indexOf(\"a=\") && (f = f.substr(2)), (r = e.getMediaSections(n._remoteDescription.sdp))[c] += \"a=\" + (l.type ? f : \"end-of-candidates\") + \"\\r\\n\", n._remoteDescription.sdp = e.getDescription(n._remoteDescription.sdp) + r.join(\"\");\n          } else for (var u = 0; u < n.transceivers.length && (n.transceivers[u].rejected || (n.transceivers[u].iceTransport.addRemoteCandidate({}), (r = e.getMediaSections(n._remoteDescription.sdp))[u] += \"a=end-of-candidates\\r\\n\", n._remoteDescription.sdp = e.getDescription(n._remoteDescription.sdp) + r.join(\"\"), !n.usingBundle)); u++) {\n            ;\n          }\n\n          a();\n        });\n      }, f.prototype.getStats = function (e) {\n        if (e && e instanceof c.MediaStreamTrack) {\n          var t = null;\n          if (this.transceivers.forEach(function (r) {\n            r.rtpSender && r.rtpSender.track === e ? t = r.rtpSender : r.rtpReceiver && r.rtpReceiver.track === e && (t = r.rtpReceiver);\n          }), !t) throw o(\"InvalidAccessError\", \"Invalid selector.\");\n          return t.getStats();\n        }\n\n        var r = [];\n        return this.transceivers.forEach(function (e) {\n          [\"rtpSender\", \"rtpReceiver\", \"iceGatherer\", \"iceTransport\", \"dtlsTransport\"].forEach(function (t) {\n            e[t] && r.push(e[t].getStats());\n          });\n        }), Promise.all(r).then(function (e) {\n          var t = new Map();\n          return e.forEach(function (e) {\n            e.forEach(function (e) {\n              t.set(e.id, e);\n            });\n          }), t;\n        });\n      };\n      [\"RTCRtpSender\", \"RTCRtpReceiver\", \"RTCIceGatherer\", \"RTCIceTransport\", \"RTCDtlsTransport\"].forEach(function (e) {\n        var r = c[e];\n\n        if (r && r.prototype && r.prototype.getStats) {\n          var n = r.prototype.getStats;\n\n          r.prototype.getStats = function () {\n            return n.apply(this).then(function (e) {\n              var r = new Map();\n              return Object.keys(e).forEach(function (n) {\n                e[n].type = t(e[n]), r.set(n, e[n]);\n              }), r;\n            });\n          };\n        }\n      });\n      var u = [\"createOffer\", \"createAnswer\"];\n      return u.forEach(function (e) {\n        var t = f.prototype[e];\n\n        f.prototype[e] = function () {\n          var e = arguments;\n          return \"function\" == typeof e[0] || \"function\" == typeof e[1] ? t.apply(this, [arguments[2]]).then(function (t) {\n            \"function\" == typeof e[0] && e[0].apply(null, [t]);\n          }, function (t) {\n            \"function\" == typeof e[1] && e[1].apply(null, [t]);\n          }) : t.apply(this, arguments);\n        };\n      }), (u = [\"setLocalDescription\", \"setRemoteDescription\", \"addIceCandidate\"]).forEach(function (e) {\n        var t = f.prototype[e];\n\n        f.prototype[e] = function () {\n          var e = arguments;\n          return \"function\" == typeof e[1] || \"function\" == typeof e[2] ? t.apply(this, arguments).then(function () {\n            \"function\" == typeof e[1] && e[1].apply(null);\n          }, function (t) {\n            \"function\" == typeof e[2] && e[2].apply(null, [t]);\n          }) : t.apply(this, arguments);\n        };\n      }), [\"getStats\"].forEach(function (e) {\n        var t = f.prototype[e];\n\n        f.prototype[e] = function () {\n          var e = arguments;\n          return \"function\" == typeof e[1] ? t.apply(this, arguments).then(function () {\n            \"function\" == typeof e[1] && e[1].apply(null);\n          }) : t.apply(this, arguments);\n        };\n      }), f;\n    };\n  }, {\n    \"sdp\": \"YHvh\"\n  }],\n  \"YdKx\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e) {\n      var r = e && e.navigator,\n          t = r.mediaDevices.getUserMedia.bind(r.mediaDevices);\n\n      r.mediaDevices.getUserMedia = function (e) {\n        return t(e).catch(function (e) {\n          return Promise.reject(function (e) {\n            return {\n              name: {\n                PermissionDeniedError: \"NotAllowedError\"\n              }[e.name] || e.name,\n              message: e.message,\n              constraint: e.constraint,\n              toString: function toString() {\n                return this.name;\n              }\n            };\n          }(e));\n        });\n      };\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetUserMedia = e;\n  }, {}],\n  \"P3bV\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e) {\n      \"getDisplayMedia\" in e.navigator && e.navigator.mediaDevices && (e.navigator.mediaDevices && \"getDisplayMedia\" in e.navigator.mediaDevices || (e.navigator.mediaDevices.getDisplayMedia = e.navigator.getDisplayMedia.bind(e.navigator)));\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetDisplayMedia = e;\n  }, {}],\n  \"XRic\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimPeerConnection = a, exports.shimReplaceTrack = p, Object.defineProperty(exports, \"shimGetUserMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return n.shimGetUserMedia;\n      }\n    }), Object.defineProperty(exports, \"shimGetDisplayMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return i.shimGetDisplayMedia;\n      }\n    });\n\n    var e = s(require(\"../utils\")),\n        t = require(\"./filtericeservers\"),\n        r = o(require(\"rtcpeerconnection-shim\")),\n        n = require(\"./getusermedia\"),\n        i = require(\"./getdisplaymedia\");\n\n    function o(e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    }\n\n    function c() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return c = function c() {\n        return e;\n      }, e;\n    }\n\n    function s(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = c();\n      if (t && t.has(e)) return t.get(e);\n      var r = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var o = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          o && (o.get || o.set) ? Object.defineProperty(r, i, o) : r[i] = e[i];\n        }\n      }\n\n      return r.default = e, t && t.set(e, r), r;\n    }\n\n    function a(n) {\n      var i = e.detectBrowser(n);\n\n      if (n.RTCIceGatherer && (n.RTCIceCandidate || (n.RTCIceCandidate = function (e) {\n        return e;\n      }), n.RTCSessionDescription || (n.RTCSessionDescription = function (e) {\n        return e;\n      }), i.version < 15025)) {\n        var o = Object.getOwnPropertyDescriptor(n.MediaStreamTrack.prototype, \"enabled\");\n        Object.defineProperty(n.MediaStreamTrack.prototype, \"enabled\", {\n          set: function set(e) {\n            o.set.call(this, e);\n            var t = new Event(\"enabled\");\n            t.enabled = e, this.dispatchEvent(t);\n          }\n        });\n      }\n\n      !n.RTCRtpSender || \"dtmf\" in n.RTCRtpSender.prototype || Object.defineProperty(n.RTCRtpSender.prototype, \"dtmf\", {\n        get: function get() {\n          return void 0 === this._dtmf && (\"audio\" === this.track.kind ? this._dtmf = new n.RTCDtmfSender(this) : \"video\" === this.track.kind && (this._dtmf = null)), this._dtmf;\n        }\n      }), n.RTCDtmfSender && !n.RTCDTMFSender && (n.RTCDTMFSender = n.RTCDtmfSender);\n      var c = (0, r.default)(n, i.version);\n      n.RTCPeerConnection = function (r) {\n        return r && r.iceServers && (r.iceServers = (0, t.filterIceServers)(r.iceServers, i.version), e.log(\"ICE servers after filtering:\", r.iceServers)), new c(r);\n      }, n.RTCPeerConnection.prototype = c.prototype;\n    }\n\n    function p(e) {\n      !e.RTCRtpSender || \"replaceTrack\" in e.RTCRtpSender.prototype || (e.RTCRtpSender.prototype.replaceTrack = e.RTCRtpSender.prototype.setTrack);\n    }\n  }, {\n    \"../utils\": \"iSxC\",\n    \"./filtericeservers\": \"NZ1C\",\n    \"rtcpeerconnection-shim\": \"NJ2u\",\n    \"./getusermedia\": \"YdKx\",\n    \"./getdisplaymedia\": \"P3bV\"\n  }],\n  \"GzSv\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetUserMedia = n;\n    var e = o(require(\"../utils\"));\n\n    function t() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return t = function t() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var o = t();\n      if (o && o.has(e)) return o.get(e);\n      var r = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(r, i, a) : r[i] = e[i];\n        }\n      }\n\n      return r.default = e, o && o.set(e, r), r;\n    }\n\n    function r(e) {\n      return (r = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function n(t) {\n      var o = e.detectBrowser(t),\n          n = t && t.navigator,\n          i = t && t.MediaStreamTrack;\n\n      if (n.getUserMedia = function (t, o, r) {\n        e.deprecated(\"navigator.getUserMedia\", \"navigator.mediaDevices.getUserMedia\"), n.mediaDevices.getUserMedia(t).then(o, r);\n      }, !(o.version > 55 && \"autoGainControl\" in n.mediaDevices.getSupportedConstraints())) {\n        var a = function a(e, t, o) {\n          t in e && !(o in e) && (e[o] = e[t], delete e[t]);\n        },\n            s = n.mediaDevices.getUserMedia.bind(n.mediaDevices);\n\n        if (n.mediaDevices.getUserMedia = function (e) {\n          return \"object\" === r(e) && \"object\" === r(e.audio) && (e = JSON.parse(JSON.stringify(e)), a(e.audio, \"autoGainControl\", \"mozAutoGainControl\"), a(e.audio, \"noiseSuppression\", \"mozNoiseSuppression\")), s(e);\n        }, i && i.prototype.getSettings) {\n          var p = i.prototype.getSettings;\n\n          i.prototype.getSettings = function () {\n            var e = p.apply(this, arguments);\n            return a(e, \"mozAutoGainControl\", \"autoGainControl\"), a(e, \"mozNoiseSuppression\", \"noiseSuppression\"), e;\n          };\n        }\n\n        if (i && i.prototype.applyConstraints) {\n          var u = i.prototype.applyConstraints;\n\n          i.prototype.applyConstraints = function (e) {\n            return \"audio\" === this.kind && \"object\" === r(e) && (e = JSON.parse(JSON.stringify(e)), a(e, \"autoGainControl\", \"mozAutoGainControl\"), a(e, \"noiseSuppression\", \"mozNoiseSuppression\")), u.apply(this, [e]);\n          };\n        }\n      }\n    }\n  }, {\n    \"../utils\": \"iSxC\"\n  }],\n  \"UuGU\": [function (require, module, exports) {\n    \"use strict\";\n\n    function e(e, i) {\n      e.navigator.mediaDevices && \"getDisplayMedia\" in e.navigator.mediaDevices || e.navigator.mediaDevices && (e.navigator.mediaDevices.getDisplayMedia = function (a) {\n        if (!a || !a.video) {\n          var t = new DOMException(\"getDisplayMedia without video constraints is undefined\");\n          return t.name = \"NotFoundError\", t.code = 8, Promise.reject(t);\n        }\n\n        return !0 === a.video ? a.video = {\n          mediaSource: i\n        } : a.video.mediaSource = i, e.navigator.mediaDevices.getUserMedia(a);\n      });\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimGetDisplayMedia = e;\n  }, {}],\n  \"Fzdr\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimOnTrack = c, exports.shimPeerConnection = s, exports.shimSenderGetStats = p, exports.shimReceiverGetStats = u, exports.shimRemoveStream = f, exports.shimRTCDataChannel = C, exports.shimAddTransceiver = d, exports.shimCreateOffer = y, exports.shimCreateAnswer = l, Object.defineProperty(exports, \"shimGetUserMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return t.shimGetUserMedia;\n      }\n    }), Object.defineProperty(exports, \"shimGetDisplayMedia\", {\n      enumerable: !0,\n      get: function get() {\n        return r.shimGetDisplayMedia;\n      }\n    });\n\n    var e = o(require(\"../utils\")),\n        t = require(\"./getusermedia\"),\n        r = require(\"./getdisplaymedia\");\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = n();\n      if (t && t.has(e)) return t.get(e);\n      var r = {},\n          o = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = o ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(r, i, a) : r[i] = e[i];\n        }\n      }\n\n      return r.default = e, t && t.set(e, r), r;\n    }\n\n    function i(e, t, r) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: r,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = r, e;\n    }\n\n    function a(e) {\n      return (a = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function c(e) {\n      \"object\" === a(e) && e.RTCTrackEvent && \"receiver\" in e.RTCTrackEvent.prototype && !(\"transceiver\" in e.RTCTrackEvent.prototype) && Object.defineProperty(e.RTCTrackEvent.prototype, \"transceiver\", {\n        get: function get() {\n          return {\n            receiver: this.receiver\n          };\n        }\n      });\n    }\n\n    function s(t) {\n      var r = e.detectBrowser(t);\n\n      if (\"object\" === a(t) && (t.RTCPeerConnection || t.mozRTCPeerConnection)) {\n        if (!t.RTCPeerConnection && t.mozRTCPeerConnection && (t.RTCPeerConnection = t.mozRTCPeerConnection), r.version < 53 && [\"setLocalDescription\", \"setRemoteDescription\", \"addIceCandidate\"].forEach(function (e) {\n          var r = t.RTCPeerConnection.prototype[e],\n              n = i({}, e, function () {\n            return arguments[0] = new (\"addIceCandidate\" === e ? t.RTCIceCandidate : t.RTCSessionDescription)(arguments[0]), r.apply(this, arguments);\n          });\n          t.RTCPeerConnection.prototype[e] = n[e];\n        }), r.version < 68) {\n          var n = t.RTCPeerConnection.prototype.addIceCandidate;\n\n          t.RTCPeerConnection.prototype.addIceCandidate = function () {\n            return arguments[0] ? arguments[0] && \"\" === arguments[0].candidate ? Promise.resolve() : n.apply(this, arguments) : (arguments[1] && arguments[1].apply(null), Promise.resolve());\n          };\n        }\n\n        var o = {\n          inboundrtp: \"inbound-rtp\",\n          outboundrtp: \"outbound-rtp\",\n          candidatepair: \"candidate-pair\",\n          localcandidate: \"local-candidate\",\n          remotecandidate: \"remote-candidate\"\n        },\n            c = t.RTCPeerConnection.prototype.getStats;\n\n        t.RTCPeerConnection.prototype.getStats = function () {\n          var _arguments2 = Array.prototype.slice.call(arguments),\n              e = _arguments2[0],\n              t = _arguments2[1],\n              n = _arguments2[2];\n\n          return c.apply(this, [e || null]).then(function (e) {\n            if (r.version < 53 && !t) try {\n              e.forEach(function (e) {\n                e.type = o[e.type] || e.type;\n              });\n            } catch (n) {\n              if (\"TypeError\" !== n.name) throw n;\n              e.forEach(function (t, r) {\n                e.set(r, Object.assign({}, t, {\n                  type: o[t.type] || t.type\n                }));\n              });\n            }\n            return e;\n          }).then(t, n);\n        };\n      }\n    }\n\n    function p(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection && e.RTCRtpSender && !(e.RTCRtpSender && \"getStats\" in e.RTCRtpSender.prototype)) {\n        var t = e.RTCPeerConnection.prototype.getSenders;\n        t && (e.RTCPeerConnection.prototype.getSenders = function () {\n          var e = this,\n              r = t.apply(this, []);\n          return r.forEach(function (t) {\n            return t._pc = e;\n          }), r;\n        });\n        var r = e.RTCPeerConnection.prototype.addTrack;\n        r && (e.RTCPeerConnection.prototype.addTrack = function () {\n          var e = r.apply(this, arguments);\n          return e._pc = this, e;\n        }), e.RTCRtpSender.prototype.getStats = function () {\n          return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map());\n        };\n      }\n    }\n\n    function u(t) {\n      if (\"object\" === a(t) && t.RTCPeerConnection && t.RTCRtpSender && !(t.RTCRtpSender && \"getStats\" in t.RTCRtpReceiver.prototype)) {\n        var r = t.RTCPeerConnection.prototype.getReceivers;\n        r && (t.RTCPeerConnection.prototype.getReceivers = function () {\n          var e = this,\n              t = r.apply(this, []);\n          return t.forEach(function (t) {\n            return t._pc = e;\n          }), t;\n        }), e.wrapPeerConnectionEvent(t, \"track\", function (e) {\n          return e.receiver._pc = e.srcElement, e;\n        }), t.RTCRtpReceiver.prototype.getStats = function () {\n          return this._pc.getStats(this.track);\n        };\n      }\n    }\n\n    function f(t) {\n      !t.RTCPeerConnection || \"removeStream\" in t.RTCPeerConnection.prototype || (t.RTCPeerConnection.prototype.removeStream = function (t) {\n        var r = this;\n        e.deprecated(\"removeStream\", \"removeTrack\"), this.getSenders().forEach(function (e) {\n          e.track && t.getTracks().includes(e.track) && r.removeTrack(e);\n        });\n      });\n    }\n\n    function C(e) {\n      e.DataChannel && !e.RTCDataChannel && (e.RTCDataChannel = e.DataChannel);\n    }\n\n    function d(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.addTransceiver;\n        t && (e.RTCPeerConnection.prototype.addTransceiver = function () {\n          this.setParametersPromises = [];\n          var e = arguments[1],\n              r = e && \"sendEncodings\" in e;\n          r && e.sendEncodings.forEach(function (e) {\n            if (\"rid\" in e) {\n              if (!/^[a-z0-9]{0,16}$/i.test(e.rid)) throw new TypeError(\"Invalid RID value provided.\");\n            }\n\n            if (\"scaleResolutionDownBy\" in e && !(parseFloat(e.scaleResolutionDownBy) >= 1)) throw new RangeError(\"scale_resolution_down_by must be >= 1.0\");\n            if (\"maxFramerate\" in e && !(parseFloat(e.maxFramerate) >= 0)) throw new RangeError(\"max_framerate must be >= 0.0\");\n          });\n          var n = t.apply(this, arguments);\n\n          if (r) {\n            var o = n.sender,\n                i = o.getParameters();\n            \"encodings\" in i || (i.encodings = e.sendEncodings, this.setParametersPromises.push(o.setParameters(i).catch(function () {})));\n          }\n\n          return n;\n        });\n      }\n    }\n\n    function y(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.createOffer;\n\n        e.RTCPeerConnection.prototype.createOffer = function () {\n          var e = arguments,\n              r = this;\n          return this.setParametersPromises && this.setParametersPromises.length ? Promise.all(this.setParametersPromises).then(function () {\n            return t.apply(r, e);\n          }).finally(function () {\n            r.setParametersPromises = [];\n          }) : t.apply(this, arguments);\n        };\n      }\n    }\n\n    function l(e) {\n      if (\"object\" === a(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype.createAnswer;\n\n        e.RTCPeerConnection.prototype.createAnswer = function () {\n          var e = arguments,\n              r = this;\n          return this.setParametersPromises && this.setParametersPromises.length ? Promise.all(this.setParametersPromises).then(function () {\n            return t.apply(r, e);\n          }).finally(function () {\n            r.setParametersPromises = [];\n          }) : t.apply(this, arguments);\n        };\n      }\n    }\n  }, {\n    \"../utils\": \"iSxC\",\n    \"./getusermedia\": \"GzSv\",\n    \"./getdisplaymedia\": \"UuGU\"\n  }],\n  \"t1lL\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimLocalStreamsAPI = n, exports.shimRemoteStreamsAPI = i, exports.shimCallbacksAPI = a, exports.shimGetUserMedia = s, exports.shimConstraints = c, exports.shimRTCIceServerUrls = d, exports.shimTrackEventTransceiver = f, exports.shimCreateOfferLegacy = p;\n    var e = r(require(\"../utils\"));\n\n    function t() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return t = function t() {\n        return e;\n      }, e;\n    }\n\n    function r(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var r = t();\n      if (r && r.has(e)) return r.get(e);\n      var o = {},\n          n = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = n ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(o, i, a) : o[i] = e[i];\n        }\n      }\n\n      return o.default = e, r && r.set(e, o), o;\n    }\n\n    function o(e) {\n      return (o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function n(e) {\n      if (\"object\" === o(e) && e.RTCPeerConnection) {\n        if (\"getLocalStreams\" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.getLocalStreams = function () {\n          return this._localStreams || (this._localStreams = []), this._localStreams;\n        }), !(\"addStream\" in e.RTCPeerConnection.prototype)) {\n          var t = e.RTCPeerConnection.prototype.addTrack;\n          e.RTCPeerConnection.prototype.addStream = function (e) {\n            var r = this;\n            this._localStreams || (this._localStreams = []), this._localStreams.includes(e) || this._localStreams.push(e), e.getAudioTracks().forEach(function (o) {\n              return t.call(r, o, e);\n            }), e.getVideoTracks().forEach(function (o) {\n              return t.call(r, o, e);\n            });\n          }, e.RTCPeerConnection.prototype.addTrack = function (e) {\n            var r = arguments[1];\n            return r && (this._localStreams ? this._localStreams.includes(r) || this._localStreams.push(r) : this._localStreams = [r]), t.apply(this, arguments);\n          };\n        }\n\n        \"removeStream\" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.removeStream = function (e) {\n          var t = this;\n          this._localStreams || (this._localStreams = []);\n\n          var r = this._localStreams.indexOf(e);\n\n          if (-1 !== r) {\n            this._localStreams.splice(r, 1);\n\n            var o = e.getTracks();\n            this.getSenders().forEach(function (e) {\n              o.includes(e.track) && t.removeTrack(e);\n            });\n          }\n        });\n      }\n    }\n\n    function i(e) {\n      if (\"object\" === o(e) && e.RTCPeerConnection && (\"getRemoteStreams\" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.getRemoteStreams = function () {\n        return this._remoteStreams ? this._remoteStreams : [];\n      }), !(\"onaddstream\" in e.RTCPeerConnection.prototype))) {\n        Object.defineProperty(e.RTCPeerConnection.prototype, \"onaddstream\", {\n          get: function get() {\n            return this._onaddstream;\n          },\n          set: function set(e) {\n            var t = this;\n            this._onaddstream && (this.removeEventListener(\"addstream\", this._onaddstream), this.removeEventListener(\"track\", this._onaddstreampoly)), this.addEventListener(\"addstream\", this._onaddstream = e), this.addEventListener(\"track\", this._onaddstreampoly = function (e) {\n              e.streams.forEach(function (e) {\n                if (t._remoteStreams || (t._remoteStreams = []), !t._remoteStreams.includes(e)) {\n                  t._remoteStreams.push(e);\n\n                  var r = new Event(\"addstream\");\n                  r.stream = e, t.dispatchEvent(r);\n                }\n              });\n            });\n          }\n        });\n        var t = e.RTCPeerConnection.prototype.setRemoteDescription;\n\n        e.RTCPeerConnection.prototype.setRemoteDescription = function () {\n          var e = this;\n          return this._onaddstreampoly || this.addEventListener(\"track\", this._onaddstreampoly = function (t) {\n            t.streams.forEach(function (t) {\n              if (e._remoteStreams || (e._remoteStreams = []), !(e._remoteStreams.indexOf(t) >= 0)) {\n                e._remoteStreams.push(t);\n\n                var r = new Event(\"addstream\");\n                r.stream = t, e.dispatchEvent(r);\n              }\n            });\n          }), t.apply(e, arguments);\n        };\n      }\n    }\n\n    function a(e) {\n      if (\"object\" === o(e) && e.RTCPeerConnection) {\n        var t = e.RTCPeerConnection.prototype,\n            r = t.createOffer,\n            n = t.createAnswer,\n            i = t.setLocalDescription,\n            a = t.setRemoteDescription,\n            s = t.addIceCandidate;\n        t.createOffer = function (e, t) {\n          var o = arguments.length >= 2 ? arguments[2] : arguments[0],\n              n = r.apply(this, [o]);\n          return t ? (n.then(e, t), Promise.resolve()) : n;\n        }, t.createAnswer = function (e, t) {\n          var r = arguments.length >= 2 ? arguments[2] : arguments[0],\n              o = n.apply(this, [r]);\n          return t ? (o.then(e, t), Promise.resolve()) : o;\n        };\n\n        var c = function c(e, t, r) {\n          var o = i.apply(this, [e]);\n          return r ? (o.then(t, r), Promise.resolve()) : o;\n        };\n\n        t.setLocalDescription = c, c = function c(e, t, r) {\n          var o = a.apply(this, [e]);\n          return r ? (o.then(t, r), Promise.resolve()) : o;\n        }, t.setRemoteDescription = c, c = function c(e, t, r) {\n          var o = s.apply(this, [e]);\n          return r ? (o.then(t, r), Promise.resolve()) : o;\n        }, t.addIceCandidate = c;\n      }\n    }\n\n    function s(e) {\n      var t = e && e.navigator;\n\n      if (t.mediaDevices && t.mediaDevices.getUserMedia) {\n        var r = t.mediaDevices,\n            o = r.getUserMedia.bind(r);\n\n        t.mediaDevices.getUserMedia = function (e) {\n          return o(c(e));\n        };\n      }\n\n      !t.getUserMedia && t.mediaDevices && t.mediaDevices.getUserMedia && (t.getUserMedia = function (e, r, o) {\n        t.mediaDevices.getUserMedia(e).then(r, o);\n      }.bind(t));\n    }\n\n    function c(t) {\n      return t && void 0 !== t.video ? Object.assign({}, t, {\n        video: e.compactObject(t.video)\n      }) : t;\n    }\n\n    function d(t) {\n      var r = t.RTCPeerConnection;\n      t.RTCPeerConnection = function (t, o) {\n        if (t && t.iceServers) {\n          for (var n = [], i = 0; i < t.iceServers.length; i++) {\n            var a = t.iceServers[i];\n            !a.hasOwnProperty(\"urls\") && a.hasOwnProperty(\"url\") ? (e.deprecated(\"RTCIceServer.url\", \"RTCIceServer.urls\"), (a = JSON.parse(JSON.stringify(a))).urls = a.url, delete a.url, n.push(a)) : n.push(t.iceServers[i]);\n          }\n\n          t.iceServers = n;\n        }\n\n        return new r(t, o);\n      }, t.RTCPeerConnection.prototype = r.prototype, \"generateCertificate\" in t.RTCPeerConnection && Object.defineProperty(t.RTCPeerConnection, \"generateCertificate\", {\n        get: function get() {\n          return r.generateCertificate;\n        }\n      });\n    }\n\n    function f(e) {\n      \"object\" === o(e) && e.RTCTrackEvent && \"receiver\" in e.RTCTrackEvent.prototype && !(\"transceiver\" in e.RTCTrackEvent.prototype) && Object.defineProperty(e.RTCTrackEvent.prototype, \"transceiver\", {\n        get: function get() {\n          return {\n            receiver: this.receiver\n          };\n        }\n      });\n    }\n\n    function p(e) {\n      var t = e.RTCPeerConnection.prototype.createOffer;\n\n      e.RTCPeerConnection.prototype.createOffer = function (e) {\n        if (e) {\n          void 0 !== e.offerToReceiveAudio && (e.offerToReceiveAudio = !!e.offerToReceiveAudio);\n          var r = this.getTransceivers().find(function (e) {\n            return \"audio\" === e.receiver.track.kind;\n          });\n          !1 === e.offerToReceiveAudio && r ? \"sendrecv\" === r.direction ? r.setDirection ? r.setDirection(\"sendonly\") : r.direction = \"sendonly\" : \"recvonly\" === r.direction && (r.setDirection ? r.setDirection(\"inactive\") : r.direction = \"inactive\") : !0 !== e.offerToReceiveAudio || r || this.addTransceiver(\"audio\"), void 0 !== e.offerToReceiveVideo && (e.offerToReceiveVideo = !!e.offerToReceiveVideo);\n          var o = this.getTransceivers().find(function (e) {\n            return \"video\" === e.receiver.track.kind;\n          });\n          !1 === e.offerToReceiveVideo && o ? \"sendrecv\" === o.direction ? o.setDirection ? o.setDirection(\"sendonly\") : o.direction = \"sendonly\" : \"recvonly\" === o.direction && (o.setDirection ? o.setDirection(\"inactive\") : o.direction = \"inactive\") : !0 !== e.offerToReceiveVideo || o || this.addTransceiver(\"video\");\n        }\n\n        return t.apply(this, arguments);\n      };\n    }\n  }, {\n    \"../utils\": \"iSxC\"\n  }],\n  \"GOQK\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.shimRTCIceCandidate = a, exports.shimMaxMessageSize = c, exports.shimSendThrowTypeError = s, exports.shimConnectionState = p, exports.removeAllowExtmapMixed = u;\n    var e = r(require(\"sdp\")),\n        t = o(require(\"./utils\"));\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var t = n();\n      if (t && t.has(e)) return t.get(e);\n      var o = {},\n          r = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var i in e) {\n        if (Object.prototype.hasOwnProperty.call(e, i)) {\n          var a = r ? Object.getOwnPropertyDescriptor(e, i) : null;\n          a && (a.get || a.set) ? Object.defineProperty(o, i, a) : o[i] = e[i];\n        }\n      }\n\n      return o.default = e, t && t.set(e, o), o;\n    }\n\n    function r(e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    }\n\n    function i(e) {\n      return (i = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function a(n) {\n      if (n.RTCIceCandidate && !(n.RTCIceCandidate && \"foundation\" in n.RTCIceCandidate.prototype)) {\n        var o = n.RTCIceCandidate;\n        n.RTCIceCandidate = function (t) {\n          if (\"object\" === i(t) && t.candidate && 0 === t.candidate.indexOf(\"a=\") && ((t = JSON.parse(JSON.stringify(t))).candidate = t.candidate.substr(2)), t.candidate && t.candidate.length) {\n            var n = new o(t),\n                r = e.default.parseCandidate(t.candidate),\n                a = Object.assign(n, r);\n            return a.toJSON = function () {\n              return {\n                candidate: a.candidate,\n                sdpMid: a.sdpMid,\n                sdpMLineIndex: a.sdpMLineIndex,\n                usernameFragment: a.usernameFragment\n              };\n            }, a;\n          }\n\n          return new o(t);\n        }, n.RTCIceCandidate.prototype = o.prototype, t.wrapPeerConnectionEvent(n, \"icecandidate\", function (e) {\n          return e.candidate && Object.defineProperty(e, \"candidate\", {\n            value: new n.RTCIceCandidate(e.candidate),\n            writable: \"false\"\n          }), e;\n        });\n      }\n    }\n\n    function c(n) {\n      if (n.RTCPeerConnection) {\n        var o = t.detectBrowser(n);\n        \"sctp\" in n.RTCPeerConnection.prototype || Object.defineProperty(n.RTCPeerConnection.prototype, \"sctp\", {\n          get: function get() {\n            return void 0 === this._sctp ? null : this._sctp;\n          }\n        });\n        var r = n.RTCPeerConnection.prototype.setRemoteDescription;\n\n        n.RTCPeerConnection.prototype.setRemoteDescription = function () {\n          if (this._sctp = null, \"chrome\" === o.browser && o.version >= 76) {\n            var _this$getConfiguratio = this.getConfiguration(),\n                t = _this$getConfiguratio.sdpSemantics;\n\n            \"plan-b\" === t && Object.defineProperty(this, \"sctp\", {\n              get: function get() {\n                return void 0 === this._sctp ? null : this._sctp;\n              },\n              enumerable: !0,\n              configurable: !0\n            });\n          }\n\n          if (function (t) {\n            if (!t || !t.sdp) return !1;\n            var n = e.default.splitSections(t.sdp);\n            return n.shift(), n.some(function (t) {\n              var n = e.default.parseMLine(t);\n              return n && \"application\" === n.kind && -1 !== n.protocol.indexOf(\"SCTP\");\n            });\n          }(arguments[0])) {\n            var n,\n                i = function (e) {\n              var t = e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n              if (null === t || t.length < 2) return -1;\n              var n = parseInt(t[1], 10);\n              return n != n ? -1 : n;\n            }(arguments[0]),\n                a = (p = i, u = 65536, \"firefox\" === o.browser && (u = o.version < 57 ? -1 === p ? 16384 : 2147483637 : o.version < 60 ? 57 === o.version ? 65535 : 65536 : 2147483637), u),\n                c = function (t, n) {\n              var r = 65536;\n              \"firefox\" === o.browser && 57 === o.version && (r = 65535);\n              var i = e.default.matchPrefix(t.sdp, \"a=max-message-size:\");\n              return i.length > 0 ? r = parseInt(i[0].substr(19), 10) : \"firefox\" === o.browser && -1 !== n && (r = 2147483637), r;\n            }(arguments[0], i);\n\n            n = 0 === a && 0 === c ? Number.POSITIVE_INFINITY : 0 === a || 0 === c ? Math.max(a, c) : Math.min(a, c);\n            var s = {};\n            Object.defineProperty(s, \"maxMessageSize\", {\n              get: function get() {\n                return n;\n              }\n            }), this._sctp = s;\n          }\n\n          var p, u;\n          return r.apply(this, arguments);\n        };\n      }\n    }\n\n    function s(e) {\n      if (e.RTCPeerConnection && \"createDataChannel\" in e.RTCPeerConnection.prototype) {\n        var n = e.RTCPeerConnection.prototype.createDataChannel;\n        e.RTCPeerConnection.prototype.createDataChannel = function () {\n          var e = n.apply(this, arguments);\n          return o(e, this), e;\n        }, t.wrapPeerConnectionEvent(e, \"datachannel\", function (e) {\n          return o(e.channel, e.target), e;\n        });\n      }\n\n      function o(e, t) {\n        var n = e.send;\n\n        e.send = function () {\n          var o = arguments[0],\n              r = o.length || o.size || o.byteLength;\n          if (\"open\" === e.readyState && t.sctp && r > t.sctp.maxMessageSize) throw new TypeError(\"Message too large (can send a maximum of \" + t.sctp.maxMessageSize + \" bytes)\");\n          return n.apply(e, arguments);\n        };\n      }\n    }\n\n    function p(e) {\n      if (e.RTCPeerConnection && !(\"connectionState\" in e.RTCPeerConnection.prototype)) {\n        var t = e.RTCPeerConnection.prototype;\n        Object.defineProperty(t, \"connectionState\", {\n          get: function get() {\n            return {\n              completed: \"connected\",\n              checking: \"connecting\"\n            }[this.iceConnectionState] || this.iceConnectionState;\n          },\n          enumerable: !0,\n          configurable: !0\n        }), Object.defineProperty(t, \"onconnectionstatechange\", {\n          get: function get() {\n            return this._onconnectionstatechange || null;\n          },\n          set: function set(e) {\n            this._onconnectionstatechange && (this.removeEventListener(\"connectionstatechange\", this._onconnectionstatechange), delete this._onconnectionstatechange), e && this.addEventListener(\"connectionstatechange\", this._onconnectionstatechange = e);\n          },\n          enumerable: !0,\n          configurable: !0\n        }), [\"setLocalDescription\", \"setRemoteDescription\"].forEach(function (e) {\n          var n = t[e];\n\n          t[e] = function () {\n            return this._connectionstatechangepoly || (this._connectionstatechangepoly = function (e) {\n              var t = e.target;\n\n              if (t._lastConnectionState !== t.connectionState) {\n                t._lastConnectionState = t.connectionState;\n                var n = new Event(\"connectionstatechange\", e);\n                t.dispatchEvent(n);\n              }\n\n              return e;\n            }, this.addEventListener(\"iceconnectionstatechange\", this._connectionstatechangepoly)), n.apply(this, arguments);\n          };\n        });\n      }\n    }\n\n    function u(e) {\n      if (e.RTCPeerConnection) {\n        var n = t.detectBrowser(e);\n\n        if (!(\"chrome\" === n.browser && n.version >= 71)) {\n          var o = e.RTCPeerConnection.prototype.setRemoteDescription;\n\n          e.RTCPeerConnection.prototype.setRemoteDescription = function (e) {\n            return e && e.sdp && -1 !== e.sdp.indexOf(\"\\na=extmap-allow-mixed\") && (e.sdp = e.sdp.split(\"\\n\").filter(function (e) {\n              return \"a=extmap-allow-mixed\" !== e.trim();\n            }).join(\"\\n\")), o.apply(this, arguments);\n          };\n        }\n      }\n    }\n  }, {\n    \"sdp\": \"YHvh\",\n    \"./utils\": \"iSxC\"\n  }],\n  \"KtlG\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.adapterFactory = m;\n    var e = o(require(\"./utils\")),\n        r = o(require(\"./chrome/chrome_shim\")),\n        i = o(require(\"./edge/edge_shim\")),\n        s = o(require(\"./firefox/firefox_shim\")),\n        t = o(require(\"./safari/safari_shim\")),\n        a = o(require(\"./common_shim\"));\n\n    function n() {\n      if (\"function\" != typeof WeakMap) return null;\n      var e = new WeakMap();\n      return n = function n() {\n        return e;\n      }, e;\n    }\n\n    function o(e) {\n      if (e && e.__esModule) return e;\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n      };\n      var r = n();\n      if (r && r.has(e)) return r.get(e);\n      var i = {},\n          s = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n      for (var t in e) {\n        if (Object.prototype.hasOwnProperty.call(e, t)) {\n          var a = s ? Object.getOwnPropertyDescriptor(e, t) : null;\n          a && (a.get || a.set) ? Object.defineProperty(i, t, a) : i[t] = e[t];\n        }\n      }\n\n      return i.default = e, r && r.set(e, i), i;\n    }\n\n    function m() {\n      var _ref = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n          n = _ref.window,\n          o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {\n        shimChrome: !0,\n        shimFirefox: !0,\n        shimEdge: !0,\n        shimSafari: !0\n      },\n          m = e.log,\n          h = e.detectBrowser(n),\n          d = {\n        browserDetails: h,\n        commonShim: a,\n        extractVersion: e.extractVersion,\n        disableLog: e.disableLog,\n        disableWarnings: e.disableWarnings\n      };\n\n      switch (h.browser) {\n        case \"chrome\":\n          if (!r || !r.shimPeerConnection || !o.shimChrome) return m(\"Chrome shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming chrome.\"), d.browserShim = r, r.shimGetUserMedia(n), r.shimMediaStream(n), r.shimPeerConnection(n), r.shimOnTrack(n), r.shimAddTrackRemoveTrack(n), r.shimGetSendersWithDtmf(n), r.shimGetStats(n), r.shimSenderReceiverGetStats(n), r.fixNegotiationNeeded(n), a.shimRTCIceCandidate(n), a.shimConnectionState(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n), a.removeAllowExtmapMixed(n);\n          break;\n\n        case \"firefox\":\n          if (!s || !s.shimPeerConnection || !o.shimFirefox) return m(\"Firefox shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming firefox.\"), d.browserShim = s, s.shimGetUserMedia(n), s.shimPeerConnection(n), s.shimOnTrack(n), s.shimRemoveStream(n), s.shimSenderGetStats(n), s.shimReceiverGetStats(n), s.shimRTCDataChannel(n), s.shimAddTransceiver(n), s.shimCreateOffer(n), s.shimCreateAnswer(n), a.shimRTCIceCandidate(n), a.shimConnectionState(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n);\n          break;\n\n        case \"edge\":\n          if (!i || !i.shimPeerConnection || !o.shimEdge) return m(\"MS edge shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming edge.\"), d.browserShim = i, i.shimGetUserMedia(n), i.shimGetDisplayMedia(n), i.shimPeerConnection(n), i.shimReplaceTrack(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n);\n          break;\n\n        case \"safari\":\n          if (!t || !o.shimSafari) return m(\"Safari shim is not included in this adapter release.\"), d;\n          m(\"adapter.js shimming safari.\"), d.browserShim = t, t.shimRTCIceServerUrls(n), t.shimCreateOfferLegacy(n), t.shimCallbacksAPI(n), t.shimLocalStreamsAPI(n), t.shimRemoteStreamsAPI(n), t.shimTrackEventTransceiver(n), t.shimGetUserMedia(n), a.shimRTCIceCandidate(n), a.shimMaxMessageSize(n), a.shimSendThrowTypeError(n), a.removeAllowExtmapMixed(n);\n          break;\n\n        default:\n          m(\"Unsupported browser!\");\n      }\n\n      return d;\n    }\n  }, {\n    \"./utils\": \"iSxC\",\n    \"./chrome/chrome_shim\": \"uI5X\",\n    \"./edge/edge_shim\": \"XRic\",\n    \"./firefox/firefox_shim\": \"Fzdr\",\n    \"./safari/safari_shim\": \"t1lL\",\n    \"./common_shim\": \"GOQK\"\n  }],\n  \"tI1X\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), exports.default = void 0;\n\n    var e = require(\"./adapter_factory.js\"),\n        r = (0, e.adapterFactory)({\n      window: window\n    }),\n        t = r;\n\n    exports.default = t;\n  }, {\n    \"./adapter_factory.js\": \"KtlG\"\n  }],\n  \"sXtV\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n    var t = e(require(\"webrtc-adapter\"));\n    exports.webRTCAdapter = t.default;\n  }, {\n    \"webrtc-adapter\": \"tI1X\"\n  }],\n  \"I31f\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var r = require(\"./adapter\");\n\n    exports.Supports = new (function () {\n      function e() {\n        this.isIOS = [\"iPad\", \"iPhone\", \"iPod\"].includes(navigator.platform), this.supportedBrowsers = [\"firefox\", \"chrome\", \"safari\"], this.minFirefoxVersion = 59, this.minChromeVersion = 72, this.minSafariVersion = 605;\n      }\n\n      return e.prototype.isWebRTCSupported = function () {\n        return \"undefined\" != typeof RTCPeerConnection;\n      }, e.prototype.isBrowserSupported = function () {\n        var r = this.getBrowser(),\n            e = this.getVersion();\n        return !!this.supportedBrowsers.includes(r) && (\"chrome\" === r ? e >= this.minChromeVersion : \"firefox\" === r ? e >= this.minFirefoxVersion : \"safari\" === r && !this.isIOS && e >= this.minSafariVersion);\n      }, e.prototype.getBrowser = function () {\n        return r.webRTCAdapter.browserDetails.browser;\n      }, e.prototype.getVersion = function () {\n        return r.webRTCAdapter.browserDetails.version || 0;\n      }, e.prototype.isUnifiedPlanSupported = function () {\n        var e,\n            i = this.getBrowser(),\n            t = r.webRTCAdapter.browserDetails.version || 0;\n        if (\"chrome\" === i && t < 72) return !1;\n        if (\"firefox\" === i && t >= 59) return !0;\n        if (!(window.RTCRtpTransceiver && \"currentDirection\" in RTCRtpTransceiver.prototype)) return !1;\n        var o = !1;\n\n        try {\n          (e = new RTCPeerConnection()).addTransceiver(\"audio\"), o = !0;\n        } catch (n) {} finally {\n          e && e.close();\n        }\n\n        return o;\n      }, e.prototype.toString = function () {\n        return \"Supports: \\n    browser:\" + this.getBrowser() + \" \\n    version:\" + this.getVersion() + \" \\n    isIOS:\" + this.isIOS + \" \\n    isWebRTCSupported:\" + this.isWebRTCSupported() + \" \\n    isBrowserSupported:\" + this.isBrowserSupported() + \" \\n    isUnifiedPlanSupported:\" + this.isUnifiedPlanSupported();\n      }, e;\n    }())();\n  }, {\n    \"./adapter\": \"sXtV\"\n  }],\n  \"BHXf\": [function (require, module, exports) {\n    \"use strict\";\n\n    var r = this && this.__importStar || function (r) {\n      if (r && r.__esModule) return r;\n      var t = {};\n      if (null != r) for (var e in r) {\n        Object.hasOwnProperty.call(r, e) && (t[e] = r[e]);\n      }\n      return t.default = r, t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var t = r(require(\"peerjs-js-binarypack\")),\n        e = require(\"./supports\"),\n        o = {\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }, {\n        urls: \"turn:0.peerjs.com:3478\",\n        username: \"peerjs\",\n        credential: \"peerjsp\"\n      }],\n      sdpSemantics: \"unified-plan\"\n    };\n\n    exports.util = new (function () {\n      function r() {\n        this.CLOUD_HOST = \"0.peerjs.com\", this.CLOUD_PORT = 443, this.chunkedBrowsers = {\n          Chrome: 1,\n          chrome: 1\n        }, this.chunkedMTU = 16300, this.defaultConfig = o, this.browser = e.Supports.getBrowser(), this.browserVersion = e.Supports.getVersion(), this.supports = function () {\n          var r,\n              t = {\n            browser: e.Supports.isBrowserSupported(),\n            webRTC: e.Supports.isWebRTCSupported(),\n            audioVideo: !1,\n            data: !1,\n            binaryBlob: !1,\n            reliable: !1\n          };\n          if (!t.webRTC) return t;\n\n          try {\n            r = new RTCPeerConnection(o), t.audioVideo = !0;\n            var n = void 0;\n\n            try {\n              n = r.createDataChannel(\"_PEERJSTEST\", {\n                ordered: !0\n              }), t.data = !0, t.reliable = !!n.ordered;\n\n              try {\n                n.binaryType = \"blob\", t.binaryBlob = !e.Supports.isIOS;\n              } catch (a) {}\n            } catch (a) {} finally {\n              n && n.close();\n            }\n          } catch (a) {} finally {\n            r && r.close();\n          }\n\n          return t;\n        }(), this.pack = t.pack, this.unpack = t.unpack, this._dataCount = 1;\n      }\n\n      return r.prototype.noop = function () {}, r.prototype.validateId = function (r) {\n        return !r || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(r);\n      }, r.prototype.chunk = function (r) {\n        for (var t = [], e = r.size, o = Math.ceil(e / exports.util.chunkedMTU), n = 0, a = 0; a < e;) {\n          var i = Math.min(e, a + exports.util.chunkedMTU),\n              s = r.slice(a, i),\n              u = {\n            __peerData: this._dataCount,\n            n: n,\n            data: s,\n            total: o\n          };\n          t.push(u), a = i, n++;\n        }\n\n        return this._dataCount++, t;\n      }, r.prototype.blobToArrayBuffer = function (r, t) {\n        var e = new FileReader();\n        return e.onload = function (r) {\n          r.target && t(r.target.result);\n        }, e.readAsArrayBuffer(r), e;\n      }, r.prototype.binaryStringToArrayBuffer = function (r) {\n        for (var t = new Uint8Array(r.length), e = 0; e < r.length; e++) {\n          t[e] = 255 & r.charCodeAt(e);\n        }\n\n        return t.buffer;\n      }, r.prototype.randomToken = function () {\n        return Math.random().toString(36).substr(2);\n      }, r.prototype.isSecure = function () {\n        return \"https:\" === location.protocol;\n      }, r;\n    }())();\n  }, {\n    \"peerjs-js-binarypack\": \"kdPp\",\n    \"./supports\": \"I31f\"\n  }],\n  \"JJlS\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = Object.prototype.hasOwnProperty,\n        t = \"~\";\n\n    function n() {}\n\n    function r(e, t, n) {\n      this.fn = e, this.context = t, this.once = n || !1;\n    }\n\n    function o(e, n, o, s, i) {\n      if (\"function\" != typeof o) throw new TypeError(\"The listener must be a function\");\n      var c = new r(o, s || e, i),\n          f = t ? t + n : n;\n      return e._events[f] ? e._events[f].fn ? e._events[f] = [e._events[f], c] : e._events[f].push(c) : (e._events[f] = c, e._eventsCount++), e;\n    }\n\n    function s(e, t) {\n      0 == --e._eventsCount ? e._events = new n() : delete e._events[t];\n    }\n\n    function i() {\n      this._events = new n(), this._eventsCount = 0;\n    }\n\n    Object.create && (n.prototype = Object.create(null), new n().__proto__ || (t = !1)), i.prototype.eventNames = function () {\n      var n,\n          r,\n          o = [];\n      if (0 === this._eventsCount) return o;\n\n      for (r in n = this._events) {\n        e.call(n, r) && o.push(t ? r.slice(1) : r);\n      }\n\n      return Object.getOwnPropertySymbols ? o.concat(Object.getOwnPropertySymbols(n)) : o;\n    }, i.prototype.listeners = function (e) {\n      var n = t ? t + e : e,\n          r = this._events[n];\n      if (!r) return [];\n      if (r.fn) return [r.fn];\n\n      for (var o = 0, s = r.length, i = new Array(s); o < s; o++) {\n        i[o] = r[o].fn;\n      }\n\n      return i;\n    }, i.prototype.listenerCount = function (e) {\n      var n = t ? t + e : e,\n          r = this._events[n];\n      return r ? r.fn ? 1 : r.length : 0;\n    }, i.prototype.emit = function (e, n, r, o, s, i) {\n      var c = t ? t + e : e;\n      if (!this._events[c]) return !1;\n      var f,\n          u,\n          a = this._events[c],\n          l = arguments.length;\n\n      if (a.fn) {\n        switch (a.once && this.removeListener(e, a.fn, void 0, !0), l) {\n          case 1:\n            return a.fn.call(a.context), !0;\n\n          case 2:\n            return a.fn.call(a.context, n), !0;\n\n          case 3:\n            return a.fn.call(a.context, n, r), !0;\n\n          case 4:\n            return a.fn.call(a.context, n, r, o), !0;\n\n          case 5:\n            return a.fn.call(a.context, n, r, o, s), !0;\n\n          case 6:\n            return a.fn.call(a.context, n, r, o, s, i), !0;\n        }\n\n        for (u = 1, f = new Array(l - 1); u < l; u++) {\n          f[u - 1] = arguments[u];\n        }\n\n        a.fn.apply(a.context, f);\n      } else {\n        var v,\n            h = a.length;\n\n        for (u = 0; u < h; u++) {\n          switch (a[u].once && this.removeListener(e, a[u].fn, void 0, !0), l) {\n            case 1:\n              a[u].fn.call(a[u].context);\n              break;\n\n            case 2:\n              a[u].fn.call(a[u].context, n);\n              break;\n\n            case 3:\n              a[u].fn.call(a[u].context, n, r);\n              break;\n\n            case 4:\n              a[u].fn.call(a[u].context, n, r, o);\n              break;\n\n            default:\n              if (!f) for (v = 1, f = new Array(l - 1); v < l; v++) {\n                f[v - 1] = arguments[v];\n              }\n              a[u].fn.apply(a[u].context, f);\n          }\n        }\n      }\n\n      return !0;\n    }, i.prototype.on = function (e, t, n) {\n      return o(this, e, t, n, !1);\n    }, i.prototype.once = function (e, t, n) {\n      return o(this, e, t, n, !0);\n    }, i.prototype.removeListener = function (e, n, r, o) {\n      var i = t ? t + e : e;\n      if (!this._events[i]) return this;\n      if (!n) return s(this, i), this;\n      var c = this._events[i];\n      if (c.fn) c.fn !== n || o && !c.once || r && c.context !== r || s(this, i);else {\n        for (var f = 0, u = [], a = c.length; f < a; f++) {\n          (c[f].fn !== n || o && !c[f].once || r && c[f].context !== r) && u.push(c[f]);\n        }\n\n        u.length ? this._events[i] = 1 === u.length ? u[0] : u : s(this, i);\n      }\n      return this;\n    }, i.prototype.removeAllListeners = function (e) {\n      var r;\n      return e ? (r = t ? t + e : e, this._events[r] && s(this, r)) : (this._events = new n(), this._eventsCount = 0), this;\n    }, i.prototype.off = i.prototype.removeListener, i.prototype.addListener = i.prototype.on, i.prefixed = t, i.EventEmitter = i, \"undefined\" != typeof module && (module.exports = i);\n  }, {}],\n  \"WOs9\": [function (require, module, exports) {\n    \"use strict\";\n\n    var r = this && this.__read || function (r, e) {\n      var o = \"function\" == typeof Symbol && r[Symbol.iterator];\n      if (!o) return r;\n      var t,\n          n,\n          l = o.call(r),\n          i = [];\n\n      try {\n        for (; (void 0 === e || e-- > 0) && !(t = l.next()).done;) {\n          i.push(t.value);\n        }\n      } catch (s) {\n        n = {\n          error: s\n        };\n      } finally {\n        try {\n          t && !t.done && (o = l.return) && o.call(l);\n        } finally {\n          if (n) throw n.error;\n        }\n      }\n\n      return i;\n    },\n        e = this && this.__spread || function () {\n      for (var e = [], o = 0; o < arguments.length; o++) {\n        e = e.concat(r(arguments[o]));\n      }\n\n      return e;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n    var o,\n        t = \"PeerJS: \";\n    !function (r) {\n      r[r.Disabled = 0] = \"Disabled\", r[r.Errors = 1] = \"Errors\", r[r.Warnings = 2] = \"Warnings\", r[r.All = 3] = \"All\";\n    }(o = exports.LogLevel || (exports.LogLevel = {}));\n\n    var n = function () {\n      function r() {\n        this._logLevel = o.Disabled;\n      }\n\n      return Object.defineProperty(r.prototype, \"logLevel\", {\n        get: function get() {\n          return this._logLevel;\n        },\n        set: function set(r) {\n          this._logLevel = r;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), r.prototype.log = function () {\n        for (var r = [], t = 0; t < arguments.length; t++) {\n          r[t] = arguments[t];\n        }\n\n        this._logLevel >= o.All && this._print.apply(this, e([o.All], r));\n      }, r.prototype.warn = function () {\n        for (var r = [], t = 0; t < arguments.length; t++) {\n          r[t] = arguments[t];\n        }\n\n        this._logLevel >= o.Warnings && this._print.apply(this, e([o.Warnings], r));\n      }, r.prototype.error = function () {\n        for (var r = [], t = 0; t < arguments.length; t++) {\n          r[t] = arguments[t];\n        }\n\n        this._logLevel >= o.Errors && this._print.apply(this, e([o.Errors], r));\n      }, r.prototype.setLogFunction = function (r) {\n        this._print = r;\n      }, r.prototype._print = function (r) {\n        for (var n = [], l = 1; l < arguments.length; l++) {\n          n[l - 1] = arguments[l];\n        }\n\n        var i = e([t], n);\n\n        for (var s in i) {\n          i[s] instanceof Error && (i[s] = \"(\" + i[s].name + \") \" + i[s].message);\n        }\n\n        r >= o.All ? console.log.apply(console, e(i)) : r >= o.Warnings ? console.warn.apply(console, e([\"WARNING\"], i)) : r >= o.Errors && console.error.apply(console, e([\"ERROR\"], i));\n      }, r;\n    }();\n\n    exports.default = new n();\n  }, {}],\n  \"ZRYf\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e, r, n, o, t, a, i;\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    }), function (e) {\n      e.Open = \"open\", e.Stream = \"stream\", e.Data = \"data\", e.Close = \"close\", e.Error = \"error\", e.IceStateChanged = \"iceStateChanged\";\n    }(e = exports.ConnectionEventType || (exports.ConnectionEventType = {})), function (e) {\n      e.Data = \"data\", e.Media = \"media\";\n    }(r = exports.ConnectionType || (exports.ConnectionType = {})), function (e) {\n      e.Open = \"open\", e.Close = \"close\", e.Connection = \"connection\", e.Call = \"call\", e.Disconnected = \"disconnected\", e.Error = \"error\";\n    }(n = exports.PeerEventType || (exports.PeerEventType = {})), function (e) {\n      e.BrowserIncompatible = \"browser-incompatible\", e.Disconnected = \"disconnected\", e.InvalidID = \"invalid-id\", e.InvalidKey = \"invalid-key\", e.Network = \"network\", e.PeerUnavailable = \"peer-unavailable\", e.SslUnavailable = \"ssl-unavailable\", e.ServerError = \"server-error\", e.SocketError = \"socket-error\", e.SocketClosed = \"socket-closed\", e.UnavailableID = \"unavailable-id\", e.WebRTC = \"webrtc\";\n    }(o = exports.PeerErrorType || (exports.PeerErrorType = {})), function (e) {\n      e.Binary = \"binary\", e.BinaryUTF8 = \"binary-utf8\", e.JSON = \"json\";\n    }(t = exports.SerializationType || (exports.SerializationType = {})), function (e) {\n      e.Message = \"message\", e.Disconnected = \"disconnected\", e.Error = \"error\", e.Close = \"close\";\n    }(a = exports.SocketEventType || (exports.SocketEventType = {})), function (e) {\n      e.Heartbeat = \"HEARTBEAT\", e.Candidate = \"CANDIDATE\", e.Offer = \"OFFER\", e.Answer = \"ANSWER\", e.Open = \"OPEN\", e.Error = \"ERROR\", e.IdTaken = \"ID-TAKEN\", e.InvalidKey = \"INVALID-KEY\", e.Leave = \"LEAVE\", e.Expire = \"EXPIRE\";\n    }(i = exports.ServerMessageType || (exports.ServerMessageType = {}));\n  }, {}],\n  \"wJlv\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e = function e(t, n) {\n        return (_e = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var n in t) {\n            t.hasOwnProperty(n) && (e[n] = t[n]);\n          }\n        })(t, n);\n      };\n\n      return function (t, n) {\n        function s() {\n          this.constructor = t;\n        }\n\n        _e(t, n), t.prototype = null === n ? Object.create(n) : (s.prototype = n.prototype, new s());\n      };\n    }(),\n        t = this && this.__read || function (e, t) {\n      var n = \"function\" == typeof Symbol && e[Symbol.iterator];\n      if (!n) return e;\n      var s,\n          o,\n          r = n.call(e),\n          i = [];\n\n      try {\n        for (; (void 0 === t || t-- > 0) && !(s = r.next()).done;) {\n          i.push(s.value);\n        }\n      } catch (c) {\n        o = {\n          error: c\n        };\n      } finally {\n        try {\n          s && !s.done && (n = r.return) && n.call(r);\n        } finally {\n          if (o) throw o.error;\n        }\n      }\n\n      return i;\n    },\n        n = this && this.__spread || function () {\n      for (var e = [], n = 0; n < arguments.length; n++) {\n        e = e.concat(t(arguments[n]));\n      }\n\n      return e;\n    },\n        s = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          n = t && e[t],\n          s = 0;\n      if (n) return n.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && s >= e.length && (e = void 0), {\n            value: e && e[s++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        o = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var r = require(\"eventemitter3\"),\n        i = o(require(\"./logger\")),\n        c = require(\"./enums\"),\n        a = function (t) {\n      function o(e, n, s, o, r, i) {\n        void 0 === i && (i = 5e3);\n        var c = t.call(this) || this;\n        c.pingInterval = i, c._disconnected = !0, c._messagesQueue = [];\n        var a = e ? \"wss://\" : \"ws://\";\n        return c._baseUrl = a + n + \":\" + s + o + \"peerjs?key=\" + r, c;\n      }\n\n      return e(o, t), o.prototype.start = function (e, t) {\n        var n = this;\n        this._id = e;\n        var s = this._baseUrl + \"&id=\" + e + \"&token=\" + t;\n        !this._socket && this._disconnected && (this._socket = new WebSocket(s), this._disconnected = !1, this._socket.onmessage = function (e) {\n          var t;\n\n          try {\n            t = JSON.parse(e.data), i.default.log(\"Server message received:\", t);\n          } catch (s) {\n            return void i.default.log(\"Invalid server message\", e.data);\n          }\n\n          n.emit(c.SocketEventType.Message, t);\n        }, this._socket.onclose = function (e) {\n          n._disconnected || (i.default.log(\"Socket closed.\", e), n._cleanup(), n._disconnected = !0, n.emit(c.SocketEventType.Disconnected));\n        }, this._socket.onopen = function () {\n          n._disconnected || (n._sendQueuedMessages(), i.default.log(\"Socket open\"), n._scheduleHeartbeat());\n        });\n      }, o.prototype._scheduleHeartbeat = function () {\n        var e = this;\n        this._wsPingTimer = setTimeout(function () {\n          e._sendHeartbeat();\n        }, this.pingInterval);\n      }, o.prototype._sendHeartbeat = function () {\n        if (this._wsOpen()) {\n          var e = JSON.stringify({\n            type: c.ServerMessageType.Heartbeat\n          });\n          this._socket.send(e), this._scheduleHeartbeat();\n        } else i.default.log(\"Cannot send heartbeat, because socket closed\");\n      }, o.prototype._wsOpen = function () {\n        return !!this._socket && 1 === this._socket.readyState;\n      }, o.prototype._sendQueuedMessages = function () {\n        var e,\n            t,\n            o = n(this._messagesQueue);\n        this._messagesQueue = [];\n\n        try {\n          for (var r = s(o), i = r.next(); !i.done; i = r.next()) {\n            var c = i.value;\n            this.send(c);\n          }\n        } catch (a) {\n          e = {\n            error: a\n          };\n        } finally {\n          try {\n            i && !i.done && (t = r.return) && t.call(r);\n          } finally {\n            if (e) throw e.error;\n          }\n        }\n      }, o.prototype.send = function (e) {\n        if (!this._disconnected) if (this._id) {\n          if (e.type) {\n            if (this._wsOpen()) {\n              var t = JSON.stringify(e);\n\n              this._socket.send(t);\n            }\n          } else this.emit(c.SocketEventType.Error, \"Invalid message\");\n        } else this._messagesQueue.push(e);\n      }, o.prototype.close = function () {\n        this._disconnected || (this._cleanup(), this._disconnected = !0);\n      }, o.prototype._cleanup = function () {\n        this._socket && (this._socket.onopen = this._socket.onmessage = this._socket.onclose = null, this._socket.close(), this._socket = void 0), clearTimeout(this._wsPingTimer);\n      }, o;\n    }(r.EventEmitter);\n\n    exports.Socket = a;\n  }, {\n    \"eventemitter3\": \"JJlS\",\n    \"./logger\": \"WOs9\",\n    \"./enums\": \"ZRYf\"\n  }],\n  \"HCdX\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__assign || function () {\n      return (e = Object.assign || function (e) {\n        for (var n, t = 1, o = arguments.length; t < o; t++) {\n          for (var i in n = arguments[t]) {\n            Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);\n          }\n        }\n\n        return e;\n      }).apply(this, arguments);\n    },\n        n = this && this.__awaiter || function (e, n, t, o) {\n      return new (t || (t = Promise))(function (i, r) {\n        function c(e) {\n          try {\n            s(o.next(e));\n          } catch (n) {\n            r(n);\n          }\n        }\n\n        function a(e) {\n          try {\n            s(o.throw(e));\n          } catch (n) {\n            r(n);\n          }\n        }\n\n        function s(e) {\n          var n;\n          e.done ? i(e.value) : (n = e.value, n instanceof t ? n : new t(function (e) {\n            e(n);\n          })).then(c, a);\n        }\n\n        s((o = o.apply(e, n || [])).next());\n      });\n    },\n        t = this && this.__generator || function (e, n) {\n      var t,\n          o,\n          i,\n          r,\n          c = {\n        label: 0,\n        sent: function sent() {\n          if (1 & i[0]) throw i[1];\n          return i[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return r = {\n        next: a(0),\n        throw: a(1),\n        return: a(2)\n      }, \"function\" == typeof Symbol && (r[Symbol.iterator] = function () {\n        return this;\n      }), r;\n\n      function a(r) {\n        return function (a) {\n          return function (r) {\n            if (t) throw new TypeError(\"Generator is already executing.\");\n\n            for (; c;) {\n              try {\n                if (t = 1, o && (i = 2 & r[0] ? o.return : r[0] ? o.throw || ((i = o.return) && i.call(o), 0) : o.next) && !(i = i.call(o, r[1])).done) return i;\n\n                switch (o = 0, i && (r = [2 & r[0], i.value]), r[0]) {\n                  case 0:\n                  case 1:\n                    i = r;\n                    break;\n\n                  case 4:\n                    return c.label++, {\n                      value: r[1],\n                      done: !1\n                    };\n\n                  case 5:\n                    c.label++, o = r[1], r = [0];\n                    continue;\n\n                  case 7:\n                    r = c.ops.pop(), c.trys.pop();\n                    continue;\n\n                  default:\n                    if (!(i = (i = c.trys).length > 0 && i[i.length - 1]) && (6 === r[0] || 2 === r[0])) {\n                      c = 0;\n                      continue;\n                    }\n\n                    if (3 === r[0] && (!i || r[1] > i[0] && r[1] < i[3])) {\n                      c.label = r[1];\n                      break;\n                    }\n\n                    if (6 === r[0] && c.label < i[1]) {\n                      c.label = i[1], i = r;\n                      break;\n                    }\n\n                    if (i && c.label < i[2]) {\n                      c.label = i[2], c.ops.push(r);\n                      break;\n                    }\n\n                    i[2] && c.ops.pop(), c.trys.pop();\n                    continue;\n                }\n\n                r = n.call(e, c);\n              } catch (a) {\n                r = [6, a], o = 0;\n              } finally {\n                t = i = 0;\n              }\n            }\n\n            if (5 & r[0]) throw r[1];\n            return {\n              value: r[0] ? r[1] : void 0,\n              done: !0\n            };\n          }([r, a]);\n        };\n      }\n    },\n        o = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var i = require(\"./util\"),\n        r = o(require(\"./logger\")),\n        c = require(\"./enums\"),\n        a = function () {\n      function o(e) {\n        this.connection = e;\n      }\n\n      return o.prototype.startConnection = function (e) {\n        var n = this._startPeerConnection();\n\n        if (this.connection.peerConnection = n, this.connection.type === c.ConnectionType.Media && e._stream && this._addTracksToConnection(e._stream, n), e.originator) {\n          if (this.connection.type === c.ConnectionType.Data) {\n            var t = this.connection,\n                o = {\n              ordered: !!e.reliable\n            },\n                i = n.createDataChannel(t.label, o);\n            t.initialize(i);\n          }\n\n          this._makeOffer();\n        } else this.handleSDP(\"OFFER\", e.sdp);\n      }, o.prototype._startPeerConnection = function () {\n        r.default.log(\"Creating RTCPeerConnection.\");\n        var e = new RTCPeerConnection(this.connection.provider.options.config);\n        return this._setupListeners(e), e;\n      }, o.prototype._setupListeners = function (e) {\n        var n = this,\n            t = this.connection.peer,\n            o = this.connection.connectionId,\n            a = this.connection.type,\n            s = this.connection.provider;\n        r.default.log(\"Listening for ICE candidates.\"), e.onicecandidate = function (e) {\n          e.candidate && e.candidate.candidate && (r.default.log(\"Received ICE candidates for \" + t + \":\", e.candidate), s.socket.send({\n            type: c.ServerMessageType.Candidate,\n            payload: {\n              candidate: e.candidate,\n              type: a,\n              connectionId: o\n            },\n            dst: t\n          }));\n        }, e.oniceconnectionstatechange = function () {\n          switch (e.iceConnectionState) {\n            case \"failed\":\n              r.default.log(\"iceConnectionState is failed, closing connections to \" + t), n.connection.emit(c.ConnectionEventType.Error, new Error(\"Negotiation of connection to \" + t + \" failed.\")), n.connection.close();\n              break;\n\n            case \"closed\":\n              r.default.log(\"iceConnectionState is closed, closing connections to \" + t), n.connection.emit(c.ConnectionEventType.Error, new Error(\"Connection to \" + t + \" closed.\")), n.connection.close();\n              break;\n\n            case \"disconnected\":\n              r.default.log(\"iceConnectionState is disconnected, closing connections to \" + t), n.connection.emit(c.ConnectionEventType.Error, new Error(\"Connection to \" + t + \" disconnected.\")), n.connection.close();\n              break;\n\n            case \"completed\":\n              e.onicecandidate = i.util.noop;\n          }\n\n          n.connection.emit(c.ConnectionEventType.IceStateChanged, e.iceConnectionState);\n        }, r.default.log(\"Listening for data channel\"), e.ondatachannel = function (e) {\n          r.default.log(\"Received data channel\");\n          var n = e.channel;\n          s.getConnection(t, o).initialize(n);\n        }, r.default.log(\"Listening for remote stream\"), e.ontrack = function (e) {\n          r.default.log(\"Received remote stream\");\n          var i = e.streams[0],\n              a = s.getConnection(t, o);\n\n          if (a.type === c.ConnectionType.Media) {\n            var d = a;\n\n            n._addStreamToMediaConnection(i, d);\n          }\n        };\n      }, o.prototype.cleanup = function () {\n        r.default.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n        var e = this.connection.peerConnection;\n\n        if (e) {\n          this.connection.peerConnection = null, e.onicecandidate = e.oniceconnectionstatechange = e.ondatachannel = e.ontrack = function () {};\n          var n = \"closed\" !== e.signalingState,\n              t = !1;\n\n          if (this.connection.type === c.ConnectionType.Data) {\n            var o = this.connection.dataChannel;\n            o && (t = !!o.readyState && \"closed\" !== o.readyState);\n          }\n\n          (n || t) && e.close();\n        }\n      }, o.prototype._makeOffer = function () {\n        return n(this, void 0, Promise, function () {\n          var n, o, a, s, d, l, u;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                n = this.connection.peerConnection, o = this.connection.provider, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 7,, 8]), [4, n.createOffer(this.connection.options.constraints)];\n\n              case 2:\n                a = t.sent(), r.default.log(\"Created offer.\"), this.connection.options.sdpTransform && \"function\" == typeof this.connection.options.sdpTransform && (a.sdp = this.connection.options.sdpTransform(a.sdp) || a.sdp), t.label = 3;\n\n              case 3:\n                return t.trys.push([3, 5,, 6]), [4, n.setLocalDescription(a)];\n\n              case 4:\n                return t.sent(), r.default.log(\"Set localDescription:\", a, \"for:\" + this.connection.peer), s = {\n                  sdp: a,\n                  type: this.connection.type,\n                  connectionId: this.connection.connectionId,\n                  metadata: this.connection.metadata,\n                  browser: i.util.browser\n                }, this.connection.type === c.ConnectionType.Data && (d = this.connection, s = e(e({}, s), {\n                  label: d.label,\n                  reliable: d.reliable,\n                  serialization: d.serialization\n                })), o.socket.send({\n                  type: c.ServerMessageType.Offer,\n                  payload: s,\n                  dst: this.connection.peer\n                }), [3, 6];\n\n              case 5:\n                return \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\" != (l = t.sent()) && (o.emitError(c.PeerErrorType.WebRTC, l), r.default.log(\"Failed to setLocalDescription, \", l)), [3, 6];\n\n              case 6:\n                return [3, 8];\n\n              case 7:\n                return u = t.sent(), o.emitError(c.PeerErrorType.WebRTC, u), r.default.log(\"Failed to createOffer, \", u), [3, 8];\n\n              case 8:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype._makeAnswer = function () {\n        return n(this, void 0, Promise, function () {\n          var e, n, o, a, s;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                e = this.connection.peerConnection, n = this.connection.provider, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 7,, 8]), [4, e.createAnswer()];\n\n              case 2:\n                o = t.sent(), r.default.log(\"Created answer.\"), this.connection.options.sdpTransform && \"function\" == typeof this.connection.options.sdpTransform && (o.sdp = this.connection.options.sdpTransform(o.sdp) || o.sdp), t.label = 3;\n\n              case 3:\n                return t.trys.push([3, 5,, 6]), [4, e.setLocalDescription(o)];\n\n              case 4:\n                return t.sent(), r.default.log(\"Set localDescription:\", o, \"for:\" + this.connection.peer), n.socket.send({\n                  type: c.ServerMessageType.Answer,\n                  payload: {\n                    sdp: o,\n                    type: this.connection.type,\n                    connectionId: this.connection.connectionId,\n                    browser: i.util.browser\n                  },\n                  dst: this.connection.peer\n                }), [3, 6];\n\n              case 5:\n                return a = t.sent(), n.emitError(c.PeerErrorType.WebRTC, a), r.default.log(\"Failed to setLocalDescription, \", a), [3, 6];\n\n              case 6:\n                return [3, 8];\n\n              case 7:\n                return s = t.sent(), n.emitError(c.PeerErrorType.WebRTC, s), r.default.log(\"Failed to create answer, \", s), [3, 8];\n\n              case 8:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype.handleSDP = function (e, o) {\n        return n(this, void 0, Promise, function () {\n          var n, i, a, s;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                o = new RTCSessionDescription(o), n = this.connection.peerConnection, i = this.connection.provider, r.default.log(\"Setting remote description\", o), a = this, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 5,, 6]), [4, n.setRemoteDescription(o)];\n\n              case 2:\n                return t.sent(), r.default.log(\"Set remoteDescription:\" + e + \" for:\" + this.connection.peer), \"OFFER\" !== e ? [3, 4] : [4, a._makeAnswer()];\n\n              case 3:\n                t.sent(), t.label = 4;\n\n              case 4:\n                return [3, 6];\n\n              case 5:\n                return s = t.sent(), i.emitError(c.PeerErrorType.WebRTC, s), r.default.log(\"Failed to setRemoteDescription, \", s), [3, 6];\n\n              case 6:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype.handleCandidate = function (e) {\n        return n(this, void 0, Promise, function () {\n          var n, o, i, a, s, d;\n          return t(this, function (t) {\n            switch (t.label) {\n              case 0:\n                r.default.log(\"handleCandidate:\", e), n = e.candidate, o = e.sdpMLineIndex, i = e.sdpMid, a = this.connection.peerConnection, s = this.connection.provider, t.label = 1;\n\n              case 1:\n                return t.trys.push([1, 3,, 4]), [4, a.addIceCandidate(new RTCIceCandidate({\n                  sdpMid: i,\n                  sdpMLineIndex: o,\n                  candidate: n\n                }))];\n\n              case 2:\n                return t.sent(), r.default.log(\"Added ICE candidate for:\" + this.connection.peer), [3, 4];\n\n              case 3:\n                return d = t.sent(), s.emitError(c.PeerErrorType.WebRTC, d), r.default.log(\"Failed to handleCandidate, \", d), [3, 4];\n\n              case 4:\n                return [2];\n            }\n          });\n        });\n      }, o.prototype._addTracksToConnection = function (e, n) {\n        if (r.default.log(\"add tracks from stream \" + e.id + \" to peer connection\"), !n.addTrack) return r.default.error(\"Your browser does't support RTCPeerConnection#addTrack. Ignored.\");\n        e.getTracks().forEach(function (t) {\n          n.addTrack(t, e);\n        });\n      }, o.prototype._addStreamToMediaConnection = function (e, n) {\n        r.default.log(\"add stream \" + e.id + \" to media connection \" + n.connectionId), n.addStream(e);\n      }, o;\n    }();\n\n    exports.Negotiator = a;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./enums\": \"ZRYf\"\n  }],\n  \"tQFK\": [function (require, module, exports) {\n    \"use strict\";\n\n    var t = this && this.__extends || function () {\n      var _t2 = function t(e, r) {\n        return (_t2 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (t, e) {\n          t.__proto__ = e;\n        } || function (t, e) {\n          for (var r in e) {\n            e.hasOwnProperty(r) && (t[r] = e[r]);\n          }\n        })(e, r);\n      };\n\n      return function (e, r) {\n        function n() {\n          this.constructor = e;\n        }\n\n        _t2(e, r), e.prototype = null === r ? Object.create(r) : (n.prototype = r.prototype, new n());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var e = require(\"eventemitter3\"),\n        r = function (e) {\n      function r(t, r, n) {\n        var o = e.call(this) || this;\n        return o.peer = t, o.provider = r, o.options = n, o._open = !1, o.metadata = n.metadata, o;\n      }\n\n      return t(r, e), Object.defineProperty(r.prototype, \"open\", {\n        get: function get() {\n          return this._open;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), r;\n    }(e.EventEmitter);\n\n    exports.BaseConnection = r;\n  }, {\n    \"eventemitter3\": \"JJlS\"\n  }],\n  \"dbHP\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e2 = function e(t, o) {\n        return (_e2 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var o in t) {\n            t.hasOwnProperty(o) && (e[o] = t[o]);\n          }\n        })(t, o);\n      };\n\n      return function (t, o) {\n        function r() {\n          this.constructor = t;\n        }\n\n        _e2(t, o), t.prototype = null === o ? Object.create(o) : (r.prototype = o.prototype, new r());\n      };\n    }(),\n        t = this && this.__assign || function () {\n      return (t = Object.assign || function (e) {\n        for (var t, o = 1, r = arguments.length; o < r; o++) {\n          for (var n in t = arguments[o]) {\n            Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n          }\n        }\n\n        return e;\n      }).apply(this, arguments);\n    },\n        o = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          o = t && e[t],\n          r = 0;\n      if (o) return o.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && r >= e.length && (e = void 0), {\n            value: e && e[r++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        r = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var n = require(\"./util\"),\n        i = r(require(\"./logger\")),\n        a = require(\"./negotiator\"),\n        s = require(\"./enums\"),\n        l = require(\"./baseconnection\"),\n        c = function (r) {\n      function l(e, t, o) {\n        var i = r.call(this, e, t, o) || this;\n        return i._localStream = i.options._stream, i.connectionId = i.options.connectionId || l.ID_PREFIX + n.util.randomToken(), i._negotiator = new a.Negotiator(i), i._localStream && i._negotiator.startConnection({\n          _stream: i._localStream,\n          originator: !0\n        }), i;\n      }\n\n      return e(l, r), Object.defineProperty(l.prototype, \"type\", {\n        get: function get() {\n          return s.ConnectionType.Media;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(l.prototype, \"localStream\", {\n        get: function get() {\n          return this._localStream;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(l.prototype, \"remoteStream\", {\n        get: function get() {\n          return this._remoteStream;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), l.prototype.addStream = function (e) {\n        i.default.log(\"Receiving stream\", e), this._remoteStream = e, r.prototype.emit.call(this, s.ConnectionEventType.Stream, e);\n      }, l.prototype.handleMessage = function (e) {\n        var t = e.type,\n            o = e.payload;\n\n        switch (e.type) {\n          case s.ServerMessageType.Answer:\n            this._negotiator.handleSDP(t, o.sdp), this._open = !0;\n            break;\n\n          case s.ServerMessageType.Candidate:\n            this._negotiator.handleCandidate(o.candidate);\n\n            break;\n\n          default:\n            i.default.warn(\"Unrecognized message type:\" + t + \" from peer:\" + this.peer);\n        }\n      }, l.prototype.answer = function (e, r) {\n        var n, a;\n        if (void 0 === r && (r = {}), this._localStream) i.default.warn(\"Local stream already exists on this MediaConnection. Are you answering a call twice?\");else {\n          this._localStream = e, r && r.sdpTransform && (this.options.sdpTransform = r.sdpTransform), this._negotiator.startConnection(t(t({}, this.options._payload), {\n            _stream: e\n          }));\n\n          var s = this.provider._getMessages(this.connectionId);\n\n          try {\n            for (var l = o(s), c = l.next(); !c.done; c = l.next()) {\n              var p = c.value;\n              this.handleMessage(p);\n            }\n          } catch (u) {\n            n = {\n              error: u\n            };\n          } finally {\n            try {\n              c && !c.done && (a = l.return) && a.call(l);\n            } finally {\n              if (n) throw n.error;\n            }\n          }\n\n          this._open = !0;\n        }\n      }, l.prototype.close = function () {\n        this._negotiator && (this._negotiator.cleanup(), this._negotiator = null), this._localStream = null, this._remoteStream = null, this.provider && (this.provider._removeConnection(this), this.provider = null), this.options && this.options._stream && (this.options._stream = null), this.open && (this._open = !1, r.prototype.emit.call(this, s.ConnectionEventType.Close));\n      }, l.ID_PREFIX = \"mc_\", l;\n    }(l.BaseConnection);\n\n    exports.MediaConnection = c;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./negotiator\": \"HCdX\",\n    \"./enums\": \"ZRYf\",\n    \"./baseconnection\": \"tQFK\"\n  }],\n  \"GGp6\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e3 = function e(t, r) {\n        return (_e3 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var r in t) {\n            t.hasOwnProperty(r) && (e[r] = t[r]);\n          }\n        })(t, r);\n      };\n\n      return function (t, r) {\n        function o() {\n          this.constructor = t;\n        }\n\n        _e3(t, r), t.prototype = null === r ? Object.create(r) : (o.prototype = r.prototype, new o());\n      };\n    }(),\n        t = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var r = require(\"eventemitter3\"),\n        o = t(require(\"./logger\")),\n        n = function (t) {\n      function r() {\n        var e = t.call(this) || this;\n        return e.fileReader = new FileReader(), e._queue = [], e._processing = !1, e.fileReader.onload = function (t) {\n          e._processing = !1, t.target && e.emit(\"done\", t.target.result), e.doNextTask();\n        }, e.fileReader.onerror = function (t) {\n          o.default.error(\"EncodingQueue error:\", t), e._processing = !1, e.destroy(), e.emit(\"error\", t);\n        }, e;\n      }\n\n      return e(r, t), Object.defineProperty(r.prototype, \"queue\", {\n        get: function get() {\n          return this._queue;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(r.prototype, \"size\", {\n        get: function get() {\n          return this.queue.length;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(r.prototype, \"processing\", {\n        get: function get() {\n          return this._processing;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), r.prototype.enque = function (e) {\n        this.queue.push(e), this.processing || this.doNextTask();\n      }, r.prototype.destroy = function () {\n        this.fileReader.abort(), this._queue = [];\n      }, r.prototype.doNextTask = function () {\n        0 !== this.size && (this.processing || (this._processing = !0, this.fileReader.readAsArrayBuffer(this.queue.shift())));\n      }, r;\n    }(r.EventEmitter);\n\n    exports.EncodingQueue = n;\n  }, {\n    \"eventemitter3\": \"JJlS\",\n    \"./logger\": \"WOs9\"\n  }],\n  \"GBTQ\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e4 = function e(t, n) {\n        return (_e4 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var n in t) {\n            t.hasOwnProperty(n) && (e[n] = t[n]);\n          }\n        })(t, n);\n      };\n\n      return function (t, n) {\n        function i() {\n          this.constructor = t;\n        }\n\n        _e4(t, n), t.prototype = null === n ? Object.create(n) : (i.prototype = n.prototype, new i());\n      };\n    }(),\n        t = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          n = t && e[t],\n          i = 0;\n      if (n) return n.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && i >= e.length && (e = void 0), {\n            value: e && e[i++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        n = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var i = require(\"./util\"),\n        o = n(require(\"./logger\")),\n        r = require(\"./negotiator\"),\n        a = require(\"./enums\"),\n        s = require(\"./baseconnection\"),\n        u = require(\"./encodingQueue\"),\n        l = function (n) {\n      function s(e, t, l) {\n        var f = n.call(this, e, t, l) || this;\n        return f.stringify = JSON.stringify, f.parse = JSON.parse, f._buffer = [], f._bufferSize = 0, f._buffering = !1, f._chunkedData = {}, f._encodingQueue = new u.EncodingQueue(), f.connectionId = f.options.connectionId || s.ID_PREFIX + i.util.randomToken(), f.label = f.options.label || f.connectionId, f.serialization = f.options.serialization || a.SerializationType.Binary, f.reliable = !!f.options.reliable, f._encodingQueue.on(\"done\", function (e) {\n          f._bufferedSend(e);\n        }), f._encodingQueue.on(\"error\", function () {\n          o.default.error(\"DC#\" + f.connectionId + \": Error occured in encoding from blob to arraybuffer, close DC\"), f.close();\n        }), f._negotiator = new r.Negotiator(f), f._negotiator.startConnection(f.options._payload || {\n          originator: !0\n        }), f;\n      }\n\n      return e(s, n), Object.defineProperty(s.prototype, \"type\", {\n        get: function get() {\n          return a.ConnectionType.Data;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(s.prototype, \"dataChannel\", {\n        get: function get() {\n          return this._dc;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(s.prototype, \"bufferSize\", {\n        get: function get() {\n          return this._bufferSize;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), s.prototype.initialize = function (e) {\n        this._dc = e, this._configureDataChannel();\n      }, s.prototype._configureDataChannel = function () {\n        var e = this;\n        i.util.supports.binaryBlob && !i.util.supports.reliable || (this.dataChannel.binaryType = \"arraybuffer\"), this.dataChannel.onopen = function () {\n          o.default.log(\"DC#\" + e.connectionId + \" dc connection success\"), e._open = !0, e.emit(a.ConnectionEventType.Open);\n        }, this.dataChannel.onmessage = function (t) {\n          o.default.log(\"DC#\" + e.connectionId + \" dc onmessage:\", t.data), e._handleDataMessage(t);\n        }, this.dataChannel.onclose = function () {\n          o.default.log(\"DC#\" + e.connectionId + \" dc closed for:\", e.peer), e.close();\n        };\n      }, s.prototype._handleDataMessage = function (e) {\n        var t = this,\n            o = e.data,\n            r = o.constructor,\n            s = o;\n\n        if (this.serialization === a.SerializationType.Binary || this.serialization === a.SerializationType.BinaryUTF8) {\n          if (r === Blob) return void i.util.blobToArrayBuffer(o, function (e) {\n            var n = i.util.unpack(e);\n            t.emit(a.ConnectionEventType.Data, n);\n          });\n          if (r === ArrayBuffer) s = i.util.unpack(o);else if (r === String) {\n            var u = i.util.binaryStringToArrayBuffer(o);\n            s = i.util.unpack(u);\n          }\n        } else this.serialization === a.SerializationType.JSON && (s = this.parse(o));\n\n        s.__peerData ? this._handleChunk(s) : n.prototype.emit.call(this, a.ConnectionEventType.Data, s);\n      }, s.prototype._handleChunk = function (e) {\n        var t = e.__peerData,\n            n = this._chunkedData[t] || {\n          data: [],\n          count: 0,\n          total: e.total\n        };\n\n        if (n.data[e.n] = e.data, n.count++, this._chunkedData[t] = n, n.total === n.count) {\n          delete this._chunkedData[t];\n          var i = new Blob(n.data);\n\n          this._handleDataMessage({\n            data: i\n          });\n        }\n      }, s.prototype.close = function () {\n        this._buffer = [], this._bufferSize = 0, this._chunkedData = {}, this._negotiator && (this._negotiator.cleanup(), this._negotiator = null), this.provider && (this.provider._removeConnection(this), this.provider = null), this.dataChannel && (this.dataChannel.onopen = null, this.dataChannel.onmessage = null, this.dataChannel.onclose = null, this._dc = null), this._encodingQueue && (this._encodingQueue.destroy(), this._encodingQueue.removeAllListeners(), this._encodingQueue = null), this.open && (this._open = !1, n.prototype.emit.call(this, a.ConnectionEventType.Close));\n      }, s.prototype.send = function (e, t) {\n        if (this.open) {\n          if (this.serialization === a.SerializationType.JSON) this._bufferedSend(this.stringify(e));else if (this.serialization === a.SerializationType.Binary || this.serialization === a.SerializationType.BinaryUTF8) {\n            var o = i.util.pack(e);\n            if (!t && o.size > i.util.chunkedMTU) return void this._sendChunks(o);\n            i.util.supports.binaryBlob ? this._bufferedSend(o) : this._encodingQueue.enque(o);\n          } else this._bufferedSend(e);\n        } else n.prototype.emit.call(this, a.ConnectionEventType.Error, new Error(\"Connection is not open. You should listen for the `open` event before sending messages.\"));\n      }, s.prototype._bufferedSend = function (e) {\n        !this._buffering && this._trySend(e) || (this._buffer.push(e), this._bufferSize = this._buffer.length);\n      }, s.prototype._trySend = function (e) {\n        var t = this;\n        if (!this.open) return !1;\n        if (this.dataChannel.bufferedAmount > s.MAX_BUFFERED_AMOUNT) return this._buffering = !0, setTimeout(function () {\n          t._buffering = !1, t._tryBuffer();\n        }, 50), !1;\n\n        try {\n          this.dataChannel.send(e);\n        } catch (n) {\n          return o.default.error(\"DC#:\" + this.connectionId + \" Error when sending:\", n), this._buffering = !0, this.close(), !1;\n        }\n\n        return !0;\n      }, s.prototype._tryBuffer = function () {\n        if (this.open && 0 !== this._buffer.length) {\n          var e = this._buffer[0];\n          this._trySend(e) && (this._buffer.shift(), this._bufferSize = this._buffer.length, this._tryBuffer());\n        }\n      }, s.prototype._sendChunks = function (e) {\n        var n,\n            r,\n            a = i.util.chunk(e);\n        o.default.log(\"DC#\" + this.connectionId + \" Try to send \" + a.length + \" chunks...\");\n\n        try {\n          for (var s = t(a), u = s.next(); !u.done; u = s.next()) {\n            var l = u.value;\n            this.send(l, !0);\n          }\n        } catch (f) {\n          n = {\n            error: f\n          };\n        } finally {\n          try {\n            u && !u.done && (r = s.return) && r.call(s);\n          } finally {\n            if (n) throw n.error;\n          }\n        }\n      }, s.prototype.handleMessage = function (e) {\n        var t = e.payload;\n\n        switch (e.type) {\n          case a.ServerMessageType.Answer:\n            this._negotiator.handleSDP(e.type, t.sdp);\n\n            break;\n\n          case a.ServerMessageType.Candidate:\n            this._negotiator.handleCandidate(t.candidate);\n\n            break;\n\n          default:\n            o.default.warn(\"Unrecognized message type:\", e.type, \"from peer:\", this.peer);\n        }\n      }, s.ID_PREFIX = \"dc_\", s.MAX_BUFFERED_AMOUNT = 8388608, s;\n    }(s.BaseConnection);\n\n    exports.DataConnection = l;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./negotiator\": \"HCdX\",\n    \"./enums\": \"ZRYf\",\n    \"./baseconnection\": \"tQFK\",\n    \"./encodingQueue\": \"GGp6\"\n  }],\n  \"in7L\": [function (require, module, exports) {\n    \"use strict\";\n\n    var t = this && this.__awaiter || function (t, e, r, o) {\n      return new (r || (r = Promise))(function (n, s) {\n        function i(t) {\n          try {\n            a(o.next(t));\n          } catch (e) {\n            s(e);\n          }\n        }\n\n        function u(t) {\n          try {\n            a(o.throw(t));\n          } catch (e) {\n            s(e);\n          }\n        }\n\n        function a(t) {\n          var e;\n          t.done ? n(t.value) : (e = t.value, e instanceof r ? e : new r(function (t) {\n            t(e);\n          })).then(i, u);\n        }\n\n        a((o = o.apply(t, e || [])).next());\n      });\n    },\n        e = this && this.__generator || function (t, e) {\n      var r,\n          o,\n          n,\n          s,\n          i = {\n        label: 0,\n        sent: function sent() {\n          if (1 & n[0]) throw n[1];\n          return n[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return s = {\n        next: u(0),\n        throw: u(1),\n        return: u(2)\n      }, \"function\" == typeof Symbol && (s[Symbol.iterator] = function () {\n        return this;\n      }), s;\n\n      function u(s) {\n        return function (u) {\n          return function (s) {\n            if (r) throw new TypeError(\"Generator is already executing.\");\n\n            for (; i;) {\n              try {\n                if (r = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, s[1])).done) return n;\n\n                switch (o = 0, n && (s = [2 & s[0], n.value]), s[0]) {\n                  case 0:\n                  case 1:\n                    n = s;\n                    break;\n\n                  case 4:\n                    return i.label++, {\n                      value: s[1],\n                      done: !1\n                    };\n\n                  case 5:\n                    i.label++, o = s[1], s = [0];\n                    continue;\n\n                  case 7:\n                    s = i.ops.pop(), i.trys.pop();\n                    continue;\n\n                  default:\n                    if (!(n = (n = i.trys).length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {\n                      i = 0;\n                      continue;\n                    }\n\n                    if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {\n                      i.label = s[1];\n                      break;\n                    }\n\n                    if (6 === s[0] && i.label < n[1]) {\n                      i.label = n[1], n = s;\n                      break;\n                    }\n\n                    if (n && i.label < n[2]) {\n                      i.label = n[2], i.ops.push(s);\n                      break;\n                    }\n\n                    n[2] && i.ops.pop(), i.trys.pop();\n                    continue;\n                }\n\n                s = e.call(t, i);\n              } catch (u) {\n                s = [6, u], o = 0;\n              } finally {\n                r = n = 0;\n              }\n            }\n\n            if (5 & s[0]) throw s[1];\n            return {\n              value: s[0] ? s[1] : void 0,\n              done: !0\n            };\n          }([s, u]);\n        };\n      }\n    },\n        r = this && this.__importDefault || function (t) {\n      return t && t.__esModule ? t : {\n        default: t\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var o = require(\"./util\"),\n        n = r(require(\"./logger\")),\n        s = function () {\n      function r(t) {\n        this._options = t;\n      }\n\n      return r.prototype._buildUrl = function (t) {\n        var e = (this._options.secure ? \"https://\" : \"http://\") + this._options.host + \":\" + this._options.port + this._options.path + this._options.key + \"/\" + t;\n        return e += \"?ts=\" + new Date().getTime() + Math.random();\n      }, r.prototype.retrieveId = function () {\n        return t(this, void 0, Promise, function () {\n          var t, r, s, i;\n          return e(this, function (e) {\n            switch (e.label) {\n              case 0:\n                t = this._buildUrl(\"id\"), e.label = 1;\n\n              case 1:\n                return e.trys.push([1, 3,, 4]), [4, fetch(t)];\n\n              case 2:\n                if (200 !== (r = e.sent()).status) throw new Error(\"Error. Status:\" + r.status);\n                return [2, r.text()];\n\n              case 3:\n                throw s = e.sent(), n.default.error(\"Error retrieving ID\", s), i = \"\", \"/\" === this._options.path && this._options.host !== o.util.CLOUD_HOST && (i = \" If you passed in a `path` to your self-hosted PeerServer, you'll also need to pass in that same path when creating a new Peer.\"), new Error(\"Could not get an ID from the server.\" + i);\n\n              case 4:\n                return [2];\n            }\n          });\n        });\n      }, r.prototype.listAllPeers = function () {\n        return t(this, void 0, Promise, function () {\n          var t, r, s, i;\n          return e(this, function (e) {\n            switch (e.label) {\n              case 0:\n                t = this._buildUrl(\"peers\"), e.label = 1;\n\n              case 1:\n                return e.trys.push([1, 3,, 4]), [4, fetch(t)];\n\n              case 2:\n                if (200 !== (r = e.sent()).status) {\n                  if (401 === r.status) throw s = \"\", s = this._options.host === o.util.CLOUD_HOST ? \"It looks like you're using the cloud server. You can email team@peerjs.com to enable peer listing for your API key.\" : \"You need to enable `allow_discovery` on your self-hosted PeerServer to use this feature.\", new Error(\"It doesn't look like you have permission to list peers IDs. \" + s);\n                  throw new Error(\"Error. Status:\" + r.status);\n                }\n\n                return [2, r.json()];\n\n              case 3:\n                throw i = e.sent(), n.default.error(\"Error retrieving list peers\", i), new Error(\"Could not get list peers from the server.\" + i);\n\n              case 4:\n                return [2];\n            }\n          });\n        });\n      }, r;\n    }();\n\n    exports.API = s;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\"\n  }],\n  \"Hxpd\": [function (require, module, exports) {\n    \"use strict\";\n\n    var e = this && this.__extends || function () {\n      var _e5 = function e(t, n) {\n        return (_e5 = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (e, t) {\n          e.__proto__ = t;\n        } || function (e, t) {\n          for (var n in t) {\n            t.hasOwnProperty(n) && (e[n] = t[n]);\n          }\n        })(t, n);\n      };\n\n      return function (t, n) {\n        function r() {\n          this.constructor = t;\n        }\n\n        _e5(t, n), t.prototype = null === n ? Object.create(n) : (r.prototype = n.prototype, new r());\n      };\n    }(),\n        t = this && this.__assign || function () {\n      return (t = Object.assign || function (e) {\n        for (var t, n = 1, r = arguments.length; n < r; n++) {\n          for (var o in t = arguments[n]) {\n            Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);\n          }\n        }\n\n        return e;\n      }).apply(this, arguments);\n    },\n        n = this && this.__values || function (e) {\n      var t = \"function\" == typeof Symbol && Symbol.iterator,\n          n = t && e[t],\n          r = 0;\n      if (n) return n.call(e);\n      if (e && \"number\" == typeof e.length) return {\n        next: function next() {\n          return e && r >= e.length && (e = void 0), {\n            value: e && e[r++],\n            done: !e\n          };\n        }\n      };\n      throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    },\n        r = this && this.__read || function (e, t) {\n      var n = \"function\" == typeof Symbol && e[Symbol.iterator];\n      if (!n) return e;\n      var r,\n          o,\n          i = n.call(e),\n          s = [];\n\n      try {\n        for (; (void 0 === t || t-- > 0) && !(r = i.next()).done;) {\n          s.push(r.value);\n        }\n      } catch (a) {\n        o = {\n          error: a\n        };\n      } finally {\n        try {\n          r && !r.done && (n = i.return) && n.call(i);\n        } finally {\n          if (o) throw o.error;\n        }\n      }\n\n      return s;\n    },\n        o = this && this.__importDefault || function (e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var i = require(\"eventemitter3\"),\n        s = require(\"./util\"),\n        a = o(require(\"./logger\")),\n        c = require(\"./socket\"),\n        l = require(\"./mediaconnection\"),\n        d = require(\"./dataconnection\"),\n        u = require(\"./enums\"),\n        p = require(\"./api\"),\n        h = function () {\n      return function () {};\n    }(),\n        f = function (o) {\n      function i(e, n) {\n        var r,\n            c = o.call(this) || this;\n        return c._id = null, c._lastServerId = null, c._destroyed = !1, c._disconnected = !1, c._open = !1, c._connections = new Map(), c._lostMessages = new Map(), e && e.constructor == Object ? n = e : e && (r = e.toString()), n = t({\n          debug: 0,\n          host: s.util.CLOUD_HOST,\n          port: s.util.CLOUD_PORT,\n          path: \"/\",\n          key: i.DEFAULT_KEY,\n          token: s.util.randomToken(),\n          config: s.util.defaultConfig\n        }, n), c._options = n, \"/\" === c._options.host && (c._options.host = window.location.hostname), c._options.path && (\"/\" !== c._options.path[0] && (c._options.path = \"/\" + c._options.path), \"/\" !== c._options.path[c._options.path.length - 1] && (c._options.path += \"/\")), void 0 === c._options.secure && c._options.host !== s.util.CLOUD_HOST ? c._options.secure = s.util.isSecure() : c._options.host == s.util.CLOUD_HOST && (c._options.secure = !0), c._options.logFunction && a.default.setLogFunction(c._options.logFunction), a.default.logLevel = c._options.debug || 0, c._api = new p.API(n), c._socket = c._createServerConnection(), s.util.supports.audioVideo || s.util.supports.data ? r && !s.util.validateId(r) ? (c._delayedAbort(u.PeerErrorType.InvalidID, 'ID \"' + r + '\" is invalid'), c) : (r ? c._initialize(r) : c._api.retrieveId().then(function (e) {\n          return c._initialize(e);\n        }).catch(function (e) {\n          return c._abort(u.PeerErrorType.ServerError, e);\n        }), c) : (c._delayedAbort(u.PeerErrorType.BrowserIncompatible, \"The current browser does not support WebRTC\"), c);\n      }\n\n      return e(i, o), Object.defineProperty(i.prototype, \"id\", {\n        get: function get() {\n          return this._id;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"options\", {\n        get: function get() {\n          return this._options;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"open\", {\n        get: function get() {\n          return this._open;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"socket\", {\n        get: function get() {\n          return this._socket;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"connections\", {\n        get: function get() {\n          var e,\n              t,\n              o = Object.create(null);\n\n          try {\n            for (var i = n(this._connections), s = i.next(); !s.done; s = i.next()) {\n              var a = r(s.value, 2),\n                  c = a[0],\n                  l = a[1];\n              o[c] = l;\n            }\n          } catch (d) {\n            e = {\n              error: d\n            };\n          } finally {\n            try {\n              s && !s.done && (t = i.return) && t.call(i);\n            } finally {\n              if (e) throw e.error;\n            }\n          }\n\n          return o;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"destroyed\", {\n        get: function get() {\n          return this._destroyed;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), Object.defineProperty(i.prototype, \"disconnected\", {\n        get: function get() {\n          return this._disconnected;\n        },\n        enumerable: !0,\n        configurable: !0\n      }), i.prototype._createServerConnection = function () {\n        var e = this,\n            t = new c.Socket(this._options.secure, this._options.host, this._options.port, this._options.path, this._options.key, this._options.pingInterval);\n        return t.on(u.SocketEventType.Message, function (t) {\n          e._handleMessage(t);\n        }), t.on(u.SocketEventType.Error, function (t) {\n          e._abort(u.PeerErrorType.SocketError, t);\n        }), t.on(u.SocketEventType.Disconnected, function () {\n          e.disconnected || (e.emitError(u.PeerErrorType.Network, \"Lost connection to server.\"), e.disconnect());\n        }), t.on(u.SocketEventType.Close, function () {\n          e.disconnected || e._abort(u.PeerErrorType.SocketClosed, \"Underlying socket is already closed.\");\n        }), t;\n      }, i.prototype._initialize = function (e) {\n        this._id = e, this.socket.start(e, this._options.token);\n      }, i.prototype._handleMessage = function (e) {\n        var t,\n            r,\n            o = e.type,\n            i = e.payload,\n            s = e.src;\n\n        switch (o) {\n          case u.ServerMessageType.Open:\n            this._lastServerId = this.id, this._open = !0, this.emit(u.PeerEventType.Open, this.id);\n            break;\n\n          case u.ServerMessageType.Error:\n            this._abort(u.PeerErrorType.ServerError, i.msg);\n\n            break;\n\n          case u.ServerMessageType.IdTaken:\n            this._abort(u.PeerErrorType.UnavailableID, 'ID \"' + this.id + '\" is taken');\n\n            break;\n\n          case u.ServerMessageType.InvalidKey:\n            this._abort(u.PeerErrorType.InvalidKey, 'API KEY \"' + this._options.key + '\" is invalid');\n\n            break;\n\n          case u.ServerMessageType.Leave:\n            a.default.log(\"Received leave message from \" + s), this._cleanupPeer(s), this._connections.delete(s);\n            break;\n\n          case u.ServerMessageType.Expire:\n            this.emitError(u.PeerErrorType.PeerUnavailable, \"Could not connect to peer \" + s);\n            break;\n\n          case u.ServerMessageType.Offer:\n            var c = i.connectionId;\n            if ((_ = this.getConnection(s, c)) && (_.close(), a.default.warn(\"Offer received for existing Connection ID:\" + c)), i.type === u.ConnectionType.Media) _ = new l.MediaConnection(s, this, {\n              connectionId: c,\n              _payload: i,\n              metadata: i.metadata\n            }), this._addConnection(s, _), this.emit(u.PeerEventType.Call, _);else {\n              if (i.type !== u.ConnectionType.Data) return void a.default.warn(\"Received malformed connection type:\" + i.type);\n              _ = new d.DataConnection(s, this, {\n                connectionId: c,\n                _payload: i,\n                metadata: i.metadata,\n                label: i.label,\n                serialization: i.serialization,\n                reliable: i.reliable\n              }), this._addConnection(s, _), this.emit(u.PeerEventType.Connection, _);\n            }\n\n            var p = this._getMessages(c);\n\n            try {\n              for (var h = n(p), f = h.next(); !f.done; f = h.next()) {\n                var y = f.value;\n\n                _.handleMessage(y);\n              }\n            } catch (v) {\n              t = {\n                error: v\n              };\n            } finally {\n              try {\n                f && !f.done && (r = h.return) && r.call(h);\n              } finally {\n                if (t) throw t.error;\n              }\n            }\n\n            break;\n\n          default:\n            if (!i) return void a.default.warn(\"You received a malformed message from \" + s + \" of type \" + o);\n\n            var _;\n\n            c = i.connectionId;\n            (_ = this.getConnection(s, c)) && _.peerConnection ? _.handleMessage(e) : c ? this._storeMessage(c, e) : a.default.warn(\"You received an unrecognized message:\", e);\n        }\n      }, i.prototype._storeMessage = function (e, t) {\n        this._lostMessages.has(e) || this._lostMessages.set(e, []), this._lostMessages.get(e).push(t);\n      }, i.prototype._getMessages = function (e) {\n        var t = this._lostMessages.get(e);\n\n        return t ? (this._lostMessages.delete(e), t) : [];\n      }, i.prototype.connect = function (e, t) {\n        if (void 0 === t && (t = {}), this.disconnected) return a.default.warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect, or call reconnect on this peer if you believe its ID to still be available.\"), void this.emitError(u.PeerErrorType.Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n        var n = new d.DataConnection(e, this, t);\n        return this._addConnection(e, n), n;\n      }, i.prototype.call = function (e, t, n) {\n        if (void 0 === n && (n = {}), this.disconnected) return a.default.warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect.\"), void this.emitError(u.PeerErrorType.Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n\n        if (t) {\n          n._stream = t;\n          var r = new l.MediaConnection(e, this, n);\n          return this._addConnection(e, r), r;\n        }\n\n        a.default.error(\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\");\n      }, i.prototype._addConnection = function (e, t) {\n        a.default.log(\"add connection \" + t.type + \":\" + t.connectionId + \" to peerId:\" + e), this._connections.has(e) || this._connections.set(e, []), this._connections.get(e).push(t);\n      }, i.prototype._removeConnection = function (e) {\n        var t = this._connections.get(e.peer);\n\n        if (t) {\n          var n = t.indexOf(e);\n          -1 !== n && t.splice(n, 1);\n        }\n\n        this._lostMessages.delete(e.connectionId);\n      }, i.prototype.getConnection = function (e, t) {\n        var r,\n            o,\n            i = this._connections.get(e);\n\n        if (!i) return null;\n\n        try {\n          for (var s = n(i), a = s.next(); !a.done; a = s.next()) {\n            var c = a.value;\n            if (c.connectionId === t) return c;\n          }\n        } catch (l) {\n          r = {\n            error: l\n          };\n        } finally {\n          try {\n            a && !a.done && (o = s.return) && o.call(s);\n          } finally {\n            if (r) throw r.error;\n          }\n        }\n\n        return null;\n      }, i.prototype._delayedAbort = function (e, t) {\n        var n = this;\n        setTimeout(function () {\n          n._abort(e, t);\n        }, 0);\n      }, i.prototype._abort = function (e, t) {\n        a.default.error(\"Aborting!\"), this.emitError(e, t), this._lastServerId ? this.disconnect() : this.destroy();\n      }, i.prototype.emitError = function (e, t) {\n        var n;\n        a.default.error(\"Error:\", t), (n = \"string\" == typeof t ? new Error(t) : t).type = e, this.emit(u.PeerEventType.Error, n);\n      }, i.prototype.destroy = function () {\n        this.destroyed || (a.default.log(\"Destroy peer with ID:\" + this.id), this.disconnect(), this._cleanup(), this._destroyed = !0, this.emit(u.PeerEventType.Close));\n      }, i.prototype._cleanup = function () {\n        var e, t;\n\n        try {\n          for (var r = n(this._connections.keys()), o = r.next(); !o.done; o = r.next()) {\n            var i = o.value;\n            this._cleanupPeer(i), this._connections.delete(i);\n          }\n        } catch (s) {\n          e = {\n            error: s\n          };\n        } finally {\n          try {\n            o && !o.done && (t = r.return) && t.call(r);\n          } finally {\n            if (e) throw e.error;\n          }\n        }\n\n        this.socket.removeAllListeners();\n      }, i.prototype._cleanupPeer = function (e) {\n        var t,\n            r,\n            o = this._connections.get(e);\n\n        if (o) try {\n          for (var i = n(o), s = i.next(); !s.done; s = i.next()) {\n            s.value.close();\n          }\n        } catch (a) {\n          t = {\n            error: a\n          };\n        } finally {\n          try {\n            s && !s.done && (r = i.return) && r.call(i);\n          } finally {\n            if (t) throw t.error;\n          }\n        }\n      }, i.prototype.disconnect = function () {\n        if (!this.disconnected) {\n          var e = this.id;\n          a.default.log(\"Disconnect peer with ID:\" + e), this._disconnected = !0, this._open = !1, this.socket.close(), this._lastServerId = e, this._id = null, this.emit(u.PeerEventType.Disconnected, e);\n        }\n      }, i.prototype.reconnect = function () {\n        if (this.disconnected && !this.destroyed) a.default.log(\"Attempting reconnection to server with ID \" + this._lastServerId), this._disconnected = !1, this._initialize(this._lastServerId);else {\n          if (this.destroyed) throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n          if (this.disconnected || this.open) throw new Error(\"Peer \" + this.id + \" cannot reconnect because it is not disconnected from the server!\");\n          a.default.error(\"In a hurry? We're still trying to make the initial connection!\");\n        }\n      }, i.prototype.listAllPeers = function (e) {\n        var t = this;\n        void 0 === e && (e = function e(_e6) {}), this._api.listAllPeers().then(function (t) {\n          return e(t);\n        }).catch(function (e) {\n          return t._abort(u.PeerErrorType.ServerError, e);\n        });\n      }, i.DEFAULT_KEY = \"peerjs\", i;\n    }(i.EventEmitter);\n\n    exports.Peer = f;\n  }, {\n    \"eventemitter3\": \"JJlS\",\n    \"./util\": \"BHXf\",\n    \"./logger\": \"WOs9\",\n    \"./socket\": \"wJlv\",\n    \"./mediaconnection\": \"dbHP\",\n    \"./dataconnection\": \"GBTQ\",\n    \"./enums\": \"ZRYf\",\n    \"./api\": \"in7L\"\n  }],\n  \"iTK6\": [function (require, module, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var e = require(\"./util\"),\n        r = require(\"./peer\");\n\n    exports.peerjs = {\n      Peer: r.Peer,\n      util: e.util\n    }, exports.default = r.Peer, window.peerjs = exports.peerjs, window.Peer = r.Peer;\n  }, {\n    \"./util\": \"BHXf\",\n    \"./peer\": \"Hxpd\"\n  }]\n}, {}, [\"iTK6\"], null);","/*!\n * Paper.js v0.12.4 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2019, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & https://puckey.studio/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Sun Dec 15 21:25:00 2019 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2019 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * https://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\nvar paper = function (self, undefined) {\n  self = self || require('./node/self.js');\n  var window = self.window,\n      document = self.document;\n  var Base = new function () {\n    var hidden = /^(statics|enumerable|beans|preserve)$/,\n        array = [],\n        _slice = array.slice,\n        create = Object.create,\n        describe = Object.getOwnPropertyDescriptor,\n        define = Object.defineProperty,\n        forEach = array.forEach || function (iter, bind) {\n      for (var i = 0, l = this.length; i < l; i++) {\n        iter.call(bind, this[i], i, this);\n      }\n    },\n        forIn = function forIn(iter, bind) {\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) iter.call(bind, this[i], i, this);\n      }\n    },\n        set = Object.assign || function (dst) {\n      for (var i = 1, l = arguments.length; i < l; i++) {\n        var src = arguments[i];\n\n        for (var key in src) {\n          if (src.hasOwnProperty(key)) dst[key] = src[key];\n        }\n      }\n\n      return dst;\n    },\n        _each = function each(obj, iter, bind) {\n      if (obj) {\n        var desc = describe(obj, 'length');\n        (desc && typeof desc.value === 'number' ? forEach : forIn).call(obj, iter, bind = bind || obj);\n      }\n\n      return bind;\n    };\n\n    function _inject(dest, src, enumerable, beans, preserve) {\n      var beansNames = {};\n\n      function field(name, val) {\n        val = val || (val = describe(src, name)) && (val.get ? val : val.value);\n        if (typeof val === 'string' && val[0] === '#') val = dest[val.substring(1)] || val;\n        var isFunc = typeof val === 'function',\n            res = val,\n            prev = preserve || isFunc && !val.base ? val && val.get ? name in dest : dest[name] : null,\n            bean;\n\n        if (!preserve || !prev) {\n          if (isFunc && prev) val.base = prev;\n          if (isFunc && beans !== false && (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/))) beansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\n          if (!res || isFunc || !res.get || typeof res.get !== 'function' || !Base.isPlainObject(res)) {\n            res = {\n              value: res,\n              writable: true\n            };\n          }\n\n          if ((describe(dest, name) || {\n            configurable: true\n          }).configurable) {\n            res.configurable = true;\n            res.enumerable = enumerable != null ? enumerable : !bean;\n          }\n\n          define(dest, name, res);\n        }\n      }\n\n      if (src) {\n        for (var name in src) {\n          if (src.hasOwnProperty(name) && !hidden.test(name)) field(name);\n        }\n\n        for (var name in beansNames) {\n          var part = beansNames[name],\n              set = dest['set' + part],\n              get = dest['get' + part] || set && dest['is' + part];\n          if (get && (beans === true || get.length === 0)) field(name, {\n            get: get,\n            set: set\n          });\n        }\n      }\n\n      return dest;\n    }\n\n    function Base() {\n      for (var i = 0, l = arguments.length; i < l; i++) {\n        var src = arguments[i];\n        if (src) set(this, src);\n      }\n\n      return this;\n    }\n\n    return _inject(Base, {\n      inject: function inject(src) {\n        if (src) {\n          var statics = src.statics === true ? src : src.statics,\n              beans = src.beans,\n              preserve = src.preserve;\n          if (statics !== src) _inject(this.prototype, src, src.enumerable, beans, preserve);\n\n          _inject(this, statics, null, beans, preserve);\n        }\n\n        for (var i = 1, l = arguments.length; i < l; i++) {\n          this.inject(arguments[i]);\n        }\n\n        return this;\n      },\n      extend: function extend() {\n        var base = this,\n            ctor,\n            proto;\n\n        for (var i = 0, obj, l = arguments.length; i < l && !(ctor && proto); i++) {\n          obj = arguments[i];\n          ctor = ctor || obj.initialize;\n          proto = proto || obj.prototype;\n        }\n\n        ctor = ctor || function () {\n          base.apply(this, arguments);\n        };\n\n        proto = ctor.prototype = proto || create(this.prototype);\n        define(proto, 'constructor', {\n          value: ctor,\n          writable: true,\n          configurable: true\n        });\n\n        _inject(ctor, this);\n\n        if (arguments.length) this.inject.apply(ctor, arguments);\n        ctor.base = base;\n        return ctor;\n      }\n    }).inject({\n      enumerable: false,\n      initialize: Base,\n      set: Base,\n      inject: function inject() {\n        for (var i = 0, l = arguments.length; i < l; i++) {\n          var src = arguments[i];\n\n          if (src) {\n            _inject(this, src, src.enumerable, src.beans, src.preserve);\n          }\n        }\n\n        return this;\n      },\n      extend: function extend() {\n        var res = create(this);\n        return res.inject.apply(res, arguments);\n      },\n      each: function each(iter, bind) {\n        return _each(this, iter, bind);\n      },\n      clone: function clone() {\n        return new this.constructor(this);\n      },\n      statics: {\n        set: set,\n        each: _each,\n        create: create,\n        define: define,\n        describe: describe,\n        clone: function clone(obj) {\n          return set(new obj.constructor(), obj);\n        },\n        isPlainObject: function isPlainObject(obj) {\n          var ctor = obj != null && obj.constructor;\n          return ctor && (ctor === Object || ctor === Base || ctor.name === 'Object');\n        },\n        pick: function pick(a, b) {\n          return a !== undefined ? a : b;\n        },\n        slice: function slice(list, begin, end) {\n          return _slice.call(list, begin, end);\n        }\n      }\n    });\n  }();\n  if (typeof module !== 'undefined') module.exports = Base;\n  Base.inject({\n    enumerable: false,\n    toString: function toString() {\n      return this._id != null ? (this._class || 'Object') + (this._name ? \" '\" + this._name + \"'\" : ' @' + this._id) : '{ ' + Base.each(this, function (value, key) {\n        if (!/^_/.test(key)) {\n          var type = typeof value;\n          this.push(key + ': ' + (type === 'number' ? Formatter.instance.number(value) : type === 'string' ? \"'\" + value + \"'\" : value));\n        }\n      }, []).join(', ') + ' }';\n    },\n    getClassName: function getClassName() {\n      return this._class || '';\n    },\n    importJSON: function importJSON(json) {\n      return Base.importJSON(json, this);\n    },\n    exportJSON: function exportJSON(options) {\n      return Base.exportJSON(this, options);\n    },\n    toJSON: function toJSON() {\n      return Base.serialize(this);\n    },\n    set: function set(props, exclude) {\n      if (props) Base.filter(this, props, exclude, this._prioritize);\n      return this;\n    }\n  }, {\n    beans: false,\n    statics: {\n      exports: {},\n      extend: function extend() {\n        var res = extend.base.apply(this, arguments),\n            name = res.prototype._class;\n        if (name && !Base.exports[name]) Base.exports[name] = res;\n        return res;\n      },\n      equals: function equals(obj1, obj2) {\n        if (obj1 === obj2) return true;\n        if (obj1 && obj1.equals) return obj1.equals(obj2);\n        if (obj2 && obj2.equals) return obj2.equals(obj1);\n\n        if (obj1 && obj2 && typeof obj1 === 'object' && typeof obj2 === 'object') {\n          if (Array.isArray(obj1) && Array.isArray(obj2)) {\n            var length = obj1.length;\n            if (length !== obj2.length) return false;\n\n            while (length--) {\n              if (!Base.equals(obj1[length], obj2[length])) return false;\n            }\n          } else {\n            var keys = Object.keys(obj1),\n                length = keys.length;\n            if (length !== Object.keys(obj2).length) return false;\n\n            while (length--) {\n              var key = keys[length];\n              if (!(obj2.hasOwnProperty(key) && Base.equals(obj1[key], obj2[key]))) return false;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      },\n      read: function read(list, start, options, amount) {\n        if (this === Base) {\n          var value = this.peek(list, start);\n          list.__index++;\n          return value;\n        }\n\n        var proto = this.prototype,\n            readIndex = proto._readIndex,\n            begin = start || readIndex && list.__index || 0,\n            length = list.length,\n            obj = list[begin];\n        amount = amount || length - begin;\n\n        if (obj instanceof this || options && options.readNull && obj == null && amount <= 1) {\n          if (readIndex) list.__index = begin + 1;\n          return obj && options && options.clone ? obj.clone() : obj;\n        }\n\n        obj = Base.create(proto);\n        if (readIndex) obj.__read = true;\n        obj = obj.initialize.apply(obj, begin > 0 || begin + amount < length ? Base.slice(list, begin, begin + amount) : list) || obj;\n\n        if (readIndex) {\n          list.__index = begin + obj.__read;\n          var filtered = obj.__filtered;\n\n          if (filtered) {\n            list.__filtered = filtered;\n            obj.__filtered = undefined;\n          }\n\n          obj.__read = undefined;\n        }\n\n        return obj;\n      },\n      peek: function peek(list, start) {\n        return list[list.__index = start || list.__index || 0];\n      },\n      remain: function remain(list) {\n        return list.length - (list.__index || 0);\n      },\n      readList: function readList(list, start, options, amount) {\n        var res = [],\n            entry,\n            begin = start || 0,\n            end = amount ? begin + amount : list.length;\n\n        for (var i = begin; i < end; i++) {\n          res.push(Array.isArray(entry = list[i]) ? this.read(entry, 0, options) : this.read(list, i, options, 1));\n        }\n\n        return res;\n      },\n      readNamed: function readNamed(list, name, start, options, amount) {\n        var value = this.getNamed(list, name),\n            hasValue = value !== undefined;\n\n        if (hasValue) {\n          var filtered = list.__filtered;\n\n          if (!filtered) {\n            var source = this.getSource(list);\n            filtered = list.__filtered = Base.create(source);\n            filtered.__unfiltered = source;\n          }\n\n          filtered[name] = undefined;\n        }\n\n        return this.read(hasValue ? [value] : list, start, options, amount);\n      },\n      readSupported: function readSupported(list, dest) {\n        var source = this.getSource(list),\n            that = this,\n            read = false;\n\n        if (source) {\n          Object.keys(source).forEach(function (key) {\n            if (key in dest) {\n              var value = that.readNamed(list, key);\n\n              if (value !== undefined) {\n                dest[key] = value;\n              }\n\n              read = true;\n            }\n          });\n        }\n\n        return read;\n      },\n      getSource: function getSource(list) {\n        var source = list.__source;\n\n        if (source === undefined) {\n          var arg = list.length === 1 && list[0];\n          source = list.__source = arg && Base.isPlainObject(arg) ? arg : null;\n        }\n\n        return source;\n      },\n      getNamed: function getNamed(list, name) {\n        var source = this.getSource(list);\n\n        if (source) {\n          return name ? source[name] : list.__filtered || source;\n        }\n      },\n      hasNamed: function hasNamed(list, name) {\n        return !!this.getNamed(list, name);\n      },\n      filter: function filter(dest, source, exclude, prioritize) {\n        var processed;\n\n        function handleKey(key) {\n          if (!(exclude && key in exclude) && !(processed && key in processed)) {\n            var value = source[key];\n            if (value !== undefined) dest[key] = value;\n          }\n        }\n\n        if (prioritize) {\n          var keys = {};\n\n          for (var i = 0, key, l = prioritize.length; i < l; i++) {\n            if ((key = prioritize[i]) in source) {\n              handleKey(key);\n              keys[key] = true;\n            }\n          }\n\n          processed = keys;\n        }\n\n        Object.keys(source.__unfiltered || source).forEach(handleKey);\n        return dest;\n      },\n      isPlainValue: function isPlainValue(obj, asString) {\n        return Base.isPlainObject(obj) || Array.isArray(obj) || asString && typeof obj === 'string';\n      },\n      serialize: function serialize(obj, options, compact, dictionary) {\n        options = options || {};\n        var isRoot = !dictionary,\n            res;\n\n        if (isRoot) {\n          options.formatter = new Formatter(options.precision);\n          dictionary = {\n            length: 0,\n            definitions: {},\n            references: {},\n            add: function add(item, create) {\n              var id = '#' + item._id,\n                  ref = this.references[id];\n\n              if (!ref) {\n                this.length++;\n                var res = create.call(item),\n                    name = item._class;\n                if (name && res[0] !== name) res.unshift(name);\n                this.definitions[id] = res;\n                ref = this.references[id] = [id];\n              }\n\n              return ref;\n            }\n          };\n        }\n\n        if (obj && obj._serialize) {\n          res = obj._serialize(options, dictionary);\n          var name = obj._class;\n\n          if (name && !obj._compactSerialize && (isRoot || !compact) && res[0] !== name) {\n            res.unshift(name);\n          }\n        } else if (Array.isArray(obj)) {\n          res = [];\n\n          for (var i = 0, l = obj.length; i < l; i++) {\n            res[i] = Base.serialize(obj[i], options, compact, dictionary);\n          }\n        } else if (Base.isPlainObject(obj)) {\n          res = {};\n          var keys = Object.keys(obj);\n\n          for (var i = 0, l = keys.length; i < l; i++) {\n            var key = keys[i];\n            res[key] = Base.serialize(obj[key], options, compact, dictionary);\n          }\n        } else if (typeof obj === 'number') {\n          res = options.formatter.number(obj, options.precision);\n        } else {\n          res = obj;\n        }\n\n        return isRoot && dictionary.length > 0 ? [['dictionary', dictionary.definitions], res] : res;\n      },\n      deserialize: function deserialize(json, create, _data, _setDictionary, _isRoot) {\n        var res = json,\n            isFirst = !_data,\n            hasDictionary = isFirst && json && json.length && json[0][0] === 'dictionary';\n        _data = _data || {};\n\n        if (Array.isArray(json)) {\n          var type = json[0],\n              isDictionary = type === 'dictionary';\n\n          if (json.length == 1 && /^#/.test(type)) {\n            return _data.dictionary[type];\n          }\n\n          type = Base.exports[type];\n          res = [];\n\n          for (var i = type ? 1 : 0, l = json.length; i < l; i++) {\n            res.push(Base.deserialize(json[i], create, _data, isDictionary, hasDictionary));\n          }\n\n          if (type) {\n            var args = res;\n\n            if (create) {\n              res = create(type, args, isFirst || _isRoot);\n            } else {\n              res = new type(args);\n            }\n          }\n        } else if (Base.isPlainObject(json)) {\n          res = {};\n          if (_setDictionary) _data.dictionary = res;\n\n          for (var key in json) {\n            res[key] = Base.deserialize(json[key], create, _data);\n          }\n        }\n\n        return hasDictionary ? res[1] : res;\n      },\n      exportJSON: function exportJSON(obj, options) {\n        var json = Base.serialize(obj, options);\n        return options && options.asString == false ? json : JSON.stringify(json);\n      },\n      importJSON: function importJSON(json, target) {\n        return Base.deserialize(typeof json === 'string' ? JSON.parse(json) : json, function (ctor, args, isRoot) {\n          var useTarget = isRoot && target && target.constructor === ctor,\n              obj = useTarget ? target : Base.create(ctor.prototype);\n\n          if (args.length === 1 && obj instanceof Item && (useTarget || !(obj instanceof Layer))) {\n            var arg = args[0];\n\n            if (Base.isPlainObject(arg)) {\n              arg.insert = false;\n\n              if (useTarget) {\n                args = args.concat([{\n                  insert: true\n                }]);\n              }\n            }\n          }\n\n          (useTarget ? obj.set : ctor).apply(obj, args);\n          if (useTarget) target = null;\n          return obj;\n        });\n      },\n      push: function push(list, items) {\n        var itemsLength = items.length;\n\n        if (itemsLength < 4096) {\n          list.push.apply(list, items);\n        } else {\n          var startLength = list.length;\n          list.length += itemsLength;\n\n          for (var i = 0; i < itemsLength; i++) {\n            list[startLength + i] = items[i];\n          }\n        }\n\n        return list;\n      },\n      splice: function splice(list, items, index, remove) {\n        var amount = items && items.length,\n            append = index === undefined;\n        index = append ? list.length : index;\n        if (index > list.length) index = list.length;\n\n        for (var i = 0; i < amount; i++) {\n          items[i]._index = index + i;\n        }\n\n        if (append) {\n          Base.push(list, items);\n          return [];\n        } else {\n          var args = [index, remove];\n          if (items) Base.push(args, items);\n          var removed = list.splice.apply(list, args);\n\n          for (var i = 0, l = removed.length; i < l; i++) {\n            removed[i]._index = undefined;\n          }\n\n          for (var i = index + amount, l = list.length; i < l; i++) {\n            list[i]._index = i;\n          }\n\n          return removed;\n        }\n      },\n      capitalize: function capitalize(str) {\n        return str.replace(/\\b[a-z]/g, function (match) {\n          return match.toUpperCase();\n        });\n      },\n      camelize: function camelize(str) {\n        return str.replace(/-(.)/g, function (match, chr) {\n          return chr.toUpperCase();\n        });\n      },\n      hyphenate: function hyphenate(str) {\n        return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n      }\n    }\n  });\n  var Emitter = {\n    on: function on(type, func) {\n      if (typeof type !== 'string') {\n        Base.each(type, function (value, key) {\n          this.on(key, value);\n        }, this);\n      } else {\n        var types = this._eventTypes,\n            entry = types && types[type],\n            handlers = this._callbacks = this._callbacks || {};\n        handlers = handlers[type] = handlers[type] || [];\n\n        if (handlers.indexOf(func) === -1) {\n          handlers.push(func);\n          if (entry && entry.install && handlers.length === 1) entry.install.call(this, type);\n        }\n      }\n\n      return this;\n    },\n    off: function off(type, func) {\n      if (typeof type !== 'string') {\n        Base.each(type, function (value, key) {\n          this.off(key, value);\n        }, this);\n        return;\n      }\n\n      var types = this._eventTypes,\n          entry = types && types[type],\n          handlers = this._callbacks && this._callbacks[type],\n          index;\n\n      if (handlers) {\n        if (!func || (index = handlers.indexOf(func)) !== -1 && handlers.length === 1) {\n          if (entry && entry.uninstall) entry.uninstall.call(this, type);\n          delete this._callbacks[type];\n        } else if (index !== -1) {\n          handlers.splice(index, 1);\n        }\n      }\n\n      return this;\n    },\n    once: function once(type, func) {\n      return this.on(type, function handler() {\n        func.apply(this, arguments);\n        this.off(type, handler);\n      });\n    },\n    emit: function emit(type, event) {\n      var handlers = this._callbacks && this._callbacks[type];\n      if (!handlers) return false;\n      var args = Base.slice(arguments, 1),\n          setTarget = event && event.target && !event.currentTarget;\n      handlers = handlers.slice();\n      if (setTarget) event.currentTarget = this;\n\n      for (var i = 0, l = handlers.length; i < l; i++) {\n        if (handlers[i].apply(this, args) == false) {\n          if (event && event.stop) event.stop();\n          break;\n        }\n      }\n\n      if (setTarget) delete event.currentTarget;\n      return true;\n    },\n    responds: function responds(type) {\n      return !!(this._callbacks && this._callbacks[type]);\n    },\n    attach: '#on',\n    detach: '#off',\n    fire: '#emit',\n    _installEvents: function _installEvents(install) {\n      var types = this._eventTypes,\n          handlers = this._callbacks,\n          key = install ? 'install' : 'uninstall';\n\n      if (types) {\n        for (var type in handlers) {\n          if (handlers[type].length > 0) {\n            var entry = types[type],\n                func = entry && entry[key];\n            if (func) func.call(this, type);\n          }\n        }\n      }\n    },\n    statics: {\n      inject: function inject(src) {\n        var events = src._events;\n\n        if (events) {\n          var types = {};\n          Base.each(events, function (entry, key) {\n            var isString = typeof entry === 'string',\n                name = isString ? entry : key,\n                part = Base.capitalize(name),\n                type = name.substring(2).toLowerCase();\n            types[type] = isString ? {} : entry;\n            name = '_' + name;\n\n            src['get' + part] = function () {\n              return this[name];\n            };\n\n            src['set' + part] = function (func) {\n              var prev = this[name];\n              if (prev) this.off(type, prev);\n              if (func) this.on(type, func);\n              this[name] = func;\n            };\n          });\n          src._eventTypes = types;\n        }\n\n        return inject.base.apply(this, arguments);\n      }\n    }\n  };\n  var PaperScope = Base.extend({\n    _class: 'PaperScope',\n    initialize: function PaperScope() {\n      paper = this;\n      this.settings = new Base({\n        applyMatrix: true,\n        insertItems: true,\n        handleSize: 4,\n        hitTolerance: 0\n      });\n      this.project = null;\n      this.projects = [];\n      this.tools = [];\n      this._id = PaperScope._id++;\n      PaperScope._scopes[this._id] = this;\n      var proto = PaperScope.prototype;\n\n      if (!this.support) {\n        var ctx = CanvasProvider.getContext(1, 1) || {};\n        proto.support = {\n          nativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n          nativeBlendModes: BlendMode.nativeModes\n        };\n        CanvasProvider.release(ctx);\n      }\n\n      if (!this.agent) {\n        var user = self.navigator.userAgent.toLowerCase(),\n            os = (/(darwin|win|mac|linux|freebsd|sunos)/.exec(user) || [])[0],\n            platform = os === 'darwin' ? 'mac' : os,\n            agent = proto.agent = proto.browser = {\n          platform: platform\n        };\n        if (platform) agent[platform] = true;\n        user.replace(/(opera|chrome|safari|webkit|firefox|msie|trident|atom|node|jsdom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:v?([.\\d]+))?/g, function (match, n, v1, v2, rv) {\n          if (!agent.chrome) {\n            var v = n === 'opera' ? v2 : /^(node|trident)$/.test(n) ? rv : v1;\n            agent.version = v;\n            agent.versionNumber = parseFloat(v);\n            n = {\n              trident: 'msie',\n              jsdom: 'node'\n            }[n] || n;\n            agent.name = n;\n            agent[n] = true;\n          }\n        });\n        if (agent.chrome) delete agent.webkit;\n        if (agent.atom) delete agent.chrome;\n      }\n    },\n    version: \"0.12.4\",\n    getView: function getView() {\n      var project = this.project;\n      return project && project._view;\n    },\n    getPaper: function getPaper() {\n      return this;\n    },\n    execute: function execute(code, options) {},\n    install: function install(scope) {\n      var that = this;\n      Base.each(['project', 'view', 'tool'], function (key) {\n        Base.define(scope, key, {\n          configurable: true,\n          get: function get() {\n            return that[key];\n          }\n        });\n      });\n\n      for (var key in this) {\n        if (!/^_/.test(key) && this[key]) scope[key] = this[key];\n      }\n    },\n    setup: function setup(element) {\n      paper = this;\n      this.project = new Project(element);\n      return this;\n    },\n    createCanvas: function createCanvas(width, height) {\n      return CanvasProvider.getCanvas(width, height);\n    },\n    activate: function activate() {\n      paper = this;\n    },\n    clear: function clear() {\n      var projects = this.projects,\n          tools = this.tools;\n\n      for (var i = projects.length - 1; i >= 0; i--) {\n        projects[i].remove();\n      }\n\n      for (var i = tools.length - 1; i >= 0; i--) {\n        tools[i].remove();\n      }\n    },\n    remove: function remove() {\n      this.clear();\n      delete PaperScope._scopes[this._id];\n    },\n    statics: new function () {\n      function handleAttribute(name) {\n        name += 'Attribute';\n        return function (el, attr) {\n          return el[name](attr) || el[name]('data-paper-' + attr);\n        };\n      }\n\n      return {\n        _scopes: {},\n        _id: 0,\n        get: function get(id) {\n          return this._scopes[id] || null;\n        },\n        getAttribute: handleAttribute('get'),\n        hasAttribute: handleAttribute('has')\n      };\n    }()\n  });\n  var PaperScopeItem = Base.extend(Emitter, {\n    initialize: function initialize(activate) {\n      this._scope = paper;\n      this._index = this._scope[this._list].push(this) - 1;\n      if (activate || !this._scope[this._reference]) this.activate();\n    },\n    activate: function activate() {\n      if (!this._scope) return false;\n      var prev = this._scope[this._reference];\n      if (prev && prev !== this) prev.emit('deactivate');\n      this._scope[this._reference] = this;\n      this.emit('activate', prev);\n      return true;\n    },\n    isActive: function isActive() {\n      return this._scope[this._reference] === this;\n    },\n    remove: function remove() {\n      if (this._index == null) return false;\n      Base.splice(this._scope[this._list], null, this._index, 1);\n      if (this._scope[this._reference] == this) this._scope[this._reference] = null;\n      this._scope = null;\n      return true;\n    },\n    getView: function getView() {\n      return this._scope.getView();\n    }\n  });\n  var CollisionDetection = {\n    findItemBoundsCollisions: function findItemBoundsCollisions(items1, items2, tolerance) {\n      function getBounds(items) {\n        var bounds = new Array(items.length);\n\n        for (var i = 0; i < items.length; i++) {\n          var rect = items[i].getBounds();\n          bounds[i] = [rect.left, rect.top, rect.right, rect.bottom];\n        }\n\n        return bounds;\n      }\n\n      var bounds1 = getBounds(items1),\n          bounds2 = !items2 || items2 === items1 ? bounds1 : getBounds(items2);\n      return this.findBoundsCollisions(bounds1, bounds2, tolerance || 0);\n    },\n    findCurveBoundsCollisions: function findCurveBoundsCollisions(curves1, curves2, tolerance, bothAxis) {\n      function getBounds(curves) {\n        var min = Math.min,\n            max = Math.max,\n            bounds = new Array(curves.length);\n\n        for (var i = 0; i < curves.length; i++) {\n          var v = curves[i];\n          bounds[i] = [min(v[0], v[2], v[4], v[6]), min(v[1], v[3], v[5], v[7]), max(v[0], v[2], v[4], v[6]), max(v[1], v[3], v[5], v[7])];\n        }\n\n        return bounds;\n      }\n\n      var bounds1 = getBounds(curves1),\n          bounds2 = !curves2 || curves2 === curves1 ? bounds1 : getBounds(curves2);\n\n      if (bothAxis) {\n        var hor = this.findBoundsCollisions(bounds1, bounds2, tolerance || 0, false, true),\n            ver = this.findBoundsCollisions(bounds1, bounds2, tolerance || 0, true, true),\n            list = [];\n\n        for (var i = 0, l = hor.length; i < l; i++) {\n          list[i] = {\n            hor: hor[i],\n            ver: ver[i]\n          };\n        }\n\n        return list;\n      }\n\n      return this.findBoundsCollisions(bounds1, bounds2, tolerance || 0);\n    },\n    findBoundsCollisions: function findBoundsCollisions(boundsA, boundsB, tolerance, sweepVertical, onlySweepAxisCollisions) {\n      var self = !boundsB || boundsA === boundsB,\n          allBounds = self ? boundsA : boundsA.concat(boundsB),\n          lengthA = boundsA.length,\n          lengthAll = allBounds.length;\n\n      function binarySearch(indices, coord, value) {\n        var lo = 0,\n            hi = indices.length;\n\n        while (lo < hi) {\n          var mid = hi + lo >>> 1;\n\n          if (allBounds[indices[mid]][coord] < value) {\n            lo = mid + 1;\n          } else {\n            hi = mid;\n          }\n        }\n\n        return lo - 1;\n      }\n\n      var pri0 = sweepVertical ? 1 : 0,\n          pri1 = pri0 + 2,\n          sec0 = sweepVertical ? 0 : 1,\n          sec1 = sec0 + 2;\n      var allIndicesByPri0 = new Array(lengthAll);\n\n      for (var i = 0; i < lengthAll; i++) {\n        allIndicesByPri0[i] = i;\n      }\n\n      allIndicesByPri0.sort(function (i1, i2) {\n        return allBounds[i1][pri0] - allBounds[i2][pri0];\n      });\n      var activeIndicesByPri1 = [],\n          allCollisions = new Array(lengthA);\n\n      for (var i = 0; i < lengthAll; i++) {\n        var curIndex = allIndicesByPri0[i],\n            curBounds = allBounds[curIndex],\n            origIndex = self ? curIndex : curIndex - lengthA,\n            isCurrentA = curIndex < lengthA,\n            isCurrentB = self || !isCurrentA,\n            curCollisions = isCurrentA ? [] : null;\n\n        if (activeIndicesByPri1.length) {\n          var pruneCount = binarySearch(activeIndicesByPri1, pri1, curBounds[pri0] - tolerance) + 1;\n          activeIndicesByPri1.splice(0, pruneCount);\n\n          if (self && onlySweepAxisCollisions) {\n            curCollisions = curCollisions.concat(activeIndicesByPri1);\n\n            for (var j = 0; j < activeIndicesByPri1.length; j++) {\n              var activeIndex = activeIndicesByPri1[j];\n              allCollisions[activeIndex].push(origIndex);\n            }\n          } else {\n            var curSec1 = curBounds[sec1],\n                curSec0 = curBounds[sec0];\n\n            for (var j = 0; j < activeIndicesByPri1.length; j++) {\n              var activeIndex = activeIndicesByPri1[j],\n                  activeBounds = allBounds[activeIndex],\n                  isActiveA = activeIndex < lengthA,\n                  isActiveB = self || activeIndex >= lengthA;\n\n              if (onlySweepAxisCollisions || (isCurrentA && isActiveB || isCurrentB && isActiveA) && curSec1 >= activeBounds[sec0] - tolerance && curSec0 <= activeBounds[sec1] + tolerance) {\n                if (isCurrentA && isActiveB) {\n                  curCollisions.push(self ? activeIndex : activeIndex - lengthA);\n                }\n\n                if (isCurrentB && isActiveA) {\n                  allCollisions[activeIndex].push(origIndex);\n                }\n              }\n            }\n          }\n        }\n\n        if (isCurrentA) {\n          if (boundsA === boundsB) {\n            curCollisions.push(curIndex);\n          }\n\n          allCollisions[curIndex] = curCollisions;\n        }\n\n        if (activeIndicesByPri1.length) {\n          var curPri1 = curBounds[pri1],\n              index = binarySearch(activeIndicesByPri1, pri1, curPri1);\n          activeIndicesByPri1.splice(index + 1, 0, curIndex);\n        } else {\n          activeIndicesByPri1.push(curIndex);\n        }\n      }\n\n      for (var i = 0; i < allCollisions.length; i++) {\n        var collisions = allCollisions[i];\n\n        if (collisions) {\n          collisions.sort(function (i1, i2) {\n            return i1 - i2;\n          });\n        }\n      }\n\n      return allCollisions;\n    }\n  };\n  var Formatter = Base.extend({\n    initialize: function initialize(precision) {\n      this.precision = Base.pick(precision, 5);\n      this.multiplier = Math.pow(10, this.precision);\n    },\n    number: function number(val) {\n      return this.precision < 16 ? Math.round(val * this.multiplier) / this.multiplier : val;\n    },\n    pair: function pair(val1, val2, separator) {\n      return this.number(val1) + (separator || ',') + this.number(val2);\n    },\n    point: function point(val, separator) {\n      return this.number(val.x) + (separator || ',') + this.number(val.y);\n    },\n    size: function size(val, separator) {\n      return this.number(val.width) + (separator || ',') + this.number(val.height);\n    },\n    rectangle: function rectangle(val, separator) {\n      return this.point(val, separator) + (separator || ',') + this.size(val, separator);\n    }\n  });\n  Formatter.instance = new Formatter();\n  var Numerical = new function () {\n    var abscissas = [[0.5773502691896257645091488], [0, 0.7745966692414833770358531], [0.3399810435848562648026658, 0.8611363115940525752239465], [0, 0.5384693101056830910363144, 0.9061798459386639927976269], [0.2386191860831969086305017, 0.6612093864662645136613996, 0.9324695142031520278123016], [0, 0.4058451513773971669066064, 0.7415311855993944398638648, 0.9491079123427585245261897], [0.1834346424956498049394761, 0.5255324099163289858177390, 0.7966664774136267395915539, 0.9602898564975362316835609], [0, 0.3242534234038089290385380, 0.6133714327005903973087020, 0.8360311073266357942994298, 0.9681602395076260898355762], [0.1488743389816312108848260, 0.4333953941292471907992659, 0.6794095682990244062343274, 0.8650633666889845107320967, 0.9739065285171717200779640], [0, 0.2695431559523449723315320, 0.5190961292068118159257257, 0.7301520055740493240934163, 0.8870625997680952990751578, 0.9782286581460569928039380], [0.1252334085114689154724414, 0.3678314989981801937526915, 0.5873179542866174472967024, 0.7699026741943046870368938, 0.9041172563704748566784659, 0.9815606342467192506905491], [0, 0.2304583159551347940655281, 0.4484927510364468528779129, 0.6423493394403402206439846, 0.8015780907333099127942065, 0.9175983992229779652065478, 0.9841830547185881494728294], [0.1080549487073436620662447, 0.3191123689278897604356718, 0.5152486363581540919652907, 0.6872929048116854701480198, 0.8272013150697649931897947, 0.9284348836635735173363911, 0.9862838086968123388415973], [0, 0.2011940939974345223006283, 0.3941513470775633698972074, 0.5709721726085388475372267, 0.7244177313601700474161861, 0.8482065834104272162006483, 0.9372733924007059043077589, 0.9879925180204854284895657], [0.0950125098376374401853193, 0.2816035507792589132304605, 0.4580167776572273863424194, 0.6178762444026437484466718, 0.7554044083550030338951012, 0.8656312023878317438804679, 0.9445750230732325760779884, 0.9894009349916499325961542]];\n    var weights = [[1], [0.8888888888888888888888889, 0.5555555555555555555555556], [0.6521451548625461426269361, 0.3478548451374538573730639], [0.5688888888888888888888889, 0.4786286704993664680412915, 0.2369268850561890875142640], [0.4679139345726910473898703, 0.3607615730481386075698335, 0.1713244923791703450402961], [0.4179591836734693877551020, 0.3818300505051189449503698, 0.2797053914892766679014678, 0.1294849661688696932706114], [0.3626837833783619829651504, 0.3137066458778872873379622, 0.2223810344533744705443560, 0.1012285362903762591525314], [0.3302393550012597631645251, 0.3123470770400028400686304, 0.2606106964029354623187429, 0.1806481606948574040584720, 0.0812743883615744119718922], [0.2955242247147528701738930, 0.2692667193099963550912269, 0.2190863625159820439955349, 0.1494513491505805931457763, 0.0666713443086881375935688], [0.2729250867779006307144835, 0.2628045445102466621806889, 0.2331937645919904799185237, 0.1862902109277342514260976, 0.1255803694649046246346943, 0.0556685671161736664827537], [0.2491470458134027850005624, 0.2334925365383548087608499, 0.2031674267230659217490645, 0.1600783285433462263346525, 0.1069393259953184309602547, 0.0471753363865118271946160], [0.2325515532308739101945895, 0.2262831802628972384120902, 0.2078160475368885023125232, 0.1781459807619457382800467, 0.1388735102197872384636018, 0.0921214998377284479144218, 0.0404840047653158795200216], [0.2152638534631577901958764, 0.2051984637212956039659241, 0.1855383974779378137417166, 0.1572031671581935345696019, 0.1215185706879031846894148, 0.0801580871597602098056333, 0.0351194603317518630318329], [0.2025782419255612728806202, 0.1984314853271115764561183, 0.1861610000155622110268006, 0.1662692058169939335532009, 0.1395706779261543144478048, 0.1071592204671719350118695, 0.0703660474881081247092674, 0.0307532419961172683546284], [0.1894506104550684962853967, 0.1826034150449235888667637, 0.1691565193950025381893121, 0.1495959888165767320815017, 0.1246289712555338720524763, 0.0951585116824927848099251, 0.0622535239386478928628438, 0.0271524594117540948517806]];\n\n    var abs = Math.abs,\n        sqrt = Math.sqrt,\n        pow = Math.pow,\n        log2 = Math.log2 || function (x) {\n      return Math.log(x) * Math.LOG2E;\n    },\n        EPSILON = 1e-12,\n        MACHINE_EPSILON = 1.12e-16;\n\n    function clamp(value, min, max) {\n      return value < min ? min : value > max ? max : value;\n    }\n\n    function getDiscriminant(a, b, c) {\n      function split(v) {\n        var x = v * 134217729,\n            y = v - x,\n            hi = y + x,\n            lo = v - hi;\n        return [hi, lo];\n      }\n\n      var D = b * b - a * c,\n          E = b * b + a * c;\n\n      if (abs(D) * 3 < E) {\n        var ad = split(a),\n            bd = split(b),\n            cd = split(c),\n            p = b * b,\n            dp = bd[0] * bd[0] - p + 2 * bd[0] * bd[1] + bd[1] * bd[1],\n            q = a * c,\n            dq = ad[0] * cd[0] - q + ad[0] * cd[1] + ad[1] * cd[0] + ad[1] * cd[1];\n        D = p - q + (dp - dq);\n      }\n\n      return D;\n    }\n\n    function getNormalizationFactor() {\n      var norm = Math.max.apply(Math, arguments);\n      return norm && (norm < 1e-8 || norm > 1e8) ? pow(2, -Math.round(log2(norm))) : 0;\n    }\n\n    return {\n      EPSILON: EPSILON,\n      MACHINE_EPSILON: MACHINE_EPSILON,\n      CURVETIME_EPSILON: 1e-8,\n      GEOMETRIC_EPSILON: 1e-7,\n      TRIGONOMETRIC_EPSILON: 1e-8,\n      KAPPA: 4 * (sqrt(2) - 1) / 3,\n      isZero: function isZero(val) {\n        return val >= -EPSILON && val <= EPSILON;\n      },\n      isMachineZero: function isMachineZero(val) {\n        return val >= -MACHINE_EPSILON && val <= MACHINE_EPSILON;\n      },\n      clamp: clamp,\n      integrate: function integrate(f, a, b, n) {\n        var x = abscissas[n - 2],\n            w = weights[n - 2],\n            A = (b - a) * 0.5,\n            B = A + a,\n            i = 0,\n            m = n + 1 >> 1,\n            sum = n & 1 ? w[i++] * f(B) : 0;\n\n        while (i < m) {\n          var Ax = A * x[i];\n          sum += w[i++] * (f(B + Ax) + f(B - Ax));\n        }\n\n        return A * sum;\n      },\n      findRoot: function findRoot(f, df, x, a, b, n, tolerance) {\n        for (var i = 0; i < n; i++) {\n          var fx = f(x),\n              dx = fx / df(x),\n              nx = x - dx;\n\n          if (abs(dx) < tolerance) {\n            x = nx;\n            break;\n          }\n\n          if (fx > 0) {\n            b = x;\n            x = nx <= a ? (a + b) * 0.5 : nx;\n          } else {\n            a = x;\n            x = nx >= b ? (a + b) * 0.5 : nx;\n          }\n        }\n\n        return clamp(x, a, b);\n      },\n      solveQuadratic: function solveQuadratic(a, b, c, roots, min, max) {\n        var x1,\n            x2 = Infinity;\n\n        if (abs(a) < EPSILON) {\n          if (abs(b) < EPSILON) return abs(c) < EPSILON ? -1 : 0;\n          x1 = -c / b;\n        } else {\n          b *= -0.5;\n          var D = getDiscriminant(a, b, c);\n\n          if (D && abs(D) < MACHINE_EPSILON) {\n            var f = getNormalizationFactor(abs(a), abs(b), abs(c));\n\n            if (f) {\n              a *= f;\n              b *= f;\n              c *= f;\n              D = getDiscriminant(a, b, c);\n            }\n          }\n\n          if (D >= -MACHINE_EPSILON) {\n            var Q = D < 0 ? 0 : sqrt(D),\n                R = b + (b < 0 ? -Q : Q);\n\n            if (R === 0) {\n              x1 = c / a;\n              x2 = -x1;\n            } else {\n              x1 = R / a;\n              x2 = c / R;\n            }\n          }\n        }\n\n        var count = 0,\n            boundless = min == null,\n            minB = min - EPSILON,\n            maxB = max + EPSILON;\n        if (isFinite(x1) && (boundless || x1 > minB && x1 < maxB)) roots[count++] = boundless ? x1 : clamp(x1, min, max);\n        if (x2 !== x1 && isFinite(x2) && (boundless || x2 > minB && x2 < maxB)) roots[count++] = boundless ? x2 : clamp(x2, min, max);\n        return count;\n      },\n      solveCubic: function solveCubic(a, b, c, d, roots, min, max) {\n        var f = getNormalizationFactor(abs(a), abs(b), abs(c), abs(d)),\n            x,\n            b1,\n            c2,\n            qd,\n            q;\n\n        if (f) {\n          a *= f;\n          b *= f;\n          c *= f;\n          d *= f;\n        }\n\n        function evaluate(x0) {\n          x = x0;\n          var tmp = a * x;\n          b1 = tmp + b;\n          c2 = b1 * x + c;\n          qd = (tmp + b1) * x + c2;\n          q = c2 * x + d;\n        }\n\n        if (abs(a) < EPSILON) {\n          a = b;\n          b1 = c;\n          c2 = d;\n          x = Infinity;\n        } else if (abs(d) < EPSILON) {\n          b1 = b;\n          c2 = c;\n          x = 0;\n        } else {\n          evaluate(-(b / a) / 3);\n          var t = q / a,\n              r = pow(abs(t), 1 / 3),\n              s = t < 0 ? -1 : 1,\n              td = -qd / a,\n              rd = td > 0 ? 1.324717957244746 * Math.max(r, sqrt(td)) : r,\n              x0 = x - s * rd;\n\n          if (x0 !== x) {\n            do {\n              evaluate(x0);\n              x0 = qd === 0 ? x : x - q / qd / (1 + MACHINE_EPSILON);\n            } while (s * x0 > s * x);\n\n            if (abs(a) * x * x > abs(d / x)) {\n              c2 = -d / x;\n              b1 = (c2 - c) / x;\n            }\n          }\n        }\n\n        var count = Numerical.solveQuadratic(a, b1, c2, roots, min, max),\n            boundless = min == null;\n        if (isFinite(x) && (count === 0 || count > 0 && x !== roots[0] && x !== roots[1]) && (boundless || x > min - EPSILON && x < max + EPSILON)) roots[count++] = boundless ? x : clamp(x, min, max);\n        return count;\n      }\n    };\n  }();\n  var UID = {\n    _id: 1,\n    _pools: {},\n    get: function get(name) {\n      if (name) {\n        var pool = this._pools[name];\n        if (!pool) pool = this._pools[name] = {\n          _id: 1\n        };\n        return pool._id++;\n      } else {\n        return this._id++;\n      }\n    }\n  };\n  var Point = Base.extend({\n    _class: 'Point',\n    _readIndex: true,\n    initialize: function Point(arg0, arg1) {\n      var type = typeof arg0,\n          reading = this.__read,\n          read = 0;\n\n      if (type === 'number') {\n        var hasY = typeof arg1 === 'number';\n\n        this._set(arg0, hasY ? arg1 : arg0);\n\n        if (reading) read = hasY ? 2 : 1;\n      } else if (type === 'undefined' || arg0 === null) {\n        this._set(0, 0);\n\n        if (reading) read = arg0 === null ? 1 : 0;\n      } else {\n        var obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n        read = 1;\n\n        if (Array.isArray(obj)) {\n          this._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n        } else if ('x' in obj) {\n          this._set(obj.x || 0, obj.y || 0);\n        } else if ('width' in obj) {\n          this._set(obj.width || 0, obj.height || 0);\n        } else if ('angle' in obj) {\n          this._set(obj.length || 0, 0);\n\n          this.setAngle(obj.angle || 0);\n        } else {\n          this._set(0, 0);\n\n          read = 0;\n        }\n      }\n\n      if (reading) this.__read = read;\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n    equals: function equals(point) {\n      return this === point || point && (this.x === point.x && this.y === point.y || Array.isArray(point) && this.x === point[0] && this.y === point[1]) || false;\n    },\n    clone: function clone() {\n      return new Point(this.x, this.y);\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n    },\n    _serialize: function _serialize(options) {\n      var f = options.formatter;\n      return [f.number(this.x), f.number(this.y)];\n    },\n    getLength: function getLength() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n    setLength: function setLength(length) {\n      if (this.isZero()) {\n        var angle = this._angle || 0;\n\n        this._set(Math.cos(angle) * length, Math.sin(angle) * length);\n      } else {\n        var scale = length / this.getLength();\n        if (Numerical.isZero(scale)) this.getAngle();\n\n        this._set(this.x * scale, this.y * scale);\n      }\n    },\n    getAngle: function getAngle() {\n      return this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n    },\n    setAngle: function setAngle(angle) {\n      this.setAngleInRadians.call(this, angle * Math.PI / 180);\n    },\n    getAngleInDegrees: '#getAngle',\n    setAngleInDegrees: '#setAngle',\n    getAngleInRadians: function getAngleInRadians() {\n      if (!arguments.length) {\n        return this.isZero() ? this._angle || 0 : this._angle = Math.atan2(this.y, this.x);\n      } else {\n        var point = Point.read(arguments),\n            div = this.getLength() * point.getLength();\n\n        if (Numerical.isZero(div)) {\n          return NaN;\n        } else {\n          var a = this.dot(point) / div;\n          return Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n        }\n      }\n    },\n    setAngleInRadians: function setAngleInRadians(angle) {\n      this._angle = angle;\n\n      if (!this.isZero()) {\n        var length = this.getLength();\n\n        this._set(Math.cos(angle) * length, Math.sin(angle) * length);\n      }\n    },\n    getQuadrant: function getQuadrant() {\n      return this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n    }\n  }, {\n    beans: false,\n    getDirectedAngle: function getDirectedAngle() {\n      var point = Point.read(arguments);\n      return Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n    },\n    getDistance: function getDistance() {\n      var args = arguments,\n          point = Point.read(args),\n          x = point.x - this.x,\n          y = point.y - this.y,\n          d = x * x + y * y,\n          squared = Base.read(args);\n      return squared ? d : Math.sqrt(d);\n    },\n    normalize: function normalize(length) {\n      if (length === undefined) length = 1;\n      var current = this.getLength(),\n          scale = current !== 0 ? length / current : 0,\n          point = new Point(this.x * scale, this.y * scale);\n      if (scale >= 0) point._angle = this._angle;\n      return point;\n    },\n    rotate: function rotate(angle, center) {\n      if (angle === 0) return this.clone();\n      angle = angle * Math.PI / 180;\n      var point = center ? this.subtract(center) : this,\n          sin = Math.sin(angle),\n          cos = Math.cos(angle);\n      point = new Point(point.x * cos - point.y * sin, point.x * sin + point.y * cos);\n      return center ? point.add(center) : point;\n    },\n    transform: function transform(matrix) {\n      return matrix ? matrix._transformPoint(this) : this;\n    },\n    add: function add() {\n      var point = Point.read(arguments);\n      return new Point(this.x + point.x, this.y + point.y);\n    },\n    subtract: function subtract() {\n      var point = Point.read(arguments);\n      return new Point(this.x - point.x, this.y - point.y);\n    },\n    multiply: function multiply() {\n      var point = Point.read(arguments);\n      return new Point(this.x * point.x, this.y * point.y);\n    },\n    divide: function divide() {\n      var point = Point.read(arguments);\n      return new Point(this.x / point.x, this.y / point.y);\n    },\n    modulo: function modulo() {\n      var point = Point.read(arguments);\n      return new Point(this.x % point.x, this.y % point.y);\n    },\n    negate: function negate() {\n      return new Point(-this.x, -this.y);\n    },\n    isInside: function isInside() {\n      return _Rectangle.read(arguments).contains(this);\n    },\n    isClose: function isClose() {\n      var args = arguments,\n          point = Point.read(args),\n          tolerance = Base.read(args);\n      return this.getDistance(point) <= tolerance;\n    },\n    isCollinear: function isCollinear() {\n      var point = Point.read(arguments);\n      return Point.isCollinear(this.x, this.y, point.x, point.y);\n    },\n    isColinear: '#isCollinear',\n    isOrthogonal: function isOrthogonal() {\n      var point = Point.read(arguments);\n      return Point.isOrthogonal(this.x, this.y, point.x, point.y);\n    },\n    isZero: function isZero() {\n      var isZero = Numerical.isZero;\n      return isZero(this.x) && isZero(this.y);\n    },\n    isNaN: function (_isNaN) {\n      function isNaN() {\n        return _isNaN.apply(this, arguments);\n      }\n\n      isNaN.toString = function () {\n        return _isNaN.toString();\n      };\n\n      return isNaN;\n    }(function () {\n      return isNaN(this.x) || isNaN(this.y);\n    }),\n    isInQuadrant: function isInQuadrant(q) {\n      return this.x * (q > 1 && q < 4 ? -1 : 1) >= 0 && this.y * (q > 2 ? -1 : 1) >= 0;\n    },\n    dot: function dot() {\n      var point = Point.read(arguments);\n      return this.x * point.x + this.y * point.y;\n    },\n    cross: function cross() {\n      var point = Point.read(arguments);\n      return this.x * point.y - this.y * point.x;\n    },\n    project: function project() {\n      var point = Point.read(arguments),\n          scale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n      return new Point(point.x * scale, point.y * scale);\n    },\n    statics: {\n      min: function min() {\n        var args = arguments,\n            point1 = Point.read(args),\n            point2 = Point.read(args);\n        return new Point(Math.min(point1.x, point2.x), Math.min(point1.y, point2.y));\n      },\n      max: function max() {\n        var args = arguments,\n            point1 = Point.read(args),\n            point2 = Point.read(args);\n        return new Point(Math.max(point1.x, point2.x), Math.max(point1.y, point2.y));\n      },\n      random: function random() {\n        return new Point(Math.random(), Math.random());\n      },\n      isCollinear: function isCollinear(x1, y1, x2, y2) {\n        return Math.abs(x1 * y2 - y1 * x2) <= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2)) * 1e-8;\n      },\n      isOrthogonal: function isOrthogonal(x1, y1, x2, y2) {\n        return Math.abs(x1 * x2 + y1 * y2) <= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2)) * 1e-8;\n      }\n    }\n  }, Base.each(['round', 'ceil', 'floor', 'abs'], function (key) {\n    var op = Math[key];\n\n    this[key] = function () {\n      return new Point(op(this.x), op(this.y));\n    };\n  }, {}));\n  var LinkedPoint = Point.extend({\n    initialize: function Point(x, y, owner, setter) {\n      this._x = x;\n      this._y = y;\n      this._owner = owner;\n      this._setter = setter;\n    },\n    _set: function _set(x, y, _dontNotify) {\n      this._x = x;\n      this._y = y;\n      if (!_dontNotify) this._owner[this._setter](this);\n      return this;\n    },\n    getX: function getX() {\n      return this._x;\n    },\n    setX: function setX(x) {\n      this._x = x;\n\n      this._owner[this._setter](this);\n    },\n    getY: function getY() {\n      return this._y;\n    },\n    setY: function setY(y) {\n      this._y = y;\n\n      this._owner[this._setter](this);\n    },\n    isSelected: function isSelected() {\n      return !!(this._owner._selection & this._getSelection());\n    },\n    setSelected: function setSelected(selected) {\n      this._owner._changeSelection(this._getSelection(), selected);\n    },\n    _getSelection: function _getSelection() {\n      return this._setter === 'setPosition' ? 4 : 0;\n    }\n  });\n  var Size = Base.extend({\n    _class: 'Size',\n    _readIndex: true,\n    initialize: function Size(arg0, arg1) {\n      var type = typeof arg0,\n          reading = this.__read,\n          read = 0;\n\n      if (type === 'number') {\n        var hasHeight = typeof arg1 === 'number';\n\n        this._set(arg0, hasHeight ? arg1 : arg0);\n\n        if (reading) read = hasHeight ? 2 : 1;\n      } else if (type === 'undefined' || arg0 === null) {\n        this._set(0, 0);\n\n        if (reading) read = arg0 === null ? 1 : 0;\n      } else {\n        var obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n        read = 1;\n\n        if (Array.isArray(obj)) {\n          this._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n        } else if ('width' in obj) {\n          this._set(obj.width || 0, obj.height || 0);\n        } else if ('x' in obj) {\n          this._set(obj.x || 0, obj.y || 0);\n        } else {\n          this._set(0, 0);\n\n          read = 0;\n        }\n      }\n\n      if (reading) this.__read = read;\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(width, height) {\n      this.width = width;\n      this.height = height;\n      return this;\n    },\n    equals: function equals(size) {\n      return size === this || size && (this.width === size.width && this.height === size.height || Array.isArray(size) && this.width === size[0] && this.height === size[1]) || false;\n    },\n    clone: function clone() {\n      return new Size(this.width, this.height);\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '{ width: ' + f.number(this.width) + ', height: ' + f.number(this.height) + ' }';\n    },\n    _serialize: function _serialize(options) {\n      var f = options.formatter;\n      return [f.number(this.width), f.number(this.height)];\n    },\n    add: function add() {\n      var size = Size.read(arguments);\n      return new Size(this.width + size.width, this.height + size.height);\n    },\n    subtract: function subtract() {\n      var size = Size.read(arguments);\n      return new Size(this.width - size.width, this.height - size.height);\n    },\n    multiply: function multiply() {\n      var size = Size.read(arguments);\n      return new Size(this.width * size.width, this.height * size.height);\n    },\n    divide: function divide() {\n      var size = Size.read(arguments);\n      return new Size(this.width / size.width, this.height / size.height);\n    },\n    modulo: function modulo() {\n      var size = Size.read(arguments);\n      return new Size(this.width % size.width, this.height % size.height);\n    },\n    negate: function negate() {\n      return new Size(-this.width, -this.height);\n    },\n    isZero: function isZero() {\n      var isZero = Numerical.isZero;\n      return isZero(this.width) && isZero(this.height);\n    },\n    isNaN: function (_isNaN2) {\n      function isNaN() {\n        return _isNaN2.apply(this, arguments);\n      }\n\n      isNaN.toString = function () {\n        return _isNaN2.toString();\n      };\n\n      return isNaN;\n    }(function () {\n      return isNaN(this.width) || isNaN(this.height);\n    }),\n    statics: {\n      min: function min(size1, size2) {\n        return new Size(Math.min(size1.width, size2.width), Math.min(size1.height, size2.height));\n      },\n      max: function max(size1, size2) {\n        return new Size(Math.max(size1.width, size2.width), Math.max(size1.height, size2.height));\n      },\n      random: function random() {\n        return new Size(Math.random(), Math.random());\n      }\n    }\n  }, Base.each(['round', 'ceil', 'floor', 'abs'], function (key) {\n    var op = Math[key];\n\n    this[key] = function () {\n      return new Size(op(this.width), op(this.height));\n    };\n  }, {}));\n  var LinkedSize = Size.extend({\n    initialize: function Size(width, height, owner, setter) {\n      this._width = width;\n      this._height = height;\n      this._owner = owner;\n      this._setter = setter;\n    },\n    _set: function _set(width, height, _dontNotify) {\n      this._width = width;\n      this._height = height;\n      if (!_dontNotify) this._owner[this._setter](this);\n      return this;\n    },\n    getWidth: function getWidth() {\n      return this._width;\n    },\n    setWidth: function setWidth(width) {\n      this._width = width;\n\n      this._owner[this._setter](this);\n    },\n    getHeight: function getHeight() {\n      return this._height;\n    },\n    setHeight: function setHeight(height) {\n      this._height = height;\n\n      this._owner[this._setter](this);\n    }\n  });\n\n  var _Rectangle = Base.extend({\n    _class: 'Rectangle',\n    _readIndex: true,\n    beans: true,\n    initialize: function Rectangle(arg0, arg1, arg2, arg3) {\n      var args = arguments,\n          type = typeof arg0,\n          read;\n\n      if (type === 'number') {\n        this._set(arg0, arg1, arg2, arg3);\n\n        read = 4;\n      } else if (type === 'undefined' || arg0 === null) {\n        this._set(0, 0, 0, 0);\n\n        read = arg0 === null ? 1 : 0;\n      } else if (args.length === 1) {\n        if (Array.isArray(arg0)) {\n          this._set.apply(this, arg0);\n\n          read = 1;\n        } else if (arg0.x !== undefined || arg0.width !== undefined) {\n          this._set(arg0.x || 0, arg0.y || 0, arg0.width || 0, arg0.height || 0);\n\n          read = 1;\n        } else if (arg0.from === undefined && arg0.to === undefined) {\n          this._set(0, 0, 0, 0);\n\n          if (Base.readSupported(args, this)) {\n            read = 1;\n          }\n        }\n      }\n\n      if (read === undefined) {\n        var frm = Point.readNamed(args, 'from'),\n            next = Base.peek(args),\n            x = frm.x,\n            y = frm.y,\n            width,\n            height;\n\n        if (next && next.x !== undefined || Base.hasNamed(args, 'to')) {\n          var to = Point.readNamed(args, 'to');\n          width = to.x - x;\n          height = to.y - y;\n\n          if (width < 0) {\n            x = to.x;\n            width = -width;\n          }\n\n          if (height < 0) {\n            y = to.y;\n            height = -height;\n          }\n        } else {\n          var size = Size.read(args);\n          width = size.width;\n          height = size.height;\n        }\n\n        this._set(x, y, width, height);\n\n        read = args.__index;\n      }\n\n      var filtered = args.__filtered;\n      if (filtered) this.__filtered = filtered;\n      if (this.__read) this.__read = read;\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(x, y, width, height) {\n      this.x = x;\n      this.y = y;\n      this.width = width;\n      this.height = height;\n      return this;\n    },\n    clone: function clone() {\n      return new _Rectangle(this.x, this.y, this.width, this.height);\n    },\n    equals: function equals(rect) {\n      var rt = Base.isPlainValue(rect) ? _Rectangle.read(arguments) : rect;\n      return rt === this || rt && this.x === rt.x && this.y === rt.y && this.width === rt.width && this.height === rt.height || false;\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ', width: ' + f.number(this.width) + ', height: ' + f.number(this.height) + ' }';\n    },\n    _serialize: function _serialize(options) {\n      var f = options.formatter;\n      return [f.number(this.x), f.number(this.y), f.number(this.width), f.number(this.height)];\n    },\n    getPoint: function getPoint(_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n      return new ctor(this.x, this.y, this, 'setPoint');\n    },\n    setPoint: function setPoint() {\n      var point = Point.read(arguments);\n      this.x = point.x;\n      this.y = point.y;\n    },\n    getSize: function getSize(_dontLink) {\n      var ctor = _dontLink ? Size : LinkedSize;\n      return new ctor(this.width, this.height, this, 'setSize');\n    },\n    _fw: 1,\n    _fh: 1,\n    setSize: function setSize() {\n      var size = Size.read(arguments),\n          sx = this._sx,\n          sy = this._sy,\n          w = size.width,\n          h = size.height;\n\n      if (sx) {\n        this.x += (this.width - w) * sx;\n      }\n\n      if (sy) {\n        this.y += (this.height - h) * sy;\n      }\n\n      this.width = w;\n      this.height = h;\n      this._fw = this._fh = 1;\n    },\n    getLeft: function getLeft() {\n      return this.x;\n    },\n    setLeft: function setLeft(left) {\n      if (!this._fw) {\n        var amount = left - this.x;\n        this.width -= this._sx === 0.5 ? amount * 2 : amount;\n      }\n\n      this.x = left;\n      this._sx = this._fw = 0;\n    },\n    getTop: function getTop() {\n      return this.y;\n    },\n    setTop: function setTop(top) {\n      if (!this._fh) {\n        var amount = top - this.y;\n        this.height -= this._sy === 0.5 ? amount * 2 : amount;\n      }\n\n      this.y = top;\n      this._sy = this._fh = 0;\n    },\n    getRight: function getRight() {\n      return this.x + this.width;\n    },\n    setRight: function setRight(right) {\n      if (!this._fw) {\n        var amount = right - this.x;\n        this.width = this._sx === 0.5 ? amount * 2 : amount;\n      }\n\n      this.x = right - this.width;\n      this._sx = 1;\n      this._fw = 0;\n    },\n    getBottom: function getBottom() {\n      return this.y + this.height;\n    },\n    setBottom: function setBottom(bottom) {\n      if (!this._fh) {\n        var amount = bottom - this.y;\n        this.height = this._sy === 0.5 ? amount * 2 : amount;\n      }\n\n      this.y = bottom - this.height;\n      this._sy = 1;\n      this._fh = 0;\n    },\n    getCenterX: function getCenterX() {\n      return this.x + this.width / 2;\n    },\n    setCenterX: function setCenterX(x) {\n      if (this._fw || this._sx === 0.5) {\n        this.x = x - this.width / 2;\n      } else {\n        if (this._sx) {\n          this.x += (x - this.x) * 2 * this._sx;\n        }\n\n        this.width = (x - this.x) * 2;\n      }\n\n      this._sx = 0.5;\n      this._fw = 0;\n    },\n    getCenterY: function getCenterY() {\n      return this.y + this.height / 2;\n    },\n    setCenterY: function setCenterY(y) {\n      if (this._fh || this._sy === 0.5) {\n        this.y = y - this.height / 2;\n      } else {\n        if (this._sy) {\n          this.y += (y - this.y) * 2 * this._sy;\n        }\n\n        this.height = (y - this.y) * 2;\n      }\n\n      this._sy = 0.5;\n      this._fh = 0;\n    },\n    getCenter: function getCenter(_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n      return new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n    },\n    setCenter: function setCenter() {\n      var point = Point.read(arguments);\n      this.setCenterX(point.x);\n      this.setCenterY(point.y);\n      return this;\n    },\n    getArea: function getArea() {\n      return this.width * this.height;\n    },\n    isEmpty: function isEmpty() {\n      return this.width === 0 || this.height === 0;\n    },\n    contains: function contains(arg) {\n      return arg && arg.width !== undefined || (Array.isArray(arg) ? arg : arguments).length === 4 ? this._containsRectangle(_Rectangle.read(arguments)) : this._containsPoint(Point.read(arguments));\n    },\n    _containsPoint: function _containsPoint(point) {\n      var x = point.x,\n          y = point.y;\n      return x >= this.x && y >= this.y && x <= this.x + this.width && y <= this.y + this.height;\n    },\n    _containsRectangle: function _containsRectangle(rect) {\n      var x = rect.x,\n          y = rect.y;\n      return x >= this.x && y >= this.y && x + rect.width <= this.x + this.width && y + rect.height <= this.y + this.height;\n    },\n    intersects: function intersects() {\n      var rect = _Rectangle.read(arguments),\n          epsilon = Base.read(arguments) || 0;\n\n      return rect.x + rect.width > this.x - epsilon && rect.y + rect.height > this.y - epsilon && rect.x < this.x + this.width + epsilon && rect.y < this.y + this.height + epsilon;\n    },\n    intersect: function intersect() {\n      var rect = _Rectangle.read(arguments),\n          x1 = Math.max(this.x, rect.x),\n          y1 = Math.max(this.y, rect.y),\n          x2 = Math.min(this.x + this.width, rect.x + rect.width),\n          y2 = Math.min(this.y + this.height, rect.y + rect.height);\n\n      return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n    },\n    unite: function unite() {\n      var rect = _Rectangle.read(arguments),\n          x1 = Math.min(this.x, rect.x),\n          y1 = Math.min(this.y, rect.y),\n          x2 = Math.max(this.x + this.width, rect.x + rect.width),\n          y2 = Math.max(this.y + this.height, rect.y + rect.height);\n\n      return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n    },\n    include: function include() {\n      var point = Point.read(arguments);\n      var x1 = Math.min(this.x, point.x),\n          y1 = Math.min(this.y, point.y),\n          x2 = Math.max(this.x + this.width, point.x),\n          y2 = Math.max(this.y + this.height, point.y);\n      return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n    },\n    expand: function expand() {\n      var amount = Size.read(arguments),\n          hor = amount.width,\n          ver = amount.height;\n      return new _Rectangle(this.x - hor / 2, this.y - ver / 2, this.width + hor, this.height + ver);\n    },\n    scale: function scale(hor, ver) {\n      return this.expand(this.width * hor - this.width, this.height * (ver === undefined ? hor : ver) - this.height);\n    }\n  }, Base.each([['Top', 'Left'], ['Top', 'Right'], ['Bottom', 'Left'], ['Bottom', 'Right'], ['Left', 'Center'], ['Top', 'Center'], ['Right', 'Center'], ['Bottom', 'Center']], function (parts, index) {\n    var part = parts.join(''),\n        xFirst = /^[RL]/.test(part);\n    if (index >= 4) parts[1] += xFirst ? 'Y' : 'X';\n    var x = parts[xFirst ? 0 : 1],\n        y = parts[xFirst ? 1 : 0],\n        getX = 'get' + x,\n        getY = 'get' + y,\n        setX = 'set' + x,\n        setY = 'set' + y,\n        get = 'get' + part,\n        set = 'set' + part;\n\n    this[get] = function (_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n      return new ctor(this[getX](), this[getY](), this, set);\n    };\n\n    this[set] = function () {\n      var point = Point.read(arguments);\n      this[setX](point.x);\n      this[setY](point.y);\n    };\n  }, {\n    beans: true\n  }));\n\n  var LinkedRectangle = _Rectangle.extend({\n    initialize: function Rectangle(x, y, width, height, owner, setter) {\n      this._set(x, y, width, height, true);\n\n      this._owner = owner;\n      this._setter = setter;\n    },\n    _set: function _set(x, y, width, height, _dontNotify) {\n      this._x = x;\n      this._y = y;\n      this._width = width;\n      this._height = height;\n      if (!_dontNotify) this._owner[this._setter](this);\n      return this;\n    }\n  }, new function () {\n    var proto = _Rectangle.prototype;\n    return Base.each(['x', 'y', 'width', 'height'], function (key) {\n      var part = Base.capitalize(key),\n          internal = '_' + key;\n\n      this['get' + part] = function () {\n        return this[internal];\n      };\n\n      this['set' + part] = function (value) {\n        this[internal] = value;\n        if (!this._dontNotify) this._owner[this._setter](this);\n      };\n    }, Base.each(['Point', 'Size', 'Center', 'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY', 'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight', 'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'], function (key) {\n      var name = 'set' + key;\n\n      this[name] = function () {\n        this._dontNotify = true;\n        proto[name].apply(this, arguments);\n        this._dontNotify = false;\n\n        this._owner[this._setter](this);\n      };\n    }, {\n      isSelected: function isSelected() {\n        return !!(this._owner._selection & 2);\n      },\n      setSelected: function setSelected(selected) {\n        var owner = this._owner;\n\n        if (owner._changeSelection) {\n          owner._changeSelection(2, selected);\n        }\n      }\n    }));\n  }());\n\n  var Matrix = Base.extend({\n    _class: 'Matrix',\n    initialize: function Matrix(arg, _dontNotify) {\n      var args = arguments,\n          count = args.length,\n          ok = true;\n\n      if (count >= 6) {\n        this._set.apply(this, args);\n      } else if (count === 1 || count === 2) {\n        if (arg instanceof Matrix) {\n          this._set(arg._a, arg._b, arg._c, arg._d, arg._tx, arg._ty, _dontNotify);\n        } else if (Array.isArray(arg)) {\n          this._set.apply(this, _dontNotify ? arg.concat([_dontNotify]) : arg);\n        } else {\n          ok = false;\n        }\n      } else if (!count) {\n        this.reset();\n      } else {\n        ok = false;\n      }\n\n      if (!ok) {\n        throw new Error('Unsupported matrix parameters');\n      }\n\n      return this;\n    },\n    set: '#initialize',\n    _set: function _set(a, b, c, d, tx, ty, _dontNotify) {\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      this._d = d;\n      this._tx = tx;\n      this._ty = ty;\n      if (!_dontNotify) this._changed();\n      return this;\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return Base.serialize(this.getValues(), options, true, dictionary);\n    },\n    _changed: function _changed() {\n      var owner = this._owner;\n\n      if (owner) {\n        if (owner._applyMatrix) {\n          owner.transform(null, true);\n        } else {\n          owner._changed(25);\n        }\n      }\n    },\n    clone: function clone() {\n      return new Matrix(this._a, this._b, this._c, this._d, this._tx, this._ty);\n    },\n    equals: function equals(mx) {\n      return mx === this || mx && this._a === mx._a && this._b === mx._b && this._c === mx._c && this._d === mx._d && this._tx === mx._tx && this._ty === mx._ty;\n    },\n    toString: function toString() {\n      var f = Formatter.instance;\n      return '[[' + [f.number(this._a), f.number(this._c), f.number(this._tx)].join(', ') + '], [' + [f.number(this._b), f.number(this._d), f.number(this._ty)].join(', ') + ']]';\n    },\n    reset: function reset(_dontNotify) {\n      this._a = this._d = 1;\n      this._b = this._c = this._tx = this._ty = 0;\n      if (!_dontNotify) this._changed();\n      return this;\n    },\n    apply: function apply(recursively, _setApplyMatrix) {\n      var owner = this._owner;\n\n      if (owner) {\n        owner.transform(null, Base.pick(recursively, true), _setApplyMatrix);\n        return this.isIdentity();\n      }\n\n      return false;\n    },\n    translate: function translate() {\n      var point = Point.read(arguments),\n          x = point.x,\n          y = point.y;\n      this._tx += x * this._a + y * this._c;\n      this._ty += x * this._b + y * this._d;\n\n      this._changed();\n\n      return this;\n    },\n    scale: function scale() {\n      var args = arguments,\n          scale = Point.read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      if (center) this.translate(center);\n      this._a *= scale.x;\n      this._b *= scale.x;\n      this._c *= scale.y;\n      this._d *= scale.y;\n      if (center) this.translate(center.negate());\n\n      this._changed();\n\n      return this;\n    },\n    rotate: function rotate(angle) {\n      angle *= Math.PI / 180;\n      var center = Point.read(arguments, 1),\n          x = center.x,\n          y = center.y,\n          cos = Math.cos(angle),\n          sin = Math.sin(angle),\n          tx = x - x * cos + y * sin,\n          ty = y - x * sin - y * cos,\n          a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d;\n      this._a = cos * a + sin * c;\n      this._b = cos * b + sin * d;\n      this._c = -sin * a + cos * c;\n      this._d = -sin * b + cos * d;\n      this._tx += tx * a + ty * c;\n      this._ty += tx * b + ty * d;\n\n      this._changed();\n\n      return this;\n    },\n    shear: function shear() {\n      var args = arguments,\n          shear = Point.read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      if (center) this.translate(center);\n      var a = this._a,\n          b = this._b;\n      this._a += shear.y * this._c;\n      this._b += shear.y * this._d;\n      this._c += shear.x * a;\n      this._d += shear.x * b;\n      if (center) this.translate(center.negate());\n\n      this._changed();\n\n      return this;\n    },\n    skew: function skew() {\n      var args = arguments,\n          skew = Point.read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      }),\n          toRadians = Math.PI / 180,\n          shear = new Point(Math.tan(skew.x * toRadians), Math.tan(skew.y * toRadians));\n      return this.shear(shear, center);\n    },\n    append: function append(mx, _dontNotify) {\n      if (mx) {\n        var a1 = this._a,\n            b1 = this._b,\n            c1 = this._c,\n            d1 = this._d,\n            a2 = mx._a,\n            b2 = mx._c,\n            c2 = mx._b,\n            d2 = mx._d,\n            tx2 = mx._tx,\n            ty2 = mx._ty;\n        this._a = a2 * a1 + c2 * c1;\n        this._c = b2 * a1 + d2 * c1;\n        this._b = a2 * b1 + c2 * d1;\n        this._d = b2 * b1 + d2 * d1;\n        this._tx += tx2 * a1 + ty2 * c1;\n        this._ty += tx2 * b1 + ty2 * d1;\n        if (!_dontNotify) this._changed();\n      }\n\n      return this;\n    },\n    prepend: function prepend(mx, _dontNotify) {\n      if (mx) {\n        var a1 = this._a,\n            b1 = this._b,\n            c1 = this._c,\n            d1 = this._d,\n            tx1 = this._tx,\n            ty1 = this._ty,\n            a2 = mx._a,\n            b2 = mx._c,\n            c2 = mx._b,\n            d2 = mx._d,\n            tx2 = mx._tx,\n            ty2 = mx._ty;\n        this._a = a2 * a1 + b2 * b1;\n        this._c = a2 * c1 + b2 * d1;\n        this._b = c2 * a1 + d2 * b1;\n        this._d = c2 * c1 + d2 * d1;\n        this._tx = a2 * tx1 + b2 * ty1 + tx2;\n        this._ty = c2 * tx1 + d2 * ty1 + ty2;\n        if (!_dontNotify) this._changed();\n      }\n\n      return this;\n    },\n    appended: function appended(mx) {\n      return this.clone().append(mx);\n    },\n    prepended: function prepended(mx) {\n      return this.clone().prepend(mx);\n    },\n    invert: function invert() {\n      var a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d,\n          tx = this._tx,\n          ty = this._ty,\n          det = a * d - b * c,\n          res = null;\n\n      if (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n        this._a = d / det;\n        this._b = -b / det;\n        this._c = -c / det;\n        this._d = a / det;\n        this._tx = (c * ty - d * tx) / det;\n        this._ty = (b * tx - a * ty) / det;\n        res = this;\n      }\n\n      return res;\n    },\n    inverted: function inverted() {\n      return this.clone().invert();\n    },\n    concatenate: '#append',\n    preConcatenate: '#prepend',\n    chain: '#appended',\n    _shiftless: function _shiftless() {\n      return new Matrix(this._a, this._b, this._c, this._d, 0, 0);\n    },\n    _orNullIfIdentity: function _orNullIfIdentity() {\n      return this.isIdentity() ? null : this;\n    },\n    isIdentity: function isIdentity() {\n      return this._a === 1 && this._b === 0 && this._c === 0 && this._d === 1 && this._tx === 0 && this._ty === 0;\n    },\n    isInvertible: function isInvertible() {\n      var det = this._a * this._d - this._c * this._b;\n      return det && !isNaN(det) && isFinite(this._tx) && isFinite(this._ty);\n    },\n    isSingular: function isSingular() {\n      return !this.isInvertible();\n    },\n    transform: function transform(src, dst, count) {\n      return arguments.length < 3 ? this._transformPoint(Point.read(arguments)) : this._transformCoordinates(src, dst, count);\n    },\n    _transformPoint: function _transformPoint(point, dest, _dontNotify) {\n      var x = point.x,\n          y = point.y;\n      if (!dest) dest = new Point();\n      return dest._set(x * this._a + y * this._c + this._tx, x * this._b + y * this._d + this._ty, _dontNotify);\n    },\n    _transformCoordinates: function _transformCoordinates(src, dst, count) {\n      for (var i = 0, max = 2 * count; i < max; i += 2) {\n        var x = src[i],\n            y = src[i + 1];\n        dst[i] = x * this._a + y * this._c + this._tx;\n        dst[i + 1] = x * this._b + y * this._d + this._ty;\n      }\n\n      return dst;\n    },\n    _transformCorners: function _transformCorners(rect) {\n      var x1 = rect.x,\n          y1 = rect.y,\n          x2 = x1 + rect.width,\n          y2 = y1 + rect.height,\n          coords = [x1, y1, x2, y1, x2, y2, x1, y2];\n      return this._transformCoordinates(coords, coords, 4);\n    },\n    _transformBounds: function _transformBounds(bounds, dest, _dontNotify) {\n      var coords = this._transformCorners(bounds),\n          min = coords.slice(0, 2),\n          max = min.slice();\n\n      for (var i = 2; i < 8; i++) {\n        var val = coords[i],\n            j = i & 1;\n\n        if (val < min[j]) {\n          min[j] = val;\n        } else if (val > max[j]) {\n          max[j] = val;\n        }\n      }\n\n      if (!dest) dest = new _Rectangle();\n      return dest._set(min[0], min[1], max[0] - min[0], max[1] - min[1], _dontNotify);\n    },\n    inverseTransform: function inverseTransform() {\n      return this._inverseTransform(Point.read(arguments));\n    },\n    _inverseTransform: function _inverseTransform(point, dest, _dontNotify) {\n      var a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d,\n          tx = this._tx,\n          ty = this._ty,\n          det = a * d - b * c,\n          res = null;\n\n      if (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n        var x = point.x - this._tx,\n            y = point.y - this._ty;\n        if (!dest) dest = new Point();\n        res = dest._set((x * d - y * c) / det, (y * a - x * b) / det, _dontNotify);\n      }\n\n      return res;\n    },\n    decompose: function decompose() {\n      var a = this._a,\n          b = this._b,\n          c = this._c,\n          d = this._d,\n          det = a * d - b * c,\n          sqrt = Math.sqrt,\n          atan2 = Math.atan2,\n          degrees = 180 / Math.PI,\n          rotate,\n          scale,\n          skew;\n\n      if (a !== 0 || b !== 0) {\n        var r = sqrt(a * a + b * b);\n        rotate = Math.acos(a / r) * (b > 0 ? 1 : -1);\n        scale = [r, det / r];\n        skew = [atan2(a * c + b * d, r * r), 0];\n      } else if (c !== 0 || d !== 0) {\n        var s = sqrt(c * c + d * d);\n        rotate = Math.asin(c / s) * (d > 0 ? 1 : -1);\n        scale = [det / s, s];\n        skew = [0, atan2(a * c + b * d, s * s)];\n      } else {\n        rotate = 0;\n        skew = scale = [0, 0];\n      }\n\n      return {\n        translation: this.getTranslation(),\n        rotation: rotate * degrees,\n        scaling: new Point(scale),\n        skewing: new Point(skew[0] * degrees, skew[1] * degrees)\n      };\n    },\n    getValues: function getValues() {\n      return [this._a, this._b, this._c, this._d, this._tx, this._ty];\n    },\n    getTranslation: function getTranslation() {\n      return new Point(this._tx, this._ty);\n    },\n    getScaling: function getScaling() {\n      return this.decompose().scaling;\n    },\n    getRotation: function getRotation() {\n      return this.decompose().rotation;\n    },\n    applyToContext: function applyToContext(ctx) {\n      if (!this.isIdentity()) {\n        ctx.transform(this._a, this._b, this._c, this._d, this._tx, this._ty);\n      }\n    }\n  }, Base.each(['a', 'b', 'c', 'd', 'tx', 'ty'], function (key) {\n    var part = Base.capitalize(key),\n        prop = '_' + key;\n\n    this['get' + part] = function () {\n      return this[prop];\n    };\n\n    this['set' + part] = function (value) {\n      this[prop] = value;\n\n      this._changed();\n    };\n  }, {}));\n  var Line = Base.extend({\n    _class: 'Line',\n    initialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n      var asVector = false;\n\n      if (arguments.length >= 4) {\n        this._px = arg0;\n        this._py = arg1;\n        this._vx = arg2;\n        this._vy = arg3;\n        asVector = arg4;\n      } else {\n        this._px = arg0.x;\n        this._py = arg0.y;\n        this._vx = arg1.x;\n        this._vy = arg1.y;\n        asVector = arg2;\n      }\n\n      if (!asVector) {\n        this._vx -= this._px;\n        this._vy -= this._py;\n      }\n    },\n    getPoint: function getPoint() {\n      return new Point(this._px, this._py);\n    },\n    getVector: function getVector() {\n      return new Point(this._vx, this._vy);\n    },\n    getLength: function getLength() {\n      return this.getVector().getLength();\n    },\n    intersect: function intersect(line, isInfinite) {\n      return Line.intersect(this._px, this._py, this._vx, this._vy, line._px, line._py, line._vx, line._vy, true, isInfinite);\n    },\n    getSide: function getSide(point, isInfinite) {\n      return Line.getSide(this._px, this._py, this._vx, this._vy, point.x, point.y, true, isInfinite);\n    },\n    getDistance: function getDistance(point) {\n      return Math.abs(this.getSignedDistance(point));\n    },\n    getSignedDistance: function getSignedDistance(point) {\n      return Line.getSignedDistance(this._px, this._py, this._vx, this._vy, point.x, point.y, true);\n    },\n    isCollinear: function isCollinear(line) {\n      return Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n    },\n    isOrthogonal: function isOrthogonal(line) {\n      return Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n    },\n    statics: {\n      intersect: function intersect(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector, isInfinite) {\n        if (!asVector) {\n          v1x -= p1x;\n          v1y -= p1y;\n          v2x -= p2x;\n          v2y -= p2y;\n        }\n\n        var cross = v1x * v2y - v1y * v2x;\n\n        if (!Numerical.isMachineZero(cross)) {\n          var dx = p1x - p2x,\n              dy = p1y - p2y,\n              u1 = (v2x * dy - v2y * dx) / cross,\n              u2 = (v1x * dy - v1y * dx) / cross,\n              epsilon = 1e-12,\n              uMin = -epsilon,\n              uMax = 1 + epsilon;\n\n          if (isInfinite || uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n            if (!isInfinite) {\n              u1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n            }\n\n            return new Point(p1x + u1 * v1x, p1y + u1 * v1y);\n          }\n        }\n      },\n      getSide: function getSide(px, py, vx, vy, x, y, asVector, isInfinite) {\n        if (!asVector) {\n          vx -= px;\n          vy -= py;\n        }\n\n        var v2x = x - px,\n            v2y = y - py,\n            ccw = v2x * vy - v2y * vx;\n\n        if (!isInfinite && Numerical.isMachineZero(ccw)) {\n          ccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n          if (ccw >= 0 && ccw <= 1) ccw = 0;\n        }\n\n        return ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n      },\n      getSignedDistance: function getSignedDistance(px, py, vx, vy, x, y, asVector) {\n        if (!asVector) {\n          vx -= px;\n          vy -= py;\n        }\n\n        return vx === 0 ? vy > 0 ? x - px : px - x : vy === 0 ? vx < 0 ? y - py : py - y : ((x - px) * vy - (y - py) * vx) / (vy > vx ? vy * Math.sqrt(1 + vx * vx / (vy * vy)) : vx * Math.sqrt(1 + vy * vy / (vx * vx)));\n      },\n      getDistance: function getDistance(px, py, vx, vy, x, y, asVector) {\n        return Math.abs(Line.getSignedDistance(px, py, vx, vy, x, y, asVector));\n      }\n    }\n  });\n  var Project = PaperScopeItem.extend({\n    _class: 'Project',\n    _list: 'projects',\n    _reference: 'project',\n    _compactSerialize: true,\n    initialize: function Project(element) {\n      PaperScopeItem.call(this, true);\n      this._children = [];\n      this._namedChildren = {};\n      this._activeLayer = null;\n      this._currentStyle = new Style(null, null, this);\n      this._view = View.create(this, element || CanvasProvider.getCanvas(1, 1));\n      this._selectionItems = {};\n      this._selectionCount = 0;\n      this._updateVersion = 0;\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return Base.serialize(this._children, options, true, dictionary);\n    },\n    _changed: function _changed(flags, item) {\n      if (flags & 1) {\n        var view = this._view;\n\n        if (view) {\n          view._needsUpdate = true;\n          if (!view._requested && view._autoUpdate) view.requestUpdate();\n        }\n      }\n\n      var changes = this._changes;\n\n      if (changes && item) {\n        var changesById = this._changesById,\n            id = item._id,\n            entry = changesById[id];\n\n        if (entry) {\n          entry.flags |= flags;\n        } else {\n          changes.push(changesById[id] = {\n            item: item,\n            flags: flags\n          });\n        }\n      }\n    },\n    clear: function clear() {\n      var children = this._children;\n\n      for (var i = children.length - 1; i >= 0; i--) {\n        children[i].remove();\n      }\n    },\n    isEmpty: function isEmpty() {\n      return !this._children.length;\n    },\n    remove: function remove() {\n      if (!remove.base.call(this)) return false;\n      if (this._view) this._view.remove();\n      return true;\n    },\n    getView: function getView() {\n      return this._view;\n    },\n    getCurrentStyle: function getCurrentStyle() {\n      return this._currentStyle;\n    },\n    setCurrentStyle: function setCurrentStyle(style) {\n      this._currentStyle.set(style);\n    },\n    getIndex: function getIndex() {\n      return this._index;\n    },\n    getOptions: function getOptions() {\n      return this._scope.settings;\n    },\n    getLayers: function getLayers() {\n      return this._children;\n    },\n    getActiveLayer: function getActiveLayer() {\n      return this._activeLayer || new Layer({\n        project: this,\n        insert: true\n      });\n    },\n    getSymbolDefinitions: function getSymbolDefinitions() {\n      var definitions = [],\n          ids = {};\n      this.getItems({\n        class: SymbolItem,\n        match: function match(item) {\n          var definition = item._definition,\n              id = definition._id;\n\n          if (!ids[id]) {\n            ids[id] = true;\n            definitions.push(definition);\n          }\n\n          return false;\n        }\n      });\n      return definitions;\n    },\n    getSymbols: 'getSymbolDefinitions',\n    getSelectedItems: function getSelectedItems() {\n      var selectionItems = this._selectionItems,\n          items = [];\n\n      for (var id in selectionItems) {\n        var item = selectionItems[id],\n            selection = item._selection;\n\n        if (selection & 1 && item.isInserted()) {\n          items.push(item);\n        } else if (!selection) {\n          this._updateSelection(item);\n        }\n      }\n\n      return items;\n    },\n    _updateSelection: function _updateSelection(item) {\n      var id = item._id,\n          selectionItems = this._selectionItems;\n\n      if (item._selection) {\n        if (selectionItems[id] !== item) {\n          this._selectionCount++;\n          selectionItems[id] = item;\n        }\n      } else if (selectionItems[id] === item) {\n        this._selectionCount--;\n        delete selectionItems[id];\n      }\n    },\n    selectAll: function selectAll() {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].setFullySelected(true);\n      }\n    },\n    deselectAll: function deselectAll() {\n      var selectionItems = this._selectionItems;\n\n      for (var i in selectionItems) {\n        selectionItems[i].setFullySelected(false);\n      }\n    },\n    addLayer: function addLayer(layer) {\n      return this.insertLayer(undefined, layer);\n    },\n    insertLayer: function insertLayer(index, layer) {\n      if (layer instanceof Layer) {\n        layer._remove(false, true);\n\n        Base.splice(this._children, [layer], index, 0);\n\n        layer._setProject(this, true);\n\n        var name = layer._name;\n        if (name) layer.setName(name);\n        if (this._changes) layer._changed(5);\n        if (!this._activeLayer) this._activeLayer = layer;\n      } else {\n        layer = null;\n      }\n\n      return layer;\n    },\n    _insertItem: function _insertItem(index, item, _created) {\n      item = this.insertLayer(index, item) || (this._activeLayer || this._insertItem(undefined, new Layer(Item.NO_INSERT), true)).insertChild(index, item);\n      if (_created && item.activate) item.activate();\n      return item;\n    },\n    getItems: function getItems(options) {\n      return Item._getItems(this, options);\n    },\n    getItem: function getItem(options) {\n      return Item._getItems(this, options, null, null, true)[0] || null;\n    },\n    importJSON: function importJSON(json) {\n      this.activate();\n      var layer = this._activeLayer;\n      return Base.importJSON(json, layer && layer.isEmpty() && layer);\n    },\n    removeOn: function removeOn(type) {\n      var sets = this._removeSets;\n\n      if (sets) {\n        if (type === 'mouseup') sets.mousedrag = null;\n        var set = sets[type];\n\n        if (set) {\n          for (var id in set) {\n            var item = set[id];\n\n            for (var key in sets) {\n              var other = sets[key];\n              if (other && other != set) delete other[item._id];\n            }\n\n            item.remove();\n          }\n\n          sets[type] = null;\n        }\n      }\n    },\n    draw: function draw(ctx, matrix, pixelRatio) {\n      this._updateVersion++;\n      ctx.save();\n      matrix.applyToContext(ctx);\n      var children = this._children,\n          param = new Base({\n        offset: new Point(0, 0),\n        pixelRatio: pixelRatio,\n        viewMatrix: matrix.isIdentity() ? null : matrix,\n        matrices: [new Matrix()],\n        updateMatrix: true\n      });\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].draw(ctx, param);\n      }\n\n      ctx.restore();\n\n      if (this._selectionCount > 0) {\n        ctx.save();\n        ctx.strokeWidth = 1;\n        var items = this._selectionItems,\n            size = this._scope.settings.handleSize,\n            version = this._updateVersion;\n\n        for (var id in items) {\n          items[id]._drawSelection(ctx, matrix, size, items, version);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n  var Item = Base.extend(Emitter, {\n    statics: {\n      extend: function extend(src) {\n        if (src._serializeFields) src._serializeFields = Base.set({}, this.prototype._serializeFields, src._serializeFields);\n        return extend.base.apply(this, arguments);\n      },\n      NO_INSERT: {\n        insert: false\n      }\n    },\n    _class: 'Item',\n    _name: null,\n    _applyMatrix: true,\n    _canApplyMatrix: true,\n    _canScaleStroke: false,\n    _pivot: null,\n    _visible: true,\n    _blendMode: 'normal',\n    _opacity: 1,\n    _locked: false,\n    _guide: false,\n    _clipMask: false,\n    _selection: 0,\n    _selectBounds: true,\n    _selectChildren: false,\n    _serializeFields: {\n      name: null,\n      applyMatrix: null,\n      matrix: new Matrix(),\n      pivot: null,\n      visible: true,\n      blendMode: 'normal',\n      opacity: 1,\n      locked: false,\n      guide: false,\n      clipMask: false,\n      selected: false,\n      data: {}\n    },\n    _prioritize: ['applyMatrix']\n  }, new function () {\n    var handlers = ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick', 'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'];\n    return Base.each(handlers, function (name) {\n      this._events[name] = {\n        install: function install(type) {\n          this.getView()._countItemEvent(type, 1);\n        },\n        uninstall: function uninstall(type) {\n          this.getView()._countItemEvent(type, -1);\n        }\n      };\n    }, {\n      _events: {\n        onFrame: {\n          install: function install() {\n            this.getView()._animateItem(this, true);\n          },\n          uninstall: function uninstall() {\n            this.getView()._animateItem(this, false);\n          }\n        },\n        onLoad: {},\n        onError: {}\n      },\n      statics: {\n        _itemHandlers: handlers\n      }\n    });\n  }(), {\n    initialize: function Item() {},\n    _initialize: function _initialize(props, point) {\n      var hasProps = props && Base.isPlainObject(props),\n          internal = hasProps && props.internal === true,\n          matrix = this._matrix = new Matrix(),\n          project = hasProps && props.project || paper.project,\n          settings = paper.settings;\n      this._id = internal ? null : UID.get();\n      this._parent = this._index = null;\n      this._applyMatrix = this._canApplyMatrix && settings.applyMatrix;\n      if (point) matrix.translate(point);\n      matrix._owner = this;\n      this._style = new Style(project._currentStyle, this, project);\n\n      if (internal || hasProps && props.insert == false || !settings.insertItems && !(hasProps && props.insert === true)) {\n        this._setProject(project);\n      } else {\n        (hasProps && props.parent || project)._insertItem(undefined, this, true);\n      }\n\n      if (hasProps && props !== Item.NO_INSERT) {\n        this.set(props, {\n          internal: true,\n          insert: true,\n          project: true,\n          parent: true\n        });\n      }\n\n      return hasProps;\n    },\n    _serialize: function _serialize(options, dictionary) {\n      var props = {},\n          that = this;\n\n      function serialize(fields) {\n        for (var key in fields) {\n          var value = that[key];\n\n          if (!Base.equals(value, key === 'leading' ? fields.fontSize * 1.2 : fields[key])) {\n            props[key] = Base.serialize(value, options, key !== 'data', dictionary);\n          }\n        }\n      }\n\n      serialize(this._serializeFields);\n      if (!(this instanceof Group)) serialize(this._style._defaults);\n      return [this._class, props];\n    },\n    _changed: function _changed(flags) {\n      var symbol = this._symbol,\n          cacheParent = this._parent || symbol,\n          project = this._project;\n\n      if (flags & 8) {\n        this._bounds = this._position = this._decomposed = undefined;\n      }\n\n      if (flags & 16) {\n        this._globalMatrix = undefined;\n      }\n\n      if (cacheParent && flags & 72) {\n        Item._clearBoundsCache(cacheParent);\n      }\n\n      if (flags & 2) {\n        Item._clearBoundsCache(this);\n      }\n\n      if (project) project._changed(flags, this);\n      if (symbol) symbol._changed(flags);\n    },\n    getId: function getId() {\n      return this._id;\n    },\n    getName: function getName() {\n      return this._name;\n    },\n    setName: function setName(name) {\n      if (this._name) this._removeNamed();\n      if (name === +name + '') throw new Error('Names consisting only of numbers are not supported.');\n\n      var owner = this._getOwner();\n\n      if (name && owner) {\n        var children = owner._children,\n            namedChildren = owner._namedChildren;\n        (namedChildren[name] = namedChildren[name] || []).push(this);\n        if (!(name in children)) children[name] = this;\n      }\n\n      this._name = name || undefined;\n\n      this._changed(256);\n    },\n    getStyle: function getStyle() {\n      return this._style;\n    },\n    setStyle: function setStyle(style) {\n      this.getStyle().set(style);\n    }\n  }, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'], function (name) {\n    var part = Base.capitalize(name),\n        key = '_' + name,\n        flags = {\n      locked: 256,\n      visible: 265\n    };\n\n    this['get' + part] = function () {\n      return this[key];\n    };\n\n    this['set' + part] = function (value) {\n      if (value != this[key]) {\n        this[key] = value;\n\n        this._changed(flags[name] || 257);\n      }\n    };\n  }, {}), {\n    beans: true,\n    getSelection: function getSelection() {\n      return this._selection;\n    },\n    setSelection: function setSelection(selection) {\n      if (selection !== this._selection) {\n        this._selection = selection;\n        var project = this._project;\n\n        if (project) {\n          project._updateSelection(this);\n\n          this._changed(257);\n        }\n      }\n    },\n    _changeSelection: function _changeSelection(flag, selected) {\n      var selection = this._selection;\n      this.setSelection(selected ? selection | flag : selection & ~flag);\n    },\n    isSelected: function isSelected() {\n      if (this._selectChildren) {\n        var children = this._children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].isSelected()) return true;\n        }\n      }\n\n      return !!(this._selection & 1);\n    },\n    setSelected: function setSelected(selected) {\n      if (this._selectChildren) {\n        var children = this._children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].setSelected(selected);\n        }\n      }\n\n      this._changeSelection(1, selected);\n    },\n    isFullySelected: function isFullySelected() {\n      var children = this._children,\n          selected = !!(this._selection & 1);\n\n      if (children && selected) {\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (!children[i].isFullySelected()) return false;\n        }\n\n        return true;\n      }\n\n      return selected;\n    },\n    setFullySelected: function setFullySelected(selected) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].setFullySelected(selected);\n        }\n      }\n\n      this._changeSelection(1, selected);\n    },\n    isClipMask: function isClipMask() {\n      return this._clipMask;\n    },\n    setClipMask: function setClipMask(clipMask) {\n      if (this._clipMask != (clipMask = !!clipMask)) {\n        this._clipMask = clipMask;\n\n        if (clipMask) {\n          this.setFillColor(null);\n          this.setStrokeColor(null);\n        }\n\n        this._changed(257);\n\n        if (this._parent) this._parent._changed(2048);\n      }\n    },\n    getData: function getData() {\n      if (!this._data) this._data = {};\n      return this._data;\n    },\n    setData: function setData(data) {\n      this._data = data;\n    },\n    getPosition: function getPosition(_dontLink) {\n      var ctor = _dontLink ? Point : LinkedPoint;\n\n      var position = this._position || (this._position = this._getPositionFromBounds());\n\n      return new ctor(position.x, position.y, this, 'setPosition');\n    },\n    setPosition: function setPosition() {\n      this.translate(Point.read(arguments).subtract(this.getPosition(true)));\n    },\n    _getPositionFromBounds: function _getPositionFromBounds(bounds) {\n      return this._pivot ? this._matrix._transformPoint(this._pivot) : (bounds || this.getBounds()).getCenter(true);\n    },\n    getPivot: function getPivot() {\n      var pivot = this._pivot;\n      return pivot ? new LinkedPoint(pivot.x, pivot.y, this, 'setPivot') : null;\n    },\n    setPivot: function setPivot() {\n      this._pivot = Point.read(arguments, 0, {\n        clone: true,\n        readNull: true\n      });\n      this._position = undefined;\n    }\n  }, Base.each({\n    getStrokeBounds: {\n      stroke: true\n    },\n    getHandleBounds: {\n      handle: true\n    },\n    getInternalBounds: {\n      internal: true\n    }\n  }, function (options, key) {\n    this[key] = function (matrix) {\n      return this.getBounds(matrix, options);\n    };\n  }, {\n    beans: true,\n    getBounds: function getBounds(matrix, options) {\n      var hasMatrix = options || matrix instanceof Matrix,\n          opts = Base.set({}, hasMatrix ? options : matrix, this._boundsOptions);\n      if (!opts.stroke || this.getStrokeScaling()) opts.cacheItem = this;\n\n      var rect = this._getCachedBounds(hasMatrix && matrix, opts).rect;\n\n      return !arguments.length ? new LinkedRectangle(rect.x, rect.y, rect.width, rect.height, this, 'setBounds') : rect;\n    },\n    setBounds: function setBounds() {\n      var rect = _Rectangle.read(arguments),\n          bounds = this.getBounds(),\n          _matrix = this._matrix,\n          matrix = new Matrix(),\n          center = rect.getCenter();\n\n      matrix.translate(center);\n\n      if (rect.width != bounds.width || rect.height != bounds.height) {\n        if (!_matrix.isInvertible()) {\n          _matrix.set(_matrix._backup || new Matrix().translate(_matrix.getTranslation()));\n\n          bounds = this.getBounds();\n        }\n\n        matrix.scale(bounds.width !== 0 ? rect.width / bounds.width : 0, bounds.height !== 0 ? rect.height / bounds.height : 0);\n      }\n\n      center = bounds.getCenter();\n      matrix.translate(-center.x, -center.y);\n      this.transform(matrix);\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var children = this._children;\n      if (!children || !children.length) return new _Rectangle();\n\n      Item._updateBoundsCache(this, options.cacheItem);\n\n      return Item._getBounds(children, matrix, options);\n    },\n    _getBoundsCacheKey: function _getBoundsCacheKey(options, internal) {\n      return [options.stroke ? 1 : 0, options.handle ? 1 : 0, internal ? 1 : 0].join('');\n    },\n    _getCachedBounds: function _getCachedBounds(matrix, options, noInternal) {\n      matrix = matrix && matrix._orNullIfIdentity();\n\n      var internal = options.internal && !noInternal,\n          cacheItem = options.cacheItem,\n          _matrix = internal ? null : this._matrix._orNullIfIdentity(),\n          cacheKey = cacheItem && (!matrix || matrix.equals(_matrix)) && this._getBoundsCacheKey(options, internal),\n          bounds = this._bounds;\n\n      Item._updateBoundsCache(this._parent || this._symbol, cacheItem);\n\n      if (cacheKey && bounds && cacheKey in bounds) {\n        var cached = bounds[cacheKey];\n        return {\n          rect: cached.rect.clone(),\n          nonscaling: cached.nonscaling\n        };\n      }\n\n      var res = this._getBounds(matrix || _matrix, options),\n          rect = res.rect || res,\n          style = this._style,\n          nonscaling = res.nonscaling || style.hasStroke() && !style.getStrokeScaling();\n\n      if (cacheKey) {\n        if (!bounds) {\n          this._bounds = bounds = {};\n        }\n\n        var cached = bounds[cacheKey] = {\n          rect: rect.clone(),\n          nonscaling: nonscaling,\n          internal: internal\n        };\n      }\n\n      return {\n        rect: rect,\n        nonscaling: nonscaling\n      };\n    },\n    _getStrokeMatrix: function _getStrokeMatrix(matrix, options) {\n      var parent = this.getStrokeScaling() ? null : options && options.internal ? this : this._parent || this._symbol && this._symbol._item,\n          mx = parent ? parent.getViewMatrix().invert() : matrix;\n      return mx && mx._shiftless();\n    },\n    statics: {\n      _updateBoundsCache: function _updateBoundsCache(parent, item) {\n        if (parent && item) {\n          var id = item._id,\n              ref = parent._boundsCache = parent._boundsCache || {\n            ids: {},\n            list: []\n          };\n\n          if (!ref.ids[id]) {\n            ref.list.push(item);\n            ref.ids[id] = item;\n          }\n        }\n      },\n      _clearBoundsCache: function _clearBoundsCache(item) {\n        var cache = item._boundsCache;\n\n        if (cache) {\n          item._bounds = item._position = item._boundsCache = undefined;\n\n          for (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n            var other = list[i];\n\n            if (other !== item) {\n              other._bounds = other._position = undefined;\n              if (other._boundsCache) Item._clearBoundsCache(other);\n            }\n          }\n        }\n      },\n      _getBounds: function _getBounds(items, matrix, options) {\n        var x1 = Infinity,\n            x2 = -x1,\n            y1 = x1,\n            y2 = x2,\n            nonscaling = false;\n        options = options || {};\n\n        for (var i = 0, l = items.length; i < l; i++) {\n          var item = items[i];\n\n          if (item._visible && !item.isEmpty(true)) {\n            var bounds = item._getCachedBounds(matrix && matrix.appended(item._matrix), options, true),\n                rect = bounds.rect;\n\n            x1 = Math.min(rect.x, x1);\n            y1 = Math.min(rect.y, y1);\n            x2 = Math.max(rect.x + rect.width, x2);\n            y2 = Math.max(rect.y + rect.height, y2);\n            if (bounds.nonscaling) nonscaling = true;\n          }\n        }\n\n        return {\n          rect: isFinite(x1) ? new _Rectangle(x1, y1, x2 - x1, y2 - y1) : new _Rectangle(),\n          nonscaling: nonscaling\n        };\n      }\n    }\n  }), {\n    beans: true,\n    _decompose: function _decompose() {\n      return this._applyMatrix ? null : this._decomposed || (this._decomposed = this._matrix.decompose());\n    },\n    getRotation: function getRotation() {\n      var decomposed = this._decompose();\n\n      return decomposed ? decomposed.rotation : 0;\n    },\n    setRotation: function setRotation(rotation) {\n      var current = this.getRotation();\n\n      if (current != null && rotation != null) {\n        var decomposed = this._decomposed;\n        this.rotate(rotation - current);\n\n        if (decomposed) {\n          decomposed.rotation = rotation;\n          this._decomposed = decomposed;\n        }\n      }\n    },\n    getScaling: function getScaling() {\n      var decomposed = this._decompose(),\n          s = decomposed && decomposed.scaling;\n\n      return new LinkedPoint(s ? s.x : 1, s ? s.y : 1, this, 'setScaling');\n    },\n    setScaling: function setScaling() {\n      var current = this.getScaling(),\n          scaling = Point.read(arguments, 0, {\n        clone: true,\n        readNull: true\n      });\n\n      if (current && scaling && !current.equals(scaling)) {\n        var rotation = this.getRotation(),\n            decomposed = this._decomposed,\n            matrix = new Matrix(),\n            center = this.getPosition(true);\n        matrix.translate(center);\n        if (rotation) matrix.rotate(rotation);\n        matrix.scale(scaling.x / current.x, scaling.y / current.y);\n        if (rotation) matrix.rotate(-rotation);\n        matrix.translate(center.negate());\n        this.transform(matrix);\n\n        if (decomposed) {\n          decomposed.scaling = scaling;\n          this._decomposed = decomposed;\n        }\n      }\n    },\n    getMatrix: function getMatrix() {\n      return this._matrix;\n    },\n    setMatrix: function setMatrix() {\n      var matrix = this._matrix;\n      matrix.initialize.apply(matrix, arguments);\n    },\n    getGlobalMatrix: function getGlobalMatrix(_dontClone) {\n      var matrix = this._globalMatrix;\n\n      if (matrix) {\n        var parent = this._parent;\n        var parents = [];\n\n        while (parent) {\n          if (!parent._globalMatrix) {\n            matrix = null;\n\n            for (var i = 0, l = parents.length; i < l; i++) {\n              parents[i]._globalMatrix = null;\n            }\n\n            break;\n          }\n\n          parents.push(parent);\n          parent = parent._parent;\n        }\n      }\n\n      if (!matrix) {\n        matrix = this._globalMatrix = this._matrix.clone();\n        var parent = this._parent;\n        if (parent) matrix.prepend(parent.getGlobalMatrix(true));\n      }\n\n      return _dontClone ? matrix : matrix.clone();\n    },\n    getViewMatrix: function getViewMatrix() {\n      return this.getGlobalMatrix().prepend(this.getView()._matrix);\n    },\n    getApplyMatrix: function getApplyMatrix() {\n      return this._applyMatrix;\n    },\n    setApplyMatrix: function setApplyMatrix(apply) {\n      if (this._applyMatrix = this._canApplyMatrix && !!apply) this.transform(null, true);\n    },\n    getTransformContent: '#getApplyMatrix',\n    setTransformContent: '#setApplyMatrix'\n  }, {\n    getProject: function getProject() {\n      return this._project;\n    },\n    _setProject: function _setProject(project, installEvents) {\n      if (this._project !== project) {\n        if (this._project) this._installEvents(false);\n        this._project = project;\n        var children = this._children;\n\n        for (var i = 0, l = children && children.length; i < l; i++) {\n          children[i]._setProject(project);\n        }\n\n        installEvents = true;\n      }\n\n      if (installEvents) this._installEvents(true);\n    },\n    getView: function getView() {\n      return this._project._view;\n    },\n    _installEvents: function _installEvents(install) {\n      _installEvents.base.call(this, install);\n\n      var children = this._children;\n\n      for (var i = 0, l = children && children.length; i < l; i++) {\n        children[i]._installEvents(install);\n      }\n    },\n    getLayer: function getLayer() {\n      var parent = this;\n\n      while (parent = parent._parent) {\n        if (parent instanceof Layer) return parent;\n      }\n\n      return null;\n    },\n    getParent: function getParent() {\n      return this._parent;\n    },\n    setParent: function setParent(item) {\n      return item.addChild(this);\n    },\n    _getOwner: '#getParent',\n    getChildren: function getChildren() {\n      return this._children;\n    },\n    setChildren: function setChildren(items) {\n      this.removeChildren();\n      this.addChildren(items);\n    },\n    getFirstChild: function getFirstChild() {\n      return this._children && this._children[0] || null;\n    },\n    getLastChild: function getLastChild() {\n      return this._children && this._children[this._children.length - 1] || null;\n    },\n    getNextSibling: function getNextSibling() {\n      var owner = this._getOwner();\n\n      return owner && owner._children[this._index + 1] || null;\n    },\n    getPreviousSibling: function getPreviousSibling() {\n      var owner = this._getOwner();\n\n      return owner && owner._children[this._index - 1] || null;\n    },\n    getIndex: function getIndex() {\n      return this._index;\n    },\n    equals: function equals(item) {\n      return item === this || item && this._class === item._class && this._style.equals(item._style) && this._matrix.equals(item._matrix) && this._locked === item._locked && this._visible === item._visible && this._blendMode === item._blendMode && this._opacity === item._opacity && this._clipMask === item._clipMask && this._guide === item._guide && this._equals(item) || false;\n    },\n    _equals: function _equals(item) {\n      return Base.equals(this._children, item._children);\n    },\n    clone: function clone(options) {\n      var copy = new this.constructor(Item.NO_INSERT),\n          children = this._children,\n          insert = Base.pick(options ? options.insert : undefined, options === undefined || options === true),\n          deep = Base.pick(options ? options.deep : undefined, true);\n      if (children) copy.copyAttributes(this);\n      if (!children || deep) copy.copyContent(this);\n      if (!children) copy.copyAttributes(this);\n      if (insert) copy.insertAbove(this);\n      var name = this._name,\n          parent = this._parent;\n\n      if (name && parent) {\n        var children = parent._children,\n            orig = name,\n            i = 1;\n\n        while (children[name]) {\n          name = orig + ' ' + i++;\n        }\n\n        if (name !== orig) copy.setName(name);\n      }\n\n      return copy;\n    },\n    copyContent: function copyContent(source) {\n      var children = source._children;\n\n      for (var i = 0, l = children && children.length; i < l; i++) {\n        this.addChild(children[i].clone(false), true);\n      }\n    },\n    copyAttributes: function copyAttributes(source, excludeMatrix) {\n      this.setStyle(source._style);\n      var keys = ['_locked', '_visible', '_blendMode', '_opacity', '_clipMask', '_guide'];\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i];\n        if (source.hasOwnProperty(key)) this[key] = source[key];\n      }\n\n      if (!excludeMatrix) this._matrix.set(source._matrix, true);\n      this.setApplyMatrix(source._applyMatrix);\n      this.setPivot(source._pivot);\n      this.setSelection(source._selection);\n      var data = source._data,\n          name = source._name;\n      this._data = data ? Base.clone(data) : null;\n      if (name) this.setName(name);\n    },\n    rasterize: function rasterize(resolution, insert) {\n      var bounds = this.getStrokeBounds(),\n          scale = (resolution || this.getView().getResolution()) / 72,\n          topLeft = bounds.getTopLeft().floor(),\n          bottomRight = bounds.getBottomRight().ceil(),\n          size = new Size(bottomRight.subtract(topLeft)),\n          raster = new Raster(Item.NO_INSERT);\n\n      if (!size.isZero()) {\n        var canvas = CanvasProvider.getCanvas(size.multiply(scale)),\n            ctx = canvas.getContext('2d'),\n            matrix = new Matrix().scale(scale).translate(topLeft.negate());\n        ctx.save();\n        matrix.applyToContext(ctx);\n        this.draw(ctx, new Base({\n          matrices: [matrix]\n        }));\n        ctx.restore();\n        raster.setCanvas(canvas);\n      }\n\n      raster.transform(new Matrix().translate(topLeft.add(size.divide(2))).scale(1 / scale));\n      if (insert === undefined || insert) raster.insertAbove(this);\n      return raster;\n    },\n    contains: function contains() {\n      var matrix = this._matrix;\n      return matrix.isInvertible() && !!this._contains(matrix._inverseTransform(Point.read(arguments)));\n    },\n    _contains: function _contains(point) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          if (children[i].contains(point)) return true;\n        }\n\n        return false;\n      }\n\n      return point.isInside(this.getInternalBounds());\n    },\n    isInside: function isInside() {\n      return _Rectangle.read(arguments).contains(this.getBounds());\n    },\n    _asPathItem: function _asPathItem() {\n      return new Path.Rectangle({\n        rectangle: this.getInternalBounds(),\n        matrix: this._matrix,\n        insert: false\n      });\n    },\n    intersects: function intersects(item, _matrix) {\n      if (!(item instanceof Item)) return false;\n      return this._asPathItem().getIntersections(item._asPathItem(), null, _matrix, true).length > 0;\n    }\n  }, new function () {\n    function hitTest() {\n      var args = arguments;\n      return this._hitTest(Point.read(args), HitResult.getOptions(args));\n    }\n\n    function hitTestAll() {\n      var args = arguments,\n          point = Point.read(args),\n          options = HitResult.getOptions(args),\n          all = [];\n\n      this._hitTest(point, new Base({\n        all: all\n      }, options));\n\n      return all;\n    }\n\n    function hitTestChildren(point, options, viewMatrix, _exclude) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          var child = children[i];\n\n          var res = child !== _exclude && child._hitTest(point, options, viewMatrix);\n\n          if (res && !options.all) return res;\n        }\n      }\n\n      return null;\n    }\n\n    Project.inject({\n      hitTest: hitTest,\n      hitTestAll: hitTestAll,\n      _hitTest: hitTestChildren\n    });\n    return {\n      hitTest: hitTest,\n      hitTestAll: hitTestAll,\n      _hitTestChildren: hitTestChildren\n    };\n  }(), {\n    _hitTest: function _hitTest(point, options, parentViewMatrix) {\n      if (this._locked || !this._visible || this._guide && !options.guides || this.isEmpty()) {\n        return null;\n      }\n\n      var matrix = this._matrix,\n          viewMatrix = parentViewMatrix ? parentViewMatrix.appended(matrix) : this.getGlobalMatrix().prepend(this.getView()._matrix),\n          tolerance = Math.max(options.tolerance, 1e-12),\n          tolerancePadding = options._tolerancePadding = new Size(Path._getStrokePadding(tolerance, matrix._shiftless().invert()));\n      point = matrix._inverseTransform(point);\n\n      if (!point || !this._children && !this.getBounds({\n        internal: true,\n        stroke: true,\n        handle: true\n      }).expand(tolerancePadding.multiply(2))._containsPoint(point)) {\n        return null;\n      }\n\n      var checkSelf = !(options.guides && !this._guide || options.selected && !this.isSelected() || options.type && options.type !== Base.hyphenate(this._class) || options.class && !(this instanceof options.class)),\n          match = options.match,\n          that = this,\n          bounds,\n          res;\n\n      function filter(hit) {\n        if (hit && match && !match(hit)) hit = null;\n        if (hit && options.all) options.all.push(hit);\n        return hit;\n      }\n\n      function checkPoint(type, part) {\n        var pt = part ? bounds['get' + part]() : that.getPosition();\n\n        if (point.subtract(pt).divide(tolerancePadding).length <= 1) {\n          return new HitResult(type, that, {\n            name: part ? Base.hyphenate(part) : type,\n            point: pt\n          });\n        }\n      }\n\n      var checkPosition = options.position,\n          checkCenter = options.center,\n          checkBounds = options.bounds;\n\n      if (checkSelf && this._parent && (checkPosition || checkCenter || checkBounds)) {\n        if (checkCenter || checkBounds) {\n          bounds = this.getInternalBounds();\n        }\n\n        res = checkPosition && checkPoint('position') || checkCenter && checkPoint('center', 'Center');\n\n        if (!res && checkBounds) {\n          var points = ['TopLeft', 'TopRight', 'BottomLeft', 'BottomRight', 'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'];\n\n          for (var i = 0; i < 8 && !res; i++) {\n            res = checkPoint('bounds', points[i]);\n          }\n        }\n\n        res = filter(res);\n      }\n\n      if (!res) {\n        res = this._hitTestChildren(point, options, viewMatrix) || checkSelf && filter(this._hitTestSelf(point, options, viewMatrix, this.getStrokeScaling() ? null : viewMatrix._shiftless().invert())) || null;\n      }\n\n      if (res && res.point) {\n        res.point = matrix.transform(res.point);\n      }\n\n      return res;\n    },\n    _hitTestSelf: function _hitTestSelf(point, options) {\n      if (options.fill && this.hasFill() && this._contains(point)) return new HitResult('fill', this);\n    },\n    matches: function matches(name, compare) {\n      function matchObject(obj1, obj2) {\n        for (var i in obj1) {\n          if (obj1.hasOwnProperty(i)) {\n            var val1 = obj1[i],\n                val2 = obj2[i];\n\n            if (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n              if (!matchObject(val1, val2)) return false;\n            } else if (!Base.equals(val1, val2)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      var type = typeof name;\n\n      if (type === 'object') {\n        for (var key in name) {\n          if (name.hasOwnProperty(key) && !this.matches(key, name[key])) return false;\n        }\n\n        return true;\n      } else if (type === 'function') {\n        return name(this);\n      } else if (name === 'match') {\n        return compare(this);\n      } else {\n        var value = /^(empty|editable)$/.test(name) ? this['is' + Base.capitalize(name)]() : name === 'type' ? Base.hyphenate(this._class) : this[name];\n\n        if (name === 'class') {\n          if (typeof compare === 'function') return this instanceof compare;\n          value = this._class;\n        }\n\n        if (typeof compare === 'function') {\n          return !!compare(value);\n        } else if (compare) {\n          if (compare.test) {\n            return compare.test(value);\n          } else if (Base.isPlainObject(compare)) {\n            return matchObject(compare, value);\n          }\n        }\n\n        return Base.equals(value, compare);\n      }\n    },\n    getItems: function getItems(options) {\n      return Item._getItems(this, options, this._matrix);\n    },\n    getItem: function getItem(options) {\n      return Item._getItems(this, options, this._matrix, null, true)[0] || null;\n    },\n    statics: {\n      _getItems: function _getItems(item, options, matrix, param, firstOnly) {\n        if (!param) {\n          var obj = typeof options === 'object' && options,\n              overlapping = obj && obj.overlapping,\n              inside = obj && obj.inside,\n              bounds = overlapping || inside,\n              rect = bounds && _Rectangle.read([bounds]);\n\n          param = {\n            items: [],\n            recursive: obj && obj.recursive !== false,\n            inside: !!inside,\n            overlapping: !!overlapping,\n            rect: rect,\n            path: overlapping && new Path.Rectangle({\n              rectangle: rect,\n              insert: false\n            })\n          };\n\n          if (obj) {\n            options = Base.filter({}, options, {\n              recursive: true,\n              inside: true,\n              overlapping: true\n            });\n          }\n        }\n\n        var children = item._children,\n            items = param.items,\n            rect = param.rect;\n        matrix = rect && (matrix || new Matrix());\n\n        for (var i = 0, l = children && children.length; i < l; i++) {\n          var child = children[i],\n              childMatrix = matrix && matrix.appended(child._matrix),\n              add = true;\n\n          if (rect) {\n            var bounds = child.getBounds(childMatrix);\n            if (!rect.intersects(bounds)) continue;\n            if (!(rect.contains(bounds) || param.overlapping && (bounds.contains(rect) || param.path.intersects(child, childMatrix)))) add = false;\n          }\n\n          if (add && child.matches(options)) {\n            items.push(child);\n            if (firstOnly) break;\n          }\n\n          if (param.recursive !== false) {\n            _getItems(child, options, childMatrix, param, firstOnly);\n          }\n\n          if (firstOnly && items.length > 0) break;\n        }\n\n        return items;\n      }\n    }\n  }, {\n    importJSON: function importJSON(json) {\n      var res = Base.importJSON(json, this);\n      return res !== this ? this.addChild(res) : res;\n    },\n    addChild: function addChild(item) {\n      return this.insertChild(undefined, item);\n    },\n    insertChild: function insertChild(index, item) {\n      var res = item ? this.insertChildren(index, [item]) : null;\n      return res && res[0];\n    },\n    addChildren: function addChildren(items) {\n      return this.insertChildren(this._children.length, items);\n    },\n    insertChildren: function insertChildren(index, items) {\n      var children = this._children;\n\n      if (children && items && items.length > 0) {\n        items = Base.slice(items);\n        var inserted = {};\n\n        for (var i = items.length - 1; i >= 0; i--) {\n          var item = items[i],\n              id = item && item._id;\n\n          if (!item || inserted[id]) {\n            items.splice(i, 1);\n          } else {\n            item._remove(false, true);\n\n            inserted[id] = true;\n          }\n        }\n\n        Base.splice(children, items, index, 0);\n        var project = this._project,\n            notifySelf = project._changes;\n\n        for (var i = 0, l = items.length; i < l; i++) {\n          var item = items[i],\n              name = item._name;\n          item._parent = this;\n\n          item._setProject(project, true);\n\n          if (name) item.setName(name);\n          if (notifySelf) item._changed(5);\n        }\n\n        this._changed(11);\n      } else {\n        items = null;\n      }\n\n      return items;\n    },\n    _insertItem: '#insertChild',\n    _insertAt: function _insertAt(item, offset) {\n      var owner = item && item._getOwner(),\n          res = item !== this && owner ? this : null;\n\n      if (res) {\n        res._remove(false, true);\n\n        owner._insertItem(item._index + offset, res);\n      }\n\n      return res;\n    },\n    insertAbove: function insertAbove(item) {\n      return this._insertAt(item, 1);\n    },\n    insertBelow: function insertBelow(item) {\n      return this._insertAt(item, 0);\n    },\n    sendToBack: function sendToBack() {\n      var owner = this._getOwner();\n\n      return owner ? owner._insertItem(0, this) : null;\n    },\n    bringToFront: function bringToFront() {\n      var owner = this._getOwner();\n\n      return owner ? owner._insertItem(undefined, this) : null;\n    },\n    appendTop: '#addChild',\n    appendBottom: function appendBottom(item) {\n      return this.insertChild(0, item);\n    },\n    moveAbove: '#insertAbove',\n    moveBelow: '#insertBelow',\n    addTo: function addTo(owner) {\n      return owner._insertItem(undefined, this);\n    },\n    copyTo: function copyTo(owner) {\n      return this.clone(false).addTo(owner);\n    },\n    reduce: function reduce(options) {\n      var children = this._children;\n\n      if (children && children.length === 1) {\n        var child = children[0].reduce(options);\n\n        if (this._parent) {\n          child.insertAbove(this);\n          this.remove();\n        } else {\n          child.remove();\n        }\n\n        return child;\n      }\n\n      return this;\n    },\n    _removeNamed: function _removeNamed() {\n      var owner = this._getOwner();\n\n      if (owner) {\n        var children = owner._children,\n            namedChildren = owner._namedChildren,\n            name = this._name,\n            namedArray = namedChildren[name],\n            index = namedArray ? namedArray.indexOf(this) : -1;\n\n        if (index !== -1) {\n          if (children[name] == this) delete children[name];\n          namedArray.splice(index, 1);\n\n          if (namedArray.length) {\n            children[name] = namedArray[0];\n          } else {\n            delete namedChildren[name];\n          }\n        }\n      }\n    },\n    _remove: function _remove(notifySelf, notifyParent) {\n      var owner = this._getOwner(),\n          project = this._project,\n          index = this._index;\n\n      if (this._style) this._style._dispose();\n\n      if (owner) {\n        if (this._name) this._removeNamed();\n\n        if (index != null) {\n          if (project._activeLayer === this) project._activeLayer = this.getNextSibling() || this.getPreviousSibling();\n          Base.splice(owner._children, null, index, 1);\n        }\n\n        this._installEvents(false);\n\n        if (notifySelf && project._changes) this._changed(5);\n        if (notifyParent) owner._changed(11, this);\n        this._parent = null;\n        return true;\n      }\n\n      return false;\n    },\n    remove: function remove() {\n      return this._remove(true, true);\n    },\n    replaceWith: function replaceWith(item) {\n      var ok = item && item.insertBelow(this);\n      if (ok) this.remove();\n      return ok;\n    },\n    removeChildren: function removeChildren(start, end) {\n      if (!this._children) return null;\n      start = start || 0;\n      end = Base.pick(end, this._children.length);\n      var removed = Base.splice(this._children, null, start, end - start);\n\n      for (var i = removed.length - 1; i >= 0; i--) {\n        removed[i]._remove(true, false);\n      }\n\n      if (removed.length > 0) this._changed(11);\n      return removed;\n    },\n    clear: '#removeChildren',\n    reverseChildren: function reverseChildren() {\n      if (this._children) {\n        this._children.reverse();\n\n        for (var i = 0, l = this._children.length; i < l; i++) {\n          this._children[i]._index = i;\n        }\n\n        this._changed(11);\n      }\n    },\n    isEmpty: function isEmpty(recursively) {\n      var children = this._children;\n      var numChildren = children ? children.length : 0;\n\n      if (recursively) {\n        for (var i = 0; i < numChildren; i++) {\n          if (!children[i].isEmpty(recursively)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return !numChildren;\n    },\n    isEditable: function isEditable() {\n      var item = this;\n\n      while (item) {\n        if (!item._visible || item._locked) return false;\n        item = item._parent;\n      }\n\n      return true;\n    },\n    hasFill: function hasFill() {\n      return this.getStyle().hasFill();\n    },\n    hasStroke: function hasStroke() {\n      return this.getStyle().hasStroke();\n    },\n    hasShadow: function hasShadow() {\n      return this.getStyle().hasShadow();\n    },\n    _getOrder: function _getOrder(item) {\n      function getList(item) {\n        var list = [];\n\n        do {\n          list.unshift(item);\n        } while (item = item._parent);\n\n        return list;\n      }\n\n      var list1 = getList(this),\n          list2 = getList(item);\n\n      for (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n        if (list1[i] != list2[i]) {\n          return list1[i]._index < list2[i]._index ? 1 : -1;\n        }\n      }\n\n      return 0;\n    },\n    hasChildren: function hasChildren() {\n      return this._children && this._children.length > 0;\n    },\n    isInserted: function isInserted() {\n      return this._parent ? this._parent.isInserted() : false;\n    },\n    isAbove: function isAbove(item) {\n      return this._getOrder(item) === -1;\n    },\n    isBelow: function isBelow(item) {\n      return this._getOrder(item) === 1;\n    },\n    isParent: function isParent(item) {\n      return this._parent === item;\n    },\n    isChild: function isChild(item) {\n      return item && item._parent === this;\n    },\n    isDescendant: function isDescendant(item) {\n      var parent = this;\n\n      while (parent = parent._parent) {\n        if (parent === item) return true;\n      }\n\n      return false;\n    },\n    isAncestor: function isAncestor(item) {\n      return item ? item.isDescendant(this) : false;\n    },\n    isSibling: function isSibling(item) {\n      return this._parent === item._parent;\n    },\n    isGroupedWith: function isGroupedWith(item) {\n      var parent = this._parent;\n\n      while (parent) {\n        if (parent._parent && /^(Group|Layer|CompoundPath)$/.test(parent._class) && item.isDescendant(parent)) return true;\n        parent = parent._parent;\n      }\n\n      return false;\n    }\n  }, Base.each(['rotate', 'scale', 'shear', 'skew'], function (key) {\n    var rotate = key === 'rotate';\n\n    this[key] = function () {\n      var args = arguments,\n          value = (rotate ? Base : Point).read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      return this.transform(new Matrix()[key](value, center || this.getPosition(true)));\n    };\n  }, {\n    translate: function translate() {\n      var mx = new Matrix();\n      return this.transform(mx.translate.apply(mx, arguments));\n    },\n    transform: function transform(matrix, _applyRecursively, _setApplyMatrix) {\n      var _matrix = this._matrix,\n          transformMatrix = matrix && !matrix.isIdentity(),\n          applyMatrix = _setApplyMatrix && this._canApplyMatrix || this._applyMatrix && (transformMatrix || !_matrix.isIdentity() || _applyRecursively && this._children);\n      if (!transformMatrix && !applyMatrix) return this;\n\n      if (transformMatrix) {\n        if (!matrix.isInvertible() && _matrix.isInvertible()) _matrix._backup = _matrix.getValues();\n\n        _matrix.prepend(matrix, true);\n\n        var style = this._style,\n            fillColor = style.getFillColor(true),\n            strokeColor = style.getStrokeColor(true);\n        if (fillColor) fillColor.transform(matrix);\n        if (strokeColor) strokeColor.transform(matrix);\n      }\n\n      if (applyMatrix && (applyMatrix = this._transformContent(_matrix, _applyRecursively, _setApplyMatrix))) {\n        var pivot = this._pivot;\n        if (pivot) _matrix._transformPoint(pivot, pivot, true);\n\n        _matrix.reset(true);\n\n        if (_setApplyMatrix && this._canApplyMatrix) this._applyMatrix = true;\n      }\n\n      var bounds = this._bounds,\n          position = this._position;\n\n      if (transformMatrix || applyMatrix) {\n        this._changed(25);\n      }\n\n      var decomp = transformMatrix && bounds && matrix.decompose();\n\n      if (decomp && decomp.skewing.isZero() && decomp.rotation % 90 === 0) {\n        for (var key in bounds) {\n          var cache = bounds[key];\n\n          if (cache.nonscaling) {\n            delete bounds[key];\n          } else if (applyMatrix || !cache.internal) {\n            var rect = cache.rect;\n\n            matrix._transformBounds(rect, rect);\n          }\n        }\n\n        this._bounds = bounds;\n\n        var cached = bounds[this._getBoundsCacheKey(this._boundsOptions || {})];\n\n        if (cached) {\n          this._position = this._getPositionFromBounds(cached.rect);\n        }\n      } else if (transformMatrix && position && this._pivot) {\n        this._position = matrix._transformPoint(position, position);\n      }\n\n      return this;\n    },\n    _transformContent: function _transformContent(matrix, applyRecursively, setApplyMatrix) {\n      var children = this._children;\n\n      if (children) {\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].transform(matrix, applyRecursively, setApplyMatrix);\n        }\n\n        return true;\n      }\n    },\n    globalToLocal: function globalToLocal() {\n      return this.getGlobalMatrix(true)._inverseTransform(Point.read(arguments));\n    },\n    localToGlobal: function localToGlobal() {\n      return this.getGlobalMatrix(true)._transformPoint(Point.read(arguments));\n    },\n    parentToLocal: function parentToLocal() {\n      return this._matrix._inverseTransform(Point.read(arguments));\n    },\n    localToParent: function localToParent() {\n      return this._matrix._transformPoint(Point.read(arguments));\n    },\n    fitBounds: function fitBounds(rectangle, fill) {\n      rectangle = _Rectangle.read(arguments);\n      var bounds = this.getBounds(),\n          itemRatio = bounds.height / bounds.width,\n          rectRatio = rectangle.height / rectangle.width,\n          scale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio) ? rectangle.width / bounds.width : rectangle.height / bounds.height,\n          newBounds = new _Rectangle(new Point(), new Size(bounds.width * scale, bounds.height * scale));\n      newBounds.setCenter(rectangle.getCenter());\n      this.setBounds(newBounds);\n    }\n  }), {\n    _setStyles: function _setStyles(ctx, param, viewMatrix) {\n      var style = this._style,\n          matrix = this._matrix;\n\n      if (style.hasFill()) {\n        ctx.fillStyle = style.getFillColor().toCanvasStyle(ctx, matrix);\n      }\n\n      if (style.hasStroke()) {\n        ctx.strokeStyle = style.getStrokeColor().toCanvasStyle(ctx, matrix);\n        ctx.lineWidth = style.getStrokeWidth();\n        var strokeJoin = style.getStrokeJoin(),\n            strokeCap = style.getStrokeCap(),\n            miterLimit = style.getMiterLimit();\n        if (strokeJoin) ctx.lineJoin = strokeJoin;\n        if (strokeCap) ctx.lineCap = strokeCap;\n        if (miterLimit) ctx.miterLimit = miterLimit;\n\n        if (paper.support.nativeDash) {\n          var dashArray = style.getDashArray(),\n              dashOffset = style.getDashOffset();\n\n          if (dashArray && dashArray.length) {\n            if ('setLineDash' in ctx) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashOffset;\n            } else {\n              ctx.mozDash = dashArray;\n              ctx.mozDashOffset = dashOffset;\n            }\n          }\n        }\n      }\n\n      if (style.hasShadow()) {\n        var pixelRatio = param.pixelRatio || 1,\n            mx = viewMatrix._shiftless().prepend(new Matrix().scale(pixelRatio, pixelRatio)),\n            blur = mx.transform(new Point(style.getShadowBlur(), 0)),\n            offset = mx.transform(this.getShadowOffset());\n\n        ctx.shadowColor = style.getShadowColor().toCanvasStyle(ctx);\n        ctx.shadowBlur = blur.getLength();\n        ctx.shadowOffsetX = offset.x;\n        ctx.shadowOffsetY = offset.y;\n      }\n    },\n    draw: function draw(ctx, param, parentStrokeMatrix) {\n      var updateVersion = this._updateVersion = this._project._updateVersion;\n      if (!this._visible || this._opacity === 0) return;\n      var matrices = param.matrices,\n          viewMatrix = param.viewMatrix,\n          matrix = this._matrix,\n          globalMatrix = matrices[matrices.length - 1].appended(matrix);\n      if (!globalMatrix.isInvertible()) return;\n      viewMatrix = viewMatrix ? viewMatrix.appended(globalMatrix) : globalMatrix;\n      matrices.push(globalMatrix);\n\n      if (param.updateMatrix) {\n        this._globalMatrix = globalMatrix;\n      }\n\n      var blendMode = this._blendMode,\n          opacity = this._opacity,\n          normalBlend = blendMode === 'normal',\n          nativeBlend = BlendMode.nativeModes[blendMode],\n          direct = normalBlend && opacity === 1 || param.dontStart || param.clip || (nativeBlend || normalBlend && opacity < 1) && this._canComposite(),\n          pixelRatio = param.pixelRatio || 1,\n          mainCtx,\n          itemOffset,\n          prevOffset;\n\n      if (!direct) {\n        var bounds = this.getStrokeBounds(viewMatrix);\n\n        if (!bounds.width || !bounds.height) {\n          matrices.pop();\n          return;\n        }\n\n        prevOffset = param.offset;\n        itemOffset = param.offset = bounds.getTopLeft().floor();\n        mainCtx = ctx;\n        ctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1).multiply(pixelRatio));\n        if (pixelRatio !== 1) ctx.scale(pixelRatio, pixelRatio);\n      }\n\n      ctx.save();\n      var strokeMatrix = parentStrokeMatrix ? parentStrokeMatrix.appended(matrix) : this._canScaleStroke && !this.getStrokeScaling(true) && viewMatrix,\n          clip = !direct && param.clipItem,\n          transform = !strokeMatrix || clip;\n\n      if (direct) {\n        ctx.globalAlpha = opacity;\n        if (nativeBlend) ctx.globalCompositeOperation = blendMode;\n      } else if (transform) {\n        ctx.translate(-itemOffset.x, -itemOffset.y);\n      }\n\n      if (transform) {\n        (direct ? matrix : viewMatrix).applyToContext(ctx);\n      }\n\n      if (clip) {\n        param.clipItem.draw(ctx, param.extend({\n          clip: true\n        }));\n      }\n\n      if (strokeMatrix) {\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        var offset = param.offset;\n        if (offset) ctx.translate(-offset.x, -offset.y);\n      }\n\n      this._draw(ctx, param, viewMatrix, strokeMatrix);\n\n      ctx.restore();\n      matrices.pop();\n\n      if (param.clip && !param.dontFinish) {\n        ctx.clip(this.getFillRule());\n      }\n\n      if (!direct) {\n        BlendMode.process(blendMode, ctx, mainCtx, opacity, itemOffset.subtract(prevOffset).multiply(pixelRatio));\n        CanvasProvider.release(ctx);\n        param.offset = prevOffset;\n      }\n    },\n    _isUpdated: function _isUpdated(updateVersion) {\n      var parent = this._parent;\n      if (parent instanceof CompoundPath) return parent._isUpdated(updateVersion);\n      var updated = this._updateVersion === updateVersion;\n\n      if (!updated && parent && parent._visible && parent._isUpdated(updateVersion)) {\n        this._updateVersion = updateVersion;\n        updated = true;\n      }\n\n      return updated;\n    },\n    _drawSelection: function _drawSelection(ctx, matrix, size, selectionItems, updateVersion) {\n      var selection = this._selection,\n          itemSelected = selection & 1,\n          boundsSelected = selection & 2 || itemSelected && this._selectBounds,\n          positionSelected = selection & 4;\n      if (!this._drawSelected) itemSelected = false;\n\n      if ((itemSelected || boundsSelected || positionSelected) && this._isUpdated(updateVersion)) {\n        var layer,\n            color = this.getSelectedColor(true) || (layer = this.getLayer()) && layer.getSelectedColor(true),\n            mx = matrix.appended(this.getGlobalMatrix(true)),\n            half = size / 2;\n        ctx.strokeStyle = ctx.fillStyle = color ? color.toCanvasStyle(ctx) : '#009dec';\n        if (itemSelected) this._drawSelected(ctx, mx, selectionItems);\n\n        if (positionSelected) {\n          var pos = this.getPosition(true),\n              parent = this._parent,\n              point = parent ? parent.localToGlobal(pos) : pos,\n              x = point.x,\n              y = point.y;\n          ctx.beginPath();\n          ctx.arc(x, y, half, 0, Math.PI * 2, true);\n          ctx.stroke();\n          var deltas = [[0, -1], [1, 0], [0, 1], [-1, 0]],\n              start = half,\n              end = size + 1;\n\n          for (var i = 0; i < 4; i++) {\n            var delta = deltas[i],\n                dx = delta[0],\n                dy = delta[1];\n            ctx.moveTo(x + dx * start, y + dy * start);\n            ctx.lineTo(x + dx * end, y + dy * end);\n            ctx.stroke();\n          }\n        }\n\n        if (boundsSelected) {\n          var coords = mx._transformCorners(this.getInternalBounds());\n\n          ctx.beginPath();\n\n          for (var i = 0; i < 8; i++) {\n            ctx[!i ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n          }\n\n          ctx.closePath();\n          ctx.stroke();\n\n          for (var i = 0; i < 8; i++) {\n            ctx.fillRect(coords[i] - half, coords[++i] - half, size, size);\n          }\n        }\n      }\n    },\n    _canComposite: function _canComposite() {\n      return false;\n    }\n  }, Base.each(['down', 'drag', 'up', 'move'], function (key) {\n    this['removeOn' + Base.capitalize(key)] = function () {\n      var hash = {};\n      hash[key] = true;\n      return this.removeOn(hash);\n    };\n  }, {\n    removeOn: function removeOn(obj) {\n      for (var name in obj) {\n        if (obj[name]) {\n          var key = 'mouse' + name,\n              project = this._project,\n              sets = project._removeSets = project._removeSets || {};\n          sets[key] = sets[key] || {};\n          sets[key][this._id] = this;\n        }\n      }\n\n      return this;\n    }\n  }), {\n    tween: function tween(from, to, options) {\n      if (!options) {\n        options = to;\n        to = from;\n        from = null;\n\n        if (!options) {\n          options = to;\n          to = null;\n        }\n      }\n\n      var easing = options && options.easing,\n          start = options && options.start,\n          duration = options != null && (typeof options === 'number' ? options : options.duration),\n          tween = new Tween(this, from, to, duration, easing, start);\n\n      function onFrame(event) {\n        tween._handleFrame(event.time * 1000);\n\n        if (!tween.running) {\n          this.off('frame', onFrame);\n        }\n      }\n\n      if (duration) {\n        this.on('frame', onFrame);\n      }\n\n      return tween;\n    },\n    tweenTo: function tweenTo(to, options) {\n      return this.tween(null, to, options);\n    },\n    tweenFrom: function tweenFrom(from, options) {\n      return this.tween(from, null, options);\n    }\n  });\n  var Group = Item.extend({\n    _class: 'Group',\n    _selectBounds: false,\n    _selectChildren: true,\n    _serializeFields: {\n      children: []\n    },\n    initialize: function Group(arg) {\n      this._children = [];\n      this._namedChildren = {};\n      if (!this._initialize(arg)) this.addChildren(Array.isArray(arg) ? arg : arguments);\n    },\n    _changed: function _changed(flags) {\n      _changed.base.call(this, flags);\n\n      if (flags & 2050) {\n        this._clipItem = undefined;\n      }\n    },\n    _getClipItem: function _getClipItem() {\n      var clipItem = this._clipItem;\n\n      if (clipItem === undefined) {\n        clipItem = null;\n        var children = this._children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i]._clipMask) {\n            clipItem = children[i];\n            break;\n          }\n        }\n\n        this._clipItem = clipItem;\n      }\n\n      return clipItem;\n    },\n    isClipped: function isClipped() {\n      return !!this._getClipItem();\n    },\n    setClipped: function setClipped(clipped) {\n      var child = this.getFirstChild();\n      if (child) child.setClipMask(clipped);\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var clipItem = this._getClipItem();\n\n      return clipItem ? clipItem._getCachedBounds(clipItem._matrix.prepended(matrix), Base.set({}, options, {\n        stroke: false\n      })) : _getBounds.base.call(this, matrix, options);\n    },\n    _hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n      var clipItem = this._getClipItem();\n\n      return (!clipItem || clipItem.contains(point)) && _hitTestChildren.base.call(this, point, options, viewMatrix, clipItem);\n    },\n    _draw: function _draw(ctx, param) {\n      var clip = param.clip,\n          clipItem = !clip && this._getClipItem();\n\n      param = param.extend({\n        clipItem: clipItem,\n        clip: false\n      });\n\n      if (clip) {\n        ctx.beginPath();\n        param.dontStart = param.dontFinish = true;\n      } else if (clipItem) {\n        clipItem.draw(ctx, param.extend({\n          clip: true\n        }));\n      }\n\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var item = children[i];\n        if (item !== clipItem) item.draw(ctx, param);\n      }\n    }\n  });\n  var Layer = Group.extend({\n    _class: 'Layer',\n    initialize: function Layer() {\n      Group.apply(this, arguments);\n    },\n    _getOwner: function _getOwner() {\n      return this._parent || this._index != null && this._project;\n    },\n    isInserted: function isInserted() {\n      return this._parent ? isInserted.base.call(this) : this._index != null;\n    },\n    activate: function activate() {\n      this._project._activeLayer = this;\n    },\n    _hitTestSelf: function _hitTestSelf() {}\n  });\n  var Shape = Item.extend({\n    _class: 'Shape',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _canScaleStroke: true,\n    _serializeFields: {\n      type: null,\n      size: null,\n      radius: null\n    },\n    initialize: function Shape(props, point) {\n      this._initialize(props, point);\n    },\n    _equals: function _equals(item) {\n      return this._type === item._type && this._size.equals(item._size) && Base.equals(this._radius, item._radius);\n    },\n    copyContent: function copyContent(source) {\n      this.setType(source._type);\n      this.setSize(source._size);\n      this.setRadius(source._radius);\n    },\n    getType: function getType() {\n      return this._type;\n    },\n    setType: function setType(type) {\n      this._type = type;\n    },\n    getShape: '#getType',\n    setShape: '#setType',\n    getSize: function getSize() {\n      var size = this._size;\n      return new LinkedSize(size.width, size.height, this, 'setSize');\n    },\n    setSize: function setSize() {\n      var size = Size.read(arguments);\n\n      if (!this._size) {\n        this._size = size.clone();\n      } else if (!this._size.equals(size)) {\n        var type = this._type,\n            width = size.width,\n            height = size.height;\n\n        if (type === 'rectangle') {\n          this._radius.set(Size.min(this._radius, size.divide(2).abs()));\n        } else if (type === 'circle') {\n          width = height = (width + height) / 2;\n          this._radius = width / 2;\n        } else if (type === 'ellipse') {\n          this._radius._set(width / 2, height / 2);\n        }\n\n        this._size._set(width, height);\n\n        this._changed(9);\n      }\n    },\n    getRadius: function getRadius() {\n      var rad = this._radius;\n      return this._type === 'circle' ? rad : new LinkedSize(rad.width, rad.height, this, 'setRadius');\n    },\n    setRadius: function setRadius(radius) {\n      var type = this._type;\n\n      if (type === 'circle') {\n        if (radius === this._radius) return;\n        var size = radius * 2;\n        this._radius = radius;\n\n        this._size._set(size, size);\n      } else {\n        radius = Size.read(arguments);\n\n        if (!this._radius) {\n          this._radius = radius.clone();\n        } else {\n          if (this._radius.equals(radius)) return;\n\n          this._radius.set(radius);\n\n          if (type === 'rectangle') {\n            var size = Size.max(this._size, radius.multiply(2));\n\n            this._size.set(size);\n          } else if (type === 'ellipse') {\n            this._size._set(radius.width * 2, radius.height * 2);\n          }\n        }\n      }\n\n      this._changed(9);\n    },\n    isEmpty: function isEmpty() {\n      return false;\n    },\n    toPath: function toPath(insert) {\n      var path = new Path[Base.capitalize(this._type)]({\n        center: new Point(),\n        size: this._size,\n        radius: this._radius,\n        insert: false\n      });\n      path.copyAttributes(this);\n      if (paper.settings.applyMatrix) path.setApplyMatrix(true);\n      if (insert === undefined || insert) path.insertAbove(this);\n      return path;\n    },\n    toShape: '#clone',\n    _asPathItem: function _asPathItem() {\n      return this.toPath(false);\n    },\n    _draw: function _draw(ctx, param, viewMatrix, strokeMatrix) {\n      var style = this._style,\n          hasFill = style.hasFill(),\n          hasStroke = style.hasStroke(),\n          dontPaint = param.dontFinish || param.clip,\n          untransformed = !strokeMatrix;\n\n      if (hasFill || hasStroke || dontPaint) {\n        var type = this._type,\n            radius = this._radius,\n            isCircle = type === 'circle';\n        if (!param.dontStart) ctx.beginPath();\n\n        if (untransformed && isCircle) {\n          ctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n        } else {\n          var rx = isCircle ? radius : radius.width,\n              ry = isCircle ? radius : radius.height,\n              size = this._size,\n              width = size.width,\n              height = size.height;\n\n          if (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n            ctx.rect(-width / 2, -height / 2, width, height);\n          } else {\n            var x = width / 2,\n                y = height / 2,\n                kappa = 1 - 0.5522847498307936,\n                cx = rx * kappa,\n                cy = ry * kappa,\n                c = [-x, -y + ry, -x, -y + cy, -x + cx, -y, -x + rx, -y, x - rx, -y, x - cx, -y, x, -y + cy, x, -y + ry, x, y - ry, x, y - cy, x - cx, y, x - rx, y, -x + rx, y, -x + cx, y, -x, y - cy, -x, y - ry];\n            if (strokeMatrix) strokeMatrix.transform(c, c, 32);\n            ctx.moveTo(c[0], c[1]);\n            ctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n            if (x !== rx) ctx.lineTo(c[8], c[9]);\n            ctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n            if (y !== ry) ctx.lineTo(c[16], c[17]);\n            ctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n            if (x !== rx) ctx.lineTo(c[24], c[25]);\n            ctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n          }\n        }\n\n        ctx.closePath();\n      }\n\n      if (!dontPaint && (hasFill || hasStroke)) {\n        this._setStyles(ctx, param, viewMatrix);\n\n        if (hasFill) {\n          ctx.fill(style.getFillRule());\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n        }\n\n        if (hasStroke) ctx.stroke();\n      }\n    },\n    _canComposite: function _canComposite() {\n      return !(this.hasFill() && this.hasStroke());\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var rect = new _Rectangle(this._size).setCenter(0, 0),\n          style = this._style,\n          strokeWidth = options.stroke && style.hasStroke() && style.getStrokeWidth();\n      if (matrix) rect = matrix._transformBounds(rect);\n      return strokeWidth ? rect.expand(Path._getStrokePadding(strokeWidth, this._getStrokeMatrix(matrix, options))) : rect;\n    }\n  }, new function () {\n    function getCornerCenter(that, point, expand) {\n      var radius = that._radius;\n\n      if (!radius.isZero()) {\n        var halfSize = that._size.divide(2);\n\n        for (var q = 1; q <= 4; q++) {\n          var dir = new Point(q > 1 && q < 4 ? -1 : 1, q > 2 ? -1 : 1),\n              corner = dir.multiply(halfSize),\n              center = corner.subtract(dir.multiply(radius)),\n              rect = new _Rectangle(expand ? corner.add(dir.multiply(expand)) : corner, center);\n          if (rect.contains(point)) return {\n            point: center,\n            quadrant: q\n          };\n        }\n      }\n    }\n\n    function isOnEllipseStroke(point, radius, padding, quadrant) {\n      var vector = point.divide(radius);\n      return (!quadrant || vector.isInQuadrant(quadrant)) && vector.subtract(vector.normalize()).multiply(radius).divide(padding).length <= 1;\n    }\n\n    return {\n      _contains: function _contains(point) {\n        if (this._type === 'rectangle') {\n          var center = getCornerCenter(this, point);\n          return center ? point.subtract(center.point).divide(this._radius).getLength() <= 1 : _contains.base.call(this, point);\n        } else {\n          return point.divide(this.size).getLength() <= 0.5;\n        }\n      },\n      _hitTestSelf: function _hitTestSelf(point, options, viewMatrix, strokeMatrix) {\n        var hit = false,\n            style = this._style,\n            hitStroke = options.stroke && style.hasStroke(),\n            hitFill = options.fill && style.hasFill();\n\n        if (hitStroke || hitFill) {\n          var type = this._type,\n              radius = this._radius,\n              strokeRadius = hitStroke ? style.getStrokeWidth() / 2 : 0,\n              strokePadding = options._tolerancePadding.add(Path._getStrokePadding(strokeRadius, !style.getStrokeScaling() && strokeMatrix));\n\n          if (type === 'rectangle') {\n            var padding = strokePadding.multiply(2),\n                center = getCornerCenter(this, point, padding);\n\n            if (center) {\n              hit = isOnEllipseStroke(point.subtract(center.point), radius, strokePadding, center.quadrant);\n            } else {\n              var rect = new _Rectangle(this._size).setCenter(0, 0),\n                  outer = rect.expand(padding),\n                  inner = rect.expand(padding.negate());\n              hit = outer._containsPoint(point) && !inner._containsPoint(point);\n            }\n          } else {\n            hit = isOnEllipseStroke(point, radius, strokePadding);\n          }\n        }\n\n        return hit ? new HitResult(hitStroke ? 'stroke' : 'fill', this) : _hitTestSelf.base.apply(this, arguments);\n      }\n    };\n  }(), {\n    statics: new function () {\n      function createShape(type, point, size, radius, args) {\n        var item = Base.create(Shape.prototype);\n        item._type = type;\n        item._size = size;\n        item._radius = radius;\n\n        item._initialize(Base.getNamed(args), point);\n\n        return item;\n      }\n\n      return {\n        Circle: function Circle() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              radius = Base.readNamed(args, 'radius');\n          return createShape('circle', center, new Size(radius * 2), radius, args);\n        },\n        Rectangle: function Rectangle() {\n          var args = arguments,\n              rect = _Rectangle.readNamed(args, 'rectangle'),\n              radius = Size.min(Size.readNamed(args, 'radius'), rect.getSize(true).divide(2));\n\n          return createShape('rectangle', rect.getCenter(true), rect.getSize(true), radius, args);\n        },\n        Ellipse: function Ellipse() {\n          var args = arguments,\n              ellipse = Shape._readEllipse(args),\n              radius = ellipse.radius;\n\n          return createShape('ellipse', ellipse.center, radius.multiply(2), radius, args);\n        },\n        _readEllipse: function _readEllipse(args) {\n          var center, radius;\n\n          if (Base.hasNamed(args, 'radius')) {\n            center = Point.readNamed(args, 'center');\n            radius = Size.readNamed(args, 'radius');\n          } else {\n            var rect = _Rectangle.readNamed(args, 'rectangle');\n\n            center = rect.getCenter(true);\n            radius = rect.getSize(true).divide(2);\n          }\n\n          return {\n            center: center,\n            radius: radius\n          };\n        }\n      };\n    }()\n  });\n  var Raster = Item.extend({\n    _class: 'Raster',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _boundsOptions: {\n      stroke: false,\n      handle: false\n    },\n    _serializeFields: {\n      crossOrigin: null,\n      source: null\n    },\n    _prioritize: ['crossOrigin'],\n    _smoothing: true,\n    beans: true,\n    initialize: function Raster(source, position) {\n      if (!this._initialize(source, position !== undefined && Point.read(arguments))) {\n        var image,\n            type = typeof source,\n            object = type === 'string' ? document.getElementById(source) : type === 'object' ? source : null;\n\n        if (object && object !== Item.NO_INSERT) {\n          if (object.getContent || object.naturalHeight != null) {\n            image = object;\n          } else if (object) {\n            var size = Size.read(arguments);\n\n            if (!size.isZero()) {\n              image = CanvasProvider.getCanvas(size);\n            }\n          }\n        }\n\n        if (image) {\n          this.setImage(image);\n        } else {\n          this.setSource(source);\n        }\n      }\n\n      if (!this._size) {\n        this._size = new Size();\n        this._loaded = false;\n      }\n    },\n    _equals: function _equals(item) {\n      return this.getSource() === item.getSource();\n    },\n    copyContent: function copyContent(source) {\n      var image = source._image,\n          canvas = source._canvas;\n\n      if (image) {\n        this._setImage(image);\n      } else if (canvas) {\n        var copyCanvas = CanvasProvider.getCanvas(source._size);\n        copyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\n        this._setImage(copyCanvas);\n      }\n\n      this._crossOrigin = source._crossOrigin;\n    },\n    getSize: function getSize() {\n      var size = this._size;\n      return new LinkedSize(size ? size.width : 0, size ? size.height : 0, this, 'setSize');\n    },\n    setSize: function setSize() {\n      var size = Size.read(arguments);\n\n      if (!size.equals(this._size)) {\n        if (size.width > 0 && size.height > 0) {\n          var element = this.getElement();\n\n          this._setImage(CanvasProvider.getCanvas(size));\n\n          if (element) this.getContext(true).drawImage(element, 0, 0, size.width, size.height);\n        } else {\n          if (this._canvas) CanvasProvider.release(this._canvas);\n          this._size = size.clone();\n        }\n      }\n    },\n    getWidth: function getWidth() {\n      return this._size ? this._size.width : 0;\n    },\n    setWidth: function setWidth(width) {\n      this.setSize(width, this.getHeight());\n    },\n    getHeight: function getHeight() {\n      return this._size ? this._size.height : 0;\n    },\n    setHeight: function setHeight(height) {\n      this.setSize(this.getWidth(), height);\n    },\n    getLoaded: function getLoaded() {\n      return this._loaded;\n    },\n    isEmpty: function isEmpty() {\n      var size = this._size;\n      return !size || size.width === 0 && size.height === 0;\n    },\n    getResolution: function getResolution() {\n      var matrix = this._matrix,\n          orig = new Point(0, 0).transform(matrix),\n          u = new Point(1, 0).transform(matrix).subtract(orig),\n          v = new Point(0, 1).transform(matrix).subtract(orig);\n      return new Size(72 / u.getLength(), 72 / v.getLength());\n    },\n    getPpi: '#getResolution',\n    getImage: function getImage() {\n      return this._image;\n    },\n    setImage: function setImage(image) {\n      var that = this;\n\n      function emit(event) {\n        var view = that.getView(),\n            type = event && event.type || 'load';\n\n        if (view && that.responds(type)) {\n          paper = view._scope;\n          that.emit(type, new Event(event));\n        }\n      }\n\n      this._setImage(image);\n\n      if (this._loaded) {\n        setTimeout(emit, 0);\n      } else if (image) {\n        DomEvent.add(image, {\n          load: function load(event) {\n            that._setImage(image);\n\n            emit(event);\n          },\n          error: emit\n        });\n      }\n    },\n    _setImage: function _setImage(image) {\n      if (this._canvas) CanvasProvider.release(this._canvas);\n\n      if (image && image.getContext) {\n        this._image = null;\n        this._canvas = image;\n        this._loaded = true;\n      } else {\n        this._image = image;\n        this._canvas = null;\n        this._loaded = !!(image && image.src && image.complete);\n      }\n\n      this._size = new Size(image ? image.naturalWidth || image.width : 0, image ? image.naturalHeight || image.height : 0);\n      this._context = null;\n\n      this._changed(1033);\n    },\n    getCanvas: function getCanvas() {\n      if (!this._canvas) {\n        var ctx = CanvasProvider.getContext(this._size);\n\n        try {\n          if (this._image) ctx.drawImage(this._image, 0, 0);\n          this._canvas = ctx.canvas;\n        } catch (e) {\n          CanvasProvider.release(ctx);\n        }\n      }\n\n      return this._canvas;\n    },\n    setCanvas: '#setImage',\n    getContext: function getContext(_change) {\n      if (!this._context) this._context = this.getCanvas().getContext('2d');\n\n      if (_change) {\n        this._image = null;\n\n        this._changed(1025);\n      }\n\n      return this._context;\n    },\n    setContext: function setContext(context) {\n      this._context = context;\n    },\n    getSource: function getSource() {\n      var image = this._image;\n      return image && image.src || this.toDataURL();\n    },\n    setSource: function setSource(src) {\n      var image = new self.Image(),\n          crossOrigin = this._crossOrigin;\n      if (crossOrigin) image.crossOrigin = crossOrigin;\n      if (src) image.src = src;\n      this.setImage(image);\n    },\n    getCrossOrigin: function getCrossOrigin() {\n      var image = this._image;\n      return image && image.crossOrigin || this._crossOrigin || '';\n    },\n    setCrossOrigin: function setCrossOrigin(crossOrigin) {\n      this._crossOrigin = crossOrigin;\n      var image = this._image;\n      if (image) image.crossOrigin = crossOrigin;\n    },\n    getSmoothing: function getSmoothing() {\n      return this._smoothing;\n    },\n    setSmoothing: function setSmoothing(smoothing) {\n      this._smoothing = smoothing;\n\n      this._changed(257);\n    },\n    getElement: function getElement() {\n      return this._canvas || this._loaded && this._image;\n    }\n  }, {\n    beans: false,\n    getSubCanvas: function getSubCanvas() {\n      var rect = _Rectangle.read(arguments),\n          ctx = CanvasProvider.getContext(rect.getSize());\n\n      ctx.drawImage(this.getCanvas(), rect.x, rect.y, rect.width, rect.height, 0, 0, rect.width, rect.height);\n      return ctx.canvas;\n    },\n    getSubRaster: function getSubRaster() {\n      var rect = _Rectangle.read(arguments),\n          raster = new Raster(Item.NO_INSERT);\n\n      raster._setImage(this.getSubCanvas(rect));\n\n      raster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\n      raster._matrix.prepend(this._matrix);\n\n      raster.insertAbove(this);\n      return raster;\n    },\n    toDataURL: function toDataURL() {\n      var image = this._image,\n          src = image && image.src;\n      if (/^data:/.test(src)) return src;\n      var canvas = this.getCanvas();\n      return canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n    },\n    drawImage: function drawImage(image) {\n      var point = Point.read(arguments, 1);\n      this.getContext(true).drawImage(image, point.x, point.y);\n    },\n    getAverageColor: function getAverageColor(object) {\n      var bounds, path;\n\n      if (!object) {\n        bounds = this.getBounds();\n      } else if (object instanceof PathItem) {\n        path = object;\n        bounds = object.getBounds();\n      } else if (typeof object === 'object') {\n        if ('width' in object) {\n          bounds = new _Rectangle(object);\n        } else if ('x' in object) {\n          bounds = new _Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n        }\n      }\n\n      if (!bounds) return null;\n      var sampleSize = 32,\n          width = Math.min(bounds.width, sampleSize),\n          height = Math.min(bounds.height, sampleSize);\n      var ctx = Raster._sampleContext;\n\n      if (!ctx) {\n        ctx = Raster._sampleContext = CanvasProvider.getContext(new Size(sampleSize));\n      } else {\n        ctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n      }\n\n      ctx.save();\n      var matrix = new Matrix().scale(width / bounds.width, height / bounds.height).translate(-bounds.x, -bounds.y);\n      matrix.applyToContext(ctx);\n      if (path) path.draw(ctx, new Base({\n        clip: true,\n        matrices: [matrix]\n      }));\n\n      this._matrix.applyToContext(ctx);\n\n      var element = this.getElement(),\n          size = this._size;\n      if (element) ctx.drawImage(element, -size.width / 2, -size.height / 2);\n      ctx.restore();\n      var pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width), Math.ceil(height)).data,\n          channels = [0, 0, 0],\n          total = 0;\n\n      for (var i = 0, l = pixels.length; i < l; i += 4) {\n        var alpha = pixels[i + 3];\n        total += alpha;\n        alpha /= 255;\n        channels[0] += pixels[i] * alpha;\n        channels[1] += pixels[i + 1] * alpha;\n        channels[2] += pixels[i + 2] * alpha;\n      }\n\n      for (var i = 0; i < 3; i++) {\n        channels[i] /= total;\n      }\n\n      return total ? Color.read(channels) : null;\n    },\n    getPixel: function getPixel() {\n      var point = Point.read(arguments);\n      var data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n      return new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255], data[3] / 255);\n    },\n    setPixel: function setPixel() {\n      var args = arguments,\n          point = Point.read(args),\n          color = Color.read(args),\n          components = color._convert('rgb'),\n          alpha = color._alpha,\n          ctx = this.getContext(true),\n          imageData = ctx.createImageData(1, 1),\n          data = imageData.data;\n\n      data[0] = components[0] * 255;\n      data[1] = components[1] * 255;\n      data[2] = components[2] * 255;\n      data[3] = alpha != null ? alpha * 255 : 255;\n      ctx.putImageData(imageData, point.x, point.y);\n    },\n    clear: function clear() {\n      var size = this._size;\n      this.getContext(true).clearRect(0, 0, size.width + 1, size.height + 1);\n    },\n    createImageData: function createImageData() {\n      var size = Size.read(arguments);\n      return this.getContext().createImageData(size.width, size.height);\n    },\n    getImageData: function getImageData() {\n      var rect = _Rectangle.read(arguments);\n\n      if (rect.isEmpty()) rect = new _Rectangle(this._size);\n      return this.getContext().getImageData(rect.x, rect.y, rect.width, rect.height);\n    },\n    setImageData: function setImageData(data) {\n      var point = Point.read(arguments, 1);\n      this.getContext(true).putImageData(data, point.x, point.y);\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var rect = new _Rectangle(this._size).setCenter(0, 0);\n      return matrix ? matrix._transformBounds(rect) : rect;\n    },\n    _hitTestSelf: function _hitTestSelf(point) {\n      if (this._contains(point)) {\n        var that = this;\n        return new HitResult('pixel', that, {\n          offset: point.add(that._size.divide(2)).round(),\n          color: {\n            get: function get() {\n              return that.getPixel(this.offset);\n            }\n          }\n        });\n      }\n    },\n    _draw: function _draw(ctx, param, viewMatrix) {\n      var element = this.getElement();\n\n      if (element && element.width > 0 && element.height > 0) {\n        ctx.globalAlpha = this._opacity;\n\n        this._setStyles(ctx, param, viewMatrix);\n\n        DomElement.setPrefixed(ctx, 'imageSmoothingEnabled', this._smoothing);\n        ctx.drawImage(element, -this._size.width / 2, -this._size.height / 2);\n      }\n    },\n    _canComposite: function _canComposite() {\n      return true;\n    }\n  });\n  var SymbolItem = Item.extend({\n    _class: 'SymbolItem',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _boundsOptions: {\n      stroke: true\n    },\n    _serializeFields: {\n      symbol: null\n    },\n    initialize: function SymbolItem(arg0, arg1) {\n      if (!this._initialize(arg0, arg1 !== undefined && Point.read(arguments, 1))) this.setDefinition(arg0 instanceof SymbolDefinition ? arg0 : new SymbolDefinition(arg0));\n    },\n    _equals: function _equals(item) {\n      return this._definition === item._definition;\n    },\n    copyContent: function copyContent(source) {\n      this.setDefinition(source._definition);\n    },\n    getDefinition: function getDefinition() {\n      return this._definition;\n    },\n    setDefinition: function setDefinition(definition) {\n      this._definition = definition;\n\n      this._changed(9);\n    },\n    getSymbol: '#getDefinition',\n    setSymbol: '#setDefinition',\n    isEmpty: function isEmpty() {\n      return this._definition._item.isEmpty();\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var item = this._definition._item;\n      return item._getCachedBounds(item._matrix.prepended(matrix), options);\n    },\n    _hitTestSelf: function _hitTestSelf(point, options, viewMatrix) {\n      var opts = options.extend({\n        all: false\n      });\n\n      var res = this._definition._item._hitTest(point, opts, viewMatrix);\n\n      if (res) res.item = this;\n      return res;\n    },\n    _draw: function _draw(ctx, param) {\n      this._definition._item.draw(ctx, param);\n    }\n  });\n  var SymbolDefinition = Base.extend({\n    _class: 'SymbolDefinition',\n    initialize: function SymbolDefinition(item, dontCenter) {\n      this._id = UID.get();\n      this.project = paper.project;\n      if (item) this.setItem(item, dontCenter);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return dictionary.add(this, function () {\n        return Base.serialize([this._class, this._item], options, false, dictionary);\n      });\n    },\n    _changed: function _changed(flags) {\n      if (flags & 8) Item._clearBoundsCache(this);\n      if (flags & 1) this.project._changed(flags);\n    },\n    getItem: function getItem() {\n      return this._item;\n    },\n    setItem: function setItem(item, _dontCenter) {\n      if (item._symbol) item = item.clone();\n      if (this._item) this._item._symbol = null;\n      this._item = item;\n      item.remove();\n      item.setSelected(false);\n      if (!_dontCenter) item.setPosition(new Point());\n      item._symbol = this;\n\n      this._changed(9);\n    },\n    getDefinition: '#getItem',\n    setDefinition: '#setItem',\n    place: function place(position) {\n      return new SymbolItem(this, position);\n    },\n    clone: function clone() {\n      return new SymbolDefinition(this._item.clone(false));\n    },\n    equals: function equals(symbol) {\n      return symbol === this || symbol && this._item.equals(symbol._item) || false;\n    }\n  });\n  var HitResult = Base.extend({\n    _class: 'HitResult',\n    initialize: function HitResult(type, item, values) {\n      this.type = type;\n      this.item = item;\n      if (values) this.inject(values);\n    },\n    statics: {\n      getOptions: function getOptions(args) {\n        var options = args && Base.read(args);\n        return new Base({\n          type: null,\n          tolerance: paper.settings.hitTolerance,\n          fill: !options,\n          stroke: !options,\n          segments: !options,\n          handles: false,\n          ends: false,\n          position: false,\n          center: false,\n          bounds: false,\n          guides: false,\n          selected: false\n        }, options);\n      }\n    }\n  });\n  var Segment = Base.extend({\n    _class: 'Segment',\n    beans: true,\n    _selection: 0,\n    initialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n      var count = arguments.length,\n          point,\n          handleIn,\n          handleOut,\n          selection;\n\n      if (count > 0) {\n        if (arg0 == null || typeof arg0 === 'object') {\n          if (count === 1 && arg0 && 'point' in arg0) {\n            point = arg0.point;\n            handleIn = arg0.handleIn;\n            handleOut = arg0.handleOut;\n            selection = arg0.selection;\n          } else {\n            point = arg0;\n            handleIn = arg1;\n            handleOut = arg2;\n            selection = arg3;\n          }\n        } else {\n          point = [arg0, arg1];\n          handleIn = arg2 !== undefined ? [arg2, arg3] : null;\n          handleOut = arg4 !== undefined ? [arg4, arg5] : null;\n        }\n      }\n\n      new SegmentPoint(point, this, '_point');\n      new SegmentPoint(handleIn, this, '_handleIn');\n      new SegmentPoint(handleOut, this, '_handleOut');\n      if (selection) this.setSelection(selection);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      var point = this._point,\n          selection = this._selection,\n          obj = selection || this.hasHandles() ? [point, this._handleIn, this._handleOut] : point;\n      if (selection) obj.push(selection);\n      return Base.serialize(obj, options, true, dictionary);\n    },\n    _changed: function _changed(point) {\n      var path = this._path;\n      if (!path) return;\n      var curves = path._curves,\n          index = this._index,\n          curve;\n\n      if (curves) {\n        if ((!point || point === this._point || point === this._handleIn) && (curve = index > 0 ? curves[index - 1] : path._closed ? curves[curves.length - 1] : null)) curve._changed();\n        if ((!point || point === this._point || point === this._handleOut) && (curve = curves[index])) curve._changed();\n      }\n\n      path._changed(41);\n    },\n    getPoint: function getPoint() {\n      return this._point;\n    },\n    setPoint: function setPoint() {\n      this._point.set(Point.read(arguments));\n    },\n    getHandleIn: function getHandleIn() {\n      return this._handleIn;\n    },\n    setHandleIn: function setHandleIn() {\n      this._handleIn.set(Point.read(arguments));\n    },\n    getHandleOut: function getHandleOut() {\n      return this._handleOut;\n    },\n    setHandleOut: function setHandleOut() {\n      this._handleOut.set(Point.read(arguments));\n    },\n    hasHandles: function hasHandles() {\n      return !this._handleIn.isZero() || !this._handleOut.isZero();\n    },\n    isSmooth: function isSmooth() {\n      var handleIn = this._handleIn,\n          handleOut = this._handleOut;\n      return !handleIn.isZero() && !handleOut.isZero() && handleIn.isCollinear(handleOut);\n    },\n    clearHandles: function clearHandles() {\n      this._handleIn._set(0, 0);\n\n      this._handleOut._set(0, 0);\n    },\n    getSelection: function getSelection() {\n      return this._selection;\n    },\n    setSelection: function setSelection(selection) {\n      var oldSelection = this._selection,\n          path = this._path;\n      this._selection = selection = selection || 0;\n\n      if (path && selection !== oldSelection) {\n        path._updateSelection(this, oldSelection, selection);\n\n        path._changed(257);\n      }\n    },\n    _changeSelection: function _changeSelection(flag, selected) {\n      var selection = this._selection;\n      this.setSelection(selected ? selection | flag : selection & ~flag);\n    },\n    isSelected: function isSelected() {\n      return !!(this._selection & 7);\n    },\n    setSelected: function setSelected(selected) {\n      this._changeSelection(7, selected);\n    },\n    getIndex: function getIndex() {\n      return this._index !== undefined ? this._index : null;\n    },\n    getPath: function getPath() {\n      return this._path || null;\n    },\n    getCurve: function getCurve() {\n      var path = this._path,\n          index = this._index;\n\n      if (path) {\n        if (index > 0 && !path._closed && index === path._segments.length - 1) index--;\n        return path.getCurves()[index] || null;\n      }\n\n      return null;\n    },\n    getLocation: function getLocation() {\n      var curve = this.getCurve();\n      return curve ? new CurveLocation(curve, this === curve._segment1 ? 0 : 1) : null;\n    },\n    getNext: function getNext() {\n      var segments = this._path && this._path._segments;\n      return segments && (segments[this._index + 1] || this._path._closed && segments[0]) || null;\n    },\n    smooth: function smooth(options, _first, _last) {\n      var opts = options || {},\n          type = opts.type,\n          factor = opts.factor,\n          prev = this.getPrevious(),\n          next = this.getNext(),\n          p0 = (prev || this)._point,\n          p1 = this._point,\n          p2 = (next || this)._point,\n          d1 = p0.getDistance(p1),\n          d2 = p1.getDistance(p2);\n\n      if (!type || type === 'catmull-rom') {\n        var a = factor === undefined ? 0.5 : factor,\n            d1_a = Math.pow(d1, a),\n            d1_2a = d1_a * d1_a,\n            d2_a = Math.pow(d2, a),\n            d2_2a = d2_a * d2_a;\n\n        if (!_first && prev) {\n          var A = 2 * d2_2a + 3 * d2_a * d1_a + d1_2a,\n              N = 3 * d2_a * (d2_a + d1_a);\n          this.setHandleIn(N !== 0 ? new Point((d2_2a * p0._x + A * p1._x - d1_2a * p2._x) / N - p1._x, (d2_2a * p0._y + A * p1._y - d1_2a * p2._y) / N - p1._y) : new Point());\n        }\n\n        if (!_last && next) {\n          var A = 2 * d1_2a + 3 * d1_a * d2_a + d2_2a,\n              N = 3 * d1_a * (d1_a + d2_a);\n          this.setHandleOut(N !== 0 ? new Point((d1_2a * p2._x + A * p1._x - d2_2a * p0._x) / N - p1._x, (d1_2a * p2._y + A * p1._y - d2_2a * p0._y) / N - p1._y) : new Point());\n        }\n      } else if (type === 'geometric') {\n        if (prev && next) {\n          var vector = p0.subtract(p2),\n              t = factor === undefined ? 0.4 : factor,\n              k = t * d1 / (d1 + d2);\n          if (!_first) this.setHandleIn(vector.multiply(k));\n          if (!_last) this.setHandleOut(vector.multiply(k - t));\n        }\n      } else {\n        throw new Error('Smoothing method \\'' + type + '\\' not supported.');\n      }\n    },\n    getPrevious: function getPrevious() {\n      var segments = this._path && this._path._segments;\n      return segments && (segments[this._index - 1] || this._path._closed && segments[segments.length - 1]) || null;\n    },\n    isFirst: function isFirst() {\n      return !this._index;\n    },\n    isLast: function isLast() {\n      var path = this._path;\n      return path && this._index === path._segments.length - 1 || false;\n    },\n    reverse: function reverse() {\n      var handleIn = this._handleIn,\n          handleOut = this._handleOut,\n          tmp = handleIn.clone();\n      handleIn.set(handleOut);\n      handleOut.set(tmp);\n    },\n    reversed: function reversed() {\n      return new Segment(this._point, this._handleOut, this._handleIn);\n    },\n    remove: function remove() {\n      return this._path ? !!this._path.removeSegment(this._index) : false;\n    },\n    clone: function clone() {\n      return new Segment(this._point, this._handleIn, this._handleOut);\n    },\n    equals: function equals(segment) {\n      return segment === this || segment && this._class === segment._class && this._point.equals(segment._point) && this._handleIn.equals(segment._handleIn) && this._handleOut.equals(segment._handleOut) || false;\n    },\n    toString: function toString() {\n      var parts = ['point: ' + this._point];\n      if (!this._handleIn.isZero()) parts.push('handleIn: ' + this._handleIn);\n      if (!this._handleOut.isZero()) parts.push('handleOut: ' + this._handleOut);\n      return '{ ' + parts.join(', ') + ' }';\n    },\n    transform: function transform(matrix) {\n      this._transformCoordinates(matrix, new Array(6), true);\n\n      this._changed();\n    },\n    interpolate: function interpolate(from, to, factor) {\n      var u = 1 - factor,\n          v = factor,\n          point1 = from._point,\n          point2 = to._point,\n          handleIn1 = from._handleIn,\n          handleIn2 = to._handleIn,\n          handleOut2 = to._handleOut,\n          handleOut1 = from._handleOut;\n\n      this._point._set(u * point1._x + v * point2._x, u * point1._y + v * point2._y, true);\n\n      this._handleIn._set(u * handleIn1._x + v * handleIn2._x, u * handleIn1._y + v * handleIn2._y, true);\n\n      this._handleOut._set(u * handleOut1._x + v * handleOut2._x, u * handleOut1._y + v * handleOut2._y, true);\n\n      this._changed();\n    },\n    _transformCoordinates: function _transformCoordinates(matrix, coords, change) {\n      var point = this._point,\n          handleIn = !change || !this._handleIn.isZero() ? this._handleIn : null,\n          handleOut = !change || !this._handleOut.isZero() ? this._handleOut : null,\n          x = point._x,\n          y = point._y,\n          i = 2;\n      coords[0] = x;\n      coords[1] = y;\n\n      if (handleIn) {\n        coords[i++] = handleIn._x + x;\n        coords[i++] = handleIn._y + y;\n      }\n\n      if (handleOut) {\n        coords[i++] = handleOut._x + x;\n        coords[i++] = handleOut._y + y;\n      }\n\n      if (matrix) {\n        matrix._transformCoordinates(coords, coords, i / 2);\n\n        x = coords[0];\n        y = coords[1];\n\n        if (change) {\n          point._x = x;\n          point._y = y;\n          i = 2;\n\n          if (handleIn) {\n            handleIn._x = coords[i++] - x;\n            handleIn._y = coords[i++] - y;\n          }\n\n          if (handleOut) {\n            handleOut._x = coords[i++] - x;\n            handleOut._y = coords[i++] - y;\n          }\n        } else {\n          if (!handleIn) {\n            coords[i++] = x;\n            coords[i++] = y;\n          }\n\n          if (!handleOut) {\n            coords[i++] = x;\n            coords[i++] = y;\n          }\n        }\n      }\n\n      return coords;\n    }\n  });\n  var SegmentPoint = Point.extend({\n    initialize: function SegmentPoint(point, owner, key) {\n      var x, y, selected;\n\n      if (!point) {\n        x = y = 0;\n      } else if ((x = point[0]) !== undefined) {\n        y = point[1];\n      } else {\n        var pt = point;\n\n        if ((x = pt.x) === undefined) {\n          pt = Point.read(arguments);\n          x = pt.x;\n        }\n\n        y = pt.y;\n        selected = pt.selected;\n      }\n\n      this._x = x;\n      this._y = y;\n      this._owner = owner;\n      owner[key] = this;\n      if (selected) this.setSelected(true);\n    },\n    _set: function _set(x, y) {\n      this._x = x;\n      this._y = y;\n\n      this._owner._changed(this);\n\n      return this;\n    },\n    getX: function getX() {\n      return this._x;\n    },\n    setX: function setX(x) {\n      this._x = x;\n\n      this._owner._changed(this);\n    },\n    getY: function getY() {\n      return this._y;\n    },\n    setY: function setY(y) {\n      this._y = y;\n\n      this._owner._changed(this);\n    },\n    isZero: function isZero() {\n      var isZero = Numerical.isZero;\n      return isZero(this._x) && isZero(this._y);\n    },\n    isSelected: function isSelected() {\n      return !!(this._owner._selection & this._getSelection());\n    },\n    setSelected: function setSelected(selected) {\n      this._owner._changeSelection(this._getSelection(), selected);\n    },\n    _getSelection: function _getSelection() {\n      var owner = this._owner;\n      return this === owner._point ? 1 : this === owner._handleIn ? 2 : this === owner._handleOut ? 4 : 0;\n    }\n  });\n  var Curve = Base.extend({\n    _class: 'Curve',\n    beans: true,\n    initialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n      var count = arguments.length,\n          seg1,\n          seg2,\n          point1,\n          point2,\n          handle1,\n          handle2;\n\n      if (count === 3) {\n        this._path = arg0;\n        seg1 = arg1;\n        seg2 = arg2;\n      } else if (!count) {\n        seg1 = new Segment();\n        seg2 = new Segment();\n      } else if (count === 1) {\n        if ('segment1' in arg0) {\n          seg1 = new Segment(arg0.segment1);\n          seg2 = new Segment(arg0.segment2);\n        } else if ('point1' in arg0) {\n          point1 = arg0.point1;\n          handle1 = arg0.handle1;\n          handle2 = arg0.handle2;\n          point2 = arg0.point2;\n        } else if (Array.isArray(arg0)) {\n          point1 = [arg0[0], arg0[1]];\n          point2 = [arg0[6], arg0[7]];\n          handle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n          handle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n        }\n      } else if (count === 2) {\n        seg1 = new Segment(arg0);\n        seg2 = new Segment(arg1);\n      } else if (count === 4) {\n        point1 = arg0;\n        handle1 = arg1;\n        handle2 = arg2;\n        point2 = arg3;\n      } else if (count === 8) {\n        point1 = [arg0, arg1];\n        point2 = [arg6, arg7];\n        handle1 = [arg2 - arg0, arg3 - arg1];\n        handle2 = [arg4 - arg6, arg5 - arg7];\n      }\n\n      this._segment1 = seg1 || new Segment(point1, null, handle1);\n      this._segment2 = seg2 || new Segment(point2, handle2, null);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return Base.serialize(this.hasHandles() ? [this.getPoint1(), this.getHandle1(), this.getHandle2(), this.getPoint2()] : [this.getPoint1(), this.getPoint2()], options, true, dictionary);\n    },\n    _changed: function _changed() {\n      this._length = this._bounds = undefined;\n    },\n    clone: function clone() {\n      return new Curve(this._segment1, this._segment2);\n    },\n    toString: function toString() {\n      var parts = ['point1: ' + this._segment1._point];\n      if (!this._segment1._handleOut.isZero()) parts.push('handle1: ' + this._segment1._handleOut);\n      if (!this._segment2._handleIn.isZero()) parts.push('handle2: ' + this._segment2._handleIn);\n      parts.push('point2: ' + this._segment2._point);\n      return '{ ' + parts.join(', ') + ' }';\n    },\n    classify: function classify() {\n      return Curve.classify(this.getValues());\n    },\n    remove: function remove() {\n      var removed = false;\n\n      if (this._path) {\n        var segment2 = this._segment2,\n            handleOut = segment2._handleOut;\n        removed = segment2.remove();\n        if (removed) this._segment1._handleOut.set(handleOut);\n      }\n\n      return removed;\n    },\n    getPoint1: function getPoint1() {\n      return this._segment1._point;\n    },\n    setPoint1: function setPoint1() {\n      this._segment1._point.set(Point.read(arguments));\n    },\n    getPoint2: function getPoint2() {\n      return this._segment2._point;\n    },\n    setPoint2: function setPoint2() {\n      this._segment2._point.set(Point.read(arguments));\n    },\n    getHandle1: function getHandle1() {\n      return this._segment1._handleOut;\n    },\n    setHandle1: function setHandle1() {\n      this._segment1._handleOut.set(Point.read(arguments));\n    },\n    getHandle2: function getHandle2() {\n      return this._segment2._handleIn;\n    },\n    setHandle2: function setHandle2() {\n      this._segment2._handleIn.set(Point.read(arguments));\n    },\n    getSegment1: function getSegment1() {\n      return this._segment1;\n    },\n    getSegment2: function getSegment2() {\n      return this._segment2;\n    },\n    getPath: function getPath() {\n      return this._path;\n    },\n    getIndex: function getIndex() {\n      return this._segment1._index;\n    },\n    getNext: function getNext() {\n      var curves = this._path && this._path._curves;\n      return curves && (curves[this._segment1._index + 1] || this._path._closed && curves[0]) || null;\n    },\n    getPrevious: function getPrevious() {\n      var curves = this._path && this._path._curves;\n      return curves && (curves[this._segment1._index - 1] || this._path._closed && curves[curves.length - 1]) || null;\n    },\n    isFirst: function isFirst() {\n      return !this._segment1._index;\n    },\n    isLast: function isLast() {\n      var path = this._path;\n      return path && this._segment1._index === path._curves.length - 1 || false;\n    },\n    isSelected: function isSelected() {\n      return this.getPoint1().isSelected() && this.getHandle1().isSelected() && this.getHandle2().isSelected() && this.getPoint2().isSelected();\n    },\n    setSelected: function setSelected(selected) {\n      this.getPoint1().setSelected(selected);\n      this.getHandle1().setSelected(selected);\n      this.getHandle2().setSelected(selected);\n      this.getPoint2().setSelected(selected);\n    },\n    getValues: function getValues(matrix) {\n      return Curve.getValues(this._segment1, this._segment2, matrix);\n    },\n    getPoints: function getPoints() {\n      var coords = this.getValues(),\n          points = [];\n\n      for (var i = 0; i < 8; i += 2) {\n        points.push(new Point(coords[i], coords[i + 1]));\n      }\n\n      return points;\n    }\n  }, {\n    getLength: function getLength() {\n      if (this._length == null) this._length = Curve.getLength(this.getValues(), 0, 1);\n      return this._length;\n    },\n    getArea: function getArea() {\n      return Curve.getArea(this.getValues());\n    },\n    getLine: function getLine() {\n      return new Line(this._segment1._point, this._segment2._point);\n    },\n    getPart: function getPart(from, to) {\n      return new Curve(Curve.getPart(this.getValues(), from, to));\n    },\n    getPartLength: function getPartLength(from, to) {\n      return Curve.getLength(this.getValues(), from, to);\n    },\n    divideAt: function divideAt(location) {\n      return this.divideAtTime(location && location.curve === this ? location.time : this.getTimeAt(location));\n    },\n    divideAtTime: function divideAtTime(time, _setHandles) {\n      var tMin = 1e-8,\n          tMax = 1 - tMin,\n          res = null;\n\n      if (time >= tMin && time <= tMax) {\n        var parts = Curve.subdivide(this.getValues(), time),\n            left = parts[0],\n            right = parts[1],\n            setHandles = _setHandles || this.hasHandles(),\n            seg1 = this._segment1,\n            seg2 = this._segment2,\n            path = this._path;\n\n        if (setHandles) {\n          seg1._handleOut._set(left[2] - left[0], left[3] - left[1]);\n\n          seg2._handleIn._set(right[4] - right[6], right[5] - right[7]);\n        }\n\n        var x = left[6],\n            y = left[7],\n            segment = new Segment(new Point(x, y), setHandles && new Point(left[4] - x, left[5] - y), setHandles && new Point(right[2] - x, right[3] - y));\n\n        if (path) {\n          path.insert(seg1._index + 1, segment);\n          res = this.getNext();\n        } else {\n          this._segment2 = segment;\n\n          this._changed();\n\n          res = new Curve(segment, seg2);\n        }\n      }\n\n      return res;\n    },\n    splitAt: function splitAt(location) {\n      var path = this._path;\n      return path ? path.splitAt(location) : null;\n    },\n    splitAtTime: function splitAtTime(time) {\n      return this.splitAt(this.getLocationAtTime(time));\n    },\n    divide: function divide(offset, isTime) {\n      return this.divideAtTime(offset === undefined ? 0.5 : isTime ? offset : this.getTimeAt(offset));\n    },\n    split: function split(offset, isTime) {\n      return this.splitAtTime(offset === undefined ? 0.5 : isTime ? offset : this.getTimeAt(offset));\n    },\n    reversed: function reversed() {\n      return new Curve(this._segment2.reversed(), this._segment1.reversed());\n    },\n    clearHandles: function clearHandles() {\n      this._segment1._handleOut._set(0, 0);\n\n      this._segment2._handleIn._set(0, 0);\n    },\n    statics: {\n      getValues: function getValues(segment1, segment2, matrix, straight) {\n        var p1 = segment1._point,\n            h1 = segment1._handleOut,\n            h2 = segment2._handleIn,\n            p2 = segment2._point,\n            x1 = p1.x,\n            y1 = p1.y,\n            x2 = p2.x,\n            y2 = p2.y,\n            values = straight ? [x1, y1, x1, y1, x2, y2, x2, y2] : [x1, y1, x1 + h1._x, y1 + h1._y, x2 + h2._x, y2 + h2._y, x2, y2];\n        if (matrix) matrix._transformCoordinates(values, values, 4);\n        return values;\n      },\n      subdivide: function subdivide(v, t) {\n        var x0 = v[0],\n            y0 = v[1],\n            x1 = v[2],\n            y1 = v[3],\n            x2 = v[4],\n            y2 = v[5],\n            x3 = v[6],\n            y3 = v[7];\n        if (t === undefined) t = 0.5;\n        var u = 1 - t,\n            x4 = u * x0 + t * x1,\n            y4 = u * y0 + t * y1,\n            x5 = u * x1 + t * x2,\n            y5 = u * y1 + t * y2,\n            x6 = u * x2 + t * x3,\n            y6 = u * y2 + t * y3,\n            x7 = u * x4 + t * x5,\n            y7 = u * y4 + t * y5,\n            x8 = u * x5 + t * x6,\n            y8 = u * y5 + t * y6,\n            x9 = u * x7 + t * x8,\n            y9 = u * y7 + t * y8;\n        return [[x0, y0, x4, y4, x7, y7, x9, y9], [x9, y9, x8, y8, x6, y6, x3, y3]];\n      },\n      getMonoCurves: function getMonoCurves(v, dir) {\n        var curves = [],\n            io = dir ? 0 : 1,\n            o0 = v[io + 0],\n            o1 = v[io + 2],\n            o2 = v[io + 4],\n            o3 = v[io + 6];\n\n        if (o0 >= o1 === o1 >= o2 && o1 >= o2 === o2 >= o3 || Curve.isStraight(v)) {\n          curves.push(v);\n        } else {\n          var a = 3 * (o1 - o2) - o0 + o3,\n              b = 2 * (o0 + o2) - 4 * o1,\n              c = o1 - o0,\n              tMin = 1e-8,\n              tMax = 1 - tMin,\n              roots = [],\n              n = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\n          if (!n) {\n            curves.push(v);\n          } else {\n            roots.sort();\n            var t = roots[0],\n                parts = Curve.subdivide(v, t);\n            curves.push(parts[0]);\n\n            if (n > 1) {\n              t = (roots[1] - t) / (1 - t);\n              parts = Curve.subdivide(parts[1], t);\n              curves.push(parts[0]);\n            }\n\n            curves.push(parts[1]);\n          }\n        }\n\n        return curves;\n      },\n      solveCubic: function solveCubic(v, coord, val, roots, min, max) {\n        var v0 = v[coord],\n            v1 = v[coord + 2],\n            v2 = v[coord + 4],\n            v3 = v[coord + 6],\n            res = 0;\n\n        if (!(v0 < val && v3 < val && v1 < val && v2 < val || v0 > val && v3 > val && v1 > val && v2 > val)) {\n          var c = 3 * (v1 - v0),\n              b = 3 * (v2 - v1) - c,\n              a = v3 - v0 - c - b;\n          res = Numerical.solveCubic(a, b, c, v0 - val, roots, min, max);\n        }\n\n        return res;\n      },\n      getTimeOf: function getTimeOf(v, point) {\n        var p0 = new Point(v[0], v[1]),\n            p3 = new Point(v[6], v[7]),\n            epsilon = 1e-12,\n            geomEpsilon = 1e-7,\n            t = point.isClose(p0, epsilon) ? 0 : point.isClose(p3, epsilon) ? 1 : null;\n\n        if (t === null) {\n          var coords = [point.x, point.y],\n              roots = [];\n\n          for (var c = 0; c < 2; c++) {\n            var count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\n            for (var i = 0; i < count; i++) {\n              var u = roots[i];\n              if (point.isClose(Curve.getPoint(v, u), geomEpsilon)) return u;\n            }\n          }\n        }\n\n        return point.isClose(p0, geomEpsilon) ? 0 : point.isClose(p3, geomEpsilon) ? 1 : null;\n      },\n      getNearestTime: function getNearestTime(v, point) {\n        if (Curve.isStraight(v)) {\n          var x0 = v[0],\n              y0 = v[1],\n              x3 = v[6],\n              y3 = v[7],\n              vx = x3 - x0,\n              vy = y3 - y0,\n              det = vx * vx + vy * vy;\n          if (det === 0) return 0;\n          var u = ((point.x - x0) * vx + (point.y - y0) * vy) / det;\n          return u < 1e-12 ? 0 : u > 0.999999999999 ? 1 : Curve.getTimeOf(v, new Point(x0 + u * vx, y0 + u * vy));\n        }\n\n        var count = 100,\n            minDist = Infinity,\n            minT = 0;\n\n        function refine(t) {\n          if (t >= 0 && t <= 1) {\n            var dist = point.getDistance(Curve.getPoint(v, t), true);\n\n            if (dist < minDist) {\n              minDist = dist;\n              minT = t;\n              return true;\n            }\n          }\n        }\n\n        for (var i = 0; i <= count; i++) {\n          refine(i / count);\n        }\n\n        var step = 1 / (count * 2);\n\n        while (step > 1e-8) {\n          if (!refine(minT - step) && !refine(minT + step)) step /= 2;\n        }\n\n        return minT;\n      },\n      getPart: function getPart(v, from, to) {\n        var flip = from > to;\n\n        if (flip) {\n          var tmp = from;\n          from = to;\n          to = tmp;\n        }\n\n        if (from > 0) v = Curve.subdivide(v, from)[1];\n        if (to < 1) v = Curve.subdivide(v, (to - from) / (1 - from))[0];\n        return flip ? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]] : v;\n      },\n      isFlatEnough: function isFlatEnough(v, flatness) {\n        var x0 = v[0],\n            y0 = v[1],\n            x1 = v[2],\n            y1 = v[3],\n            x2 = v[4],\n            y2 = v[5],\n            x3 = v[6],\n            y3 = v[7],\n            ux = 3 * x1 - 2 * x0 - x3,\n            uy = 3 * y1 - 2 * y0 - y3,\n            vx = 3 * x2 - 2 * x3 - x0,\n            vy = 3 * y2 - 2 * y3 - y0;\n        return Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy) <= 16 * flatness * flatness;\n      },\n      getArea: function getArea(v) {\n        var x0 = v[0],\n            y0 = v[1],\n            x1 = v[2],\n            y1 = v[3],\n            x2 = v[4],\n            y2 = v[5],\n            x3 = v[6],\n            y3 = v[7];\n        return 3 * ((y3 - y0) * (x1 + x2) - (x3 - x0) * (y1 + y2) + y1 * (x0 - x2) - x1 * (y0 - y2) + y3 * (x2 + x0 / 3) - x3 * (y2 + y0 / 3)) / 20;\n      },\n      getBounds: function getBounds(v) {\n        var min = v.slice(0, 2),\n            max = min.slice(),\n            roots = [0, 0];\n\n        for (var i = 0; i < 2; i++) {\n          Curve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6], i, 0, min, max, roots);\n        }\n\n        return new _Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n      },\n      _addBounds: function _addBounds(v0, v1, v2, v3, coord, padding, min, max, roots) {\n        function add(value, padding) {\n          var left = value - padding,\n              right = value + padding;\n          if (left < min[coord]) min[coord] = left;\n          if (right > max[coord]) max[coord] = right;\n        }\n\n        padding /= 2;\n        var minPad = min[coord] - padding,\n            maxPad = max[coord] + padding;\n\n        if (v0 < minPad || v1 < minPad || v2 < minPad || v3 < minPad || v0 > maxPad || v1 > maxPad || v2 > maxPad || v3 > maxPad) {\n          if (v1 < v0 != v1 < v3 && v2 < v0 != v2 < v3) {\n            add(v0, padding);\n            add(v3, padding);\n          } else {\n            var a = 3 * (v1 - v2) - v0 + v3,\n                b = 2 * (v0 + v2) - 4 * v1,\n                c = v1 - v0,\n                count = Numerical.solveQuadratic(a, b, c, roots),\n                tMin = 1e-8,\n                tMax = 1 - tMin;\n            add(v3, 0);\n\n            for (var i = 0; i < count; i++) {\n              var t = roots[i],\n                  u = 1 - t;\n              if (tMin <= t && t <= tMax) add(u * u * u * v0 + 3 * u * u * t * v1 + 3 * u * t * t * v2 + t * t * t * v3, padding);\n            }\n          }\n        }\n      }\n    }\n  }, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds'], function (name) {\n    this[name] = function () {\n      if (!this._bounds) this._bounds = {};\n      var bounds = this._bounds[name];\n\n      if (!bounds) {\n        bounds = this._bounds[name] = Path[name]([this._segment1, this._segment2], false, this._path);\n      }\n\n      return bounds.clone();\n    };\n  }, {}), Base.each({\n    isStraight: function isStraight(p1, h1, h2, p2) {\n      if (h1.isZero() && h2.isZero()) {\n        return true;\n      } else {\n        var v = p2.subtract(p1);\n\n        if (v.isZero()) {\n          return false;\n        } else if (v.isCollinear(h1) && v.isCollinear(h2)) {\n          var l = new Line(p1, p2),\n              epsilon = 1e-7;\n\n          if (l.getDistance(p1.add(h1)) < epsilon && l.getDistance(p2.add(h2)) < epsilon) {\n            var div = v.dot(v),\n                s1 = v.dot(h1) / div,\n                s2 = v.dot(h2) / div;\n            return s1 >= 0 && s1 <= 1 && s2 <= 0 && s2 >= -1;\n          }\n        }\n      }\n\n      return false;\n    },\n    isLinear: function isLinear(p1, h1, h2, p2) {\n      var third = p2.subtract(p1).divide(3);\n      return h1.equals(third) && h2.negate().equals(third);\n    }\n  }, function (test, name) {\n    this[name] = function (epsilon) {\n      var seg1 = this._segment1,\n          seg2 = this._segment2;\n      return test(seg1._point, seg1._handleOut, seg2._handleIn, seg2._point, epsilon);\n    };\n\n    this.statics[name] = function (v, epsilon) {\n      var x0 = v[0],\n          y0 = v[1],\n          x3 = v[6],\n          y3 = v[7];\n      return test(new Point(x0, y0), new Point(v[2] - x0, v[3] - y0), new Point(v[4] - x3, v[5] - y3), new Point(x3, y3), epsilon);\n    };\n  }, {\n    statics: {},\n    hasHandles: function hasHandles() {\n      return !this._segment1._handleOut.isZero() || !this._segment2._handleIn.isZero();\n    },\n    hasLength: function hasLength(epsilon) {\n      return (!this.getPoint1().equals(this.getPoint2()) || this.hasHandles()) && this.getLength() > (epsilon || 0);\n    },\n    isCollinear: function isCollinear(curve) {\n      return curve && this.isStraight() && curve.isStraight() && this.getLine().isCollinear(curve.getLine());\n    },\n    isHorizontal: function isHorizontal() {\n      return this.isStraight() && Math.abs(this.getTangentAtTime(0.5).y) < 1e-8;\n    },\n    isVertical: function isVertical() {\n      return this.isStraight() && Math.abs(this.getTangentAtTime(0.5).x) < 1e-8;\n    }\n  }), {\n    beans: false,\n    getLocationAt: function getLocationAt(offset, _isTime) {\n      return this.getLocationAtTime(_isTime ? offset : this.getTimeAt(offset));\n    },\n    getLocationAtTime: function getLocationAtTime(t) {\n      return t != null && t >= 0 && t <= 1 ? new CurveLocation(this, t) : null;\n    },\n    getTimeAt: function getTimeAt(offset, start) {\n      return Curve.getTimeAt(this.getValues(), offset, start);\n    },\n    getParameterAt: '#getTimeAt',\n    getTimesWithTangent: function getTimesWithTangent() {\n      var tangent = Point.read(arguments);\n      return tangent.isZero() ? [] : Curve.getTimesWithTangent(this.getValues(), tangent);\n    },\n    getOffsetAtTime: function getOffsetAtTime(t) {\n      return this.getPartLength(0, t);\n    },\n    getLocationOf: function getLocationOf() {\n      return this.getLocationAtTime(this.getTimeOf(Point.read(arguments)));\n    },\n    getOffsetOf: function getOffsetOf() {\n      var loc = this.getLocationOf.apply(this, arguments);\n      return loc ? loc.getOffset() : null;\n    },\n    getTimeOf: function getTimeOf() {\n      return Curve.getTimeOf(this.getValues(), Point.read(arguments));\n    },\n    getParameterOf: '#getTimeOf',\n    getNearestLocation: function getNearestLocation() {\n      var point = Point.read(arguments),\n          values = this.getValues(),\n          t = Curve.getNearestTime(values, point),\n          pt = Curve.getPoint(values, t);\n      return new CurveLocation(this, t, pt, null, point.getDistance(pt));\n    },\n    getNearestPoint: function getNearestPoint() {\n      var loc = this.getNearestLocation.apply(this, arguments);\n      return loc ? loc.getPoint() : loc;\n    }\n  }, new function () {\n    var methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent', 'getWeightedNormal', 'getCurvature'];\n    return Base.each(methods, function (name) {\n      this[name + 'At'] = function (location, _isTime) {\n        var values = this.getValues();\n        return Curve[name](values, _isTime ? location : Curve.getTimeAt(values, location));\n      };\n\n      this[name + 'AtTime'] = function (time) {\n        return Curve[name](this.getValues(), time);\n      };\n    }, {\n      statics: {\n        _evaluateMethods: methods\n      }\n    });\n  }(), new function () {\n    function getLengthIntegrand(v) {\n      var x0 = v[0],\n          y0 = v[1],\n          x1 = v[2],\n          y1 = v[3],\n          x2 = v[4],\n          y2 = v[5],\n          x3 = v[6],\n          y3 = v[7],\n          ax = 9 * (x1 - x2) + 3 * (x3 - x0),\n          bx = 6 * (x0 + x2) - 12 * x1,\n          cx = 3 * (x1 - x0),\n          ay = 9 * (y1 - y2) + 3 * (y3 - y0),\n          by = 6 * (y0 + y2) - 12 * y1,\n          cy = 3 * (y1 - y0);\n      return function (t) {\n        var dx = (ax * t + bx) * t + cx,\n            dy = (ay * t + by) * t + cy;\n        return Math.sqrt(dx * dx + dy * dy);\n      };\n    }\n\n    function getIterations(a, b) {\n      return Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n    }\n\n    function evaluate(v, t, type, normalized) {\n      if (t == null || t < 0 || t > 1) return null;\n      var x0 = v[0],\n          y0 = v[1],\n          x1 = v[2],\n          y1 = v[3],\n          x2 = v[4],\n          y2 = v[5],\n          x3 = v[6],\n          y3 = v[7],\n          isZero = Numerical.isZero;\n\n      if (isZero(x1 - x0) && isZero(y1 - y0)) {\n        x1 = x0;\n        y1 = y0;\n      }\n\n      if (isZero(x2 - x3) && isZero(y2 - y3)) {\n        x2 = x3;\n        y2 = y3;\n      }\n\n      var cx = 3 * (x1 - x0),\n          bx = 3 * (x2 - x1) - cx,\n          ax = x3 - x0 - cx - bx,\n          cy = 3 * (y1 - y0),\n          by = 3 * (y2 - y1) - cy,\n          ay = y3 - y0 - cy - by,\n          x,\n          y;\n\n      if (type === 0) {\n        x = t === 0 ? x0 : t === 1 ? x3 : ((ax * t + bx) * t + cx) * t + x0;\n        y = t === 0 ? y0 : t === 1 ? y3 : ((ay * t + by) * t + cy) * t + y0;\n      } else {\n        var tMin = 1e-8,\n            tMax = 1 - tMin;\n\n        if (t < tMin) {\n          x = cx;\n          y = cy;\n        } else if (t > tMax) {\n          x = 3 * (x3 - x2);\n          y = 3 * (y3 - y2);\n        } else {\n          x = (3 * ax * t + 2 * bx) * t + cx;\n          y = (3 * ay * t + 2 * by) * t + cy;\n        }\n\n        if (normalized) {\n          if (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n            x = x2 - x1;\n            y = y2 - y1;\n          }\n\n          var len = Math.sqrt(x * x + y * y);\n\n          if (len) {\n            x /= len;\n            y /= len;\n          }\n        }\n\n        if (type === 3) {\n          var x2 = 6 * ax * t + 2 * bx,\n              y2 = 6 * ay * t + 2 * by,\n              d = Math.pow(x * x + y * y, 3 / 2);\n          x = d !== 0 ? (x * y2 - y * x2) / d : 0;\n          y = 0;\n        }\n      }\n\n      return type === 2 ? new Point(y, -x) : new Point(x, y);\n    }\n\n    return {\n      statics: {\n        classify: function classify(v) {\n          var x0 = v[0],\n              y0 = v[1],\n              x1 = v[2],\n              y1 = v[3],\n              x2 = v[4],\n              y2 = v[5],\n              x3 = v[6],\n              y3 = v[7],\n              a1 = x0 * (y3 - y2) + y0 * (x2 - x3) + x3 * y2 - y3 * x2,\n              a2 = x1 * (y0 - y3) + y1 * (x3 - x0) + x0 * y3 - y0 * x3,\n              a3 = x2 * (y1 - y0) + y2 * (x0 - x1) + x1 * y0 - y1 * x0,\n              d3 = 3 * a3,\n              d2 = d3 - a2,\n              d1 = d2 - a2 + a1,\n              l = Math.sqrt(d1 * d1 + d2 * d2 + d3 * d3),\n              s = l !== 0 ? 1 / l : 0,\n              isZero = Numerical.isZero,\n              serpentine = 'serpentine';\n          d1 *= s;\n          d2 *= s;\n          d3 *= s;\n\n          function type(type, t1, t2) {\n            var hasRoots = t1 !== undefined,\n                t1Ok = hasRoots && t1 > 0 && t1 < 1,\n                t2Ok = hasRoots && t2 > 0 && t2 < 1;\n\n            if (hasRoots && (!(t1Ok || t2Ok) || type === 'loop' && !(t1Ok && t2Ok))) {\n              type = 'arch';\n              t1Ok = t2Ok = false;\n            }\n\n            return {\n              type: type,\n              roots: t1Ok || t2Ok ? t1Ok && t2Ok ? t1 < t2 ? [t1, t2] : [t2, t1] : [t1Ok ? t1 : t2] : null\n            };\n          }\n\n          if (isZero(d1)) {\n            return isZero(d2) ? type(isZero(d3) ? 'line' : 'quadratic') : type(serpentine, d3 / (3 * d2));\n          }\n\n          var d = 3 * d2 * d2 - 4 * d1 * d3;\n\n          if (isZero(d)) {\n            return type('cusp', d2 / (2 * d1));\n          }\n\n          var f1 = d > 0 ? Math.sqrt(d / 3) : Math.sqrt(-d),\n              f2 = 2 * d1;\n          return type(d > 0 ? serpentine : 'loop', (d2 + f1) / f2, (d2 - f1) / f2);\n        },\n        getLength: function getLength(v, a, b, ds) {\n          if (a === undefined) a = 0;\n          if (b === undefined) b = 1;\n\n          if (Curve.isStraight(v)) {\n            var c = v;\n\n            if (b < 1) {\n              c = Curve.subdivide(c, b)[0];\n              a /= b;\n            }\n\n            if (a > 0) {\n              c = Curve.subdivide(c, a)[1];\n            }\n\n            var dx = c[6] - c[0],\n                dy = c[7] - c[1];\n            return Math.sqrt(dx * dx + dy * dy);\n          }\n\n          return Numerical.integrate(ds || getLengthIntegrand(v), a, b, getIterations(a, b));\n        },\n        getTimeAt: function getTimeAt(v, offset, start) {\n          if (start === undefined) start = offset < 0 ? 1 : 0;\n          if (offset === 0) return start;\n          var abs = Math.abs,\n              epsilon = 1e-12,\n              forward = offset > 0,\n              a = forward ? start : 0,\n              b = forward ? 1 : start,\n              ds = getLengthIntegrand(v),\n              rangeLength = Curve.getLength(v, a, b, ds),\n              diff = abs(offset) - rangeLength;\n\n          if (abs(diff) < epsilon) {\n            return forward ? b : a;\n          } else if (diff > epsilon) {\n            return null;\n          }\n\n          var guess = offset / rangeLength,\n              length = 0;\n\n          function f(t) {\n            length += Numerical.integrate(ds, start, t, getIterations(start, t));\n            start = t;\n            return length - offset;\n          }\n\n          return Numerical.findRoot(f, ds, start + guess, a, b, 32, 1e-12);\n        },\n        getPoint: function getPoint(v, t) {\n          return evaluate(v, t, 0, false);\n        },\n        getTangent: function getTangent(v, t) {\n          return evaluate(v, t, 1, true);\n        },\n        getWeightedTangent: function getWeightedTangent(v, t) {\n          return evaluate(v, t, 1, false);\n        },\n        getNormal: function getNormal(v, t) {\n          return evaluate(v, t, 2, true);\n        },\n        getWeightedNormal: function getWeightedNormal(v, t) {\n          return evaluate(v, t, 2, false);\n        },\n        getCurvature: function getCurvature(v, t) {\n          return evaluate(v, t, 3, false).x;\n        },\n        getPeaks: function getPeaks(v) {\n          var x0 = v[0],\n              y0 = v[1],\n              x1 = v[2],\n              y1 = v[3],\n              x2 = v[4],\n              y2 = v[5],\n              x3 = v[6],\n              y3 = v[7],\n              ax = -x0 + 3 * x1 - 3 * x2 + x3,\n              bx = 3 * x0 - 6 * x1 + 3 * x2,\n              cx = -3 * x0 + 3 * x1,\n              ay = -y0 + 3 * y1 - 3 * y2 + y3,\n              by = 3 * y0 - 6 * y1 + 3 * y2,\n              cy = -3 * y0 + 3 * y1,\n              tMin = 1e-8,\n              tMax = 1 - tMin,\n              roots = [];\n          Numerical.solveCubic(9 * (ax * ax + ay * ay), 9 * (ax * bx + by * ay), 2 * (bx * bx + by * by) + 3 * (cx * ax + cy * ay), cx * bx + by * cy, roots, tMin, tMax);\n          return roots.sort();\n        }\n      }\n    };\n  }(), new function () {\n    function addLocation(locations, include, c1, t1, c2, t2, overlap) {\n      var excludeStart = !overlap && c1.getPrevious() === c2,\n          excludeEnd = !overlap && c1 !== c2 && c1.getNext() === c2,\n          tMin = 1e-8,\n          tMax = 1 - tMin;\n\n      if (t1 !== null && t1 >= (excludeStart ? tMin : 0) && t1 <= (excludeEnd ? tMax : 1)) {\n        if (t2 !== null && t2 >= (excludeEnd ? tMin : 0) && t2 <= (excludeStart ? tMax : 1)) {\n          var loc1 = new CurveLocation(c1, t1, null, overlap),\n              loc2 = new CurveLocation(c2, t2, null, overlap);\n          loc1._intersection = loc2;\n          loc2._intersection = loc1;\n\n          if (!include || include(loc1)) {\n            CurveLocation.insert(locations, loc1, true);\n          }\n        }\n      }\n    }\n\n    function addCurveIntersections(v1, v2, c1, c2, locations, include, flip, recursion, calls, tMin, tMax, uMin, uMax) {\n      if (++calls >= 4096 || ++recursion >= 40) return calls;\n      var fatLineEpsilon = 1e-9,\n          q0x = v2[0],\n          q0y = v2[1],\n          q3x = v2[6],\n          q3y = v2[7],\n          getSignedDistance = Line.getSignedDistance,\n          d1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n          d2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n          factor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n          dMin = factor * Math.min(0, d1, d2),\n          dMax = factor * Math.max(0, d1, d2),\n          dp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n          dp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n          dp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n          dp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n          hull = getConvexHull(dp0, dp1, dp2, dp3),\n          top = hull[0],\n          bottom = hull[1],\n          tMinClip,\n          tMaxClip;\n      if (d1 === 0 && d2 === 0 && dp0 === 0 && dp1 === 0 && dp2 === 0 && dp3 === 0 || (tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null || (tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(), dMin, dMax)) == null) return calls;\n      var tMinNew = tMin + (tMax - tMin) * tMinClip,\n          tMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\n      if (Math.max(uMax - uMin, tMaxNew - tMinNew) < fatLineEpsilon) {\n        var t = (tMinNew + tMaxNew) / 2,\n            u = (uMin + uMax) / 2;\n        addLocation(locations, include, flip ? c2 : c1, flip ? u : t, flip ? c1 : c2, flip ? t : u);\n      } else {\n        v1 = Curve.getPart(v1, tMinClip, tMaxClip);\n        var uDiff = uMax - uMin;\n\n        if (tMaxClip - tMinClip > 0.8) {\n          if (tMaxNew - tMinNew > uDiff) {\n            var parts = Curve.subdivide(v1, 0.5),\n                t = (tMinNew + tMaxNew) / 2;\n            calls = addCurveIntersections(v2, parts[0], c2, c1, locations, include, !flip, recursion, calls, uMin, uMax, tMinNew, t);\n            calls = addCurveIntersections(v2, parts[1], c2, c1, locations, include, !flip, recursion, calls, uMin, uMax, t, tMaxNew);\n          } else {\n            var parts = Curve.subdivide(v2, 0.5),\n                u = (uMin + uMax) / 2;\n            calls = addCurveIntersections(parts[0], v1, c2, c1, locations, include, !flip, recursion, calls, uMin, u, tMinNew, tMaxNew);\n            calls = addCurveIntersections(parts[1], v1, c2, c1, locations, include, !flip, recursion, calls, u, uMax, tMinNew, tMaxNew);\n          }\n        } else {\n          if (uDiff === 0 || uDiff >= fatLineEpsilon) {\n            calls = addCurveIntersections(v2, v1, c2, c1, locations, include, !flip, recursion, calls, uMin, uMax, tMinNew, tMaxNew);\n          } else {\n            calls = addCurveIntersections(v1, v2, c1, c2, locations, include, flip, recursion, calls, tMinNew, tMaxNew, uMin, uMax);\n          }\n        }\n      }\n\n      return calls;\n    }\n\n    function getConvexHull(dq0, dq1, dq2, dq3) {\n      var p0 = [0, dq0],\n          p1 = [1 / 3, dq1],\n          p2 = [2 / 3, dq2],\n          p3 = [1, dq3],\n          dist1 = dq1 - (2 * dq0 + dq3) / 3,\n          dist2 = dq2 - (dq0 + 2 * dq3) / 3,\n          hull;\n\n      if (dist1 * dist2 < 0) {\n        hull = [[p0, p1, p3], [p0, p2, p3]];\n      } else {\n        var distRatio = dist1 / dist2;\n        hull = [distRatio >= 2 ? [p0, p1, p3] : distRatio <= 0.5 ? [p0, p2, p3] : [p0, p1, p2, p3], [p0, p3]];\n      }\n\n      return (dist1 || dist2) < 0 ? hull.reverse() : hull;\n    }\n\n    function clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n      if (hullTop[0][1] < dMin) {\n        return clipConvexHullPart(hullTop, true, dMin);\n      } else if (hullBottom[0][1] > dMax) {\n        return clipConvexHullPart(hullBottom, false, dMax);\n      } else {\n        return hullTop[0][0];\n      }\n    }\n\n    function clipConvexHullPart(part, top, threshold) {\n      var px = part[0][0],\n          py = part[0][1];\n\n      for (var i = 1, l = part.length; i < l; i++) {\n        var qx = part[i][0],\n            qy = part[i][1];\n\n        if (top ? qy >= threshold : qy <= threshold) {\n          return qy === threshold ? qx : px + (threshold - py) * (qx - px) / (qy - py);\n        }\n\n        px = qx;\n        py = qy;\n      }\n\n      return null;\n    }\n\n    function getCurveLineIntersections(v, px, py, vx, vy) {\n      var isZero = Numerical.isZero;\n\n      if (isZero(vx) && isZero(vy)) {\n        var t = Curve.getTimeOf(v, new Point(px, py));\n        return t === null ? [] : [t];\n      }\n\n      var angle = Math.atan2(-vy, vx),\n          sin = Math.sin(angle),\n          cos = Math.cos(angle),\n          rv = [],\n          roots = [];\n\n      for (var i = 0; i < 8; i += 2) {\n        var x = v[i] - px,\n            y = v[i + 1] - py;\n        rv.push(x * cos - y * sin, x * sin + y * cos);\n      }\n\n      Curve.solveCubic(rv, 1, 0, roots, 0, 1);\n      return roots;\n    }\n\n    function addCurveLineIntersections(v1, v2, c1, c2, locations, include, flip) {\n      var x1 = v2[0],\n          y1 = v2[1],\n          x2 = v2[6],\n          y2 = v2[7],\n          roots = getCurveLineIntersections(v1, x1, y1, x2 - x1, y2 - y1);\n\n      for (var i = 0, l = roots.length; i < l; i++) {\n        var t1 = roots[i],\n            p1 = Curve.getPoint(v1, t1),\n            t2 = Curve.getTimeOf(v2, p1);\n\n        if (t2 !== null) {\n          addLocation(locations, include, flip ? c2 : c1, flip ? t2 : t1, flip ? c1 : c2, flip ? t1 : t2);\n        }\n      }\n    }\n\n    function addLineIntersection(v1, v2, c1, c2, locations, include) {\n      var pt = Line.intersect(v1[0], v1[1], v1[6], v1[7], v2[0], v2[1], v2[6], v2[7]);\n\n      if (pt) {\n        addLocation(locations, include, c1, Curve.getTimeOf(v1, pt), c2, Curve.getTimeOf(v2, pt));\n      }\n    }\n\n    function getCurveIntersections(v1, v2, c1, c2, locations, include) {\n      var epsilon = 1e-12,\n          min = Math.min,\n          max = Math.max;\n\n      if (max(v1[0], v1[2], v1[4], v1[6]) + epsilon > min(v2[0], v2[2], v2[4], v2[6]) && min(v1[0], v1[2], v1[4], v1[6]) - epsilon < max(v2[0], v2[2], v2[4], v2[6]) && max(v1[1], v1[3], v1[5], v1[7]) + epsilon > min(v2[1], v2[3], v2[5], v2[7]) && min(v1[1], v1[3], v1[5], v1[7]) - epsilon < max(v2[1], v2[3], v2[5], v2[7])) {\n        var overlaps = getOverlaps(v1, v2);\n\n        if (overlaps) {\n          for (var i = 0; i < 2; i++) {\n            var overlap = overlaps[i];\n            addLocation(locations, include, c1, overlap[0], c2, overlap[1], true);\n          }\n        } else {\n          var straight1 = Curve.isStraight(v1),\n              straight2 = Curve.isStraight(v2),\n              straight = straight1 && straight2,\n              flip = straight1 && !straight2,\n              before = locations.length;\n          (straight ? addLineIntersection : straight1 || straight2 ? addCurveLineIntersections : addCurveIntersections)(flip ? v2 : v1, flip ? v1 : v2, flip ? c2 : c1, flip ? c1 : c2, locations, include, flip, 0, 0, 0, 1, 0, 1);\n\n          if (!straight || locations.length === before) {\n            for (var i = 0; i < 4; i++) {\n              var t1 = i >> 1,\n                  t2 = i & 1,\n                  i1 = t1 * 6,\n                  i2 = t2 * 6,\n                  p1 = new Point(v1[i1], v1[i1 + 1]),\n                  p2 = new Point(v2[i2], v2[i2 + 1]);\n\n              if (p1.isClose(p2, epsilon)) {\n                addLocation(locations, include, c1, t1, c2, t2);\n              }\n            }\n          }\n        }\n      }\n\n      return locations;\n    }\n\n    function getSelfIntersection(v1, c1, locations, include) {\n      var info = Curve.classify(v1);\n\n      if (info.type === 'loop') {\n        var roots = info.roots;\n        addLocation(locations, include, c1, roots[0], c1, roots[1]);\n      }\n\n      return locations;\n    }\n\n    function getIntersections(curves1, curves2, include, matrix1, matrix2, _returnFirst) {\n      var epsilon = 1e-7,\n          self = !curves2;\n      if (self) curves2 = curves1;\n      var length1 = curves1.length,\n          length2 = curves2.length,\n          values1 = new Array(length1),\n          values2 = self ? values1 : new Array(length2),\n          locations = [];\n\n      for (var i = 0; i < length1; i++) {\n        values1[i] = curves1[i].getValues(matrix1);\n      }\n\n      if (!self) {\n        for (var i = 0; i < length2; i++) {\n          values2[i] = curves2[i].getValues(matrix2);\n        }\n      }\n\n      var boundsCollisions = CollisionDetection.findCurveBoundsCollisions(values1, values2, epsilon);\n\n      for (var index1 = 0; index1 < length1; index1++) {\n        var curve1 = curves1[index1],\n            v1 = values1[index1];\n\n        if (self) {\n          getSelfIntersection(v1, curve1, locations, include);\n        }\n\n        var collisions1 = boundsCollisions[index1];\n\n        if (collisions1) {\n          for (var j = 0; j < collisions1.length; j++) {\n            if (_returnFirst && locations.length) return locations;\n            var index2 = collisions1[j];\n\n            if (!self || index2 > index1) {\n              var curve2 = curves2[index2],\n                  v2 = values2[index2];\n              getCurveIntersections(v1, v2, curve1, curve2, locations, include);\n            }\n          }\n        }\n      }\n\n      return locations;\n    }\n\n    function getOverlaps(v1, v2) {\n      function getSquaredLineLength(v) {\n        var x = v[6] - v[0],\n            y = v[7] - v[1];\n        return x * x + y * y;\n      }\n\n      var abs = Math.abs,\n          getDistance = Line.getDistance,\n          timeEpsilon = 1e-8,\n          geomEpsilon = 1e-7,\n          straight1 = Curve.isStraight(v1),\n          straight2 = Curve.isStraight(v2),\n          straightBoth = straight1 && straight2,\n          flip = getSquaredLineLength(v1) < getSquaredLineLength(v2),\n          l1 = flip ? v2 : v1,\n          l2 = flip ? v1 : v2,\n          px = l1[0],\n          py = l1[1],\n          vx = l1[6] - px,\n          vy = l1[7] - py;\n\n      if (getDistance(px, py, vx, vy, l2[0], l2[1], true) < geomEpsilon && getDistance(px, py, vx, vy, l2[6], l2[7], true) < geomEpsilon) {\n        if (!straightBoth && getDistance(px, py, vx, vy, l1[2], l1[3], true) < geomEpsilon && getDistance(px, py, vx, vy, l1[4], l1[5], true) < geomEpsilon && getDistance(px, py, vx, vy, l2[2], l2[3], true) < geomEpsilon && getDistance(px, py, vx, vy, l2[4], l2[5], true) < geomEpsilon) {\n          straight1 = straight2 = straightBoth = true;\n        }\n      } else if (straightBoth) {\n        return null;\n      }\n\n      if (straight1 ^ straight2) {\n        return null;\n      }\n\n      var v = [v1, v2],\n          pairs = [];\n\n      for (var i = 0; i < 4 && pairs.length < 2; i++) {\n        var i1 = i & 1,\n            i2 = i1 ^ 1,\n            t1 = i >> 1,\n            t2 = Curve.getTimeOf(v[i1], new Point(v[i2][t1 ? 6 : 0], v[i2][t1 ? 7 : 1]));\n\n        if (t2 != null) {\n          var pair = i1 ? [t1, t2] : [t2, t1];\n\n          if (!pairs.length || abs(pair[0] - pairs[0][0]) > timeEpsilon && abs(pair[1] - pairs[0][1]) > timeEpsilon) {\n            pairs.push(pair);\n          }\n        }\n\n        if (i > 2 && !pairs.length) break;\n      }\n\n      if (pairs.length !== 2) {\n        pairs = null;\n      } else if (!straightBoth) {\n        var o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n            o2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n        if (abs(o2[2] - o1[2]) > geomEpsilon || abs(o2[3] - o1[3]) > geomEpsilon || abs(o2[4] - o1[4]) > geomEpsilon || abs(o2[5] - o1[5]) > geomEpsilon) pairs = null;\n      }\n\n      return pairs;\n    }\n\n    function getTimesWithTangent(v, tangent) {\n      var x0 = v[0],\n          y0 = v[1],\n          x1 = v[2],\n          y1 = v[3],\n          x2 = v[4],\n          y2 = v[5],\n          x3 = v[6],\n          y3 = v[7],\n          normalized = tangent.normalize(),\n          tx = normalized.x,\n          ty = normalized.y,\n          ax = 3 * x3 - 9 * x2 + 9 * x1 - 3 * x0,\n          ay = 3 * y3 - 9 * y2 + 9 * y1 - 3 * y0,\n          bx = 6 * x2 - 12 * x1 + 6 * x0,\n          by = 6 * y2 - 12 * y1 + 6 * y0,\n          cx = 3 * x1 - 3 * x0,\n          cy = 3 * y1 - 3 * y0,\n          den = 2 * ax * ty - 2 * ay * tx,\n          times = [];\n\n      if (Math.abs(den) < Numerical.CURVETIME_EPSILON) {\n        var num = ax * cy - ay * cx,\n            den = ax * by - ay * bx;\n\n        if (den != 0) {\n          var t = -num / den;\n          if (t >= 0 && t <= 1) times.push(t);\n        }\n      } else {\n        var delta = (bx * bx - 4 * ax * cx) * ty * ty + (-2 * bx * by + 4 * ay * cx + 4 * ax * cy) * tx * ty + (by * by - 4 * ay * cy) * tx * tx,\n            k = bx * ty - by * tx;\n\n        if (delta >= 0 && den != 0) {\n          var d = Math.sqrt(delta),\n              t0 = -(k + d) / den,\n              t1 = (-k + d) / den;\n          if (t0 >= 0 && t0 <= 1) times.push(t0);\n          if (t1 >= 0 && t1 <= 1) times.push(t1);\n        }\n      }\n\n      return times;\n    }\n\n    return {\n      getIntersections: function getIntersections(curve) {\n        var v1 = this.getValues(),\n            v2 = curve && curve !== this && curve.getValues();\n        return v2 ? getCurveIntersections(v1, v2, this, curve, []) : getSelfIntersection(v1, this, []);\n      },\n      statics: {\n        getOverlaps: getOverlaps,\n        getIntersections: getIntersections,\n        getCurveLineIntersections: getCurveLineIntersections,\n        getTimesWithTangent: getTimesWithTangent\n      }\n    };\n  }());\n  var CurveLocation = Base.extend({\n    _class: 'CurveLocation',\n    initialize: function CurveLocation(curve, time, point, _overlap, _distance) {\n      if (time >= 0.99999999) {\n        var next = curve.getNext();\n\n        if (next) {\n          time = 0;\n          curve = next;\n        }\n      }\n\n      this._setCurve(curve);\n\n      this._time = time;\n      this._point = point || curve.getPointAtTime(time);\n      this._overlap = _overlap;\n      this._distance = _distance;\n      this._intersection = this._next = this._previous = null;\n    },\n    _setCurve: function _setCurve(curve) {\n      var path = curve._path;\n      this._path = path;\n      this._version = path ? path._version : 0;\n      this._curve = curve;\n      this._segment = null;\n      this._segment1 = curve._segment1;\n      this._segment2 = curve._segment2;\n    },\n    _setSegment: function _setSegment(segment) {\n      this._setCurve(segment.getCurve());\n\n      this._segment = segment;\n      this._time = segment === this._segment1 ? 0 : 1;\n      this._point = segment._point.clone();\n    },\n    getSegment: function getSegment() {\n      var segment = this._segment;\n\n      if (!segment) {\n        var curve = this.getCurve(),\n            time = this.getTime();\n\n        if (time === 0) {\n          segment = curve._segment1;\n        } else if (time === 1) {\n          segment = curve._segment2;\n        } else if (time != null) {\n          segment = curve.getPartLength(0, time) < curve.getPartLength(time, 1) ? curve._segment1 : curve._segment2;\n        }\n\n        this._segment = segment;\n      }\n\n      return segment;\n    },\n    getCurve: function getCurve() {\n      var path = this._path,\n          that = this;\n\n      if (path && path._version !== this._version) {\n        this._time = this._offset = this._curveOffset = this._curve = null;\n      }\n\n      function trySegment(segment) {\n        var curve = segment && segment.getCurve();\n\n        if (curve && (that._time = curve.getTimeOf(that._point)) != null) {\n          that._setCurve(curve);\n\n          return curve;\n        }\n      }\n\n      return this._curve || trySegment(this._segment) || trySegment(this._segment1) || trySegment(this._segment2.getPrevious());\n    },\n    getPath: function getPath() {\n      var curve = this.getCurve();\n      return curve && curve._path;\n    },\n    getIndex: function getIndex() {\n      var curve = this.getCurve();\n      return curve && curve.getIndex();\n    },\n    getTime: function getTime() {\n      var curve = this.getCurve(),\n          time = this._time;\n      return curve && time == null ? this._time = curve.getTimeOf(this._point) : time;\n    },\n    getParameter: '#getTime',\n    getPoint: function getPoint() {\n      return this._point;\n    },\n    getOffset: function getOffset() {\n      var offset = this._offset;\n\n      if (offset == null) {\n        offset = 0;\n        var path = this.getPath(),\n            index = this.getIndex();\n\n        if (path && index != null) {\n          var curves = path.getCurves();\n\n          for (var i = 0; i < index; i++) {\n            offset += curves[i].getLength();\n          }\n        }\n\n        this._offset = offset += this.getCurveOffset();\n      }\n\n      return offset;\n    },\n    getCurveOffset: function getCurveOffset() {\n      var offset = this._curveOffset;\n\n      if (offset == null) {\n        var curve = this.getCurve(),\n            time = this.getTime();\n        this._curveOffset = offset = time != null && curve && curve.getPartLength(0, time);\n      }\n\n      return offset;\n    },\n    getIntersection: function getIntersection() {\n      return this._intersection;\n    },\n    getDistance: function getDistance() {\n      return this._distance;\n    },\n    divide: function divide() {\n      var curve = this.getCurve(),\n          res = curve && curve.divideAtTime(this.getTime());\n\n      if (res) {\n        this._setSegment(res._segment1);\n      }\n\n      return res;\n    },\n    split: function split() {\n      var curve = this.getCurve(),\n          path = curve._path,\n          res = curve && curve.splitAtTime(this.getTime());\n\n      if (res) {\n        this._setSegment(path.getLastSegment());\n      }\n\n      return res;\n    },\n    equals: function equals(loc, _ignoreOther) {\n      var res = this === loc;\n\n      if (!res && loc instanceof CurveLocation) {\n        var c1 = this.getCurve(),\n            c2 = loc.getCurve(),\n            p1 = c1._path,\n            p2 = c2._path;\n\n        if (p1 === p2) {\n          var abs = Math.abs,\n              epsilon = 1e-7,\n              diff = abs(this.getOffset() - loc.getOffset()),\n              i1 = !_ignoreOther && this._intersection,\n              i2 = !_ignoreOther && loc._intersection;\n          res = (diff < epsilon || p1 && abs(p1.getLength() - diff) < epsilon) && (!i1 && !i2 || i1 && i2 && i1.equals(i2, true));\n        }\n      }\n\n      return res;\n    },\n    toString: function toString() {\n      var parts = [],\n          point = this.getPoint(),\n          f = Formatter.instance;\n      if (point) parts.push('point: ' + point);\n      var index = this.getIndex();\n      if (index != null) parts.push('index: ' + index);\n      var time = this.getTime();\n      if (time != null) parts.push('time: ' + f.number(time));\n      if (this._distance != null) parts.push('distance: ' + f.number(this._distance));\n      return '{ ' + parts.join(', ') + ' }';\n    },\n    isTouching: function isTouching() {\n      var inter = this._intersection;\n\n      if (inter && this.getTangent().isCollinear(inter.getTangent())) {\n        var curve1 = this.getCurve(),\n            curve2 = inter.getCurve();\n        return !(curve1.isStraight() && curve2.isStraight() && curve1.getLine().intersect(curve2.getLine()));\n      }\n\n      return false;\n    },\n    isCrossing: function isCrossing() {\n      var inter = this._intersection;\n      if (!inter) return false;\n      var t1 = this.getTime(),\n          t2 = inter.getTime(),\n          tMin = 1e-8,\n          tMax = 1 - tMin,\n          t1Inside = t1 >= tMin && t1 <= tMax,\n          t2Inside = t2 >= tMin && t2 <= tMax;\n      if (t1Inside && t2Inside) return !this.isTouching();\n      var c2 = this.getCurve(),\n          c1 = c2 && t1 < tMin ? c2.getPrevious() : c2,\n          c4 = inter.getCurve(),\n          c3 = c4 && t2 < tMin ? c4.getPrevious() : c4;\n      if (t1 > tMax) c2 = c2.getNext();\n      if (t2 > tMax) c4 = c4.getNext();\n      if (!c1 || !c2 || !c3 || !c4) return false;\n      var offsets = [];\n\n      function addOffsets(curve, end) {\n        var v = curve.getValues(),\n            roots = Curve.classify(v).roots || Curve.getPeaks(v),\n            count = roots.length,\n            offset = Curve.getLength(v, end && count ? roots[count - 1] : 0, !end && count ? roots[0] : 1);\n        offsets.push(count ? offset : offset / 64);\n      }\n\n      function isInRange(angle, min, max) {\n        return min < max ? angle > min && angle < max : angle > min || angle < max;\n      }\n\n      if (!t1Inside) {\n        addOffsets(c1, true);\n        addOffsets(c2, false);\n      }\n\n      if (!t2Inside) {\n        addOffsets(c3, true);\n        addOffsets(c4, false);\n      }\n\n      var pt = this.getPoint(),\n          offset = Math.min.apply(Math, offsets),\n          v2 = t1Inside ? c2.getTangentAtTime(t1) : c2.getPointAt(offset).subtract(pt),\n          v1 = t1Inside ? v2.negate() : c1.getPointAt(-offset).subtract(pt),\n          v4 = t2Inside ? c4.getTangentAtTime(t2) : c4.getPointAt(offset).subtract(pt),\n          v3 = t2Inside ? v4.negate() : c3.getPointAt(-offset).subtract(pt),\n          a1 = v1.getAngle(),\n          a2 = v2.getAngle(),\n          a3 = v3.getAngle(),\n          a4 = v4.getAngle();\n      return !!(t1Inside ? isInRange(a1, a3, a4) ^ isInRange(a2, a3, a4) && isInRange(a1, a4, a3) ^ isInRange(a2, a4, a3) : isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2) && isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1));\n    },\n    hasOverlap: function hasOverlap() {\n      return !!this._overlap;\n    }\n  }, Base.each(Curve._evaluateMethods, function (name) {\n    var get = name + 'At';\n\n    this[name] = function () {\n      var curve = this.getCurve(),\n          time = this.getTime();\n      return time != null && curve && curve[get](time, true);\n    };\n  }, {\n    preserve: true\n  }), new function () {\n    function insert(locations, loc, merge) {\n      var length = locations.length,\n          l = 0,\n          r = length - 1;\n\n      function search(index, dir) {\n        for (var i = index + dir; i >= -1 && i <= length; i += dir) {\n          var loc2 = locations[(i % length + length) % length];\n          if (!loc.getPoint().isClose(loc2.getPoint(), 1e-7)) break;\n          if (loc.equals(loc2)) return loc2;\n        }\n\n        return null;\n      }\n\n      while (l <= r) {\n        var m = l + r >>> 1,\n            loc2 = locations[m],\n            found;\n\n        if (merge && (found = loc.equals(loc2) ? loc2 : search(m, -1) || search(m, 1))) {\n          if (loc._overlap) {\n            found._overlap = found._intersection._overlap = true;\n          }\n\n          return found;\n        }\n\n        var path1 = loc.getPath(),\n            path2 = loc2.getPath(),\n            diff = path1 !== path2 ? path1._id - path2._id : loc.getIndex() + loc.getTime() - (loc2.getIndex() + loc2.getTime());\n\n        if (diff < 0) {\n          r = m - 1;\n        } else {\n          l = m + 1;\n        }\n      }\n\n      locations.splice(l, 0, loc);\n      return loc;\n    }\n\n    return {\n      statics: {\n        insert: insert,\n        expand: function expand(locations) {\n          var expanded = locations.slice();\n\n          for (var i = locations.length - 1; i >= 0; i--) {\n            insert(expanded, locations[i]._intersection, false);\n          }\n\n          return expanded;\n        }\n      }\n    };\n  }());\n  var PathItem = Item.extend({\n    _class: 'PathItem',\n    _selectBounds: false,\n    _canScaleStroke: true,\n    beans: true,\n    initialize: function PathItem() {},\n    statics: {\n      create: function create(arg) {\n        var data, segments, compound;\n\n        if (Base.isPlainObject(arg)) {\n          segments = arg.segments;\n          data = arg.pathData;\n        } else if (Array.isArray(arg)) {\n          segments = arg;\n        } else if (typeof arg === 'string') {\n          data = arg;\n        }\n\n        if (segments) {\n          var first = segments[0];\n          compound = first && Array.isArray(first[0]);\n        } else if (data) {\n          compound = (data.match(/m/gi) || []).length > 1 || /z\\s*\\S+/i.test(data);\n        }\n\n        var ctor = compound ? CompoundPath : Path;\n        return new ctor(arg);\n      }\n    },\n    _asPathItem: function _asPathItem() {\n      return this;\n    },\n    isClockwise: function isClockwise() {\n      return this.getArea() >= 0;\n    },\n    setClockwise: function setClockwise(clockwise) {\n      if (this.isClockwise() != (clockwise = !!clockwise)) this.reverse();\n    },\n    setPathData: function setPathData(data) {\n      var parts = data && data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n          coords,\n          relative = false,\n          previous,\n          control,\n          current = new Point(),\n          start = new Point();\n\n      function getCoord(index, coord) {\n        var val = +coords[index];\n        if (relative) val += current[coord];\n        return val;\n      }\n\n      function getPoint(index) {\n        return new Point(getCoord(index, 'x'), getCoord(index + 1, 'y'));\n      }\n\n      this.clear();\n\n      for (var i = 0, l = parts && parts.length; i < l; i++) {\n        var part = parts[i],\n            command = part[0],\n            lower = command.toLowerCase();\n        coords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n        var length = coords && coords.length;\n        relative = command === lower;\n        if (previous === 'z' && !/[mz]/.test(lower)) this.moveTo(current);\n\n        switch (lower) {\n          case 'm':\n          case 'l':\n            var move = lower === 'm';\n\n            for (var j = 0; j < length; j += 2) {\n              this[move ? 'moveTo' : 'lineTo'](current = getPoint(j));\n\n              if (move) {\n                start = current;\n                move = false;\n              }\n            }\n\n            control = current;\n            break;\n\n          case 'h':\n          case 'v':\n            var coord = lower === 'h' ? 'x' : 'y';\n            current = current.clone();\n\n            for (var j = 0; j < length; j++) {\n              current[coord] = getCoord(j, coord);\n              this.lineTo(current);\n            }\n\n            control = current;\n            break;\n\n          case 'c':\n            for (var j = 0; j < length; j += 6) {\n              this.cubicCurveTo(getPoint(j), control = getPoint(j + 2), current = getPoint(j + 4));\n            }\n\n            break;\n\n          case 's':\n            for (var j = 0; j < length; j += 4) {\n              this.cubicCurveTo(/[cs]/.test(previous) ? current.multiply(2).subtract(control) : current, control = getPoint(j), current = getPoint(j + 2));\n              previous = lower;\n            }\n\n            break;\n\n          case 'q':\n            for (var j = 0; j < length; j += 4) {\n              this.quadraticCurveTo(control = getPoint(j), current = getPoint(j + 2));\n            }\n\n            break;\n\n          case 't':\n            for (var j = 0; j < length; j += 2) {\n              this.quadraticCurveTo(control = /[qt]/.test(previous) ? current.multiply(2).subtract(control) : current, current = getPoint(j));\n              previous = lower;\n            }\n\n            break;\n\n          case 'a':\n            for (var j = 0; j < length; j += 7) {\n              this.arcTo(current = getPoint(j + 5), new Size(+coords[j], +coords[j + 1]), +coords[j + 2], +coords[j + 4], +coords[j + 3]);\n            }\n\n            break;\n\n          case 'z':\n            this.closePath(1e-12);\n            current = start;\n            break;\n        }\n\n        previous = lower;\n      }\n    },\n    _canComposite: function _canComposite() {\n      return !(this.hasFill() && this.hasStroke());\n    },\n    _contains: function _contains(point) {\n      var winding = point.isInside(this.getBounds({\n        internal: true,\n        handle: true\n      })) ? this._getWinding(point) : {};\n      return winding.onPath || !!(this.getFillRule() === 'evenodd' ? winding.windingL & 1 || winding.windingR & 1 : winding.winding);\n    },\n    getIntersections: function getIntersections(path, include, _matrix, _returnFirst) {\n      var self = this === path || !path,\n          matrix1 = this._matrix._orNullIfIdentity(),\n          matrix2 = self ? matrix1 : (_matrix || path._matrix)._orNullIfIdentity();\n\n      return self || this.getBounds(matrix1).intersects(path.getBounds(matrix2), 1e-12) ? Curve.getIntersections(this.getCurves(), !self && path.getCurves(), include, matrix1, matrix2, _returnFirst) : [];\n    },\n    getCrossings: function getCrossings(path) {\n      return this.getIntersections(path, function (inter) {\n        return inter.isCrossing();\n      });\n    },\n    getNearestLocation: function getNearestLocation() {\n      var point = Point.read(arguments),\n          curves = this.getCurves(),\n          minDist = Infinity,\n          minLoc = null;\n\n      for (var i = 0, l = curves.length; i < l; i++) {\n        var loc = curves[i].getNearestLocation(point);\n\n        if (loc._distance < minDist) {\n          minDist = loc._distance;\n          minLoc = loc;\n        }\n      }\n\n      return minLoc;\n    },\n    getNearestPoint: function getNearestPoint() {\n      var loc = this.getNearestLocation.apply(this, arguments);\n      return loc ? loc.getPoint() : loc;\n    },\n    interpolate: function interpolate(from, to, factor) {\n      var isPath = !this._children,\n          name = isPath ? '_segments' : '_children',\n          itemsFrom = from[name],\n          itemsTo = to[name],\n          items = this[name];\n\n      if (!itemsFrom || !itemsTo || itemsFrom.length !== itemsTo.length) {\n        throw new Error('Invalid operands in interpolate() call: ' + from + ', ' + to);\n      }\n\n      var current = items.length,\n          length = itemsTo.length;\n\n      if (current < length) {\n        var ctor = isPath ? Segment : Path;\n\n        for (var i = current; i < length; i++) {\n          this.add(new ctor());\n        }\n      } else if (current > length) {\n        this[isPath ? 'removeSegments' : 'removeChildren'](length, current);\n      }\n\n      for (var i = 0; i < length; i++) {\n        items[i].interpolate(itemsFrom[i], itemsTo[i], factor);\n      }\n\n      if (isPath) {\n        this.setClosed(from._closed);\n\n        this._changed(9);\n      }\n    },\n    compare: function compare(path) {\n      var ok = false;\n\n      if (path) {\n        var paths1 = this._children || [this],\n            paths2 = path._children ? path._children.slice() : [path],\n            length1 = paths1.length,\n            length2 = paths2.length,\n            matched = [],\n            count = 0;\n        ok = true;\n        var boundsOverlaps = CollisionDetection.findBoundsOverlaps(paths1, paths2, Numerical.GEOMETRIC_EPSILON);\n\n        for (var i1 = length1 - 1; i1 >= 0 && ok; i1--) {\n          var path1 = paths1[i1];\n          ok = false;\n          var pathBoundsOverlaps = boundsOverlaps[i1];\n\n          if (pathBoundsOverlaps) {\n            for (var i2 = pathBoundsOverlaps.length - 1; i2 >= 0 && !ok; i2--) {\n              if (path1.compare(paths2[pathBoundsOverlaps[i2]])) {\n                if (!matched[pathBoundsOverlaps[i2]]) {\n                  matched[pathBoundsOverlaps[i2]] = true;\n                  count++;\n                }\n\n                ok = true;\n              }\n            }\n          }\n        }\n\n        ok = ok && count === length2;\n      }\n\n      return ok;\n    }\n  });\n  var Path = PathItem.extend({\n    _class: 'Path',\n    _serializeFields: {\n      segments: [],\n      closed: false\n    },\n    initialize: function Path(arg) {\n      this._closed = false;\n      this._segments = [];\n      this._version = 0;\n      var args = arguments,\n          segments = Array.isArray(arg) ? typeof arg[0] === 'object' ? arg : args : arg && arg.size === undefined && (arg.x !== undefined || arg.point !== undefined) ? args : null;\n\n      if (segments && segments.length > 0) {\n        this.setSegments(segments);\n      } else {\n        this._curves = undefined;\n        this._segmentSelection = 0;\n\n        if (!segments && typeof arg === 'string') {\n          this.setPathData(arg);\n          arg = null;\n        }\n      }\n\n      this._initialize(!segments && arg);\n    },\n    _equals: function _equals(item) {\n      return this._closed === item._closed && Base.equals(this._segments, item._segments);\n    },\n    copyContent: function copyContent(source) {\n      this.setSegments(source._segments);\n      this._closed = source._closed;\n    },\n    _changed: function _changed(flags) {\n      _changed.base.call(this, flags);\n\n      if (flags & 8) {\n        this._length = this._area = undefined;\n\n        if (flags & 32) {\n          this._version++;\n        } else if (this._curves) {\n          for (var i = 0, l = this._curves.length; i < l; i++) {\n            this._curves[i]._changed();\n          }\n        }\n      } else if (flags & 64) {\n        this._bounds = undefined;\n      }\n    },\n    getStyle: function getStyle() {\n      var parent = this._parent;\n      return (parent instanceof CompoundPath ? parent : this)._style;\n    },\n    getSegments: function getSegments() {\n      return this._segments;\n    },\n    setSegments: function setSegments(segments) {\n      var fullySelected = this.isFullySelected(),\n          length = segments && segments.length;\n      this._segments.length = 0;\n      this._segmentSelection = 0;\n      this._curves = undefined;\n\n      if (length) {\n        var last = segments[length - 1];\n\n        if (typeof last === 'boolean') {\n          this.setClosed(last);\n          length--;\n        }\n\n        this._add(Segment.readList(segments, 0, {}, length));\n      }\n\n      if (fullySelected) this.setFullySelected(true);\n    },\n    getFirstSegment: function getFirstSegment() {\n      return this._segments[0];\n    },\n    getLastSegment: function getLastSegment() {\n      return this._segments[this._segments.length - 1];\n    },\n    getCurves: function getCurves() {\n      var curves = this._curves,\n          segments = this._segments;\n\n      if (!curves) {\n        var length = this._countCurves();\n\n        curves = this._curves = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          curves[i] = new Curve(this, segments[i], segments[i + 1] || segments[0]);\n        }\n      }\n\n      return curves;\n    },\n    getFirstCurve: function getFirstCurve() {\n      return this.getCurves()[0];\n    },\n    getLastCurve: function getLastCurve() {\n      var curves = this.getCurves();\n      return curves[curves.length - 1];\n    },\n    isClosed: function isClosed() {\n      return this._closed;\n    },\n    setClosed: function setClosed(closed) {\n      if (this._closed != (closed = !!closed)) {\n        this._closed = closed;\n\n        if (this._curves) {\n          var length = this._curves.length = this._countCurves();\n\n          if (closed) this._curves[length - 1] = new Curve(this, this._segments[length - 1], this._segments[0]);\n        }\n\n        this._changed(41);\n      }\n    }\n  }, {\n    beans: true,\n    getPathData: function getPathData(_matrix, _precision) {\n      var segments = this._segments,\n          length = segments.length,\n          f = new Formatter(_precision),\n          coords = new Array(6),\n          first = true,\n          curX,\n          curY,\n          prevX,\n          prevY,\n          inX,\n          inY,\n          outX,\n          outY,\n          parts = [];\n\n      function addSegment(segment, skipLine) {\n        segment._transformCoordinates(_matrix, coords);\n\n        curX = coords[0];\n        curY = coords[1];\n\n        if (first) {\n          parts.push('M' + f.pair(curX, curY));\n          first = false;\n        } else {\n          inX = coords[2];\n          inY = coords[3];\n\n          if (inX === curX && inY === curY && outX === prevX && outY === prevY) {\n            if (!skipLine) {\n              var dx = curX - prevX,\n                  dy = curY - prevY;\n              parts.push(dx === 0 ? 'v' + f.number(dy) : dy === 0 ? 'h' + f.number(dx) : 'l' + f.pair(dx, dy));\n            }\n          } else {\n            parts.push('c' + f.pair(outX - prevX, outY - prevY) + ' ' + f.pair(inX - prevX, inY - prevY) + ' ' + f.pair(curX - prevX, curY - prevY));\n          }\n        }\n\n        prevX = curX;\n        prevY = curY;\n        outX = coords[4];\n        outY = coords[5];\n      }\n\n      if (!length) return '';\n\n      for (var i = 0; i < length; i++) {\n        addSegment(segments[i]);\n      }\n\n      if (this._closed && length > 0) {\n        addSegment(segments[0], true);\n        parts.push('z');\n      }\n\n      return parts.join('');\n    },\n    isEmpty: function isEmpty() {\n      return !this._segments.length;\n    },\n    _transformContent: function _transformContent(matrix) {\n      var segments = this._segments,\n          coords = new Array(6);\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        segments[i]._transformCoordinates(matrix, coords, true);\n      }\n\n      return true;\n    },\n    _add: function _add(segs, index) {\n      var segments = this._segments,\n          curves = this._curves,\n          amount = segs.length,\n          append = index == null,\n          index = append ? segments.length : index;\n\n      for (var i = 0; i < amount; i++) {\n        var segment = segs[i];\n        if (segment._path) segment = segs[i] = segment.clone();\n        segment._path = this;\n        segment._index = index + i;\n        if (segment._selection) this._updateSelection(segment, 0, segment._selection);\n      }\n\n      if (append) {\n        Base.push(segments, segs);\n      } else {\n        segments.splice.apply(segments, [index, 0].concat(segs));\n\n        for (var i = index + amount, l = segments.length; i < l; i++) {\n          segments[i]._index = i;\n        }\n      }\n\n      if (curves) {\n        var total = this._countCurves(),\n            start = index > 0 && index + amount - 1 === total ? index - 1 : index,\n            insert = start,\n            end = Math.min(start + amount, total);\n\n        if (segs._curves) {\n          curves.splice.apply(curves, [start, 0].concat(segs._curves));\n          insert += segs._curves.length;\n        }\n\n        for (var i = insert; i < end; i++) {\n          curves.splice(i, 0, new Curve(this, null, null));\n        }\n\n        this._adjustCurves(start, end);\n      }\n\n      this._changed(41);\n\n      return segs;\n    },\n    _adjustCurves: function _adjustCurves(start, end) {\n      var segments = this._segments,\n          curves = this._curves,\n          curve;\n\n      for (var i = start; i < end; i++) {\n        curve = curves[i];\n        curve._path = this;\n        curve._segment1 = segments[i];\n        curve._segment2 = segments[i + 1] || segments[0];\n\n        curve._changed();\n      }\n\n      if (curve = curves[this._closed && !start ? segments.length - 1 : start - 1]) {\n        curve._segment2 = segments[start] || segments[0];\n\n        curve._changed();\n      }\n\n      if (curve = curves[end]) {\n        curve._segment1 = segments[end];\n\n        curve._changed();\n      }\n    },\n    _countCurves: function _countCurves() {\n      var length = this._segments.length;\n      return !this._closed && length > 0 ? length - 1 : length;\n    },\n    add: function add(segment1) {\n      var args = arguments;\n      return args.length > 1 && typeof segment1 !== 'number' ? this._add(Segment.readList(args)) : this._add([Segment.read(args)])[0];\n    },\n    insert: function insert(index, segment1) {\n      var args = arguments;\n      return args.length > 2 && typeof segment1 !== 'number' ? this._add(Segment.readList(args, 1), index) : this._add([Segment.read(args, 1)], index)[0];\n    },\n    addSegment: function addSegment() {\n      return this._add([Segment.read(arguments)])[0];\n    },\n    insertSegment: function insertSegment(index) {\n      return this._add([Segment.read(arguments, 1)], index)[0];\n    },\n    addSegments: function addSegments(segments) {\n      return this._add(Segment.readList(segments));\n    },\n    insertSegments: function insertSegments(index, segments) {\n      return this._add(Segment.readList(segments), index);\n    },\n    removeSegment: function removeSegment(index) {\n      return this.removeSegments(index, index + 1)[0] || null;\n    },\n    removeSegments: function removeSegments(start, end, _includeCurves) {\n      start = start || 0;\n      end = Base.pick(end, this._segments.length);\n      var segments = this._segments,\n          curves = this._curves,\n          count = segments.length,\n          removed = segments.splice(start, end - start),\n          amount = removed.length;\n      if (!amount) return removed;\n\n      for (var i = 0; i < amount; i++) {\n        var segment = removed[i];\n        if (segment._selection) this._updateSelection(segment, segment._selection, 0);\n        segment._index = segment._path = null;\n      }\n\n      for (var i = start, l = segments.length; i < l; i++) {\n        segments[i]._index = i;\n      }\n\n      if (curves) {\n        var index = start > 0 && end === count + (this._closed ? 1 : 0) ? start - 1 : start,\n            curves = curves.splice(index, amount);\n\n        for (var i = curves.length - 1; i >= 0; i--) {\n          curves[i]._path = null;\n        }\n\n        if (_includeCurves) removed._curves = curves.slice(1);\n\n        this._adjustCurves(index, index);\n      }\n\n      this._changed(41);\n\n      return removed;\n    },\n    clear: '#removeSegments',\n    hasHandles: function hasHandles() {\n      var segments = this._segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        if (segments[i].hasHandles()) return true;\n      }\n\n      return false;\n    },\n    clearHandles: function clearHandles() {\n      var segments = this._segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        segments[i].clearHandles();\n      }\n    },\n    getLength: function getLength() {\n      if (this._length == null) {\n        var curves = this.getCurves(),\n            length = 0;\n\n        for (var i = 0, l = curves.length; i < l; i++) {\n          length += curves[i].getLength();\n        }\n\n        this._length = length;\n      }\n\n      return this._length;\n    },\n    getArea: function getArea() {\n      var area = this._area;\n\n      if (area == null) {\n        var segments = this._segments,\n            closed = this._closed;\n        area = 0;\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          var last = i + 1 === l;\n          area += Curve.getArea(Curve.getValues(segments[i], segments[last ? 0 : i + 1], null, last && !closed));\n        }\n\n        this._area = area;\n      }\n\n      return area;\n    },\n    isFullySelected: function isFullySelected() {\n      var length = this._segments.length;\n      return this.isSelected() && length > 0 && this._segmentSelection === length * 7;\n    },\n    setFullySelected: function setFullySelected(selected) {\n      if (selected) this._selectSegments(true);\n      this.setSelected(selected);\n    },\n    setSelection: function setSelection(selection) {\n      if (!(selection & 1)) this._selectSegments(false);\n      setSelection.base.call(this, selection);\n    },\n    _selectSegments: function _selectSegments(selected) {\n      var segments = this._segments,\n          length = segments.length,\n          selection = selected ? 7 : 0;\n      this._segmentSelection = selection * length;\n\n      for (var i = 0; i < length; i++) {\n        segments[i]._selection = selection;\n      }\n    },\n    _updateSelection: function _updateSelection(segment, oldSelection, newSelection) {\n      segment._selection = newSelection;\n      var selection = this._segmentSelection += newSelection - oldSelection;\n      if (selection > 0) this.setSelected(true);\n    },\n    divideAt: function divideAt(location) {\n      var loc = this.getLocationAt(location),\n          curve;\n      return loc && (curve = loc.getCurve().divideAt(loc.getCurveOffset())) ? curve._segment1 : null;\n    },\n    splitAt: function splitAt(location) {\n      var loc = this.getLocationAt(location),\n          index = loc && loc.index,\n          time = loc && loc.time,\n          tMin = 1e-8,\n          tMax = 1 - tMin;\n\n      if (time > tMax) {\n        index++;\n        time = 0;\n      }\n\n      var curves = this.getCurves();\n\n      if (index >= 0 && index < curves.length) {\n        if (time >= tMin) {\n          curves[index++].divideAtTime(time);\n        }\n\n        var segs = this.removeSegments(index, this._segments.length, true),\n            path;\n\n        if (this._closed) {\n          this.setClosed(false);\n          path = this;\n        } else {\n          path = new Path(Item.NO_INSERT);\n          path.insertAbove(this);\n          path.copyAttributes(this);\n        }\n\n        path._add(segs, 0);\n\n        this.addSegment(segs[0]);\n        return path;\n      }\n\n      return null;\n    },\n    split: function split(index, time) {\n      var curve,\n          location = time === undefined ? index : (curve = this.getCurves()[index]) && curve.getLocationAtTime(time);\n      return location != null ? this.splitAt(location) : null;\n    },\n    join: function join(path, tolerance) {\n      var epsilon = tolerance || 0;\n\n      if (path && path !== this) {\n        var segments = path._segments,\n            last1 = this.getLastSegment(),\n            last2 = path.getLastSegment();\n        if (!last2) return this;\n        if (last1 && last1._point.isClose(last2._point, epsilon)) path.reverse();\n        var first2 = path.getFirstSegment();\n\n        if (last1 && last1._point.isClose(first2._point, epsilon)) {\n          last1.setHandleOut(first2._handleOut);\n\n          this._add(segments.slice(1));\n        } else {\n          var first1 = this.getFirstSegment();\n          if (first1 && first1._point.isClose(first2._point, epsilon)) path.reverse();\n          last2 = path.getLastSegment();\n\n          if (first1 && first1._point.isClose(last2._point, epsilon)) {\n            first1.setHandleIn(last2._handleIn);\n\n            this._add(segments.slice(0, segments.length - 1), 0);\n          } else {\n            this._add(segments.slice());\n          }\n        }\n\n        if (path._closed) this._add([segments[0]]);\n        path.remove();\n      }\n\n      var first = this.getFirstSegment(),\n          last = this.getLastSegment();\n\n      if (first !== last && first._point.isClose(last._point, epsilon)) {\n        first.setHandleIn(last._handleIn);\n        last.remove();\n        this.setClosed(true);\n      }\n\n      return this;\n    },\n    reduce: function reduce(options) {\n      var curves = this.getCurves(),\n          simplify = options && options.simplify,\n          tolerance = simplify ? 1e-7 : 0;\n\n      for (var i = curves.length - 1; i >= 0; i--) {\n        var curve = curves[i];\n        if (!curve.hasHandles() && (!curve.hasLength(tolerance) || simplify && curve.isCollinear(curve.getNext()))) curve.remove();\n      }\n\n      return this;\n    },\n    reverse: function reverse() {\n      this._segments.reverse();\n\n      for (var i = 0, l = this._segments.length; i < l; i++) {\n        var segment = this._segments[i];\n        var handleIn = segment._handleIn;\n        segment._handleIn = segment._handleOut;\n        segment._handleOut = handleIn;\n        segment._index = i;\n      }\n\n      this._curves = null;\n\n      this._changed(9);\n    },\n    flatten: function flatten(flatness) {\n      var flattener = new PathFlattener(this, flatness || 0.25, 256, true),\n          parts = flattener.parts,\n          length = parts.length,\n          segments = [];\n\n      for (var i = 0; i < length; i++) {\n        segments.push(new Segment(parts[i].curve.slice(0, 2)));\n      }\n\n      if (!this._closed && length > 0) {\n        segments.push(new Segment(parts[length - 1].curve.slice(6)));\n      }\n\n      this.setSegments(segments);\n    },\n    simplify: function simplify(tolerance) {\n      var segments = new PathFitter(this).fit(tolerance || 2.5);\n      if (segments) this.setSegments(segments);\n      return !!segments;\n    },\n    smooth: function smooth(options) {\n      var that = this,\n          opts = options || {},\n          type = opts.type || 'asymmetric',\n          segments = this._segments,\n          length = segments.length,\n          closed = this._closed;\n\n      function getIndex(value, _default) {\n        var index = value && value.index;\n\n        if (index != null) {\n          var path = value.path;\n          if (path && path !== that) throw new Error(value._class + ' ' + index + ' of ' + path + ' is not part of ' + that);\n          if (_default && value instanceof Curve) index++;\n        } else {\n          index = typeof value === 'number' ? value : _default;\n        }\n\n        return Math.min(index < 0 && closed ? index % length : index < 0 ? index + length : index, length - 1);\n      }\n\n      var loop = closed && opts.from === undefined && opts.to === undefined,\n          from = getIndex(opts.from, 0),\n          to = getIndex(opts.to, length - 1);\n\n      if (from > to) {\n        if (closed) {\n          from -= length;\n        } else {\n          var tmp = from;\n          from = to;\n          to = tmp;\n        }\n      }\n\n      if (/^(?:asymmetric|continuous)$/.test(type)) {\n        var asymmetric = type === 'asymmetric',\n            min = Math.min,\n            amount = to - from + 1,\n            n = amount - 1,\n            padding = loop ? min(amount, 4) : 1,\n            paddingLeft = padding,\n            paddingRight = padding,\n            knots = [];\n\n        if (!closed) {\n          paddingLeft = min(1, from);\n          paddingRight = min(1, length - to - 1);\n        }\n\n        n += paddingLeft + paddingRight;\n        if (n <= 1) return;\n\n        for (var i = 0, j = from - paddingLeft; i <= n; i++, j++) {\n          knots[i] = segments[(j < 0 ? j + length : j) % length]._point;\n        }\n\n        var x = knots[0]._x + 2 * knots[1]._x,\n            y = knots[0]._y + 2 * knots[1]._y,\n            f = 2,\n            n_1 = n - 1,\n            rx = [x],\n            ry = [y],\n            rf = [f],\n            px = [],\n            py = [];\n\n        for (var i = 1; i < n; i++) {\n          var internal = i < n_1,\n              a = internal ? 1 : asymmetric ? 1 : 2,\n              b = internal ? 4 : asymmetric ? 2 : 7,\n              u = internal ? 4 : asymmetric ? 3 : 8,\n              v = internal ? 2 : asymmetric ? 0 : 1,\n              m = a / f;\n          f = rf[i] = b - m;\n          x = rx[i] = u * knots[i]._x + v * knots[i + 1]._x - m * x;\n          y = ry[i] = u * knots[i]._y + v * knots[i + 1]._y - m * y;\n        }\n\n        px[n_1] = rx[n_1] / rf[n_1];\n        py[n_1] = ry[n_1] / rf[n_1];\n\n        for (var i = n - 2; i >= 0; i--) {\n          px[i] = (rx[i] - px[i + 1]) / rf[i];\n          py[i] = (ry[i] - py[i + 1]) / rf[i];\n        }\n\n        px[n] = (3 * knots[n]._x - px[n_1]) / 2;\n        py[n] = (3 * knots[n]._y - py[n_1]) / 2;\n\n        for (var i = paddingLeft, max = n - paddingRight, j = from; i <= max; i++, j++) {\n          var segment = segments[j < 0 ? j + length : j],\n              pt = segment._point,\n              hx = px[i] - pt._x,\n              hy = py[i] - pt._y;\n          if (loop || i < max) segment.setHandleOut(hx, hy);\n          if (loop || i > paddingLeft) segment.setHandleIn(-hx, -hy);\n        }\n      } else {\n        for (var i = from; i <= to; i++) {\n          segments[i < 0 ? i + length : i].smooth(opts, !loop && i === from, !loop && i === to);\n        }\n      }\n    },\n    toShape: function toShape(insert) {\n      if (!this._closed) return null;\n      var segments = this._segments,\n          type,\n          size,\n          radius,\n          topCenter;\n\n      function isCollinear(i, j) {\n        var seg1 = segments[i],\n            seg2 = seg1.getNext(),\n            seg3 = segments[j],\n            seg4 = seg3.getNext();\n        return seg1._handleOut.isZero() && seg2._handleIn.isZero() && seg3._handleOut.isZero() && seg4._handleIn.isZero() && seg2._point.subtract(seg1._point).isCollinear(seg4._point.subtract(seg3._point));\n      }\n\n      function isOrthogonal(i) {\n        var seg2 = segments[i],\n            seg1 = seg2.getPrevious(),\n            seg3 = seg2.getNext();\n        return seg1._handleOut.isZero() && seg2._handleIn.isZero() && seg2._handleOut.isZero() && seg3._handleIn.isZero() && seg2._point.subtract(seg1._point).isOrthogonal(seg3._point.subtract(seg2._point));\n      }\n\n      function isArc(i) {\n        var seg1 = segments[i],\n            seg2 = seg1.getNext(),\n            handle1 = seg1._handleOut,\n            handle2 = seg2._handleIn,\n            kappa = 0.5522847498307936;\n\n        if (handle1.isOrthogonal(handle2)) {\n          var pt1 = seg1._point,\n              pt2 = seg2._point,\n              corner = new Line(pt1, handle1, true).intersect(new Line(pt2, handle2, true), true);\n          return corner && Numerical.isZero(handle1.getLength() / corner.subtract(pt1).getLength() - kappa) && Numerical.isZero(handle2.getLength() / corner.subtract(pt2).getLength() - kappa);\n        }\n\n        return false;\n      }\n\n      function getDistance(i, j) {\n        return segments[i]._point.getDistance(segments[j]._point);\n      }\n\n      if (!this.hasHandles() && segments.length === 4 && isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n        type = Shape.Rectangle;\n        size = new Size(getDistance(0, 3), getDistance(0, 1));\n        topCenter = segments[1]._point.add(segments[2]._point).divide(2);\n      } else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4) && isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n        type = Shape.Rectangle;\n        size = new Size(getDistance(1, 6), getDistance(0, 3));\n        radius = size.subtract(new Size(getDistance(0, 7), getDistance(1, 2))).divide(2);\n        topCenter = segments[3]._point.add(segments[4]._point).divide(2);\n      } else if (segments.length === 4 && isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n        if (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n          type = Shape.Circle;\n          radius = getDistance(0, 2) / 2;\n        } else {\n          type = Shape.Ellipse;\n          radius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n        }\n\n        topCenter = segments[1]._point;\n      }\n\n      if (type) {\n        var center = this.getPosition(true),\n            shape = new type({\n          center: center,\n          size: size,\n          radius: radius,\n          insert: false\n        });\n        shape.copyAttributes(this, true);\n\n        shape._matrix.prepend(this._matrix);\n\n        shape.rotate(topCenter.subtract(center).getAngle() + 90);\n        if (insert === undefined || insert) shape.insertAbove(this);\n        return shape;\n      }\n\n      return null;\n    },\n    toPath: '#clone',\n    compare: function compare(path) {\n      if (!path || path instanceof CompoundPath) return compare.base.call(this, path);\n      var curves1 = this.getCurves(),\n          curves2 = path.getCurves(),\n          length1 = curves1.length,\n          length2 = curves2.length;\n\n      if (!length1 || !length2) {\n        return length1 == length2;\n      }\n\n      var v1 = curves1[0].getValues(),\n          values2 = [],\n          pos1 = 0,\n          pos2,\n          end1 = 0,\n          end2;\n\n      for (var i = 0; i < length2; i++) {\n        var v2 = curves2[i].getValues();\n        values2.push(v2);\n        var overlaps = Curve.getOverlaps(v1, v2);\n\n        if (overlaps) {\n          pos2 = !i && overlaps[0][0] > 0 ? length2 - 1 : i;\n          end2 = overlaps[0][1];\n          break;\n        }\n      }\n\n      var abs = Math.abs,\n          epsilon = 1e-8,\n          v2 = values2[pos2],\n          start2;\n\n      while (v1 && v2) {\n        var overlaps = Curve.getOverlaps(v1, v2);\n\n        if (overlaps) {\n          var t1 = overlaps[0][0];\n\n          if (abs(t1 - end1) < epsilon) {\n            end1 = overlaps[1][0];\n\n            if (end1 === 1) {\n              v1 = ++pos1 < length1 ? curves1[pos1].getValues() : null;\n              end1 = 0;\n            }\n\n            var t2 = overlaps[0][1];\n\n            if (abs(t2 - end2) < epsilon) {\n              if (!start2) start2 = [pos2, t2];\n              end2 = overlaps[1][1];\n\n              if (end2 === 1) {\n                if (++pos2 >= length2) pos2 = 0;\n                v2 = values2[pos2] || curves2[pos2].getValues();\n                end2 = 0;\n              }\n\n              if (!v1) {\n                return start2[0] === pos2 && start2[1] === end2;\n              }\n\n              continue;\n            }\n          }\n        }\n\n        break;\n      }\n\n      return false;\n    },\n    _hitTestSelf: function _hitTestSelf(point, options, viewMatrix, strokeMatrix) {\n      var that = this,\n          style = this.getStyle(),\n          segments = this._segments,\n          numSegments = segments.length,\n          closed = this._closed,\n          tolerancePadding = options._tolerancePadding,\n          strokePadding = tolerancePadding,\n          join,\n          cap,\n          miterLimit,\n          area,\n          loc,\n          res,\n          hitStroke = options.stroke && style.hasStroke(),\n          hitFill = options.fill && style.hasFill(),\n          hitCurves = options.curves,\n          strokeRadius = hitStroke ? style.getStrokeWidth() / 2 : hitFill && options.tolerance > 0 || hitCurves ? 0 : null;\n\n      if (strokeRadius !== null) {\n        if (strokeRadius > 0) {\n          join = style.getStrokeJoin();\n          cap = style.getStrokeCap();\n          miterLimit = style.getMiterLimit();\n          strokePadding = strokePadding.add(Path._getStrokePadding(strokeRadius, strokeMatrix));\n        } else {\n          join = cap = 'round';\n        }\n      }\n\n      function isCloseEnough(pt, padding) {\n        return point.subtract(pt).divide(padding).length <= 1;\n      }\n\n      function checkSegmentPoint(seg, pt, name) {\n        if (!options.selected || pt.isSelected()) {\n          var anchor = seg._point;\n          if (pt !== anchor) pt = pt.add(anchor);\n\n          if (isCloseEnough(pt, strokePadding)) {\n            return new HitResult(name, that, {\n              segment: seg,\n              point: pt\n            });\n          }\n        }\n      }\n\n      function checkSegmentPoints(seg, ends) {\n        return (ends || options.segments) && checkSegmentPoint(seg, seg._point, 'segment') || !ends && options.handles && (checkSegmentPoint(seg, seg._handleIn, 'handle-in') || checkSegmentPoint(seg, seg._handleOut, 'handle-out'));\n      }\n\n      function addToArea(point) {\n        area.add(point);\n      }\n\n      function checkSegmentStroke(segment) {\n        var isJoin = closed || segment._index > 0 && segment._index < numSegments - 1;\n\n        if ((isJoin ? join : cap) === 'round') {\n          return isCloseEnough(segment._point, strokePadding);\n        } else {\n          area = new Path({\n            internal: true,\n            closed: true\n          });\n\n          if (isJoin) {\n            if (!segment.isSmooth()) {\n              Path._addBevelJoin(segment, join, strokeRadius, miterLimit, null, strokeMatrix, addToArea, true);\n            }\n          } else if (cap === 'square') {\n            Path._addSquareCap(segment, cap, strokeRadius, null, strokeMatrix, addToArea, true);\n          }\n\n          if (!area.isEmpty()) {\n            var loc;\n            return area.contains(point) || (loc = area.getNearestLocation(point)) && isCloseEnough(loc.getPoint(), tolerancePadding);\n          }\n        }\n      }\n\n      if (options.ends && !options.segments && !closed) {\n        if (res = checkSegmentPoints(segments[0], true) || checkSegmentPoints(segments[numSegments - 1], true)) return res;\n      } else if (options.segments || options.handles) {\n        for (var i = 0; i < numSegments; i++) {\n          if (res = checkSegmentPoints(segments[i])) return res;\n        }\n      }\n\n      if (strokeRadius !== null) {\n        loc = this.getNearestLocation(point);\n\n        if (loc) {\n          var time = loc.getTime();\n\n          if (time === 0 || time === 1 && numSegments > 1) {\n            if (!checkSegmentStroke(loc.getSegment())) loc = null;\n          } else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n            loc = null;\n          }\n        }\n\n        if (!loc && join === 'miter' && numSegments > 1) {\n          for (var i = 0; i < numSegments; i++) {\n            var segment = segments[i];\n\n            if (point.getDistance(segment._point) <= miterLimit * strokeRadius && checkSegmentStroke(segment)) {\n              loc = segment.getLocation();\n              break;\n            }\n          }\n        }\n      }\n\n      return !loc && hitFill && this._contains(point) || loc && !hitStroke && !hitCurves ? new HitResult('fill', this) : loc ? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n        location: loc,\n        point: loc.getPoint()\n      }) : null;\n    }\n  }, Base.each(Curve._evaluateMethods, function (name) {\n    this[name + 'At'] = function (offset) {\n      var loc = this.getLocationAt(offset);\n      return loc && loc[name]();\n    };\n  }, {\n    beans: false,\n    getLocationOf: function getLocationOf() {\n      var point = Point.read(arguments),\n          curves = this.getCurves();\n\n      for (var i = 0, l = curves.length; i < l; i++) {\n        var loc = curves[i].getLocationOf(point);\n        if (loc) return loc;\n      }\n\n      return null;\n    },\n    getOffsetOf: function getOffsetOf() {\n      var loc = this.getLocationOf.apply(this, arguments);\n      return loc ? loc.getOffset() : null;\n    },\n    getLocationAt: function getLocationAt(offset) {\n      if (typeof offset === 'number') {\n        var curves = this.getCurves(),\n            length = 0;\n\n        for (var i = 0, l = curves.length; i < l; i++) {\n          var start = length,\n              curve = curves[i];\n          length += curve.getLength();\n\n          if (length > offset) {\n            return curve.getLocationAt(offset - start);\n          }\n        }\n\n        if (curves.length > 0 && offset <= this.getLength()) {\n          return new CurveLocation(curves[curves.length - 1], 1);\n        }\n      } else if (offset && offset.getPath && offset.getPath() === this) {\n        return offset;\n      }\n\n      return null;\n    },\n    getOffsetsWithTangent: function getOffsetsWithTangent() {\n      var tangent = Point.read(arguments);\n\n      if (tangent.isZero()) {\n        return [];\n      }\n\n      var offsets = [];\n      var curveStart = 0;\n      var curves = this.getCurves();\n\n      for (var i = 0, l = curves.length; i < l; i++) {\n        var curve = curves[i];\n        var curveTimes = curve.getTimesWithTangent(tangent);\n\n        for (var j = 0, m = curveTimes.length; j < m; j++) {\n          var offset = curveStart + curve.getOffsetAtTime(curveTimes[j]);\n\n          if (offsets.indexOf(offset) < 0) {\n            offsets.push(offset);\n          }\n        }\n\n        curveStart += curve.length;\n      }\n\n      return offsets;\n    }\n  }), new function () {\n    function drawHandles(ctx, segments, matrix, size) {\n      if (size <= 0) return;\n      var half = size / 2,\n          miniSize = size - 2,\n          miniHalf = half - 1,\n          coords = new Array(6),\n          pX,\n          pY;\n\n      function drawHandle(index) {\n        var hX = coords[index],\n            hY = coords[index + 1];\n\n        if (pX != hX || pY != hY) {\n          ctx.beginPath();\n          ctx.moveTo(pX, pY);\n          ctx.lineTo(hX, hY);\n          ctx.stroke();\n          ctx.beginPath();\n          ctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n          ctx.fill();\n        }\n      }\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i],\n            selection = segment._selection;\n\n        segment._transformCoordinates(matrix, coords);\n\n        pX = coords[0];\n        pY = coords[1];\n        if (selection & 2) drawHandle(2);\n        if (selection & 4) drawHandle(4);\n        ctx.fillRect(pX - half, pY - half, size, size);\n\n        if (miniSize > 0 && !(selection & 1)) {\n          var fillStyle = ctx.fillStyle;\n          ctx.fillStyle = '#ffffff';\n          ctx.fillRect(pX - miniHalf, pY - miniHalf, miniSize, miniSize);\n          ctx.fillStyle = fillStyle;\n        }\n      }\n    }\n\n    function drawSegments(ctx, path, matrix) {\n      var segments = path._segments,\n          length = segments.length,\n          coords = new Array(6),\n          first = true,\n          curX,\n          curY,\n          prevX,\n          prevY,\n          inX,\n          inY,\n          outX,\n          outY;\n\n      function drawSegment(segment) {\n        if (matrix) {\n          segment._transformCoordinates(matrix, coords);\n\n          curX = coords[0];\n          curY = coords[1];\n        } else {\n          var point = segment._point;\n          curX = point._x;\n          curY = point._y;\n        }\n\n        if (first) {\n          ctx.moveTo(curX, curY);\n          first = false;\n        } else {\n          if (matrix) {\n            inX = coords[2];\n            inY = coords[3];\n          } else {\n            var handle = segment._handleIn;\n            inX = curX + handle._x;\n            inY = curY + handle._y;\n          }\n\n          if (inX === curX && inY === curY && outX === prevX && outY === prevY) {\n            ctx.lineTo(curX, curY);\n          } else {\n            ctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n          }\n        }\n\n        prevX = curX;\n        prevY = curY;\n\n        if (matrix) {\n          outX = coords[4];\n          outY = coords[5];\n        } else {\n          var handle = segment._handleOut;\n          outX = prevX + handle._x;\n          outY = prevY + handle._y;\n        }\n      }\n\n      for (var i = 0; i < length; i++) {\n        drawSegment(segments[i]);\n      }\n\n      if (path._closed && length > 0) drawSegment(segments[0]);\n    }\n\n    return {\n      _draw: function _draw(ctx, param, viewMatrix, strokeMatrix) {\n        var dontStart = param.dontStart,\n            dontPaint = param.dontFinish || param.clip,\n            style = this.getStyle(),\n            hasFill = style.hasFill(),\n            hasStroke = style.hasStroke(),\n            dashArray = style.getDashArray(),\n            dashLength = !paper.support.nativeDash && hasStroke && dashArray && dashArray.length;\n        if (!dontStart) ctx.beginPath();\n\n        if (hasFill || hasStroke && !dashLength || dontPaint) {\n          drawSegments(ctx, this, strokeMatrix);\n          if (this._closed) ctx.closePath();\n        }\n\n        function getOffset(i) {\n          return dashArray[(i % dashLength + dashLength) % dashLength];\n        }\n\n        if (!dontPaint && (hasFill || hasStroke)) {\n          this._setStyles(ctx, param, viewMatrix);\n\n          if (hasFill) {\n            ctx.fill(style.getFillRule());\n            ctx.shadowColor = 'rgba(0,0,0,0)';\n          }\n\n          if (hasStroke) {\n            if (dashLength) {\n              if (!dontStart) ctx.beginPath();\n              var flattener = new PathFlattener(this, 0.25, 32, false, strokeMatrix),\n                  length = flattener.length,\n                  from = -style.getDashOffset(),\n                  to,\n                  i = 0;\n              from = from % length;\n\n              while (from > 0) {\n                from -= getOffset(i--) + getOffset(i--);\n              }\n\n              while (from < length) {\n                to = from + getOffset(i++);\n                if (from > 0 || to > 0) flattener.drawPart(ctx, Math.max(from, 0), Math.max(to, 0));\n                from = to + getOffset(i++);\n              }\n            }\n\n            ctx.stroke();\n          }\n        }\n      },\n      _drawSelected: function _drawSelected(ctx, matrix) {\n        ctx.beginPath();\n        drawSegments(ctx, this, matrix);\n        ctx.stroke();\n        drawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n      }\n    };\n  }(), new function () {\n    function getCurrentSegment(that) {\n      var segments = that._segments;\n      if (!segments.length) throw new Error('Use a moveTo() command first');\n      return segments[segments.length - 1];\n    }\n\n    return {\n      moveTo: function moveTo() {\n        var segments = this._segments;\n        if (segments.length === 1) this.removeSegment(0);\n        if (!segments.length) this._add([new Segment(Point.read(arguments))]);\n      },\n      moveBy: function moveBy() {\n        throw new Error('moveBy() is unsupported on Path items.');\n      },\n      lineTo: function lineTo() {\n        this._add([new Segment(Point.read(arguments))]);\n      },\n      cubicCurveTo: function cubicCurveTo() {\n        var args = arguments,\n            handle1 = Point.read(args),\n            handle2 = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this);\n        current.setHandleOut(handle1.subtract(current._point));\n\n        this._add([new Segment(to, handle2.subtract(to))]);\n      },\n      quadraticCurveTo: function quadraticCurveTo() {\n        var args = arguments,\n            handle = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.cubicCurveTo(handle.add(current.subtract(handle).multiply(1 / 3)), handle.add(to.subtract(handle).multiply(1 / 3)), to);\n      },\n      curveTo: function curveTo() {\n        var args = arguments,\n            through = Point.read(args),\n            to = Point.read(args),\n            t = Base.pick(Base.read(args), 0.5),\n            t1 = 1 - t,\n            current = getCurrentSegment(this)._point,\n            handle = through.subtract(current.multiply(t1 * t1)).subtract(to.multiply(t * t)).divide(2 * t * t1);\n\n        if (handle.isNaN()) throw new Error('Cannot put a curve through points with parameter = ' + t);\n        this.quadraticCurveTo(handle, to);\n      },\n      arcTo: function arcTo() {\n        var args = arguments,\n            abs = Math.abs,\n            sqrt = Math.sqrt,\n            current = getCurrentSegment(this),\n            from = current._point,\n            to = Point.read(args),\n            through,\n            peek = Base.peek(args),\n            clockwise = Base.pick(peek, true),\n            center,\n            extent,\n            vector,\n            matrix;\n\n        if (typeof clockwise === 'boolean') {\n          var middle = from.add(to).divide(2),\n              through = middle.add(middle.subtract(from).rotate(clockwise ? -90 : 90));\n        } else if (Base.remain(args) <= 2) {\n          through = to;\n          to = Point.read(args);\n        } else if (!from.equals(to)) {\n          var radius = Size.read(args),\n              isZero = Numerical.isZero;\n          if (isZero(radius.width) || isZero(radius.height)) return this.lineTo(to);\n          var rotation = Base.read(args),\n              clockwise = !!Base.read(args),\n              large = !!Base.read(args),\n              middle = from.add(to).divide(2),\n              pt = from.subtract(middle).rotate(-rotation),\n              x = pt.x,\n              y = pt.y,\n              rx = abs(radius.width),\n              ry = abs(radius.height),\n              rxSq = rx * rx,\n              rySq = ry * ry,\n              xSq = x * x,\n              ySq = y * y;\n          var factor = sqrt(xSq / rxSq + ySq / rySq);\n\n          if (factor > 1) {\n            rx *= factor;\n            ry *= factor;\n            rxSq = rx * rx;\n            rySq = ry * ry;\n          }\n\n          factor = (rxSq * rySq - rxSq * ySq - rySq * xSq) / (rxSq * ySq + rySq * xSq);\n          if (abs(factor) < 1e-12) factor = 0;\n          if (factor < 0) throw new Error('Cannot create an arc with the given arguments');\n          center = new Point(rx * y / ry, -ry * x / rx).multiply((large === clockwise ? -1 : 1) * sqrt(factor)).rotate(rotation).add(middle);\n          matrix = new Matrix().translate(center).rotate(rotation).scale(rx, ry);\n          vector = matrix._inverseTransform(from);\n          extent = vector.getDirectedAngle(matrix._inverseTransform(to));\n          if (!clockwise && extent > 0) extent -= 360;else if (clockwise && extent < 0) extent += 360;\n        }\n\n        if (through) {\n          var l1 = new Line(from.add(through).divide(2), through.subtract(from).rotate(90), true),\n              l2 = new Line(through.add(to).divide(2), to.subtract(through).rotate(90), true),\n              line = new Line(from, to),\n              throughSide = line.getSide(through);\n          center = l1.intersect(l2, true);\n\n          if (!center) {\n            if (!throughSide) return this.lineTo(to);\n            throw new Error('Cannot create an arc with the given arguments');\n          }\n\n          vector = from.subtract(center);\n          extent = vector.getDirectedAngle(to.subtract(center));\n          var centerSide = line.getSide(center, true);\n\n          if (centerSide === 0) {\n            extent = throughSide * abs(extent);\n          } else if (throughSide === centerSide) {\n            extent += extent < 0 ? 360 : -360;\n          }\n        }\n\n        if (extent) {\n          var epsilon = 1e-7,\n              ext = abs(extent),\n              count = ext >= 360 ? 4 : Math.ceil((ext - epsilon) / 90),\n              inc = extent / count,\n              half = inc * Math.PI / 360,\n              z = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n              segments = [];\n\n          for (var i = 0; i <= count; i++) {\n            var pt = to,\n                out = null;\n\n            if (i < count) {\n              out = vector.rotate(90).multiply(z);\n\n              if (matrix) {\n                pt = matrix._transformPoint(vector);\n                out = matrix._transformPoint(vector.add(out)).subtract(pt);\n              } else {\n                pt = center.add(vector);\n              }\n            }\n\n            if (!i) {\n              current.setHandleOut(out);\n            } else {\n              var _in = vector.rotate(-90).multiply(z);\n\n              if (matrix) {\n                _in = matrix._transformPoint(vector.add(_in)).subtract(pt);\n              }\n\n              segments.push(new Segment(pt, _in, out));\n            }\n\n            vector = vector.rotate(inc);\n          }\n\n          this._add(segments);\n        }\n      },\n      lineBy: function lineBy() {\n        var to = Point.read(arguments),\n            current = getCurrentSegment(this)._point;\n\n        this.lineTo(current.add(to));\n      },\n      curveBy: function curveBy() {\n        var args = arguments,\n            through = Point.read(args),\n            to = Point.read(args),\n            parameter = Base.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.curveTo(current.add(through), current.add(to), parameter);\n      },\n      cubicCurveBy: function cubicCurveBy() {\n        var args = arguments,\n            handle1 = Point.read(args),\n            handle2 = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.cubicCurveTo(current.add(handle1), current.add(handle2), current.add(to));\n      },\n      quadraticCurveBy: function quadraticCurveBy() {\n        var args = arguments,\n            handle = Point.read(args),\n            to = Point.read(args),\n            current = getCurrentSegment(this)._point;\n\n        this.quadraticCurveTo(current.add(handle), current.add(to));\n      },\n      arcBy: function arcBy() {\n        var args = arguments,\n            current = getCurrentSegment(this)._point,\n            point = current.add(Point.read(args)),\n            clockwise = Base.pick(Base.peek(args), true);\n\n        if (typeof clockwise === 'boolean') {\n          this.arcTo(point, clockwise);\n        } else {\n          this.arcTo(point, current.add(Point.read(args)));\n        }\n      },\n      closePath: function closePath(tolerance) {\n        this.setClosed(true);\n        this.join(this, tolerance);\n      }\n    };\n  }(), {\n    _getBounds: function _getBounds(matrix, options) {\n      var method = options.handle ? 'getHandleBounds' : options.stroke ? 'getStrokeBounds' : 'getBounds';\n      return Path[method](this._segments, this._closed, this, matrix, options);\n    },\n    statics: {\n      getBounds: function getBounds(segments, closed, path, matrix, options, strokePadding) {\n        var first = segments[0];\n        if (!first) return new _Rectangle();\n\n        var coords = new Array(6),\n            prevCoords = first._transformCoordinates(matrix, new Array(6)),\n            min = prevCoords.slice(0, 2),\n            max = min.slice(),\n            roots = new Array(2);\n\n        function processSegment(segment) {\n          segment._transformCoordinates(matrix, coords);\n\n          for (var i = 0; i < 2; i++) {\n            Curve._addBounds(prevCoords[i], prevCoords[i + 4], coords[i + 2], coords[i], i, strokePadding ? strokePadding[i] : 0, min, max, roots);\n          }\n\n          var tmp = prevCoords;\n          prevCoords = coords;\n          coords = tmp;\n        }\n\n        for (var i = 1, l = segments.length; i < l; i++) {\n          processSegment(segments[i]);\n        }\n\n        if (closed) processSegment(first);\n        return new _Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n      },\n      getStrokeBounds: function getStrokeBounds(segments, closed, path, matrix, options) {\n        var style = path.getStyle(),\n            stroke = style.hasStroke(),\n            strokeWidth = style.getStrokeWidth(),\n            strokeMatrix = stroke && path._getStrokeMatrix(matrix, options),\n            strokePadding = stroke && Path._getStrokePadding(strokeWidth, strokeMatrix),\n            bounds = Path.getBounds(segments, closed, path, matrix, options, strokePadding);\n\n        if (!stroke) return bounds;\n        var strokeRadius = strokeWidth / 2,\n            join = style.getStrokeJoin(),\n            cap = style.getStrokeCap(),\n            miterLimit = style.getMiterLimit(),\n            joinBounds = new _Rectangle(new Size(strokePadding));\n\n        function addPoint(point) {\n          bounds = bounds.include(point);\n        }\n\n        function addRound(segment) {\n          bounds = bounds.unite(joinBounds.setCenter(segment._point.transform(matrix)));\n        }\n\n        function addJoin(segment, join) {\n          if (join === 'round' || segment.isSmooth()) {\n            addRound(segment);\n          } else {\n            Path._addBevelJoin(segment, join, strokeRadius, miterLimit, matrix, strokeMatrix, addPoint);\n          }\n        }\n\n        function addCap(segment, cap) {\n          if (cap === 'round') {\n            addRound(segment);\n          } else {\n            Path._addSquareCap(segment, cap, strokeRadius, matrix, strokeMatrix, addPoint);\n          }\n        }\n\n        var length = segments.length - (closed ? 0 : 1);\n\n        for (var i = 1; i < length; i++) {\n          addJoin(segments[i], join);\n        }\n\n        if (closed) {\n          addJoin(segments[0], join);\n        } else if (length > 0) {\n          addCap(segments[0], cap);\n          addCap(segments[segments.length - 1], cap);\n        }\n\n        return bounds;\n      },\n      _getStrokePadding: function _getStrokePadding(radius, matrix) {\n        if (!matrix) return [radius, radius];\n        var hor = new Point(radius, 0).transform(matrix),\n            ver = new Point(0, radius).transform(matrix),\n            phi = hor.getAngleInRadians(),\n            a = hor.getLength(),\n            b = ver.getLength();\n        var sin = Math.sin(phi),\n            cos = Math.cos(phi),\n            tan = Math.tan(phi),\n            tx = Math.atan2(b * tan, a),\n            ty = Math.atan2(b, tan * a);\n        return [Math.abs(a * Math.cos(tx) * cos + b * Math.sin(tx) * sin), Math.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n      },\n      _addBevelJoin: function _addBevelJoin(segment, join, radius, miterLimit, matrix, strokeMatrix, addPoint, isArea) {\n        var curve2 = segment.getCurve(),\n            curve1 = curve2.getPrevious(),\n            point = curve2.getPoint1().transform(matrix),\n            normal1 = curve1.getNormalAtTime(1).multiply(radius).transform(strokeMatrix),\n            normal2 = curve2.getNormalAtTime(0).multiply(radius).transform(strokeMatrix),\n            angle = normal1.getDirectedAngle(normal2);\n\n        if (angle < 0 || angle >= 180) {\n          normal1 = normal1.negate();\n          normal2 = normal2.negate();\n        }\n\n        if (isArea) addPoint(point);\n        addPoint(point.add(normal1));\n\n        if (join === 'miter') {\n          var corner = new Line(point.add(normal1), new Point(-normal1.y, normal1.x), true).intersect(new Line(point.add(normal2), new Point(-normal2.y, normal2.x), true), true);\n\n          if (corner && point.getDistance(corner) <= miterLimit * radius) {\n            addPoint(corner);\n          }\n        }\n\n        addPoint(point.add(normal2));\n      },\n      _addSquareCap: function _addSquareCap(segment, cap, radius, matrix, strokeMatrix, addPoint, isArea) {\n        var point = segment._point.transform(matrix),\n            loc = segment.getLocation(),\n            normal = loc.getNormal().multiply(loc.getTime() === 0 ? radius : -radius).transform(strokeMatrix);\n\n        if (cap === 'square') {\n          if (isArea) {\n            addPoint(point.subtract(normal));\n            addPoint(point.add(normal));\n          }\n\n          point = point.add(normal.rotate(-90));\n        }\n\n        addPoint(point.add(normal));\n        addPoint(point.subtract(normal));\n      },\n      getHandleBounds: function getHandleBounds(segments, closed, path, matrix, options) {\n        var style = path.getStyle(),\n            stroke = options.stroke && style.hasStroke(),\n            strokePadding,\n            joinPadding;\n\n        if (stroke) {\n          var strokeMatrix = path._getStrokeMatrix(matrix, options),\n              strokeRadius = style.getStrokeWidth() / 2,\n              joinRadius = strokeRadius;\n\n          if (style.getStrokeJoin() === 'miter') joinRadius = strokeRadius * style.getMiterLimit();\n          if (style.getStrokeCap() === 'square') joinRadius = Math.max(joinRadius, strokeRadius * Math.SQRT2);\n          strokePadding = Path._getStrokePadding(strokeRadius, strokeMatrix);\n          joinPadding = Path._getStrokePadding(joinRadius, strokeMatrix);\n        }\n\n        var coords = new Array(6),\n            x1 = Infinity,\n            x2 = -x1,\n            y1 = x1,\n            y2 = x2;\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          var segment = segments[i];\n\n          segment._transformCoordinates(matrix, coords);\n\n          for (var j = 0; j < 6; j += 2) {\n            var padding = !j ? joinPadding : strokePadding,\n                paddingX = padding ? padding[0] : 0,\n                paddingY = padding ? padding[1] : 0,\n                x = coords[j],\n                y = coords[j + 1],\n                xn = x - paddingX,\n                xx = x + paddingX,\n                yn = y - paddingY,\n                yx = y + paddingY;\n            if (xn < x1) x1 = xn;\n            if (xx > x2) x2 = xx;\n            if (yn < y1) y1 = yn;\n            if (yx > y2) y2 = yx;\n          }\n        }\n\n        return new _Rectangle(x1, y1, x2 - x1, y2 - y1);\n      }\n    }\n  });\n  Path.inject({\n    statics: new function () {\n      var kappa = 0.5522847498307936,\n          ellipseSegments = [new Segment([-1, 0], [0, kappa], [0, -kappa]), new Segment([0, -1], [-kappa, 0], [kappa, 0]), new Segment([1, 0], [0, -kappa], [0, kappa]), new Segment([0, 1], [kappa, 0], [-kappa, 0])];\n\n      function createPath(segments, closed, args) {\n        var props = Base.getNamed(args),\n            path = new Path(props && props.insert == false && Item.NO_INSERT);\n\n        path._add(segments);\n\n        path._closed = closed;\n        return path.set(props, {\n          insert: true\n        });\n      }\n\n      function createEllipse(center, radius, args) {\n        var segments = new Array(4);\n\n        for (var i = 0; i < 4; i++) {\n          var segment = ellipseSegments[i];\n          segments[i] = new Segment(segment._point.multiply(radius).add(center), segment._handleIn.multiply(radius), segment._handleOut.multiply(radius));\n        }\n\n        return createPath(segments, true, args);\n      }\n\n      return {\n        Line: function Line() {\n          var args = arguments;\n          return createPath([new Segment(Point.readNamed(args, 'from')), new Segment(Point.readNamed(args, 'to'))], false, args);\n        },\n        Circle: function Circle() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              radius = Base.readNamed(args, 'radius');\n          return createEllipse(center, new Size(radius), args);\n        },\n        Rectangle: function Rectangle() {\n          var args = arguments,\n              rect = _Rectangle.readNamed(args, 'rectangle'),\n              radius = Size.readNamed(args, 'radius', 0, {\n            readNull: true\n          }),\n              bl = rect.getBottomLeft(true),\n              tl = rect.getTopLeft(true),\n              tr = rect.getTopRight(true),\n              br = rect.getBottomRight(true),\n              segments;\n\n          if (!radius || radius.isZero()) {\n            segments = [new Segment(bl), new Segment(tl), new Segment(tr), new Segment(br)];\n          } else {\n            radius = Size.min(radius, rect.getSize(true).divide(2));\n            var rx = radius.width,\n                ry = radius.height,\n                hx = rx * kappa,\n                hy = ry * kappa;\n            segments = [new Segment(bl.add(rx, 0), null, [-hx, 0]), new Segment(bl.subtract(0, ry), [0, hy]), new Segment(tl.add(0, ry), null, [0, -hy]), new Segment(tl.add(rx, 0), [-hx, 0], null), new Segment(tr.subtract(rx, 0), null, [hx, 0]), new Segment(tr.add(0, ry), [0, -hy], null), new Segment(br.subtract(0, ry), null, [0, hy]), new Segment(br.subtract(rx, 0), [hx, 0])];\n          }\n\n          return createPath(segments, true, args);\n        },\n        RoundRectangle: '#Rectangle',\n        Ellipse: function Ellipse() {\n          var args = arguments,\n              ellipse = Shape._readEllipse(args);\n\n          return createEllipse(ellipse.center, ellipse.radius, args);\n        },\n        Oval: '#Ellipse',\n        Arc: function Arc() {\n          var args = arguments,\n              from = Point.readNamed(args, 'from'),\n              through = Point.readNamed(args, 'through'),\n              to = Point.readNamed(args, 'to'),\n              props = Base.getNamed(args),\n              path = new Path(props && props.insert == false && Item.NO_INSERT);\n          path.moveTo(from);\n          path.arcTo(through, to);\n          return path.set(props);\n        },\n        RegularPolygon: function RegularPolygon() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              sides = Base.readNamed(args, 'sides'),\n              radius = Base.readNamed(args, 'radius'),\n              step = 360 / sides,\n              three = sides % 3 === 0,\n              vector = new Point(0, three ? -radius : radius),\n              offset = three ? -1 : 0.5,\n              segments = new Array(sides);\n\n          for (var i = 0; i < sides; i++) {\n            segments[i] = new Segment(center.add(vector.rotate((i + offset) * step)));\n          }\n\n          return createPath(segments, true, args);\n        },\n        Star: function Star() {\n          var args = arguments,\n              center = Point.readNamed(args, 'center'),\n              points = Base.readNamed(args, 'points') * 2,\n              radius1 = Base.readNamed(args, 'radius1'),\n              radius2 = Base.readNamed(args, 'radius2'),\n              step = 360 / points,\n              vector = new Point(0, -1),\n              segments = new Array(points);\n\n          for (var i = 0; i < points; i++) {\n            segments[i] = new Segment(center.add(vector.rotate(step * i).multiply(i % 2 ? radius2 : radius1)));\n          }\n\n          return createPath(segments, true, args);\n        }\n      };\n    }()\n  });\n  var CompoundPath = PathItem.extend({\n    _class: 'CompoundPath',\n    _serializeFields: {\n      children: []\n    },\n    beans: true,\n    initialize: function CompoundPath(arg) {\n      this._children = [];\n      this._namedChildren = {};\n\n      if (!this._initialize(arg)) {\n        if (typeof arg === 'string') {\n          this.setPathData(arg);\n        } else {\n          this.addChildren(Array.isArray(arg) ? arg : arguments);\n        }\n      }\n    },\n    insertChildren: function insertChildren(index, items) {\n      var list = items,\n          first = list[0];\n      if (first && typeof first[0] === 'number') list = [list];\n\n      for (var i = items.length - 1; i >= 0; i--) {\n        var item = list[i];\n        if (list === items && !(item instanceof Path)) list = Base.slice(list);\n\n        if (Array.isArray(item)) {\n          list[i] = new Path({\n            segments: item,\n            insert: false\n          });\n        } else if (item instanceof CompoundPath) {\n          list.splice.apply(list, [i, 1].concat(item.removeChildren()));\n          item.remove();\n        }\n      }\n\n      return insertChildren.base.call(this, index, list);\n    },\n    reduce: function reduce(options) {\n      var children = this._children;\n\n      for (var i = children.length - 1; i >= 0; i--) {\n        var path = children[i].reduce(options);\n        if (path.isEmpty()) path.remove();\n      }\n\n      if (!children.length) {\n        var path = new Path(Item.NO_INSERT);\n        path.copyAttributes(this);\n        path.insertAbove(this);\n        this.remove();\n        return path;\n      }\n\n      return reduce.base.call(this);\n    },\n    isClosed: function isClosed() {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        if (!children[i]._closed) return false;\n      }\n\n      return true;\n    },\n    setClosed: function setClosed(closed) {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].setClosed(closed);\n      }\n    },\n    getFirstSegment: function getFirstSegment() {\n      var first = this.getFirstChild();\n      return first && first.getFirstSegment();\n    },\n    getLastSegment: function getLastSegment() {\n      var last = this.getLastChild();\n      return last && last.getLastSegment();\n    },\n    getCurves: function getCurves() {\n      var children = this._children,\n          curves = [];\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        Base.push(curves, children[i].getCurves());\n      }\n\n      return curves;\n    },\n    getFirstCurve: function getFirstCurve() {\n      var first = this.getFirstChild();\n      return first && first.getFirstCurve();\n    },\n    getLastCurve: function getLastCurve() {\n      var last = this.getLastChild();\n      return last && last.getLastCurve();\n    },\n    getArea: function getArea() {\n      var children = this._children,\n          area = 0;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        area += children[i].getArea();\n      }\n\n      return area;\n    },\n    getLength: function getLength() {\n      var children = this._children,\n          length = 0;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        length += children[i].getLength();\n      }\n\n      return length;\n    },\n    getPathData: function getPathData(_matrix, _precision) {\n      var children = this._children,\n          paths = [];\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i],\n            mx = child._matrix;\n        paths.push(child.getPathData(_matrix && !mx.isIdentity() ? _matrix.appended(mx) : _matrix, _precision));\n      }\n\n      return paths.join('');\n    },\n    _hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n      return _hitTestChildren.base.call(this, point, options.class === Path || options.type === 'path' ? options : Base.set({}, options, {\n        fill: false\n      }), viewMatrix);\n    },\n    _draw: function _draw(ctx, param, viewMatrix, strokeMatrix) {\n      var children = this._children;\n      if (!children.length) return;\n      param = param.extend({\n        dontStart: true,\n        dontFinish: true\n      });\n      ctx.beginPath();\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].draw(ctx, param, strokeMatrix);\n      }\n\n      if (!param.clip) {\n        this._setStyles(ctx, param, viewMatrix);\n\n        var style = this._style;\n\n        if (style.hasFill()) {\n          ctx.fill(style.getFillRule());\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n        }\n\n        if (style.hasStroke()) ctx.stroke();\n      }\n    },\n    _drawSelected: function _drawSelected(ctx, matrix, selectionItems) {\n      var children = this._children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i],\n            mx = child._matrix;\n\n        if (!selectionItems[child._id]) {\n          child._drawSelected(ctx, mx.isIdentity() ? matrix : matrix.appended(mx));\n        }\n      }\n    }\n  }, new function () {\n    function getCurrentPath(that, check) {\n      var children = that._children;\n      if (check && !children.length) throw new Error('Use a moveTo() command first');\n      return children[children.length - 1];\n    }\n\n    return Base.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo', 'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'], function (key) {\n      this[key] = function () {\n        var path = getCurrentPath(this, true);\n        path[key].apply(path, arguments);\n      };\n    }, {\n      moveTo: function moveTo() {\n        var current = getCurrentPath(this),\n            path = current && current.isEmpty() ? current : new Path(Item.NO_INSERT);\n        if (path !== current) this.addChild(path);\n        path.moveTo.apply(path, arguments);\n      },\n      moveBy: function moveBy() {\n        var current = getCurrentPath(this, true),\n            last = current && current.getLastSegment(),\n            point = Point.read(arguments);\n        this.moveTo(last ? point.add(last._point) : point);\n      },\n      closePath: function closePath(tolerance) {\n        getCurrentPath(this, true).closePath(tolerance);\n      }\n    });\n  }(), Base.each(['reverse', 'flatten', 'simplify', 'smooth'], function (key) {\n    this[key] = function (param) {\n      var children = this._children,\n          res;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        res = children[i][key](param) || res;\n      }\n\n      return res;\n    };\n  }, {}));\n  PathItem.inject(new function () {\n    var min = Math.min,\n        max = Math.max,\n        abs = Math.abs,\n        operators = {\n      unite: {\n        '1': true,\n        '2': true\n      },\n      intersect: {\n        '2': true\n      },\n      subtract: {\n        '1': true\n      },\n      exclude: {\n        '1': true,\n        '-1': true\n      }\n    };\n\n    function getPaths(path) {\n      return path._children || [path];\n    }\n\n    function preparePath(path, resolve) {\n      var res = path.clone(false).reduce({\n        simplify: true\n      }).transform(null, true, true);\n\n      if (resolve) {\n        var paths = getPaths(res);\n\n        for (var i = 0, l = paths.length; i < l; i++) {\n          var path = paths[i];\n\n          if (!path._closed && !path.isEmpty()) {\n            path.closePath(1e-12);\n            path.getFirstSegment().setHandleIn(0, 0);\n            path.getLastSegment().setHandleOut(0, 0);\n          }\n        }\n\n        res = res.resolveCrossings().reorient(res.getFillRule() === 'nonzero', true);\n      }\n\n      return res;\n    }\n\n    function createResult(paths, simplify, path1, path2, options) {\n      var result = new CompoundPath(Item.NO_INSERT);\n      result.addChildren(paths, true);\n      result = result.reduce({\n        simplify: simplify\n      });\n\n      if (!(options && options.insert == false)) {\n        result.insertAbove(path2 && path1.isSibling(path2) && path1.getIndex() < path2.getIndex() ? path2 : path1);\n      }\n\n      result.copyAttributes(path1, true);\n      return result;\n    }\n\n    function filterIntersection(inter) {\n      return inter.hasOverlap() || inter.isCrossing();\n    }\n\n    function traceBoolean(path1, path2, operation, options) {\n      if (options && (options.trace == false || options.stroke) && /^(subtract|intersect)$/.test(operation)) return splitBoolean(path1, path2, operation);\n\n      var _path1 = preparePath(path1, true),\n          _path2 = path2 && path1 !== path2 && preparePath(path2, true),\n          operator = operators[operation];\n\n      operator[operation] = true;\n      if (_path2 && (operator.subtract || operator.exclude) ^ (_path2.isClockwise() ^ _path1.isClockwise())) _path2.reverse();\n\n      var crossings = divideLocations(CurveLocation.expand(_path1.getIntersections(_path2, filterIntersection))),\n          paths1 = getPaths(_path1),\n          paths2 = _path2 && getPaths(_path2),\n          segments = [],\n          curves = [],\n          paths;\n\n      function collectPaths(paths) {\n        for (var i = 0, l = paths.length; i < l; i++) {\n          var path = paths[i];\n          Base.push(segments, path._segments);\n          Base.push(curves, path.getCurves());\n          path._overlapsOnly = true;\n        }\n      }\n\n      function getCurves(indices) {\n        var list = [];\n\n        for (var i = 0, l = indices && indices.length; i < l; i++) {\n          list.push(curves[indices[i]]);\n        }\n\n        return list;\n      }\n\n      if (crossings.length) {\n        collectPaths(paths1);\n        if (paths2) collectPaths(paths2);\n        var curvesValues = new Array(curves.length);\n\n        for (var i = 0, l = curves.length; i < l; i++) {\n          curvesValues[i] = curves[i].getValues();\n        }\n\n        var curveCollisions = CollisionDetection.findCurveBoundsCollisions(curvesValues, curvesValues, 0, true);\n        var curveCollisionsMap = {};\n\n        for (var i = 0; i < curves.length; i++) {\n          var curve = curves[i],\n              id = curve._path._id,\n              map = curveCollisionsMap[id] = curveCollisionsMap[id] || {};\n          map[curve.getIndex()] = {\n            hor: getCurves(curveCollisions[i].hor),\n            ver: getCurves(curveCollisions[i].ver)\n          };\n        }\n\n        for (var i = 0, l = crossings.length; i < l; i++) {\n          propagateWinding(crossings[i]._segment, _path1, _path2, curveCollisionsMap, operator);\n        }\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          var segment = segments[i],\n              inter = segment._intersection;\n\n          if (!segment._winding) {\n            propagateWinding(segment, _path1, _path2, curveCollisionsMap, operator);\n          }\n\n          if (!(inter && inter._overlap)) segment._path._overlapsOnly = false;\n        }\n\n        paths = tracePaths(segments, operator);\n      } else {\n        paths = reorientPaths(paths2 ? paths1.concat(paths2) : paths1.slice(), function (w) {\n          return !!operator[w];\n        });\n      }\n\n      return createResult(paths, true, path1, path2, options);\n    }\n\n    function splitBoolean(path1, path2, operation) {\n      var _path1 = preparePath(path1),\n          _path2 = preparePath(path2),\n          crossings = _path1.getIntersections(_path2, filterIntersection),\n          subtract = operation === 'subtract',\n          divide = operation === 'divide',\n          added = {},\n          paths = [];\n\n      function addPath(path) {\n        if (!added[path._id] && (divide || _path2.contains(path.getPointAt(path.getLength() / 2)) ^ subtract)) {\n          paths.unshift(path);\n          return added[path._id] = true;\n        }\n      }\n\n      for (var i = crossings.length - 1; i >= 0; i--) {\n        var path = crossings[i].split();\n\n        if (path) {\n          if (addPath(path)) path.getFirstSegment().setHandleIn(0, 0);\n\n          _path1.getLastSegment().setHandleOut(0, 0);\n        }\n      }\n\n      addPath(_path1);\n      return createResult(paths, false, path1, path2);\n    }\n\n    function linkIntersections(from, to) {\n      var prev = from;\n\n      while (prev) {\n        if (prev === to) return;\n        prev = prev._previous;\n      }\n\n      while (from._next && from._next !== to) {\n        from = from._next;\n      }\n\n      if (!from._next) {\n        while (to._previous) {\n          to = to._previous;\n        }\n\n        from._next = to;\n        to._previous = from;\n      }\n    }\n\n    function clearCurveHandles(curves) {\n      for (var i = curves.length - 1; i >= 0; i--) {\n        curves[i].clearHandles();\n      }\n    }\n\n    function reorientPaths(paths, isInside, clockwise) {\n      var length = paths && paths.length;\n\n      if (length) {\n        var lookup = Base.each(paths, function (path, i) {\n          this[path._id] = {\n            container: null,\n            winding: path.isClockwise() ? 1 : -1,\n            index: i\n          };\n        }, {}),\n            sorted = paths.slice().sort(function (a, b) {\n          return abs(b.getArea()) - abs(a.getArea());\n        }),\n            first = sorted[0];\n        var collisions = CollisionDetection.findItemBoundsCollisions(sorted, null, Numerical.GEOMETRIC_EPSILON);\n        if (clockwise == null) clockwise = first.isClockwise();\n\n        for (var i = 0; i < length; i++) {\n          var path1 = sorted[i],\n              entry1 = lookup[path1._id],\n              containerWinding = 0,\n              indices = collisions[i];\n\n          if (indices) {\n            var point = null;\n\n            for (var j = indices.length - 1; j >= 0; j--) {\n              if (indices[j] < i) {\n                point = point || path1.getInteriorPoint();\n                var path2 = sorted[indices[j]];\n\n                if (path2.contains(point)) {\n                  var entry2 = lookup[path2._id];\n                  containerWinding = entry2.winding;\n                  entry1.winding += containerWinding;\n                  entry1.container = entry2.exclude ? entry2.container : path2;\n                  break;\n                }\n              }\n            }\n          }\n\n          if (isInside(entry1.winding) === isInside(containerWinding)) {\n            entry1.exclude = true;\n            paths[entry1.index] = null;\n          } else {\n            var container = entry1.container;\n            path1.setClockwise(container ? !container.isClockwise() : clockwise);\n          }\n        }\n      }\n\n      return paths;\n    }\n\n    function divideLocations(locations, include, clearLater) {\n      var results = include && [],\n          tMin = 1e-8,\n          tMax = 1 - tMin,\n          clearHandles = false,\n          clearCurves = clearLater || [],\n          clearLookup = clearLater && {},\n          renormalizeLocs,\n          prevCurve,\n          prevTime;\n\n      function getId(curve) {\n        return curve._path._id + '.' + curve._segment1._index;\n      }\n\n      for (var i = (clearLater && clearLater.length) - 1; i >= 0; i--) {\n        var curve = clearLater[i];\n        if (curve._path) clearLookup[getId(curve)] = true;\n      }\n\n      for (var i = locations.length - 1; i >= 0; i--) {\n        var loc = locations[i],\n            time = loc._time,\n            origTime = time,\n            exclude = include && !include(loc),\n            curve = loc._curve,\n            segment;\n\n        if (curve) {\n          if (curve !== prevCurve) {\n            clearHandles = !curve.hasHandles() || clearLookup && clearLookup[getId(curve)];\n            renormalizeLocs = [];\n            prevTime = null;\n            prevCurve = curve;\n          } else if (prevTime >= tMin) {\n            time /= prevTime;\n          }\n        }\n\n        if (exclude) {\n          if (renormalizeLocs) renormalizeLocs.push(loc);\n          continue;\n        } else if (include) {\n          results.unshift(loc);\n        }\n\n        prevTime = origTime;\n\n        if (time < tMin) {\n          segment = curve._segment1;\n        } else if (time > tMax) {\n          segment = curve._segment2;\n        } else {\n          var newCurve = curve.divideAtTime(time, true);\n          if (clearHandles) clearCurves.push(curve, newCurve);\n          segment = newCurve._segment1;\n\n          for (var j = renormalizeLocs.length - 1; j >= 0; j--) {\n            var l = renormalizeLocs[j];\n            l._time = (l._time - time) / (1 - time);\n          }\n        }\n\n        loc._setSegment(segment);\n\n        var inter = segment._intersection,\n            dest = loc._intersection;\n\n        if (inter) {\n          linkIntersections(inter, dest);\n          var other = inter;\n\n          while (other) {\n            linkIntersections(other._intersection, inter);\n            other = other._next;\n          }\n        } else {\n          segment._intersection = dest;\n        }\n      }\n\n      if (!clearLater) clearCurveHandles(clearCurves);\n      return results || locations;\n    }\n\n    function getWinding(point, curves, dir, closed, dontFlip) {\n      var curvesList = Array.isArray(curves) ? curves : curves[dir ? 'hor' : 'ver'];\n      var ia = dir ? 1 : 0,\n          io = ia ^ 1,\n          pv = [point.x, point.y],\n          pa = pv[ia],\n          po = pv[io],\n          windingEpsilon = 1e-9,\n          qualityEpsilon = 1e-6,\n          paL = pa - windingEpsilon,\n          paR = pa + windingEpsilon,\n          windingL = 0,\n          windingR = 0,\n          pathWindingL = 0,\n          pathWindingR = 0,\n          onPath = false,\n          onAnyPath = false,\n          quality = 1,\n          roots = [],\n          vPrev,\n          vClose;\n\n      function addWinding(v) {\n        var o0 = v[io + 0],\n            o3 = v[io + 6];\n\n        if (po < min(o0, o3) || po > max(o0, o3)) {\n          return;\n        }\n\n        var a0 = v[ia + 0],\n            a1 = v[ia + 2],\n            a2 = v[ia + 4],\n            a3 = v[ia + 6];\n\n        if (o0 === o3) {\n          if (a0 < paR && a3 > paL || a3 < paR && a0 > paL) {\n            onPath = true;\n          }\n\n          return;\n        }\n\n        var t = po === o0 ? 0 : po === o3 ? 1 : paL > max(a0, a1, a2, a3) || paR < min(a0, a1, a2, a3) ? 1 : Curve.solveCubic(v, io, po, roots, 0, 1) > 0 ? roots[0] : 1,\n            a = t === 0 ? a0 : t === 1 ? a3 : Curve.getPoint(v, t)[dir ? 'y' : 'x'],\n            winding = o0 > o3 ? 1 : -1,\n            windingPrev = vPrev[io] > vPrev[io + 6] ? 1 : -1,\n            a3Prev = vPrev[ia + 6];\n\n        if (po !== o0) {\n          if (a < paL) {\n            pathWindingL += winding;\n          } else if (a > paR) {\n            pathWindingR += winding;\n          } else {\n            onPath = true;\n          }\n\n          if (a > pa - qualityEpsilon && a < pa + qualityEpsilon) quality /= 2;\n        } else {\n          if (winding !== windingPrev) {\n            if (a0 < paL) {\n              pathWindingL += winding;\n            } else if (a0 > paR) {\n              pathWindingR += winding;\n            }\n          } else if (a0 != a3Prev) {\n            if (a3Prev < paR && a > paR) {\n              pathWindingR += winding;\n              onPath = true;\n            } else if (a3Prev > paL && a < paL) {\n              pathWindingL += winding;\n              onPath = true;\n            }\n          }\n\n          quality /= 4;\n        }\n\n        vPrev = v;\n        return !dontFlip && a > paL && a < paR && Curve.getTangent(v, t)[dir ? 'x' : 'y'] === 0 && getWinding(point, curves, !dir, closed, true);\n      }\n\n      function handleCurve(v) {\n        var o0 = v[io + 0],\n            o1 = v[io + 2],\n            o2 = v[io + 4],\n            o3 = v[io + 6];\n\n        if (po <= max(o0, o1, o2, o3) && po >= min(o0, o1, o2, o3)) {\n          var a0 = v[ia + 0],\n              a1 = v[ia + 2],\n              a2 = v[ia + 4],\n              a3 = v[ia + 6],\n              monoCurves = paL > max(a0, a1, a2, a3) || paR < min(a0, a1, a2, a3) ? [v] : Curve.getMonoCurves(v, dir),\n              res;\n\n          for (var i = 0, l = monoCurves.length; i < l; i++) {\n            if (res = addWinding(monoCurves[i])) return res;\n          }\n        }\n      }\n\n      for (var i = 0, l = curvesList.length; i < l; i++) {\n        var curve = curvesList[i],\n            path = curve._path,\n            v = curve.getValues(),\n            res;\n\n        if (!i || curvesList[i - 1]._path !== path) {\n          vPrev = null;\n\n          if (!path._closed) {\n            vClose = Curve.getValues(path.getLastCurve().getSegment2(), curve.getSegment1(), null, !closed);\n\n            if (vClose[io] !== vClose[io + 6]) {\n              vPrev = vClose;\n            }\n          }\n\n          if (!vPrev) {\n            vPrev = v;\n            var prev = path.getLastCurve();\n\n            while (prev && prev !== curve) {\n              var v2 = prev.getValues();\n\n              if (v2[io] !== v2[io + 6]) {\n                vPrev = v2;\n                break;\n              }\n\n              prev = prev.getPrevious();\n            }\n          }\n        }\n\n        if (res = handleCurve(v)) return res;\n\n        if (i + 1 === l || curvesList[i + 1]._path !== path) {\n          if (vClose && (res = handleCurve(vClose))) return res;\n\n          if (onPath && !pathWindingL && !pathWindingR) {\n            pathWindingL = pathWindingR = path.isClockwise(closed) ^ dir ? 1 : -1;\n          }\n\n          windingL += pathWindingL;\n          windingR += pathWindingR;\n          pathWindingL = pathWindingR = 0;\n\n          if (onPath) {\n            onAnyPath = true;\n            onPath = false;\n          }\n\n          vClose = null;\n        }\n      }\n\n      windingL = abs(windingL);\n      windingR = abs(windingR);\n      return {\n        winding: max(windingL, windingR),\n        windingL: windingL,\n        windingR: windingR,\n        quality: quality,\n        onPath: onAnyPath\n      };\n    }\n\n    function propagateWinding(segment, path1, path2, curveCollisionsMap, operator) {\n      var chain = [],\n          start = segment,\n          totalLength = 0,\n          winding;\n\n      do {\n        var curve = segment.getCurve();\n\n        if (curve) {\n          var length = curve.getLength();\n          chain.push({\n            segment: segment,\n            curve: curve,\n            length: length\n          });\n          totalLength += length;\n        }\n\n        segment = segment.getNext();\n      } while (segment && !segment._intersection && segment !== start);\n\n      var offsets = [0.5, 0.25, 0.75],\n          winding = {\n        winding: 0,\n        quality: -1\n      },\n          tMin = 1e-3,\n          tMax = 1 - tMin;\n\n      for (var i = 0; i < offsets.length && winding.quality < 0.5; i++) {\n        var length = totalLength * offsets[i];\n\n        for (var j = 0, l = chain.length; j < l; j++) {\n          var entry = chain[j],\n              curveLength = entry.length;\n\n          if (length <= curveLength) {\n            var curve = entry.curve,\n                path = curve._path,\n                parent = path._parent,\n                operand = parent instanceof CompoundPath ? parent : path,\n                t = Numerical.clamp(curve.getTimeAt(length), tMin, tMax),\n                pt = curve.getPointAtTime(t),\n                dir = abs(curve.getTangentAtTime(t).y) < Math.SQRT1_2;\n            var wind = null;\n\n            if (operator.subtract && path2) {\n              var otherPath = operand === path1 ? path2 : path1,\n                  pathWinding = otherPath._getWinding(pt, dir, true);\n\n              if (operand === path1 && pathWinding.winding || operand === path2 && !pathWinding.winding) {\n                if (pathWinding.quality < 1) {\n                  continue;\n                } else {\n                  wind = {\n                    winding: 0,\n                    quality: 1\n                  };\n                }\n              }\n            }\n\n            wind = wind || getWinding(pt, curveCollisionsMap[path._id][curve.getIndex()], dir, true);\n            if (wind.quality > winding.quality) winding = wind;\n            break;\n          }\n\n          length -= curveLength;\n        }\n      }\n\n      for (var j = chain.length - 1; j >= 0; j--) {\n        chain[j].segment._winding = winding;\n      }\n    }\n\n    function tracePaths(segments, operator) {\n      var paths = [],\n          starts;\n\n      function isValid(seg) {\n        var winding;\n        return !!(seg && !seg._visited && (!operator || operator[(winding = seg._winding || {}).winding] && !(operator.unite && winding.winding === 2 && winding.windingL && winding.windingR)));\n      }\n\n      function isStart(seg) {\n        if (seg) {\n          for (var i = 0, l = starts.length; i < l; i++) {\n            if (seg === starts[i]) return true;\n          }\n        }\n\n        return false;\n      }\n\n      function visitPath(path) {\n        var segments = path._segments;\n\n        for (var i = 0, l = segments.length; i < l; i++) {\n          segments[i]._visited = true;\n        }\n      }\n\n      function getCrossingSegments(segment, collectStarts) {\n        var inter = segment._intersection,\n            start = inter,\n            crossings = [];\n        if (collectStarts) starts = [segment];\n\n        function collect(inter, end) {\n          while (inter && inter !== end) {\n            var other = inter._segment,\n                path = other && other._path;\n\n            if (path) {\n              var next = other.getNext() || path.getFirstSegment(),\n                  nextInter = next._intersection;\n\n              if (other !== segment && (isStart(other) || isStart(next) || next && isValid(other) && (isValid(next) || nextInter && isValid(nextInter._segment)))) {\n                crossings.push(other);\n              }\n\n              if (collectStarts) starts.push(other);\n            }\n\n            inter = inter._next;\n          }\n        }\n\n        if (inter) {\n          collect(inter);\n\n          while (inter && inter._prev) {\n            inter = inter._prev;\n          }\n\n          collect(inter, start);\n        }\n\n        return crossings;\n      }\n\n      segments.sort(function (seg1, seg2) {\n        var inter1 = seg1._intersection,\n            inter2 = seg2._intersection,\n            over1 = !!(inter1 && inter1._overlap),\n            over2 = !!(inter2 && inter2._overlap),\n            path1 = seg1._path,\n            path2 = seg2._path;\n        return over1 ^ over2 ? over1 ? 1 : -1 : !inter1 ^ !inter2 ? inter1 ? 1 : -1 : path1 !== path2 ? path1._id - path2._id : seg1._index - seg2._index;\n      });\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var seg = segments[i],\n            valid = isValid(seg),\n            path = null,\n            finished = false,\n            closed = true,\n            branches = [],\n            branch,\n            visited,\n            handleIn;\n\n        if (valid && seg._path._overlapsOnly) {\n          var path1 = seg._path,\n              path2 = seg._intersection._segment._path;\n\n          if (path1.compare(path2)) {\n            if (path1.getArea()) paths.push(path1.clone(false));\n            visitPath(path1);\n            visitPath(path2);\n            valid = false;\n          }\n        }\n\n        while (valid) {\n          var first = !path,\n              crossings = getCrossingSegments(seg, first),\n              other = crossings.shift(),\n              finished = !first && (isStart(seg) || isStart(other)),\n              cross = !finished && other;\n\n          if (first) {\n            path = new Path(Item.NO_INSERT);\n            branch = null;\n          }\n\n          if (finished) {\n            if (seg.isFirst() || seg.isLast()) closed = seg._path._closed;\n            seg._visited = true;\n            break;\n          }\n\n          if (cross && branch) {\n            branches.push(branch);\n            branch = null;\n          }\n\n          if (!branch) {\n            if (cross) crossings.push(seg);\n            branch = {\n              start: path._segments.length,\n              crossings: crossings,\n              visited: visited = [],\n              handleIn: handleIn\n            };\n          }\n\n          if (cross) seg = other;\n\n          if (!isValid(seg)) {\n            path.removeSegments(branch.start);\n\n            for (var j = 0, k = visited.length; j < k; j++) {\n              visited[j]._visited = false;\n            }\n\n            visited.length = 0;\n\n            do {\n              seg = branch && branch.crossings.shift();\n\n              if (!seg || !seg._path) {\n                seg = null;\n                branch = branches.pop();\n\n                if (branch) {\n                  visited = branch.visited;\n                  handleIn = branch.handleIn;\n                }\n              }\n            } while (branch && !isValid(seg));\n\n            if (!seg) break;\n          }\n\n          var next = seg.getNext();\n          path.add(new Segment(seg._point, handleIn, next && seg._handleOut));\n          seg._visited = true;\n          visited.push(seg);\n          seg = next || seg._path.getFirstSegment();\n          handleIn = next && next._handleIn;\n        }\n\n        if (finished) {\n          if (closed) {\n            path.getFirstSegment().setHandleIn(handleIn);\n            path.setClosed(closed);\n          }\n\n          if (path.getArea() !== 0) {\n            paths.push(path);\n          }\n        }\n      }\n\n      return paths;\n    }\n\n    return {\n      _getWinding: function _getWinding(point, dir, closed) {\n        return getWinding(point, this.getCurves(), dir, closed);\n      },\n      unite: function unite(path, options) {\n        return traceBoolean(this, path, 'unite', options);\n      },\n      intersect: function intersect(path, options) {\n        return traceBoolean(this, path, 'intersect', options);\n      },\n      subtract: function subtract(path, options) {\n        return traceBoolean(this, path, 'subtract', options);\n      },\n      exclude: function exclude(path, options) {\n        return traceBoolean(this, path, 'exclude', options);\n      },\n      divide: function divide(path, options) {\n        return options && (options.trace == false || options.stroke) ? splitBoolean(this, path, 'divide') : createResult([this.subtract(path, options), this.intersect(path, options)], true, this, path, options);\n      },\n      resolveCrossings: function resolveCrossings() {\n        var children = this._children,\n            paths = children || [this];\n\n        function hasOverlap(seg, path) {\n          var inter = seg && seg._intersection;\n          return inter && inter._overlap && inter._path === path;\n        }\n\n        var hasOverlaps = false,\n            hasCrossings = false,\n            intersections = this.getIntersections(null, function (inter) {\n          return inter.hasOverlap() && (hasOverlaps = true) || inter.isCrossing() && (hasCrossings = true);\n        }),\n            clearCurves = hasOverlaps && hasCrossings && [];\n        intersections = CurveLocation.expand(intersections);\n\n        if (hasOverlaps) {\n          var overlaps = divideLocations(intersections, function (inter) {\n            return inter.hasOverlap();\n          }, clearCurves);\n\n          for (var i = overlaps.length - 1; i >= 0; i--) {\n            var overlap = overlaps[i],\n                path = overlap._path,\n                seg = overlap._segment,\n                prev = seg.getPrevious(),\n                next = seg.getNext();\n\n            if (hasOverlap(prev, path) && hasOverlap(next, path)) {\n              seg.remove();\n\n              prev._handleOut._set(0, 0);\n\n              next._handleIn._set(0, 0);\n\n              if (prev !== seg && !prev.getCurve().hasLength()) {\n                next._handleIn.set(prev._handleIn);\n\n                prev.remove();\n              }\n            }\n          }\n        }\n\n        if (hasCrossings) {\n          divideLocations(intersections, hasOverlaps && function (inter) {\n            var curve1 = inter.getCurve(),\n                seg1 = inter.getSegment(),\n                other = inter._intersection,\n                curve2 = other._curve,\n                seg2 = other._segment;\n            if (curve1 && curve2 && curve1._path && curve2._path) return true;\n            if (seg1) seg1._intersection = null;\n            if (seg2) seg2._intersection = null;\n          }, clearCurves);\n          if (clearCurves) clearCurveHandles(clearCurves);\n          paths = tracePaths(Base.each(paths, function (path) {\n            Base.push(this, path._segments);\n          }, []));\n        }\n\n        var length = paths.length,\n            item;\n\n        if (length > 1 && children) {\n          if (paths !== children) this.setChildren(paths);\n          item = this;\n        } else if (length === 1 && !children) {\n          if (paths[0] !== this) this.setSegments(paths[0].removeSegments());\n          item = this;\n        }\n\n        if (!item) {\n          item = new CompoundPath(Item.NO_INSERT);\n          item.addChildren(paths);\n          item = item.reduce();\n          item.copyAttributes(this);\n          this.replaceWith(item);\n        }\n\n        return item;\n      },\n      reorient: function reorient(nonZero, clockwise) {\n        var children = this._children;\n\n        if (children && children.length) {\n          this.setChildren(reorientPaths(this.removeChildren(), function (w) {\n            return !!(nonZero ? w : w & 1);\n          }, clockwise));\n        } else if (clockwise !== undefined) {\n          this.setClockwise(clockwise);\n        }\n\n        return this;\n      },\n      getInteriorPoint: function getInteriorPoint() {\n        var bounds = this.getBounds(),\n            point = bounds.getCenter(true);\n\n        if (!this.contains(point)) {\n          var curves = this.getCurves(),\n              y = point.y,\n              intercepts = [],\n              roots = [];\n\n          for (var i = 0, l = curves.length; i < l; i++) {\n            var v = curves[i].getValues(),\n                o0 = v[1],\n                o1 = v[3],\n                o2 = v[5],\n                o3 = v[7];\n\n            if (y >= min(o0, o1, o2, o3) && y <= max(o0, o1, o2, o3)) {\n              var monoCurves = Curve.getMonoCurves(v);\n\n              for (var j = 0, m = monoCurves.length; j < m; j++) {\n                var mv = monoCurves[j],\n                    mo0 = mv[1],\n                    mo3 = mv[7];\n\n                if (mo0 !== mo3 && (y >= mo0 && y <= mo3 || y >= mo3 && y <= mo0)) {\n                  var x = y === mo0 ? mv[0] : y === mo3 ? mv[6] : Curve.solveCubic(mv, 1, y, roots, 0, 1) === 1 ? Curve.getPoint(mv, roots[0]).x : (mv[0] + mv[6]) / 2;\n                  intercepts.push(x);\n                }\n              }\n            }\n          }\n\n          if (intercepts.length > 1) {\n            intercepts.sort(function (a, b) {\n              return a - b;\n            });\n            point.x = (intercepts[0] + intercepts[1]) / 2;\n          }\n        }\n\n        return point;\n      }\n    };\n  }());\n  var PathFlattener = Base.extend({\n    _class: 'PathFlattener',\n    initialize: function initialize(path, flatness, maxRecursion, ignoreStraight, matrix) {\n      var curves = [],\n          parts = [],\n          length = 0,\n          minSpan = 1 / (maxRecursion || 32),\n          segments = path._segments,\n          segment1 = segments[0],\n          segment2;\n\n      function addCurve(segment1, segment2) {\n        var curve = Curve.getValues(segment1, segment2, matrix);\n        curves.push(curve);\n        computeParts(curve, segment1._index, 0, 1);\n      }\n\n      function computeParts(curve, index, t1, t2) {\n        if (t2 - t1 > minSpan && !(ignoreStraight && Curve.isStraight(curve)) && !Curve.isFlatEnough(curve, flatness || 0.25)) {\n          var halves = Curve.subdivide(curve, 0.5),\n              tMid = (t1 + t2) / 2;\n          computeParts(halves[0], index, t1, tMid);\n          computeParts(halves[1], index, tMid, t2);\n        } else {\n          var dx = curve[6] - curve[0],\n              dy = curve[7] - curve[1],\n              dist = Math.sqrt(dx * dx + dy * dy);\n\n          if (dist > 0) {\n            length += dist;\n            parts.push({\n              offset: length,\n              curve: curve,\n              index: index,\n              time: t2\n            });\n          }\n        }\n      }\n\n      for (var i = 1, l = segments.length; i < l; i++) {\n        segment2 = segments[i];\n        addCurve(segment1, segment2);\n        segment1 = segment2;\n      }\n\n      if (path._closed) addCurve(segment2 || segment1, segments[0]);\n      this.curves = curves;\n      this.parts = parts;\n      this.length = length;\n      this.index = 0;\n    },\n    _get: function _get(offset) {\n      var parts = this.parts,\n          length = parts.length,\n          start,\n          i,\n          j = this.index;\n\n      for (;;) {\n        i = j;\n        if (!j || parts[--j].offset < offset) break;\n      }\n\n      for (; i < length; i++) {\n        var part = parts[i];\n\n        if (part.offset >= offset) {\n          this.index = i;\n          var prev = parts[i - 1],\n              prevTime = prev && prev.index === part.index ? prev.time : 0,\n              prevOffset = prev ? prev.offset : 0;\n          return {\n            index: part.index,\n            time: prevTime + (part.time - prevTime) * (offset - prevOffset) / (part.offset - prevOffset)\n          };\n        }\n      }\n\n      return {\n        index: parts[length - 1].index,\n        time: 1\n      };\n    },\n    drawPart: function drawPart(ctx, from, to) {\n      var start = this._get(from),\n          end = this._get(to);\n\n      for (var i = start.index, l = end.index; i <= l; i++) {\n        var curve = Curve.getPart(this.curves[i], i === start.index ? start.time : 0, i === end.index ? end.time : 1);\n        if (i === start.index) ctx.moveTo(curve[0], curve[1]);\n        ctx.bezierCurveTo.apply(ctx, curve.slice(2));\n      }\n    }\n  }, Base.each(Curve._evaluateMethods, function (name) {\n    this[name + 'At'] = function (offset) {\n      var param = this._get(offset);\n\n      return Curve[name](this.curves[param.index], param.time);\n    };\n  }, {}));\n  var PathFitter = Base.extend({\n    initialize: function initialize(path) {\n      var points = this.points = [],\n          segments = path._segments,\n          closed = path._closed;\n\n      for (var i = 0, prev, l = segments.length; i < l; i++) {\n        var point = segments[i].point;\n\n        if (!prev || !prev.equals(point)) {\n          points.push(prev = point.clone());\n        }\n      }\n\n      if (closed) {\n        points.unshift(points[points.length - 1]);\n        points.push(points[1]);\n      }\n\n      this.closed = closed;\n    },\n    fit: function fit(error) {\n      var points = this.points,\n          length = points.length,\n          segments = null;\n\n      if (length > 0) {\n        segments = [new Segment(points[0])];\n\n        if (length > 1) {\n          this.fitCubic(segments, error, 0, length - 1, points[1].subtract(points[0]), points[length - 2].subtract(points[length - 1]));\n\n          if (this.closed) {\n            segments.shift();\n            segments.pop();\n          }\n        }\n      }\n\n      return segments;\n    },\n    fitCubic: function fitCubic(segments, error, first, last, tan1, tan2) {\n      var points = this.points;\n\n      if (last - first === 1) {\n        var pt1 = points[first],\n            pt2 = points[last],\n            dist = pt1.getDistance(pt2) / 3;\n        this.addCurve(segments, [pt1, pt1.add(tan1.normalize(dist)), pt2.add(tan2.normalize(dist)), pt2]);\n        return;\n      }\n\n      var uPrime = this.chordLengthParameterize(first, last),\n          maxError = Math.max(error, error * error),\n          split,\n          parametersInOrder = true;\n\n      for (var i = 0; i <= 4; i++) {\n        var curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n        var max = this.findMaxError(first, last, curve, uPrime);\n\n        if (max.error < error && parametersInOrder) {\n          this.addCurve(segments, curve);\n          return;\n        }\n\n        split = max.index;\n        if (max.error >= maxError) break;\n        parametersInOrder = this.reparameterize(first, last, uPrime, curve);\n        maxError = max.error;\n      }\n\n      var tanCenter = points[split - 1].subtract(points[split + 1]);\n      this.fitCubic(segments, error, first, split, tan1, tanCenter);\n      this.fitCubic(segments, error, split, last, tanCenter.negate(), tan2);\n    },\n    addCurve: function addCurve(segments, curve) {\n      var prev = segments[segments.length - 1];\n      prev.setHandleOut(curve[1].subtract(curve[0]));\n      segments.push(new Segment(curve[3], curve[2].subtract(curve[3])));\n    },\n    generateBezier: function generateBezier(first, last, uPrime, tan1, tan2) {\n      var epsilon = 1e-12,\n          abs = Math.abs,\n          points = this.points,\n          pt1 = points[first],\n          pt2 = points[last],\n          C = [[0, 0], [0, 0]],\n          X = [0, 0];\n\n      for (var i = 0, l = last - first + 1; i < l; i++) {\n        var u = uPrime[i],\n            t = 1 - u,\n            b = 3 * u * t,\n            b0 = t * t * t,\n            b1 = b * t,\n            b2 = b * u,\n            b3 = u * u * u,\n            a1 = tan1.normalize(b1),\n            a2 = tan2.normalize(b2),\n            tmp = points[first + i].subtract(pt1.multiply(b0 + b1)).subtract(pt2.multiply(b2 + b3));\n        C[0][0] += a1.dot(a1);\n        C[0][1] += a1.dot(a2);\n        C[1][0] = C[0][1];\n        C[1][1] += a2.dot(a2);\n        X[0] += a1.dot(tmp);\n        X[1] += a2.dot(tmp);\n      }\n\n      var detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n          alpha1,\n          alpha2;\n\n      if (abs(detC0C1) > epsilon) {\n        var detC0X = C[0][0] * X[1] - C[1][0] * X[0],\n            detXC1 = X[0] * C[1][1] - X[1] * C[0][1];\n        alpha1 = detXC1 / detC0C1;\n        alpha2 = detC0X / detC0C1;\n      } else {\n        var c0 = C[0][0] + C[0][1],\n            c1 = C[1][0] + C[1][1];\n        alpha1 = alpha2 = abs(c0) > epsilon ? X[0] / c0 : abs(c1) > epsilon ? X[1] / c1 : 0;\n      }\n\n      var segLength = pt2.getDistance(pt1),\n          eps = epsilon * segLength,\n          handle1,\n          handle2;\n\n      if (alpha1 < eps || alpha2 < eps) {\n        alpha1 = alpha2 = segLength / 3;\n      } else {\n        var line = pt2.subtract(pt1);\n        handle1 = tan1.normalize(alpha1);\n        handle2 = tan2.normalize(alpha2);\n\n        if (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n          alpha1 = alpha2 = segLength / 3;\n          handle1 = handle2 = null;\n        }\n      }\n\n      return [pt1, pt1.add(handle1 || tan1.normalize(alpha1)), pt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n    },\n    reparameterize: function reparameterize(first, last, u, curve) {\n      for (var i = first; i <= last; i++) {\n        u[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n      }\n\n      for (var i = 1, l = u.length; i < l; i++) {\n        if (u[i] <= u[i - 1]) return false;\n      }\n\n      return true;\n    },\n    findRoot: function findRoot(curve, point, u) {\n      var curve1 = [],\n          curve2 = [];\n\n      for (var i = 0; i <= 2; i++) {\n        curve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n      }\n\n      for (var i = 0; i <= 1; i++) {\n        curve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n      }\n\n      var pt = this.evaluate(3, curve, u),\n          pt1 = this.evaluate(2, curve1, u),\n          pt2 = this.evaluate(1, curve2, u),\n          diff = pt.subtract(point),\n          df = pt1.dot(pt1) + diff.dot(pt2);\n      return Numerical.isMachineZero(df) ? u : u - diff.dot(pt1) / df;\n    },\n    evaluate: function evaluate(degree, curve, t) {\n      var tmp = curve.slice();\n\n      for (var i = 1; i <= degree; i++) {\n        for (var j = 0; j <= degree - i; j++) {\n          tmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n        }\n      }\n\n      return tmp[0];\n    },\n    chordLengthParameterize: function chordLengthParameterize(first, last) {\n      var u = [0];\n\n      for (var i = first + 1; i <= last; i++) {\n        u[i - first] = u[i - first - 1] + this.points[i].getDistance(this.points[i - 1]);\n      }\n\n      for (var i = 1, m = last - first; i <= m; i++) {\n        u[i] /= u[m];\n      }\n\n      return u;\n    },\n    findMaxError: function findMaxError(first, last, curve, u) {\n      var index = Math.floor((last - first + 1) / 2),\n          maxDist = 0;\n\n      for (var i = first + 1; i < last; i++) {\n        var P = this.evaluate(3, curve, u[i - first]);\n        var v = P.subtract(this.points[i]);\n        var dist = v.x * v.x + v.y * v.y;\n\n        if (dist >= maxDist) {\n          maxDist = dist;\n          index = i;\n        }\n      }\n\n      return {\n        error: maxDist,\n        index: index\n      };\n    }\n  });\n  var TextItem = Item.extend({\n    _class: 'TextItem',\n    _applyMatrix: false,\n    _canApplyMatrix: false,\n    _serializeFields: {\n      content: null\n    },\n    _boundsOptions: {\n      stroke: false,\n      handle: false\n    },\n    initialize: function TextItem(arg) {\n      this._content = '';\n      this._lines = [];\n      var hasProps = arg && Base.isPlainObject(arg) && arg.x === undefined && arg.y === undefined;\n\n      this._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n    },\n    _equals: function _equals(item) {\n      return this._content === item._content;\n    },\n    copyContent: function copyContent(source) {\n      this.setContent(source._content);\n    },\n    getContent: function getContent() {\n      return this._content;\n    },\n    setContent: function setContent(content) {\n      this._content = '' + content;\n      this._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\n      this._changed(521);\n    },\n    isEmpty: function isEmpty() {\n      return !this._content;\n    },\n    getCharacterStyle: '#getStyle',\n    setCharacterStyle: '#setStyle',\n    getParagraphStyle: '#getStyle',\n    setParagraphStyle: '#setStyle'\n  });\n  var PointText = TextItem.extend({\n    _class: 'PointText',\n    initialize: function PointText() {\n      TextItem.apply(this, arguments);\n    },\n    getPoint: function getPoint() {\n      var point = this._matrix.getTranslation();\n\n      return new LinkedPoint(point.x, point.y, this, 'setPoint');\n    },\n    setPoint: function setPoint() {\n      var point = Point.read(arguments);\n      this.translate(point.subtract(this._matrix.getTranslation()));\n    },\n    _draw: function _draw(ctx, param, viewMatrix) {\n      if (!this._content) return;\n\n      this._setStyles(ctx, param, viewMatrix);\n\n      var lines = this._lines,\n          style = this._style,\n          hasFill = style.hasFill(),\n          hasStroke = style.hasStroke(),\n          leading = style.getLeading(),\n          shadowColor = ctx.shadowColor;\n      ctx.font = style.getFontStyle();\n      ctx.textAlign = style.getJustification();\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        ctx.shadowColor = shadowColor;\n        var line = lines[i];\n\n        if (hasFill) {\n          ctx.fillText(line, 0, 0);\n          ctx.shadowColor = 'rgba(0,0,0,0)';\n        }\n\n        if (hasStroke) ctx.strokeText(line, 0, 0);\n        ctx.translate(0, leading);\n      }\n    },\n    _getBounds: function _getBounds(matrix, options) {\n      var style = this._style,\n          lines = this._lines,\n          numLines = lines.length,\n          justification = style.getJustification(),\n          leading = style.getLeading(),\n          width = this.getView().getTextWidth(style.getFontStyle(), lines),\n          x = 0;\n      if (justification !== 'left') x -= width / (justification === 'center' ? 2 : 1);\n      var rect = new _Rectangle(x, numLines ? -0.75 * leading : 0, width, numLines * leading);\n      return matrix ? matrix._transformBounds(rect, rect) : rect;\n    }\n  });\n  var Color = Base.extend(new function () {\n    var types = {\n      gray: ['gray'],\n      rgb: ['red', 'green', 'blue'],\n      hsb: ['hue', 'saturation', 'brightness'],\n      hsl: ['hue', 'saturation', 'lightness'],\n      gradient: ['gradient', 'origin', 'destination', 'highlight']\n    };\n    var componentParsers = {},\n        namedColors = {\n      transparent: [0, 0, 0, 0]\n    },\n        colorCtx;\n\n    function fromCSS(string) {\n      var match = string.match(/^#([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})?$/i) || string.match(/^#([\\da-f])([\\da-f])([\\da-f])([\\da-f])?$/i),\n          type = 'rgb',\n          components;\n\n      if (match) {\n        var amount = match[4] ? 4 : 3;\n        components = new Array(amount);\n\n        for (var i = 0; i < amount; i++) {\n          var value = match[i + 1];\n          components[i] = parseInt(value.length == 1 ? value + value : value, 16) / 255;\n        }\n      } else if (match = string.match(/^(rgb|hsl)a?\\((.*)\\)$/)) {\n        type = match[1];\n        components = match[2].trim().split(/[,\\s]+/g);\n        var isHSL = type === 'hsl';\n\n        for (var i = 0, l = Math.min(components.length, 4); i < l; i++) {\n          var component = components[i];\n          var value = parseFloat(component);\n\n          if (isHSL) {\n            if (i === 0) {\n              var unit = component.match(/([a-z]*)$/)[1];\n              value *= {\n                turn: 360,\n                rad: 180 / Math.PI,\n                grad: 0.9\n              }[unit] || 1;\n            } else if (i < 3) {\n              value /= 100;\n            }\n          } else if (i < 3) {\n            value /= /%$/.test(component) ? 100 : 255;\n          }\n\n          components[i] = value;\n        }\n      } else {\n        var color = namedColors[string];\n\n        if (!color) {\n          if (window) {\n            if (!colorCtx) {\n              colorCtx = CanvasProvider.getContext(1, 1);\n              colorCtx.globalCompositeOperation = 'copy';\n            }\n\n            colorCtx.fillStyle = 'rgba(0,0,0,0)';\n            colorCtx.fillStyle = string;\n            colorCtx.fillRect(0, 0, 1, 1);\n            var data = colorCtx.getImageData(0, 0, 1, 1).data;\n            color = namedColors[string] = [data[0] / 255, data[1] / 255, data[2] / 255];\n          } else {\n            color = [0, 0, 0];\n          }\n        }\n\n        components = color.slice();\n      }\n\n      return [type, components];\n    }\n\n    var hsbIndices = [[0, 3, 1], [2, 0, 1], [1, 0, 3], [1, 2, 0], [3, 1, 0], [0, 1, 2]];\n    var converters = {\n      'rgb-hsb': function rgbHsb(r, g, b) {\n        var max = Math.max(r, g, b),\n            min = Math.min(r, g, b),\n            delta = max - min,\n            h = delta === 0 ? 0 : (max == r ? (g - b) / delta + (g < b ? 6 : 0) : max == g ? (b - r) / delta + 2 : (r - g) / delta + 4) * 60;\n        return [h, max === 0 ? 0 : delta / max, max];\n      },\n      'hsb-rgb': function hsbRgb(h, s, b) {\n        h = (h / 60 % 6 + 6) % 6;\n        var i = Math.floor(h),\n            f = h - i,\n            i = hsbIndices[i],\n            v = [b, b * (1 - s), b * (1 - s * f), b * (1 - s * (1 - f))];\n        return [v[i[0]], v[i[1]], v[i[2]]];\n      },\n      'rgb-hsl': function rgbHsl(r, g, b) {\n        var max = Math.max(r, g, b),\n            min = Math.min(r, g, b),\n            delta = max - min,\n            achromatic = delta === 0,\n            h = achromatic ? 0 : (max == r ? (g - b) / delta + (g < b ? 6 : 0) : max == g ? (b - r) / delta + 2 : (r - g) / delta + 4) * 60,\n            l = (max + min) / 2,\n            s = achromatic ? 0 : l < 0.5 ? delta / (max + min) : delta / (2 - max - min);\n        return [h, s, l];\n      },\n      'hsl-rgb': function hslRgb(h, s, l) {\n        h = (h / 360 % 1 + 1) % 1;\n        if (s === 0) return [l, l, l];\n        var t3s = [h + 1 / 3, h, h - 1 / 3],\n            t2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n            t1 = 2 * l - t2,\n            c = [];\n\n        for (var i = 0; i < 3; i++) {\n          var t3 = t3s[i];\n          if (t3 < 0) t3 += 1;\n          if (t3 > 1) t3 -= 1;\n          c[i] = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 : 2 * t3 < 1 ? t2 : 3 * t3 < 2 ? t1 + (t2 - t1) * (2 / 3 - t3) * 6 : t1;\n        }\n\n        return c;\n      },\n      'rgb-gray': function rgbGray(r, g, b) {\n        return [r * 0.2989 + g * 0.587 + b * 0.114];\n      },\n      'gray-rgb': function grayRgb(g) {\n        return [g, g, g];\n      },\n      'gray-hsb': function grayHsb(g) {\n        return [0, 0, g];\n      },\n      'gray-hsl': function grayHsl(g) {\n        return [0, 0, g];\n      },\n      'gradient-rgb': function gradientRgb() {\n        return [];\n      },\n      'rgb-gradient': function rgbGradient() {\n        return [];\n      }\n    };\n    return Base.each(types, function (properties, type) {\n      componentParsers[type] = [];\n      Base.each(properties, function (name, index) {\n        var part = Base.capitalize(name),\n            hasOverlap = /^(hue|saturation)$/.test(name),\n            parser = componentParsers[type][index] = type === 'gradient' ? name === 'gradient' ? function (value) {\n          var current = this._components[0];\n          value = Gradient.read(Array.isArray(value) ? value : arguments, 0, {\n            readNull: true\n          });\n\n          if (current !== value) {\n            if (current) current._removeOwner(this);\n            if (value) value._addOwner(this);\n          }\n\n          return value;\n        } : function () {\n          return Point.read(arguments, 0, {\n            readNull: name === 'highlight',\n            clone: true\n          });\n        } : function (value) {\n          return value == null || isNaN(value) ? 0 : +value;\n        };\n\n        this['get' + part] = function () {\n          return this._type === type || hasOverlap && /^hs[bl]$/.test(this._type) ? this._components[index] : this._convert(type)[index];\n        };\n\n        this['set' + part] = function (value) {\n          if (this._type !== type && !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n            this._components = this._convert(type);\n            this._properties = types[type];\n            this._type = type;\n          }\n\n          this._components[index] = parser.call(this, value);\n\n          this._changed();\n        };\n      }, this);\n    }, {\n      _class: 'Color',\n      _readIndex: true,\n      initialize: function Color(arg) {\n        var args = arguments,\n            reading = this.__read,\n            read = 0,\n            type,\n            components,\n            alpha,\n            values;\n\n        if (Array.isArray(arg)) {\n          args = arg;\n          arg = args[0];\n        }\n\n        var argType = arg != null && typeof arg;\n\n        if (argType === 'string' && arg in types) {\n          type = arg;\n          arg = args[1];\n\n          if (Array.isArray(arg)) {\n            components = arg;\n            alpha = args[2];\n          } else {\n            if (reading) read = 1;\n            args = Base.slice(args, 1);\n            argType = typeof arg;\n          }\n        }\n\n        if (!components) {\n          values = argType === 'number' ? args : argType === 'object' && arg.length != null ? arg : null;\n\n          if (values) {\n            if (!type) type = values.length >= 3 ? 'rgb' : 'gray';\n            var length = types[type].length;\n            alpha = values[length];\n\n            if (reading) {\n              read += values === arguments ? length + (alpha != null ? 1 : 0) : 1;\n            }\n\n            if (values.length > length) values = Base.slice(values, 0, length);\n          } else if (argType === 'string') {\n            var converted = fromCSS(arg);\n            type = converted[0];\n            components = converted[1];\n\n            if (components.length === 4) {\n              alpha = components[3];\n              components.length--;\n            }\n          } else if (argType === 'object') {\n            if (arg.constructor === Color) {\n              type = arg._type;\n              components = arg._components.slice();\n              alpha = arg._alpha;\n\n              if (type === 'gradient') {\n                for (var i = 1, l = components.length; i < l; i++) {\n                  var point = components[i];\n                  if (point) components[i] = point.clone();\n                }\n              }\n            } else if (arg.constructor === Gradient) {\n              type = 'gradient';\n              values = args;\n            } else {\n              type = 'hue' in arg ? 'lightness' in arg ? 'hsl' : 'hsb' : 'gradient' in arg || 'stops' in arg || 'radial' in arg ? 'gradient' : 'gray' in arg ? 'gray' : 'rgb';\n              var properties = types[type],\n                  parsers = componentParsers[type];\n              this._components = components = [];\n\n              for (var i = 0, l = properties.length; i < l; i++) {\n                var value = arg[properties[i]];\n\n                if (value == null && !i && type === 'gradient' && 'stops' in arg) {\n                  value = {\n                    stops: arg.stops,\n                    radial: arg.radial\n                  };\n                }\n\n                value = parsers[i].call(this, value);\n                if (value != null) components[i] = value;\n              }\n\n              alpha = arg.alpha;\n            }\n          }\n\n          if (reading && type) read = 1;\n        }\n\n        this._type = type || 'rgb';\n\n        if (!components) {\n          this._components = components = [];\n          var parsers = componentParsers[this._type];\n\n          for (var i = 0, l = parsers.length; i < l; i++) {\n            var value = parsers[i].call(this, values && values[i]);\n            if (value != null) components[i] = value;\n          }\n        }\n\n        this._components = components;\n        this._properties = types[this._type];\n        this._alpha = alpha;\n        if (reading) this.__read = read;\n        return this;\n      },\n      set: '#initialize',\n      _serialize: function _serialize(options, dictionary) {\n        var components = this.getComponents();\n        return Base.serialize(/^(gray|rgb)$/.test(this._type) ? components : [this._type].concat(components), options, true, dictionary);\n      },\n      _changed: function _changed() {\n        this._canvasStyle = null;\n\n        if (this._owner) {\n          if (this._setter) {\n            this._owner[this._setter](this);\n          } else {\n            this._owner._changed(129);\n          }\n        }\n      },\n      _convert: function _convert(type) {\n        var converter;\n        return this._type === type ? this._components.slice() : (converter = converters[this._type + '-' + type]) ? converter.apply(this, this._components) : converters['rgb-' + type].apply(this, converters[this._type + '-rgb'].apply(this, this._components));\n      },\n      convert: function convert(type) {\n        return new Color(type, this._convert(type), this._alpha);\n      },\n      getType: function getType() {\n        return this._type;\n      },\n      setType: function setType(type) {\n        this._components = this._convert(type);\n        this._properties = types[type];\n        this._type = type;\n      },\n      getComponents: function getComponents() {\n        var components = this._components.slice();\n\n        if (this._alpha != null) components.push(this._alpha);\n        return components;\n      },\n      getAlpha: function getAlpha() {\n        return this._alpha != null ? this._alpha : 1;\n      },\n      setAlpha: function setAlpha(alpha) {\n        this._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\n        this._changed();\n      },\n      hasAlpha: function hasAlpha() {\n        return this._alpha != null;\n      },\n      equals: function equals(color) {\n        var col = Base.isPlainValue(color, true) ? Color.read(arguments) : color;\n        return col === this || col && this._class === col._class && this._type === col._type && this.getAlpha() === col.getAlpha() && Base.equals(this._components, col._components) || false;\n      },\n      toString: function toString() {\n        var properties = this._properties,\n            parts = [],\n            isGradient = this._type === 'gradient',\n            f = Formatter.instance;\n\n        for (var i = 0, l = properties.length; i < l; i++) {\n          var value = this._components[i];\n          if (value != null) parts.push(properties[i] + ': ' + (isGradient ? value : f.number(value)));\n        }\n\n        if (this._alpha != null) parts.push('alpha: ' + f.number(this._alpha));\n        return '{ ' + parts.join(', ') + ' }';\n      },\n      toCSS: function toCSS(hex) {\n        var components = this._convert('rgb'),\n            alpha = hex || this._alpha == null ? 1 : this._alpha;\n\n        function convert(val) {\n          return Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n        }\n\n        components = [convert(components[0]), convert(components[1]), convert(components[2])];\n        if (alpha < 1) components.push(alpha < 0 ? 0 : alpha);\n        return hex ? '#' + ((1 << 24) + (components[0] << 16) + (components[1] << 8) + components[2]).toString(16).slice(1) : (components.length == 4 ? 'rgba(' : 'rgb(') + components.join(',') + ')';\n      },\n      toCanvasStyle: function toCanvasStyle(ctx, matrix) {\n        if (this._canvasStyle) return this._canvasStyle;\n        if (this._type !== 'gradient') return this._canvasStyle = this.toCSS();\n        var components = this._components,\n            gradient = components[0],\n            stops = gradient._stops,\n            origin = components[1],\n            destination = components[2],\n            highlight = components[3],\n            inverse = matrix && matrix.inverted(),\n            canvasGradient;\n\n        if (inverse) {\n          origin = inverse._transformPoint(origin);\n          destination = inverse._transformPoint(destination);\n          if (highlight) highlight = inverse._transformPoint(highlight);\n        }\n\n        if (gradient._radial) {\n          var radius = destination.getDistance(origin);\n\n          if (highlight) {\n            var vector = highlight.subtract(origin);\n            if (vector.getLength() > radius) highlight = origin.add(vector.normalize(radius - 0.1));\n          }\n\n          var start = highlight || origin;\n          canvasGradient = ctx.createRadialGradient(start.x, start.y, 0, origin.x, origin.y, radius);\n        } else {\n          canvasGradient = ctx.createLinearGradient(origin.x, origin.y, destination.x, destination.y);\n        }\n\n        for (var i = 0, l = stops.length; i < l; i++) {\n          var stop = stops[i],\n              offset = stop._offset;\n          canvasGradient.addColorStop(offset == null ? i / (l - 1) : offset, stop._color.toCanvasStyle());\n        }\n\n        return this._canvasStyle = canvasGradient;\n      },\n      transform: function transform(matrix) {\n        if (this._type === 'gradient') {\n          var components = this._components;\n\n          for (var i = 1, l = components.length; i < l; i++) {\n            var point = components[i];\n\n            matrix._transformPoint(point, point, true);\n          }\n\n          this._changed();\n        }\n      },\n      statics: {\n        _types: types,\n        random: function random() {\n          var random = Math.random;\n          return new Color(random(), random(), random());\n        },\n        _setOwner: function _setOwner(color, owner, setter) {\n          if (color) {\n            if (color._owner && owner && color._owner !== owner) {\n              color = color.clone();\n            }\n\n            if (!color._owner ^ !owner) {\n              color._owner = owner || null;\n              color._setter = setter || null;\n            }\n          }\n\n          return color;\n        }\n      }\n    });\n  }(), new function () {\n    var operators = {\n      add: function add(a, b) {\n        return a + b;\n      },\n      subtract: function subtract(a, b) {\n        return a - b;\n      },\n      multiply: function multiply(a, b) {\n        return a * b;\n      },\n      divide: function divide(a, b) {\n        return a / b;\n      }\n    };\n    return Base.each(operators, function (operator, name) {\n      this[name] = function (color) {\n        color = Color.read(arguments);\n\n        var type = this._type,\n            components1 = this._components,\n            components2 = color._convert(type);\n\n        for (var i = 0, l = components1.length; i < l; i++) {\n          components2[i] = operator(components1[i], components2[i]);\n        }\n\n        return new Color(type, components2, this._alpha != null ? operator(this._alpha, color.getAlpha()) : null);\n      };\n    }, {});\n  }());\n  var Gradient = Base.extend({\n    _class: 'Gradient',\n    initialize: function Gradient(stops, radial) {\n      this._id = UID.get();\n\n      if (stops && Base.isPlainObject(stops)) {\n        this.set(stops);\n        stops = radial = null;\n      }\n\n      if (this._stops == null) {\n        this.setStops(stops || ['white', 'black']);\n      }\n\n      if (this._radial == null) {\n        this.setRadial(typeof radial === 'string' && radial === 'radial' || radial || false);\n      }\n    },\n    _serialize: function _serialize(options, dictionary) {\n      return dictionary.add(this, function () {\n        return Base.serialize([this._stops, this._radial], options, true, dictionary);\n      });\n    },\n    _changed: function _changed() {\n      for (var i = 0, l = this._owners && this._owners.length; i < l; i++) {\n        this._owners[i]._changed();\n      }\n    },\n    _addOwner: function _addOwner(color) {\n      if (!this._owners) this._owners = [];\n\n      this._owners.push(color);\n    },\n    _removeOwner: function _removeOwner(color) {\n      var index = this._owners ? this._owners.indexOf(color) : -1;\n\n      if (index != -1) {\n        this._owners.splice(index, 1);\n\n        if (!this._owners.length) this._owners = undefined;\n      }\n    },\n    clone: function clone() {\n      var stops = [];\n\n      for (var i = 0, l = this._stops.length; i < l; i++) {\n        stops[i] = this._stops[i].clone();\n      }\n\n      return new Gradient(stops, this._radial);\n    },\n    getStops: function getStops() {\n      return this._stops;\n    },\n    setStops: function setStops(stops) {\n      if (stops.length < 2) {\n        throw new Error('Gradient stop list needs to contain at least two stops.');\n      }\n\n      var _stops = this._stops;\n\n      if (_stops) {\n        for (var i = 0, l = _stops.length; i < l; i++) {\n          _stops[i]._owner = undefined;\n        }\n      }\n\n      _stops = this._stops = GradientStop.readList(stops, 0, {\n        clone: true\n      });\n\n      for (var i = 0, l = _stops.length; i < l; i++) {\n        _stops[i]._owner = this;\n      }\n\n      this._changed();\n    },\n    getRadial: function getRadial() {\n      return this._radial;\n    },\n    setRadial: function setRadial(radial) {\n      this._radial = radial;\n\n      this._changed();\n    },\n    equals: function equals(gradient) {\n      if (gradient === this) return true;\n\n      if (gradient && this._class === gradient._class) {\n        var stops1 = this._stops,\n            stops2 = gradient._stops,\n            length = stops1.length;\n\n        if (length === stops2.length) {\n          for (var i = 0; i < length; i++) {\n            if (!stops1[i].equals(stops2[i])) return false;\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var GradientStop = Base.extend({\n    _class: 'GradientStop',\n    initialize: function GradientStop(arg0, arg1) {\n      var color = arg0,\n          offset = arg1;\n\n      if (typeof arg0 === 'object' && arg1 === undefined) {\n        if (Array.isArray(arg0) && typeof arg0[0] !== 'number') {\n          color = arg0[0];\n          offset = arg0[1];\n        } else if ('color' in arg0 || 'offset' in arg0 || 'rampPoint' in arg0) {\n          color = arg0.color;\n          offset = arg0.offset || arg0.rampPoint || 0;\n        }\n      }\n\n      this.setColor(color);\n      this.setOffset(offset);\n    },\n    clone: function clone() {\n      return new GradientStop(this._color.clone(), this._offset);\n    },\n    _serialize: function _serialize(options, dictionary) {\n      var color = this._color,\n          offset = this._offset;\n      return Base.serialize(offset == null ? [color] : [color, offset], options, true, dictionary);\n    },\n    _changed: function _changed() {\n      if (this._owner) this._owner._changed(129);\n    },\n    getOffset: function getOffset() {\n      return this._offset;\n    },\n    setOffset: function setOffset(offset) {\n      this._offset = offset;\n\n      this._changed();\n    },\n    getRampPoint: '#getOffset',\n    setRampPoint: '#setOffset',\n    getColor: function getColor() {\n      return this._color;\n    },\n    setColor: function setColor() {\n      Color._setOwner(this._color, null);\n\n      this._color = Color._setOwner(Color.read(arguments, 0), this, 'setColor');\n\n      this._changed();\n    },\n    equals: function equals(stop) {\n      return stop === this || stop && this._class === stop._class && this._color.equals(stop._color) && this._offset == stop._offset || false;\n    }\n  });\n  var Style = Base.extend(new function () {\n    var itemDefaults = {\n      fillColor: null,\n      fillRule: 'nonzero',\n      strokeColor: null,\n      strokeWidth: 1,\n      strokeCap: 'butt',\n      strokeJoin: 'miter',\n      strokeScaling: true,\n      miterLimit: 10,\n      dashOffset: 0,\n      dashArray: [],\n      shadowColor: null,\n      shadowBlur: 0,\n      shadowOffset: new Point(),\n      selectedColor: null\n    },\n        groupDefaults = Base.set({}, itemDefaults, {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal',\n      fontSize: 12,\n      leading: null,\n      justification: 'left'\n    }),\n        textDefaults = Base.set({}, groupDefaults, {\n      fillColor: new Color()\n    }),\n        flags = {\n      strokeWidth: 193,\n      strokeCap: 193,\n      strokeJoin: 193,\n      strokeScaling: 201,\n      miterLimit: 193,\n      fontFamily: 9,\n      fontWeight: 9,\n      fontSize: 9,\n      font: 9,\n      leading: 9,\n      justification: 9\n    },\n        item = {\n      beans: true\n    },\n        fields = {\n      _class: 'Style',\n      beans: true,\n      initialize: function Style(style, _owner, _project) {\n        this._values = {};\n        this._owner = _owner;\n        this._project = _owner && _owner._project || _project || paper.project;\n        this._defaults = !_owner || _owner instanceof Group ? groupDefaults : _owner instanceof TextItem ? textDefaults : itemDefaults;\n        if (style) this.set(style);\n      }\n    };\n    Base.each(groupDefaults, function (value, key) {\n      var isColor = /Color$/.test(key),\n          isPoint = key === 'shadowOffset',\n          part = Base.capitalize(key),\n          flag = flags[key],\n          set = 'set' + part,\n          get = 'get' + part;\n\n      fields[set] = function (value) {\n        var owner = this._owner,\n            children = owner && owner._children,\n            applyToChildren = children && children.length > 0 && !(owner instanceof CompoundPath);\n\n        if (applyToChildren) {\n          for (var i = 0, l = children.length; i < l; i++) {\n            children[i]._style[set](value);\n          }\n        }\n\n        if ((key === 'selectedColor' || !applyToChildren) && key in this._defaults) {\n          var old = this._values[key];\n\n          if (old !== value) {\n            if (isColor) {\n              if (old) {\n                Color._setOwner(old, null);\n\n                old._canvasStyle = null;\n              }\n\n              if (value && value.constructor === Color) {\n                value = Color._setOwner(value, owner, applyToChildren && set);\n              }\n            }\n\n            this._values[key] = value;\n            if (owner) owner._changed(flag || 129);\n          }\n        }\n      };\n\n      fields[get] = function (_dontMerge) {\n        var owner = this._owner,\n            children = owner && owner._children,\n            applyToChildren = children && children.length > 0 && !(owner instanceof CompoundPath),\n            value;\n\n        if (applyToChildren && !_dontMerge) {\n          for (var i = 0, l = children.length; i < l; i++) {\n            var childValue = children[i]._style[get]();\n\n            if (!i) {\n              value = childValue;\n            } else if (!Base.equals(value, childValue)) {\n              return undefined;\n            }\n          }\n        } else if (key in this._defaults) {\n          var value = this._values[key];\n\n          if (value === undefined) {\n            value = this._defaults[key];\n\n            if (value && value.clone) {\n              value = value.clone();\n            }\n          } else {\n            var ctor = isColor ? Color : isPoint ? Point : null;\n\n            if (ctor && !(value && value.constructor === ctor)) {\n              this._values[key] = value = ctor.read([value], 0, {\n                readNull: true,\n                clone: true\n              });\n            }\n          }\n        }\n\n        if (value && isColor) {\n          value = Color._setOwner(value, owner, applyToChildren && set);\n        }\n\n        return value;\n      };\n\n      item[get] = function (_dontMerge) {\n        return this._style[get](_dontMerge);\n      };\n\n      item[set] = function (value) {\n        this._style[set](value);\n      };\n    });\n    Base.each({\n      Font: 'FontFamily',\n      WindingRule: 'FillRule'\n    }, function (value, key) {\n      var get = 'get' + key,\n          set = 'set' + key;\n      fields[get] = item[get] = '#get' + value;\n      fields[set] = item[set] = '#set' + value;\n    });\n    Item.inject(item);\n    return fields;\n  }(), {\n    set: function set(style) {\n      var isStyle = style instanceof Style,\n          values = isStyle ? style._values : style;\n\n      if (values) {\n        for (var key in values) {\n          if (key in this._defaults) {\n            var value = values[key];\n            this[key] = value && isStyle && value.clone ? value.clone() : value;\n          }\n        }\n      }\n    },\n    equals: function equals(style) {\n      function compare(style1, style2, secondary) {\n        var values1 = style1._values,\n            values2 = style2._values,\n            defaults2 = style2._defaults;\n\n        for (var key in values1) {\n          var value1 = values1[key],\n              value2 = values2[key];\n          if (!(secondary && key in values2) && !Base.equals(value1, value2 === undefined ? defaults2[key] : value2)) return false;\n        }\n\n        return true;\n      }\n\n      return style === this || style && this._class === style._class && compare(this, style) && compare(style, this, true) || false;\n    },\n    _dispose: function _dispose() {\n      var color;\n      color = this.getFillColor();\n      if (color) color._canvasStyle = null;\n      color = this.getStrokeColor();\n      if (color) color._canvasStyle = null;\n      color = this.getShadowColor();\n      if (color) color._canvasStyle = null;\n    },\n    hasFill: function hasFill() {\n      var color = this.getFillColor();\n      return !!color && color.alpha > 0;\n    },\n    hasStroke: function hasStroke() {\n      var color = this.getStrokeColor();\n      return !!color && color.alpha > 0 && this.getStrokeWidth() > 0;\n    },\n    hasShadow: function hasShadow() {\n      var color = this.getShadowColor();\n      return !!color && color.alpha > 0 && (this.getShadowBlur() > 0 || !this.getShadowOffset().isZero());\n    },\n    getView: function getView() {\n      return this._project._view;\n    },\n    getFontStyle: function getFontStyle() {\n      var fontSize = this.getFontSize();\n      return this.getFontWeight() + ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ') + this.getFontFamily();\n    },\n    getFont: '#getFontFamily',\n    setFont: '#setFontFamily',\n    getLeading: function getLeading() {\n      var leading = getLeading.base.call(this),\n          fontSize = this.getFontSize();\n      if (/pt|em|%|px/.test(fontSize)) fontSize = this.getView().getPixelSize(fontSize);\n      return leading != null ? leading : fontSize * 1.2;\n    }\n  });\n  var DomElement = new function () {\n    function handlePrefix(el, name, set, value) {\n      var prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n          suffix = name[0].toUpperCase() + name.substring(1);\n\n      for (var i = 0; i < 6; i++) {\n        var prefix = prefixes[i],\n            key = prefix ? prefix + suffix : name;\n\n        if (key in el) {\n          if (set) {\n            el[key] = value;\n          } else {\n            return el[key];\n          }\n\n          break;\n        }\n      }\n    }\n\n    return {\n      getStyles: function getStyles(el) {\n        var doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n            view = doc && doc.defaultView;\n        return view && view.getComputedStyle(el, '');\n      },\n      getBounds: function getBounds(el, viewport) {\n        var doc = el.ownerDocument,\n            body = doc.body,\n            html = doc.documentElement,\n            rect;\n\n        try {\n          rect = el.getBoundingClientRect();\n        } catch (e) {\n          rect = {\n            left: 0,\n            top: 0,\n            width: 0,\n            height: 0\n          };\n        }\n\n        var x = rect.left - (html.clientLeft || body.clientLeft || 0),\n            y = rect.top - (html.clientTop || body.clientTop || 0);\n\n        if (!viewport) {\n          var view = doc.defaultView;\n          x += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n          y += view.pageYOffset || html.scrollTop || body.scrollTop;\n        }\n\n        return new _Rectangle(x, y, rect.width, rect.height);\n      },\n      getViewportBounds: function getViewportBounds(el) {\n        var doc = el.ownerDocument,\n            view = doc.defaultView,\n            html = doc.documentElement;\n        return new _Rectangle(0, 0, view.innerWidth || html.clientWidth, view.innerHeight || html.clientHeight);\n      },\n      getOffset: function getOffset(el, viewport) {\n        return DomElement.getBounds(el, viewport).getPoint();\n      },\n      getSize: function getSize(el) {\n        return DomElement.getBounds(el, true).getSize();\n      },\n      isInvisible: function isInvisible(el) {\n        return DomElement.getSize(el).equals(new Size(0, 0));\n      },\n      isInView: function isInView(el) {\n        return !DomElement.isInvisible(el) && DomElement.getViewportBounds(el).intersects(DomElement.getBounds(el, true));\n      },\n      isInserted: function isInserted(el) {\n        return document.body.contains(el);\n      },\n      getPrefixed: function getPrefixed(el, name) {\n        return el && handlePrefix(el, name);\n      },\n      setPrefixed: function setPrefixed(el, name, value) {\n        if (typeof name === 'object') {\n          for (var key in name) {\n            handlePrefix(el, key, true, name[key]);\n          }\n        } else {\n          handlePrefix(el, name, true, value);\n        }\n      }\n    };\n  }();\n  var DomEvent = {\n    add: function add(el, events) {\n      if (el) {\n        for (var type in events) {\n          var func = events[type],\n              parts = type.split(/[\\s,]+/g);\n\n          for (var i = 0, l = parts.length; i < l; i++) {\n            var name = parts[i];\n            var options = el === document && (name === 'touchstart' || name === 'touchmove') ? {\n              passive: false\n            } : false;\n            el.addEventListener(name, func, options);\n          }\n        }\n      }\n    },\n    remove: function remove(el, events) {\n      if (el) {\n        for (var type in events) {\n          var func = events[type],\n              parts = type.split(/[\\s,]+/g);\n\n          for (var i = 0, l = parts.length; i < l; i++) {\n            el.removeEventListener(parts[i], func, false);\n          }\n        }\n      }\n    },\n    getPoint: function getPoint(event) {\n      var pos = event.targetTouches ? event.targetTouches.length ? event.targetTouches[0] : event.changedTouches[0] : event;\n      return new Point(pos.pageX || pos.clientX + document.documentElement.scrollLeft, pos.pageY || pos.clientY + document.documentElement.scrollTop);\n    },\n    getTarget: function getTarget(event) {\n      return event.target || event.srcElement;\n    },\n    getRelatedTarget: function getRelatedTarget(event) {\n      return event.relatedTarget || event.toElement;\n    },\n    getOffset: function getOffset(event, target) {\n      return DomEvent.getPoint(event).subtract(DomElement.getOffset(target || DomEvent.getTarget(event)));\n    }\n  };\n  DomEvent.requestAnimationFrame = new function () {\n    var nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n        requested = false,\n        callbacks = [],\n        timer;\n\n    function handleCallbacks() {\n      var functions = callbacks;\n      callbacks = [];\n\n      for (var i = 0, l = functions.length; i < l; i++) {\n        functions[i]();\n      }\n\n      requested = nativeRequest && callbacks.length;\n      if (requested) nativeRequest(handleCallbacks);\n    }\n\n    return function (callback) {\n      callbacks.push(callback);\n\n      if (nativeRequest) {\n        if (!requested) {\n          nativeRequest(handleCallbacks);\n          requested = true;\n        }\n      } else if (!timer) {\n        timer = setInterval(handleCallbacks, 1000 / 60);\n      }\n    };\n  }();\n  var View = Base.extend(Emitter, {\n    _class: 'View',\n    initialize: function View(project, element) {\n      function getSize(name) {\n        return element[name] || parseInt(element.getAttribute(name), 10);\n      }\n\n      function getCanvasSize() {\n        var size = DomElement.getSize(element);\n        return size.isNaN() || size.isZero() ? new Size(getSize('width'), getSize('height')) : size;\n      }\n\n      var size;\n\n      if (window && element) {\n        this._id = element.getAttribute('id');\n        if (this._id == null) element.setAttribute('id', this._id = 'view-' + View._id++);\n        DomEvent.add(element, this._viewEvents);\n        var none = 'none';\n        DomElement.setPrefixed(element.style, {\n          userDrag: none,\n          userSelect: none,\n          touchCallout: none,\n          contentZooming: none,\n          tapHighlightColor: 'rgba(0,0,0,0)'\n        });\n\n        if (PaperScope.hasAttribute(element, 'resize')) {\n          var that = this;\n          DomEvent.add(window, this._windowEvents = {\n            resize: function resize() {\n              that.setViewSize(getCanvasSize());\n            }\n          });\n        }\n\n        size = getCanvasSize();\n\n        if (PaperScope.hasAttribute(element, 'stats') && typeof Stats !== 'undefined') {\n          this._stats = new Stats();\n          var stats = this._stats.domElement,\n              style = stats.style,\n              offset = DomElement.getOffset(element);\n          style.position = 'absolute';\n          style.left = offset.x + 'px';\n          style.top = offset.y + 'px';\n          document.body.appendChild(stats);\n        }\n      } else {\n        size = new Size(element);\n        element = null;\n      }\n\n      this._project = project;\n      this._scope = project._scope;\n      this._element = element;\n      if (!this._pixelRatio) this._pixelRatio = window && window.devicePixelRatio || 1;\n\n      this._setElementSize(size.width, size.height);\n\n      this._viewSize = size;\n\n      View._views.push(this);\n\n      View._viewsById[this._id] = this;\n      (this._matrix = new Matrix())._owner = this;\n      if (!View._focused) View._focused = this;\n      this._frameItems = {};\n      this._frameItemCount = 0;\n      this._itemEvents = {\n        native: {},\n        virtual: {}\n      };\n      this._autoUpdate = !paper.agent.node;\n      this._needsUpdate = false;\n    },\n    remove: function remove() {\n      if (!this._project) return false;\n      if (View._focused === this) View._focused = null;\n\n      View._views.splice(View._views.indexOf(this), 1);\n\n      delete View._viewsById[this._id];\n      var project = this._project;\n      if (project._view === this) project._view = null;\n      DomEvent.remove(this._element, this._viewEvents);\n      DomEvent.remove(window, this._windowEvents);\n      this._element = this._project = null;\n      this.off('frame');\n      this._animate = false;\n      this._frameItems = {};\n      return true;\n    },\n    _events: Base.each(Item._itemHandlers.concat(['onResize', 'onKeyDown', 'onKeyUp']), function (name) {\n      this[name] = {};\n    }, {\n      onFrame: {\n        install: function install() {\n          this.play();\n        },\n        uninstall: function uninstall() {\n          this.pause();\n        }\n      }\n    }),\n    _animate: false,\n    _time: 0,\n    _count: 0,\n    getAutoUpdate: function getAutoUpdate() {\n      return this._autoUpdate;\n    },\n    setAutoUpdate: function setAutoUpdate(autoUpdate) {\n      this._autoUpdate = autoUpdate;\n      if (autoUpdate) this.requestUpdate();\n    },\n    update: function update() {},\n    draw: function draw() {\n      this.update();\n    },\n    requestUpdate: function requestUpdate() {\n      if (!this._requested) {\n        var that = this;\n        DomEvent.requestAnimationFrame(function () {\n          that._requested = false;\n\n          if (that._animate) {\n            that.requestUpdate();\n            var element = that._element;\n\n            if ((!DomElement.getPrefixed(document, 'hidden') || PaperScope.getAttribute(element, 'keepalive') === 'true') && DomElement.isInView(element)) {\n              that._handleFrame();\n            }\n          }\n\n          if (that._autoUpdate) that.update();\n        });\n        this._requested = true;\n      }\n    },\n    play: function play() {\n      this._animate = true;\n      this.requestUpdate();\n    },\n    pause: function pause() {\n      this._animate = false;\n    },\n    _handleFrame: function _handleFrame() {\n      paper = this._scope;\n      var now = Date.now() / 1000,\n          delta = this._last ? now - this._last : 0;\n      this._last = now;\n      this.emit('frame', new Base({\n        delta: delta,\n        time: this._time += delta,\n        count: this._count++\n      }));\n      if (this._stats) this._stats.update();\n    },\n    _animateItem: function _animateItem(item, animate) {\n      var items = this._frameItems;\n\n      if (animate) {\n        items[item._id] = {\n          item: item,\n          time: 0,\n          count: 0\n        };\n        if (++this._frameItemCount === 1) this.on('frame', this._handleFrameItems);\n      } else {\n        delete items[item._id];\n\n        if (--this._frameItemCount === 0) {\n          this.off('frame', this._handleFrameItems);\n        }\n      }\n    },\n    _handleFrameItems: function _handleFrameItems(event) {\n      for (var i in this._frameItems) {\n        var entry = this._frameItems[i];\n        entry.item.emit('frame', new Base(event, {\n          time: entry.time += event.delta,\n          count: entry.count++\n        }));\n      }\n    },\n    _changed: function _changed() {\n      this._project._changed(4097);\n\n      this._bounds = this._decomposed = undefined;\n    },\n    getElement: function getElement() {\n      return this._element;\n    },\n    getPixelRatio: function getPixelRatio() {\n      return this._pixelRatio;\n    },\n    getResolution: function getResolution() {\n      return this._pixelRatio * 72;\n    },\n    getViewSize: function getViewSize() {\n      var size = this._viewSize;\n      return new LinkedSize(size.width, size.height, this, 'setViewSize');\n    },\n    setViewSize: function setViewSize() {\n      var size = Size.read(arguments),\n          delta = size.subtract(this._viewSize);\n      if (delta.isZero()) return;\n\n      this._setElementSize(size.width, size.height);\n\n      this._viewSize.set(size);\n\n      this._changed();\n\n      this.emit('resize', {\n        size: size,\n        delta: delta\n      });\n\n      if (this._autoUpdate) {\n        this.update();\n      }\n    },\n    _setElementSize: function _setElementSize(width, height) {\n      var element = this._element;\n\n      if (element) {\n        if (element.width !== width) element.width = width;\n        if (element.height !== height) element.height = height;\n      }\n    },\n    getBounds: function getBounds() {\n      if (!this._bounds) this._bounds = this._matrix.inverted()._transformBounds(new _Rectangle(new Point(), this._viewSize));\n      return this._bounds;\n    },\n    getSize: function getSize() {\n      return this.getBounds().getSize();\n    },\n    isVisible: function isVisible() {\n      return DomElement.isInView(this._element);\n    },\n    isInserted: function isInserted() {\n      return DomElement.isInserted(this._element);\n    },\n    getPixelSize: function getPixelSize(size) {\n      var element = this._element,\n          pixels;\n\n      if (element) {\n        var parent = element.parentNode,\n            temp = document.createElement('div');\n        temp.style.fontSize = size;\n        parent.appendChild(temp);\n        pixels = parseFloat(DomElement.getStyles(temp).fontSize);\n        parent.removeChild(temp);\n      } else {\n        pixels = parseFloat(pixels);\n      }\n\n      return pixels;\n    },\n    getTextWidth: function getTextWidth(font, lines) {\n      return 0;\n    }\n  }, Base.each(['rotate', 'scale', 'shear', 'skew'], function (key) {\n    var rotate = key === 'rotate';\n\n    this[key] = function () {\n      var args = arguments,\n          value = (rotate ? Base : Point).read(args),\n          center = Point.read(args, 0, {\n        readNull: true\n      });\n      return this.transform(new Matrix()[key](value, center || this.getCenter(true)));\n    };\n  }, {\n    _decompose: function _decompose() {\n      return this._decomposed || (this._decomposed = this._matrix.decompose());\n    },\n    translate: function translate() {\n      var mx = new Matrix();\n      return this.transform(mx.translate.apply(mx, arguments));\n    },\n    getCenter: function getCenter() {\n      return this.getBounds().getCenter();\n    },\n    setCenter: function setCenter() {\n      var center = Point.read(arguments);\n      this.translate(this.getCenter().subtract(center));\n    },\n    getZoom: function getZoom() {\n      var scaling = this._decompose().scaling;\n\n      return (scaling.x + scaling.y) / 2;\n    },\n    setZoom: function setZoom(zoom) {\n      this.transform(new Matrix().scale(zoom / this.getZoom(), this.getCenter()));\n    },\n    getRotation: function getRotation() {\n      return this._decompose().rotation;\n    },\n    setRotation: function setRotation(rotation) {\n      var current = this.getRotation();\n\n      if (current != null && rotation != null) {\n        this.rotate(rotation - current);\n      }\n    },\n    getScaling: function getScaling() {\n      var scaling = this._decompose().scaling;\n\n      return new LinkedPoint(scaling.x, scaling.y, this, 'setScaling');\n    },\n    setScaling: function setScaling() {\n      var current = this.getScaling(),\n          scaling = Point.read(arguments, 0, {\n        clone: true,\n        readNull: true\n      });\n\n      if (current && scaling) {\n        this.scale(scaling.x / current.x, scaling.y / current.y);\n      }\n    },\n    getMatrix: function getMatrix() {\n      return this._matrix;\n    },\n    setMatrix: function setMatrix() {\n      var matrix = this._matrix;\n      matrix.initialize.apply(matrix, arguments);\n    },\n    transform: function transform(matrix) {\n      this._matrix.append(matrix);\n    },\n    scrollBy: function scrollBy() {\n      this.translate(Point.read(arguments).negate());\n    }\n  }), {\n    projectToView: function projectToView() {\n      return this._matrix._transformPoint(Point.read(arguments));\n    },\n    viewToProject: function viewToProject() {\n      return this._matrix._inverseTransform(Point.read(arguments));\n    },\n    getEventPoint: function getEventPoint(event) {\n      return this.viewToProject(DomEvent.getOffset(event, this._element));\n    }\n  }, {\n    statics: {\n      _views: [],\n      _viewsById: {},\n      _id: 0,\n      create: function create(project, element) {\n        if (document && typeof element === 'string') element = document.getElementById(element);\n        var ctor = window ? CanvasView : View;\n        return new ctor(project, element);\n      }\n    }\n  }, new function () {\n    if (!window) return;\n    var prevFocus,\n        tempFocus,\n        dragging = false,\n        mouseDown = false;\n\n    function getView(event) {\n      var target = DomEvent.getTarget(event);\n      return target.getAttribute && View._viewsById[target.getAttribute('id')];\n    }\n\n    function updateFocus() {\n      var view = View._focused;\n\n      if (!view || !view.isVisible()) {\n        for (var i = 0, l = View._views.length; i < l; i++) {\n          if ((view = View._views[i]).isVisible()) {\n            View._focused = tempFocus = view;\n            break;\n          }\n        }\n      }\n    }\n\n    function handleMouseMove(view, event, point) {\n      view._handleMouseEvent('mousemove', event, point);\n    }\n\n    var navigator = window.navigator,\n        mousedown,\n        mousemove,\n        mouseup;\n\n    if (navigator.pointerEnabled || navigator.msPointerEnabled) {\n      mousedown = 'pointerdown MSPointerDown';\n      mousemove = 'pointermove MSPointerMove';\n      mouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n    } else {\n      mousedown = 'touchstart';\n      mousemove = 'touchmove';\n      mouseup = 'touchend touchcancel';\n\n      if (!('ontouchstart' in window && navigator.userAgent.match(/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n        mousedown += ' mousedown';\n        mousemove += ' mousemove';\n        mouseup += ' mouseup';\n      }\n    }\n\n    var viewEvents = {},\n        docEvents = {\n      mouseout: function mouseout(event) {\n        var view = View._focused,\n            target = DomEvent.getRelatedTarget(event);\n\n        if (view && (!target || target.nodeName === 'HTML')) {\n          var offset = DomEvent.getOffset(event, view._element),\n              x = offset.x,\n              abs = Math.abs,\n              ax = abs(x),\n              max = 1 << 25,\n              diff = ax - max;\n          offset.x = abs(diff) < ax ? diff * (x < 0 ? -1 : 1) : x;\n          handleMouseMove(view, event, view.viewToProject(offset));\n        }\n      },\n      scroll: updateFocus\n    };\n\n    viewEvents[mousedown] = function (event) {\n      var view = View._focused = getView(event);\n\n      if (!dragging) {\n        dragging = true;\n\n        view._handleMouseEvent('mousedown', event);\n      }\n    };\n\n    docEvents[mousemove] = function (event) {\n      var view = View._focused;\n\n      if (!mouseDown) {\n        var target = getView(event);\n\n        if (target) {\n          if (view !== target) {\n            if (view) handleMouseMove(view, event);\n            if (!prevFocus) prevFocus = view;\n            view = View._focused = tempFocus = target;\n          }\n        } else if (tempFocus && tempFocus === view) {\n          if (prevFocus && !prevFocus.isInserted()) prevFocus = null;\n          view = View._focused = prevFocus;\n          prevFocus = null;\n          updateFocus();\n        }\n      }\n\n      if (view) handleMouseMove(view, event);\n    };\n\n    docEvents[mousedown] = function () {\n      mouseDown = true;\n    };\n\n    docEvents[mouseup] = function (event) {\n      var view = View._focused;\n      if (view && dragging) view._handleMouseEvent('mouseup', event);\n      mouseDown = dragging = false;\n    };\n\n    DomEvent.add(document, docEvents);\n    DomEvent.add(window, {\n      load: updateFocus\n    });\n    var called = false,\n        prevented = false,\n        fallbacks = {\n      doubleclick: 'click',\n      mousedrag: 'mousemove'\n    },\n        wasInView = false,\n        overView,\n        downPoint,\n        lastPoint,\n        downItem,\n        overItem,\n        dragItem,\n        clickItem,\n        clickTime,\n        dblClick;\n\n    function emitMouseEvent(obj, target, type, event, point, prevPoint, stopItem) {\n      var stopped = false,\n          mouseEvent;\n\n      function emit(obj, type) {\n        if (obj.responds(type)) {\n          if (!mouseEvent) {\n            mouseEvent = new MouseEvent(type, event, point, target || obj, prevPoint ? point.subtract(prevPoint) : null);\n          }\n\n          if (obj.emit(type, mouseEvent)) {\n            called = true;\n            if (mouseEvent.prevented) prevented = true;\n            if (mouseEvent.stopped) return stopped = true;\n          }\n        } else {\n          var fallback = fallbacks[type];\n          if (fallback) return emit(obj, fallback);\n        }\n      }\n\n      while (obj && obj !== stopItem) {\n        if (emit(obj, type)) break;\n        obj = obj._parent;\n      }\n\n      return stopped;\n    }\n\n    function emitMouseEvents(view, hitItem, type, event, point, prevPoint) {\n      view._project.removeOn(type);\n\n      prevented = called = false;\n      return dragItem && emitMouseEvent(dragItem, null, type, event, point, prevPoint) || hitItem && hitItem !== dragItem && !hitItem.isDescendant(dragItem) && emitMouseEvent(hitItem, null, type === 'mousedrag' ? 'mousemove' : type, event, point, prevPoint, dragItem) || emitMouseEvent(view, dragItem || hitItem || view, type, event, point, prevPoint);\n    }\n\n    var itemEventsMap = {\n      mousedown: {\n        mousedown: 1,\n        mousedrag: 1,\n        click: 1,\n        doubleclick: 1\n      },\n      mouseup: {\n        mouseup: 1,\n        mousedrag: 1,\n        click: 1,\n        doubleclick: 1\n      },\n      mousemove: {\n        mousedrag: 1,\n        mousemove: 1,\n        mouseenter: 1,\n        mouseleave: 1\n      }\n    };\n    return {\n      _viewEvents: viewEvents,\n      _handleMouseEvent: function _handleMouseEvent(type, event, point) {\n        var itemEvents = this._itemEvents,\n            hitItems = itemEvents.native[type],\n            nativeMove = type === 'mousemove',\n            tool = this._scope.tool,\n            view = this;\n\n        function responds(type) {\n          return itemEvents.virtual[type] || view.responds(type) || tool && tool.responds(type);\n        }\n\n        if (nativeMove && dragging && responds('mousedrag')) type = 'mousedrag';\n        if (!point) point = this.getEventPoint(event);\n\n        var inView = this.getBounds().contains(point),\n            hit = hitItems && inView && view._project.hitTest(point, {\n          tolerance: 0,\n          fill: true,\n          stroke: true\n        }),\n            hitItem = hit && hit.item || null,\n            handle = false,\n            mouse = {};\n\n        mouse[type.substr(5)] = true;\n\n        if (hitItems && hitItem !== overItem) {\n          if (overItem) {\n            emitMouseEvent(overItem, null, 'mouseleave', event, point);\n          }\n\n          if (hitItem) {\n            emitMouseEvent(hitItem, null, 'mouseenter', event, point);\n          }\n\n          overItem = hitItem;\n        }\n\n        if (wasInView ^ inView) {\n          emitMouseEvent(this, null, inView ? 'mouseenter' : 'mouseleave', event, point);\n          overView = inView ? this : null;\n          handle = true;\n        }\n\n        if ((inView || mouse.drag) && !point.equals(lastPoint)) {\n          emitMouseEvents(this, hitItem, nativeMove ? type : 'mousemove', event, point, lastPoint);\n          handle = true;\n        }\n\n        wasInView = inView;\n\n        if (mouse.down && inView || mouse.up && downPoint) {\n          emitMouseEvents(this, hitItem, type, event, point, downPoint);\n\n          if (mouse.down) {\n            dblClick = hitItem === clickItem && Date.now() - clickTime < 300;\n            downItem = clickItem = hitItem;\n\n            if (!prevented && hitItem) {\n              var item = hitItem;\n\n              while (item && !item.responds('mousedrag')) {\n                item = item._parent;\n              }\n\n              if (item) dragItem = hitItem;\n            }\n\n            downPoint = point;\n          } else if (mouse.up) {\n            if (!prevented && hitItem === downItem) {\n              clickTime = Date.now();\n              emitMouseEvents(this, hitItem, dblClick ? 'doubleclick' : 'click', event, point, downPoint);\n              dblClick = false;\n            }\n\n            downItem = dragItem = null;\n          }\n\n          wasInView = false;\n          handle = true;\n        }\n\n        lastPoint = point;\n\n        if (handle && tool) {\n          called = tool._handleMouseEvent(type, event, point, mouse) || called;\n        }\n\n        if (event.cancelable !== false && (called && !mouse.move || mouse.down && responds('mouseup'))) {\n          event.preventDefault();\n        }\n      },\n      _handleKeyEvent: function _handleKeyEvent(type, event, key, character) {\n        var scope = this._scope,\n            tool = scope.tool,\n            keyEvent;\n\n        function emit(obj) {\n          if (obj.responds(type)) {\n            paper = scope;\n            obj.emit(type, keyEvent = keyEvent || new KeyEvent(type, event, key, character));\n          }\n        }\n\n        if (this.isVisible()) {\n          emit(this);\n          if (tool && tool.responds(type)) emit(tool);\n        }\n      },\n      _countItemEvent: function _countItemEvent(type, sign) {\n        var itemEvents = this._itemEvents,\n            native = itemEvents.native,\n            virtual = itemEvents.virtual;\n\n        for (var key in itemEventsMap) {\n          native[key] = (native[key] || 0) + (itemEventsMap[key][type] || 0) * sign;\n        }\n\n        virtual[type] = (virtual[type] || 0) + sign;\n      },\n      statics: {\n        updateFocus: updateFocus,\n        _resetState: function _resetState() {\n          dragging = mouseDown = called = wasInView = false;\n          prevFocus = tempFocus = overView = downPoint = lastPoint = downItem = overItem = dragItem = clickItem = clickTime = dblClick = null;\n        }\n      }\n    };\n  }());\n  var CanvasView = View.extend({\n    _class: 'CanvasView',\n    initialize: function CanvasView(project, canvas) {\n      if (!(canvas instanceof window.HTMLCanvasElement)) {\n        var size = Size.read(arguments, 1);\n        if (size.isZero()) throw new Error('Cannot create CanvasView with the provided argument: ' + Base.slice(arguments, 1));\n        canvas = CanvasProvider.getCanvas(size);\n      }\n\n      var ctx = this._context = canvas.getContext('2d');\n      ctx.save();\n      this._pixelRatio = 1;\n\n      if (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n        var deviceRatio = window.devicePixelRatio || 1,\n            backingStoreRatio = DomElement.getPrefixed(ctx, 'backingStorePixelRatio') || 1;\n        this._pixelRatio = deviceRatio / backingStoreRatio;\n      }\n\n      View.call(this, project, canvas);\n      this._needsUpdate = true;\n    },\n    remove: function remove() {\n      this._context.restore();\n\n      return remove.base.call(this);\n    },\n    _setElementSize: function _setElementSize(width, height) {\n      var pixelRatio = this._pixelRatio;\n\n      _setElementSize.base.call(this, width * pixelRatio, height * pixelRatio);\n\n      if (pixelRatio !== 1) {\n        var element = this._element,\n            ctx = this._context;\n\n        if (!PaperScope.hasAttribute(element, 'resize')) {\n          var style = element.style;\n          style.width = width + 'px';\n          style.height = height + 'px';\n        }\n\n        ctx.restore();\n        ctx.save();\n        ctx.scale(pixelRatio, pixelRatio);\n      }\n    },\n    getContext: function getContext() {\n      return this._context;\n    },\n    getPixelSize: function getPixelSize(size) {\n      var agent = paper.agent,\n          pixels;\n\n      if (agent && agent.firefox) {\n        pixels = getPixelSize.base.call(this, size);\n      } else {\n        var ctx = this._context,\n            prevFont = ctx.font;\n        ctx.font = size + ' serif';\n        pixels = parseFloat(ctx.font);\n        ctx.font = prevFont;\n      }\n\n      return pixels;\n    },\n    getTextWidth: function getTextWidth(font, lines) {\n      var ctx = this._context,\n          prevFont = ctx.font,\n          width = 0;\n      ctx.font = font;\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        width = Math.max(width, ctx.measureText(lines[i]).width);\n      }\n\n      ctx.font = prevFont;\n      return width;\n    },\n    update: function update() {\n      if (!this._needsUpdate) return false;\n      var project = this._project,\n          ctx = this._context,\n          size = this._viewSize;\n      ctx.clearRect(0, 0, size.width + 1, size.height + 1);\n      if (project) project.draw(ctx, this._matrix, this._pixelRatio);\n      this._needsUpdate = false;\n      return true;\n    }\n  });\n  var Event = Base.extend({\n    _class: 'Event',\n    initialize: function Event(event) {\n      this.event = event;\n      this.type = event && event.type;\n    },\n    prevented: false,\n    stopped: false,\n    preventDefault: function preventDefault() {\n      this.prevented = true;\n      this.event.preventDefault();\n    },\n    stopPropagation: function stopPropagation() {\n      this.stopped = true;\n      this.event.stopPropagation();\n    },\n    stop: function stop() {\n      this.stopPropagation();\n      this.preventDefault();\n    },\n    getTimeStamp: function getTimeStamp() {\n      return this.event.timeStamp;\n    },\n    getModifiers: function getModifiers() {\n      return Key.modifiers;\n    }\n  });\n  var KeyEvent = Event.extend({\n    _class: 'KeyEvent',\n    initialize: function KeyEvent(type, event, key, character) {\n      this.type = type;\n      this.event = event;\n      this.key = key;\n      this.character = character;\n    },\n    toString: function toString() {\n      return \"{ type: '\" + this.type + \"', key: '\" + this.key + \"', character: '\" + this.character + \"', modifiers: \" + this.getModifiers() + \" }\";\n    }\n  });\n  var Key = new function () {\n    var keyLookup = {\n      '\\t': 'tab',\n      ' ': 'space',\n      '\\b': 'backspace',\n      '\\x7f': 'delete',\n      'Spacebar': 'space',\n      'Del': 'delete',\n      'Win': 'meta',\n      'Esc': 'escape'\n    },\n        charLookup = {\n      'tab': '\\t',\n      'space': ' ',\n      'enter': '\\r'\n    },\n        keyMap = {},\n        charMap = {},\n        metaFixMap,\n        downKey,\n        modifiers = new Base({\n      shift: false,\n      control: false,\n      alt: false,\n      meta: false,\n      capsLock: false,\n      space: false\n    }).inject({\n      option: {\n        get: function get() {\n          return this.alt;\n        }\n      },\n      command: {\n        get: function get() {\n          var agent = paper && paper.agent;\n          return agent && agent.mac ? this.meta : this.control;\n        }\n      }\n    });\n\n    function getKey(event) {\n      var key = event.key || event.keyIdentifier;\n      key = /^U\\+/.test(key) ? String.fromCharCode(parseInt(key.substr(2), 16)) : /^Arrow[A-Z]/.test(key) ? key.substr(5) : key === 'Unidentified' || key === undefined ? String.fromCharCode(event.keyCode) : key;\n      return keyLookup[key] || (key.length > 1 ? Base.hyphenate(key) : key.toLowerCase());\n    }\n\n    function handleKey(down, key, character, event) {\n      var type = down ? 'keydown' : 'keyup',\n          view = View._focused,\n          name;\n      keyMap[key] = down;\n\n      if (down) {\n        charMap[key] = character;\n      } else {\n        delete charMap[key];\n      }\n\n      if (key.length > 1 && (name = Base.camelize(key)) in modifiers) {\n        modifiers[name] = down;\n        var agent = paper && paper.agent;\n\n        if (name === 'meta' && agent && agent.mac) {\n          if (down) {\n            metaFixMap = {};\n          } else {\n            for (var k in metaFixMap) {\n              if (k in charMap) handleKey(false, k, metaFixMap[k], event);\n            }\n\n            metaFixMap = null;\n          }\n        }\n      } else if (down && metaFixMap) {\n        metaFixMap[key] = character;\n      }\n\n      if (view) {\n        view._handleKeyEvent(down ? 'keydown' : 'keyup', event, key, character);\n      }\n    }\n\n    DomEvent.add(document, {\n      keydown: function keydown(event) {\n        var key = getKey(event),\n            agent = paper && paper.agent;\n\n        if (key.length > 1 || agent && agent.chrome && (event.altKey || agent.mac && event.metaKey || !agent.mac && event.ctrlKey)) {\n          handleKey(true, key, charLookup[key] || (key.length > 1 ? '' : key), event);\n        } else {\n          downKey = key;\n        }\n      },\n      keypress: function keypress(event) {\n        if (downKey) {\n          var key = getKey(event),\n              code = event.charCode,\n              character = code >= 32 ? String.fromCharCode(code) : key.length > 1 ? '' : key;\n\n          if (key !== downKey) {\n            key = character.toLowerCase();\n          }\n\n          handleKey(true, key, character, event);\n          downKey = null;\n        }\n      },\n      keyup: function keyup(event) {\n        var key = getKey(event);\n        if (key in charMap) handleKey(false, key, charMap[key], event);\n      }\n    });\n    DomEvent.add(window, {\n      blur: function blur(event) {\n        for (var key in charMap) {\n          handleKey(false, key, charMap[key], event);\n        }\n      }\n    });\n    return {\n      modifiers: modifiers,\n      isDown: function isDown(key) {\n        return !!keyMap[key];\n      }\n    };\n  }();\n  var MouseEvent = Event.extend({\n    _class: 'MouseEvent',\n    initialize: function MouseEvent(type, event, point, target, delta) {\n      this.type = type;\n      this.event = event;\n      this.point = point;\n      this.target = target;\n      this.delta = delta;\n    },\n    toString: function toString() {\n      return \"{ type: '\" + this.type + \"', point: \" + this.point + ', target: ' + this.target + (this.delta ? ', delta: ' + this.delta : '') + ', modifiers: ' + this.getModifiers() + ' }';\n    }\n  });\n  var ToolEvent = Event.extend({\n    _class: 'ToolEvent',\n    _item: null,\n    initialize: function ToolEvent(tool, type, event) {\n      this.tool = tool;\n      this.type = type;\n      this.event = event;\n    },\n    _choosePoint: function _choosePoint(point, toolPoint) {\n      return point ? point : toolPoint ? toolPoint.clone() : null;\n    },\n    getPoint: function getPoint() {\n      return this._choosePoint(this._point, this.tool._point);\n    },\n    setPoint: function setPoint(point) {\n      this._point = point;\n    },\n    getLastPoint: function getLastPoint() {\n      return this._choosePoint(this._lastPoint, this.tool._lastPoint);\n    },\n    setLastPoint: function setLastPoint(lastPoint) {\n      this._lastPoint = lastPoint;\n    },\n    getDownPoint: function getDownPoint() {\n      return this._choosePoint(this._downPoint, this.tool._downPoint);\n    },\n    setDownPoint: function setDownPoint(downPoint) {\n      this._downPoint = downPoint;\n    },\n    getMiddlePoint: function getMiddlePoint() {\n      if (!this._middlePoint && this.tool._lastPoint) {\n        return this.tool._point.add(this.tool._lastPoint).divide(2);\n      }\n\n      return this._middlePoint;\n    },\n    setMiddlePoint: function setMiddlePoint(middlePoint) {\n      this._middlePoint = middlePoint;\n    },\n    getDelta: function getDelta() {\n      return !this._delta && this.tool._lastPoint ? this.tool._point.subtract(this.tool._lastPoint) : this._delta;\n    },\n    setDelta: function setDelta(delta) {\n      this._delta = delta;\n    },\n    getCount: function getCount() {\n      return this.tool[/^mouse(down|up)$/.test(this.type) ? '_downCount' : '_moveCount'];\n    },\n    setCount: function setCount(count) {\n      this.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count'] = count;\n    },\n    getItem: function getItem() {\n      if (!this._item) {\n        var result = this.tool._scope.project.hitTest(this.getPoint());\n\n        if (result) {\n          var item = result.item,\n              parent = item._parent;\n\n          while (/^(Group|CompoundPath)$/.test(parent._class)) {\n            item = parent;\n            parent = parent._parent;\n          }\n\n          this._item = item;\n        }\n      }\n\n      return this._item;\n    },\n    setItem: function setItem(item) {\n      this._item = item;\n    },\n    toString: function toString() {\n      return '{ type: ' + this.type + ', point: ' + this.getPoint() + ', count: ' + this.getCount() + ', modifiers: ' + this.getModifiers() + ' }';\n    }\n  });\n  var Tool = PaperScopeItem.extend({\n    _class: 'Tool',\n    _list: 'tools',\n    _reference: 'tool',\n    _events: ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove', 'onActivate', 'onDeactivate', 'onEditOptions', 'onKeyDown', 'onKeyUp'],\n    initialize: function Tool(props) {\n      PaperScopeItem.call(this);\n      this._moveCount = -1;\n      this._downCount = -1;\n      this.set(props);\n    },\n    getMinDistance: function getMinDistance() {\n      return this._minDistance;\n    },\n    setMinDistance: function setMinDistance(minDistance) {\n      this._minDistance = minDistance;\n\n      if (minDistance != null && this._maxDistance != null && minDistance > this._maxDistance) {\n        this._maxDistance = minDistance;\n      }\n    },\n    getMaxDistance: function getMaxDistance() {\n      return this._maxDistance;\n    },\n    setMaxDistance: function setMaxDistance(maxDistance) {\n      this._maxDistance = maxDistance;\n\n      if (this._minDistance != null && maxDistance != null && maxDistance < this._minDistance) {\n        this._minDistance = maxDistance;\n      }\n    },\n    getFixedDistance: function getFixedDistance() {\n      return this._minDistance == this._maxDistance ? this._minDistance : null;\n    },\n    setFixedDistance: function setFixedDistance(distance) {\n      this._minDistance = this._maxDistance = distance;\n    },\n    _handleMouseEvent: function _handleMouseEvent(type, event, point, mouse) {\n      paper = this._scope;\n      if (mouse.drag && !this.responds(type)) type = 'mousemove';\n      var move = mouse.move || mouse.drag,\n          responds = this.responds(type),\n          minDistance = this.minDistance,\n          maxDistance = this.maxDistance,\n          called = false,\n          tool = this;\n\n      function update(minDistance, maxDistance) {\n        var pt = point,\n            toolPoint = move ? tool._point : tool._downPoint || pt;\n\n        if (move) {\n          if (tool._moveCount >= 0 && pt.equals(toolPoint)) {\n            return false;\n          }\n\n          if (toolPoint && (minDistance != null || maxDistance != null)) {\n            var vector = pt.subtract(toolPoint),\n                distance = vector.getLength();\n            if (distance < (minDistance || 0)) return false;\n\n            if (maxDistance) {\n              pt = toolPoint.add(vector.normalize(Math.min(distance, maxDistance)));\n            }\n          }\n\n          tool._moveCount++;\n        }\n\n        tool._point = pt;\n        tool._lastPoint = toolPoint || pt;\n\n        if (mouse.down) {\n          tool._moveCount = -1;\n          tool._downPoint = pt;\n          tool._downCount++;\n        }\n\n        return true;\n      }\n\n      function emit() {\n        if (responds) {\n          called = tool.emit(type, new ToolEvent(tool, type, event)) || called;\n        }\n      }\n\n      if (mouse.down) {\n        update();\n        emit();\n      } else if (mouse.up) {\n        update(null, maxDistance);\n        emit();\n      } else if (responds) {\n        while (update(minDistance, maxDistance)) {\n          emit();\n        }\n      }\n\n      return called;\n    }\n  });\n  var Tween = Base.extend(Emitter, {\n    _class: 'Tween',\n    statics: {\n      easings: {\n        linear: function linear(t) {\n          return t;\n        },\n        easeInQuad: function easeInQuad(t) {\n          return t * t;\n        },\n        easeOutQuad: function easeOutQuad(t) {\n          return t * (2 - t);\n        },\n        easeInOutQuad: function easeInOutQuad(t) {\n          return t < 0.5 ? 2 * t * t : -1 + 2 * (2 - t) * t;\n        },\n        easeInCubic: function easeInCubic(t) {\n          return t * t * t;\n        },\n        easeOutCubic: function easeOutCubic(t) {\n          return --t * t * t + 1;\n        },\n        easeInOutCubic: function easeInOutCubic(t) {\n          return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n        },\n        easeInQuart: function easeInQuart(t) {\n          return t * t * t * t;\n        },\n        easeOutQuart: function easeOutQuart(t) {\n          return 1 - --t * t * t * t;\n        },\n        easeInOutQuart: function easeInOutQuart(t) {\n          return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n        },\n        easeInQuint: function easeInQuint(t) {\n          return t * t * t * t * t;\n        },\n        easeOutQuint: function easeOutQuint(t) {\n          return 1 + --t * t * t * t * t;\n        },\n        easeInOutQuint: function easeInOutQuint(t) {\n          return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n        }\n      }\n    },\n    initialize: function Tween(object, from, to, duration, easing, start) {\n      this.object = object;\n      var type = typeof easing;\n      var isFunction = type === 'function';\n      this.type = isFunction ? type : type === 'string' ? easing : 'linear';\n      this.easing = isFunction ? easing : Tween.easings[this.type];\n      this.duration = duration;\n      this.running = false;\n      this._then = null;\n      this._startTime = null;\n      var state = from || to;\n      this._keys = state ? Object.keys(state) : [];\n      this._parsedKeys = this._parseKeys(this._keys);\n      this._from = state && this._getState(from);\n      this._to = state && this._getState(to);\n\n      if (start !== false) {\n        this.start();\n      }\n    },\n    then: function then(_then) {\n      this._then = _then;\n      return this;\n    },\n    start: function start() {\n      this._startTime = null;\n      this.running = true;\n      return this;\n    },\n    stop: function stop() {\n      this.running = false;\n      return this;\n    },\n    update: function update(progress) {\n      if (this.running) {\n        if (progress > 1) {\n          progress = 1;\n          this.running = false;\n        }\n\n        var factor = this.easing(progress),\n            keys = this._keys,\n            getValue = function getValue(value) {\n          return typeof value === 'function' ? value(factor, progress) : value;\n        };\n\n        for (var i = 0, l = keys && keys.length; i < l; i++) {\n          var key = keys[i],\n              from = getValue(this._from[key]),\n              to = getValue(this._to[key]),\n              value = from && to && from.__add && to.__add ? to.__subtract(from).__multiply(factor).__add(from) : (to - from) * factor + from;\n\n          this._setProperty(this._parsedKeys[key], value);\n        }\n\n        if (!this.running && this._then) {\n          this._then(this.object);\n        }\n\n        if (this.responds('update')) {\n          this.emit('update', new Base({\n            progress: progress,\n            factor: factor\n          }));\n        }\n      }\n\n      return this;\n    },\n    _events: {\n      onUpdate: {}\n    },\n    _handleFrame: function _handleFrame(time) {\n      var startTime = this._startTime,\n          progress = startTime ? (time - startTime) / this.duration : 0;\n\n      if (!startTime) {\n        this._startTime = time;\n      }\n\n      this.update(progress);\n    },\n    _getState: function _getState(state) {\n      var keys = this._keys,\n          result = {};\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i],\n            path = this._parsedKeys[key],\n            current = this._getProperty(path),\n            value;\n\n        if (state) {\n          var resolved = this._resolveValue(current, state[key]);\n\n          this._setProperty(path, resolved);\n\n          value = this._getProperty(path);\n          value = value && value.clone ? value.clone() : value;\n\n          this._setProperty(path, current);\n        } else {\n          value = current && current.clone ? current.clone() : current;\n        }\n\n        result[key] = value;\n      }\n\n      return result;\n    },\n    _resolveValue: function _resolveValue(current, value) {\n      if (value) {\n        if (Array.isArray(value) && value.length === 2) {\n          var operator = value[0];\n          return operator && operator.match && operator.match(/^[+\\-\\*\\/]=/) ? this._calculate(current, operator[0], value[1]) : value;\n        } else if (typeof value === 'string') {\n          var match = value.match(/^[+\\-*/]=(.*)/);\n\n          if (match) {\n            var parsed = JSON.parse(match[1].replace(/(['\"])?([a-zA-Z0-9_]+)(['\"])?:/g, '\"$2\": '));\n            return this._calculate(current, value[0], parsed);\n          }\n        }\n      }\n\n      return value;\n    },\n    _calculate: function _calculate(left, operator, right) {\n      return paper.PaperScript.calculateBinary(left, operator, right);\n    },\n    _parseKeys: function _parseKeys(keys) {\n      var parsed = {};\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i],\n            path = key.replace(/\\.([^.]*)/g, '/$1').replace(/\\[['\"]?([^'\"\\]]*)['\"]?\\]/g, '/$1');\n        parsed[key] = path.split('/');\n      }\n\n      return parsed;\n    },\n    _getProperty: function _getProperty(path, offset) {\n      var obj = this.object;\n\n      for (var i = 0, l = path.length - (offset || 0); i < l && obj; i++) {\n        obj = obj[path[i]];\n      }\n\n      return obj;\n    },\n    _setProperty: function _setProperty(path, value) {\n      var dest = this._getProperty(path, 1);\n\n      if (dest) {\n        dest[path[path.length - 1]] = value;\n      }\n    }\n  });\n  var Http = {\n    request: function request(options) {\n      var xhr = new self.XMLHttpRequest();\n      xhr.open((options.method || 'get').toUpperCase(), options.url, Base.pick(options.async, true));\n      if (options.mimeType) xhr.overrideMimeType(options.mimeType);\n\n      xhr.onload = function () {\n        var status = xhr.status;\n\n        if (status === 0 || status === 200) {\n          if (options.onLoad) {\n            options.onLoad.call(xhr, xhr.responseText);\n          }\n        } else {\n          xhr.onerror();\n        }\n      };\n\n      xhr.onerror = function () {\n        var status = xhr.status,\n            message = 'Could not load \"' + options.url + '\" (Status: ' + status + ')';\n\n        if (options.onError) {\n          options.onError(message, status);\n        } else {\n          throw new Error(message);\n        }\n      };\n\n      return xhr.send(null);\n    }\n  };\n  var CanvasProvider = {\n    canvases: [],\n    getCanvas: function getCanvas(width, height) {\n      if (!window) return null;\n      var canvas,\n          clear = true;\n\n      if (typeof width === 'object') {\n        height = width.height;\n        width = width.width;\n      }\n\n      if (this.canvases.length) {\n        canvas = this.canvases.pop();\n      } else {\n        canvas = document.createElement('canvas');\n        clear = false;\n      }\n\n      var ctx = canvas.getContext('2d');\n\n      if (!ctx) {\n        throw new Error('Canvas ' + canvas + ' is unable to provide a 2D context.');\n      }\n\n      if (canvas.width === width && canvas.height === height) {\n        if (clear) ctx.clearRect(0, 0, width + 1, height + 1);\n      } else {\n        canvas.width = width;\n        canvas.height = height;\n      }\n\n      ctx.save();\n      return canvas;\n    },\n    getContext: function getContext(width, height) {\n      var canvas = this.getCanvas(width, height);\n      return canvas ? canvas.getContext('2d') : null;\n    },\n    release: function release(obj) {\n      var canvas = obj && obj.canvas ? obj.canvas : obj;\n\n      if (canvas && canvas.getContext) {\n        canvas.getContext('2d').restore();\n        this.canvases.push(canvas);\n      }\n    }\n  };\n  var BlendMode = new function () {\n    var min = Math.min,\n        max = Math.max,\n        abs = Math.abs,\n        sr,\n        sg,\n        sb,\n        sa,\n        br,\n        bg,\n        bb,\n        ba,\n        dr,\n        dg,\n        db;\n\n    function getLum(r, g, b) {\n      return 0.2989 * r + 0.587 * g + 0.114 * b;\n    }\n\n    function setLum(r, g, b, l) {\n      var d = l - getLum(r, g, b);\n      dr = r + d;\n      dg = g + d;\n      db = b + d;\n      var l = getLum(dr, dg, db),\n          mn = min(dr, dg, db),\n          mx = max(dr, dg, db);\n\n      if (mn < 0) {\n        var lmn = l - mn;\n        dr = l + (dr - l) * l / lmn;\n        dg = l + (dg - l) * l / lmn;\n        db = l + (db - l) * l / lmn;\n      }\n\n      if (mx > 255) {\n        var ln = 255 - l,\n            mxl = mx - l;\n        dr = l + (dr - l) * ln / mxl;\n        dg = l + (dg - l) * ln / mxl;\n        db = l + (db - l) * ln / mxl;\n      }\n    }\n\n    function getSat(r, g, b) {\n      return max(r, g, b) - min(r, g, b);\n    }\n\n    function setSat(r, g, b, s) {\n      var col = [r, g, b],\n          mx = max(r, g, b),\n          mn = min(r, g, b),\n          md;\n      mn = mn === r ? 0 : mn === g ? 1 : 2;\n      mx = mx === r ? 0 : mx === g ? 1 : 2;\n      md = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\n      if (col[mx] > col[mn]) {\n        col[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n        col[mx] = s;\n      } else {\n        col[md] = col[mx] = 0;\n      }\n\n      col[mn] = 0;\n      dr = col[0];\n      dg = col[1];\n      db = col[2];\n    }\n\n    var modes = {\n      multiply: function multiply() {\n        dr = br * sr / 255;\n        dg = bg * sg / 255;\n        db = bb * sb / 255;\n      },\n      screen: function screen() {\n        dr = br + sr - br * sr / 255;\n        dg = bg + sg - bg * sg / 255;\n        db = bb + sb - bb * sb / 255;\n      },\n      overlay: function overlay() {\n        dr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n        dg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n        db = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n      },\n      'soft-light': function softLight() {\n        var t = sr * br / 255;\n        dr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n        t = sg * bg / 255;\n        dg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n        t = sb * bb / 255;\n        db = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n      },\n      'hard-light': function hardLight() {\n        dr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n        dg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n        db = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n      },\n      'color-dodge': function colorDodge() {\n        dr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n        dg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n        db = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n      },\n      'color-burn': function colorBurn() {\n        dr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n        dg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n        db = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n      },\n      darken: function darken() {\n        dr = br < sr ? br : sr;\n        dg = bg < sg ? bg : sg;\n        db = bb < sb ? bb : sb;\n      },\n      lighten: function lighten() {\n        dr = br > sr ? br : sr;\n        dg = bg > sg ? bg : sg;\n        db = bb > sb ? bb : sb;\n      },\n      difference: function difference() {\n        dr = br - sr;\n        if (dr < 0) dr = -dr;\n        dg = bg - sg;\n        if (dg < 0) dg = -dg;\n        db = bb - sb;\n        if (db < 0) db = -db;\n      },\n      exclusion: function exclusion() {\n        dr = br + sr * (255 - br - br) / 255;\n        dg = bg + sg * (255 - bg - bg) / 255;\n        db = bb + sb * (255 - bb - bb) / 255;\n      },\n      hue: function hue() {\n        setSat(sr, sg, sb, getSat(br, bg, bb));\n        setLum(dr, dg, db, getLum(br, bg, bb));\n      },\n      saturation: function saturation() {\n        setSat(br, bg, bb, getSat(sr, sg, sb));\n        setLum(dr, dg, db, getLum(br, bg, bb));\n      },\n      luminosity: function luminosity() {\n        setLum(br, bg, bb, getLum(sr, sg, sb));\n      },\n      color: function color() {\n        setLum(sr, sg, sb, getLum(br, bg, bb));\n      },\n      add: function add() {\n        dr = min(br + sr, 255);\n        dg = min(bg + sg, 255);\n        db = min(bb + sb, 255);\n      },\n      subtract: function subtract() {\n        dr = max(br - sr, 0);\n        dg = max(bg - sg, 0);\n        db = max(bb - sb, 0);\n      },\n      average: function average() {\n        dr = (br + sr) / 2;\n        dg = (bg + sg) / 2;\n        db = (bb + sb) / 2;\n      },\n      negation: function negation() {\n        dr = 255 - abs(255 - sr - br);\n        dg = 255 - abs(255 - sg - bg);\n        db = 255 - abs(255 - sb - bb);\n      }\n    };\n    var nativeModes = this.nativeModes = Base.each(['source-over', 'source-in', 'source-out', 'source-atop', 'destination-over', 'destination-in', 'destination-out', 'destination-atop', 'lighter', 'darker', 'copy', 'xor'], function (mode) {\n      this[mode] = true;\n    }, {});\n    var ctx = CanvasProvider.getContext(1, 1);\n\n    if (ctx) {\n      Base.each(modes, function (func, mode) {\n        var darken = mode === 'darken',\n            ok = false;\n        ctx.save();\n\n        try {\n          ctx.fillStyle = darken ? '#300' : '#a00';\n          ctx.fillRect(0, 0, 1, 1);\n          ctx.globalCompositeOperation = mode;\n\n          if (ctx.globalCompositeOperation === mode) {\n            ctx.fillStyle = darken ? '#a00' : '#300';\n            ctx.fillRect(0, 0, 1, 1);\n            ok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n          }\n        } catch (e) {}\n\n        ctx.restore();\n        nativeModes[mode] = ok;\n      });\n      CanvasProvider.release(ctx);\n    }\n\n    this.process = function (mode, srcContext, dstContext, alpha, offset) {\n      var srcCanvas = srcContext.canvas,\n          normal = mode === 'normal';\n\n      if (normal || nativeModes[mode]) {\n        dstContext.save();\n        dstContext.setTransform(1, 0, 0, 1, 0, 0);\n        dstContext.globalAlpha = alpha;\n        if (!normal) dstContext.globalCompositeOperation = mode;\n        dstContext.drawImage(srcCanvas, offset.x, offset.y);\n        dstContext.restore();\n      } else {\n        var process = modes[mode];\n        if (!process) return;\n        var dstData = dstContext.getImageData(offset.x, offset.y, srcCanvas.width, srcCanvas.height),\n            dst = dstData.data,\n            src = srcContext.getImageData(0, 0, srcCanvas.width, srcCanvas.height).data;\n\n        for (var i = 0, l = dst.length; i < l; i += 4) {\n          sr = src[i];\n          br = dst[i];\n          sg = src[i + 1];\n          bg = dst[i + 1];\n          sb = src[i + 2];\n          bb = dst[i + 2];\n          sa = src[i + 3];\n          ba = dst[i + 3];\n          process();\n          var a1 = sa * alpha / 255,\n              a2 = 1 - a1;\n          dst[i] = a1 * dr + a2 * br;\n          dst[i + 1] = a1 * dg + a2 * bg;\n          dst[i + 2] = a1 * db + a2 * bb;\n          dst[i + 3] = sa * alpha + a2 * ba;\n        }\n\n        dstContext.putImageData(dstData, offset.x, offset.y);\n      }\n    };\n  }();\n  var SvgElement = new function () {\n    var svg = 'http://www.w3.org/2000/svg',\n        xmlns = 'http://www.w3.org/2000/xmlns',\n        xlink = 'http://www.w3.org/1999/xlink',\n        attributeNamespace = {\n      href: xlink,\n      xlink: xmlns,\n      xmlns: xmlns + '/',\n      'xmlns:xlink': xmlns + '/'\n    };\n\n    function create(tag, attributes, formatter) {\n      return set(document.createElementNS(svg, tag), attributes, formatter);\n    }\n\n    function get(node, name) {\n      var namespace = attributeNamespace[name],\n          value = namespace ? node.getAttributeNS(namespace, name) : node.getAttribute(name);\n      return value === 'null' ? null : value;\n    }\n\n    function set(node, attributes, formatter) {\n      for (var name in attributes) {\n        var value = attributes[name],\n            namespace = attributeNamespace[name];\n        if (typeof value === 'number' && formatter) value = formatter.number(value);\n\n        if (namespace) {\n          node.setAttributeNS(namespace, name, value);\n        } else {\n          node.setAttribute(name, value);\n        }\n      }\n\n      return node;\n    }\n\n    return {\n      svg: svg,\n      xmlns: xmlns,\n      xlink: xlink,\n      create: create,\n      get: get,\n      set: set\n    };\n  }();\n  var SvgStyles = Base.each({\n    fillColor: ['fill', 'color'],\n    fillRule: ['fill-rule', 'string'],\n    strokeColor: ['stroke', 'color'],\n    strokeWidth: ['stroke-width', 'number'],\n    strokeCap: ['stroke-linecap', 'string'],\n    strokeJoin: ['stroke-linejoin', 'string'],\n    strokeScaling: ['vector-effect', 'lookup', {\n      true: 'none',\n      false: 'non-scaling-stroke'\n    }, function (item, value) {\n      return !value && (item instanceof PathItem || item instanceof Shape || item instanceof TextItem);\n    }],\n    miterLimit: ['stroke-miterlimit', 'number'],\n    dashArray: ['stroke-dasharray', 'array'],\n    dashOffset: ['stroke-dashoffset', 'number'],\n    fontFamily: ['font-family', 'string'],\n    fontWeight: ['font-weight', 'string'],\n    fontSize: ['font-size', 'number'],\n    justification: ['text-anchor', 'lookup', {\n      left: 'start',\n      center: 'middle',\n      right: 'end'\n    }],\n    opacity: ['opacity', 'number'],\n    blendMode: ['mix-blend-mode', 'style']\n  }, function (entry, key) {\n    var part = Base.capitalize(key),\n        lookup = entry[2];\n    this[key] = {\n      type: entry[1],\n      property: key,\n      attribute: entry[0],\n      toSVG: lookup,\n      fromSVG: lookup && Base.each(lookup, function (value, name) {\n        this[value] = name;\n      }, {}),\n      exportFilter: entry[3],\n      get: 'get' + part,\n      set: 'set' + part\n    };\n  }, {});\n  new function () {\n    var formatter;\n\n    function getTransform(matrix, coordinates, center) {\n      var attrs = new Base(),\n          trans = matrix.getTranslation();\n\n      if (coordinates) {\n        var point;\n\n        if (matrix.isInvertible()) {\n          matrix = matrix._shiftless();\n          point = matrix._inverseTransform(trans);\n          trans = null;\n        } else {\n          point = new Point();\n        }\n\n        attrs[center ? 'cx' : 'x'] = point.x;\n        attrs[center ? 'cy' : 'y'] = point.y;\n      }\n\n      if (!matrix.isIdentity()) {\n        var decomposed = matrix.decompose();\n\n        if (decomposed) {\n          var parts = [],\n              angle = decomposed.rotation,\n              scale = decomposed.scaling,\n              skew = decomposed.skewing;\n          if (trans && !trans.isZero()) parts.push('translate(' + formatter.point(trans) + ')');\n          if (angle) parts.push('rotate(' + formatter.number(angle) + ')');\n          if (!Numerical.isZero(scale.x - 1) || !Numerical.isZero(scale.y - 1)) parts.push('scale(' + formatter.point(scale) + ')');\n          if (skew.x) parts.push('skewX(' + formatter.number(skew.x) + ')');\n          if (skew.y) parts.push('skewY(' + formatter.number(skew.y) + ')');\n          attrs.transform = parts.join(' ');\n        } else {\n          attrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n        }\n      }\n\n      return attrs;\n    }\n\n    function exportGroup(item, options) {\n      var attrs = getTransform(item._matrix),\n          children = item._children;\n      var node = SvgElement.create('g', attrs, formatter);\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n\n        var childNode = _exportSVG(child, options);\n\n        if (childNode) {\n          if (child.isClipMask()) {\n            var clip = SvgElement.create('clipPath');\n            clip.appendChild(childNode);\n            setDefinition(child, clip, 'clip');\n            SvgElement.set(node, {\n              'clip-path': 'url(#' + clip.id + ')'\n            });\n          } else {\n            node.appendChild(childNode);\n          }\n        }\n      }\n\n      return node;\n    }\n\n    function exportRaster(item, options) {\n      var attrs = getTransform(item._matrix, true),\n          size = item.getSize(),\n          image = item.getImage();\n      attrs.x -= size.width / 2;\n      attrs.y -= size.height / 2;\n      attrs.width = size.width;\n      attrs.height = size.height;\n      attrs.href = options.embedImages == false && image && image.src || item.toDataURL();\n      return SvgElement.create('image', attrs, formatter);\n    }\n\n    function exportPath(item, options) {\n      var matchShapes = options.matchShapes;\n\n      if (matchShapes) {\n        var shape = item.toShape(false);\n        if (shape) return exportShape(shape, options);\n      }\n\n      var segments = item._segments,\n          length = segments.length,\n          type,\n          attrs = getTransform(item._matrix);\n\n      if (matchShapes && length >= 2 && !item.hasHandles()) {\n        if (length > 2) {\n          type = item._closed ? 'polygon' : 'polyline';\n          var parts = [];\n\n          for (var i = 0; i < length; i++) {\n            parts.push(formatter.point(segments[i]._point));\n          }\n\n          attrs.points = parts.join(' ');\n        } else {\n          type = 'line';\n          var start = segments[0]._point,\n              end = segments[1]._point;\n          attrs.set({\n            x1: start.x,\n            y1: start.y,\n            x2: end.x,\n            y2: end.y\n          });\n        }\n      } else {\n        type = 'path';\n        attrs.d = item.getPathData(null, options.precision);\n      }\n\n      return SvgElement.create(type, attrs, formatter);\n    }\n\n    function exportShape(item) {\n      var type = item._type,\n          radius = item._radius,\n          attrs = getTransform(item._matrix, true, type !== 'rectangle');\n\n      if (type === 'rectangle') {\n        type = 'rect';\n        var size = item._size,\n            width = size.width,\n            height = size.height;\n        attrs.x -= width / 2;\n        attrs.y -= height / 2;\n        attrs.width = width;\n        attrs.height = height;\n        if (radius.isZero()) radius = null;\n      }\n\n      if (radius) {\n        if (type === 'circle') {\n          attrs.r = radius;\n        } else {\n          attrs.rx = radius.width;\n          attrs.ry = radius.height;\n        }\n      }\n\n      return SvgElement.create(type, attrs, formatter);\n    }\n\n    function exportCompoundPath(item, options) {\n      var attrs = getTransform(item._matrix);\n      var data = item.getPathData(null, options.precision);\n      if (data) attrs.d = data;\n      return SvgElement.create('path', attrs, formatter);\n    }\n\n    function exportSymbolItem(item, options) {\n      var attrs = getTransform(item._matrix, true),\n          definition = item._definition,\n          node = getDefinition(definition, 'symbol'),\n          definitionItem = definition._item,\n          bounds = definitionItem.getStrokeBounds();\n\n      if (!node) {\n        node = SvgElement.create('symbol', {\n          viewBox: formatter.rectangle(bounds)\n        });\n        node.appendChild(_exportSVG(definitionItem, options));\n        setDefinition(definition, node, 'symbol');\n      }\n\n      attrs.href = '#' + node.id;\n      attrs.x += bounds.x;\n      attrs.y += bounds.y;\n      attrs.width = bounds.width;\n      attrs.height = bounds.height;\n      attrs.overflow = 'visible';\n      return SvgElement.create('use', attrs, formatter);\n    }\n\n    function exportGradient(color) {\n      var gradientNode = getDefinition(color, 'color');\n\n      if (!gradientNode) {\n        var gradient = color.getGradient(),\n            radial = gradient._radial,\n            origin = color.getOrigin(),\n            destination = color.getDestination(),\n            attrs;\n\n        if (radial) {\n          attrs = {\n            cx: origin.x,\n            cy: origin.y,\n            r: origin.getDistance(destination)\n          };\n          var highlight = color.getHighlight();\n\n          if (highlight) {\n            attrs.fx = highlight.x;\n            attrs.fy = highlight.y;\n          }\n        } else {\n          attrs = {\n            x1: origin.x,\n            y1: origin.y,\n            x2: destination.x,\n            y2: destination.y\n          };\n        }\n\n        attrs.gradientUnits = 'userSpaceOnUse';\n        gradientNode = SvgElement.create((radial ? 'radial' : 'linear') + 'Gradient', attrs, formatter);\n        var stops = gradient._stops;\n\n        for (var i = 0, l = stops.length; i < l; i++) {\n          var stop = stops[i],\n              stopColor = stop._color,\n              alpha = stopColor.getAlpha(),\n              offset = stop._offset;\n          attrs = {\n            offset: offset == null ? i / (l - 1) : offset\n          };\n          if (stopColor) attrs['stop-color'] = stopColor.toCSS(true);\n          if (alpha < 1) attrs['stop-opacity'] = alpha;\n          gradientNode.appendChild(SvgElement.create('stop', attrs, formatter));\n        }\n\n        setDefinition(color, gradientNode, 'color');\n      }\n\n      return 'url(#' + gradientNode.id + ')';\n    }\n\n    function exportText(item) {\n      var node = SvgElement.create('text', getTransform(item._matrix, true), formatter);\n      node.textContent = item._content;\n      return node;\n    }\n\n    var exporters = {\n      Group: exportGroup,\n      Layer: exportGroup,\n      Raster: exportRaster,\n      Path: exportPath,\n      Shape: exportShape,\n      CompoundPath: exportCompoundPath,\n      SymbolItem: exportSymbolItem,\n      PointText: exportText\n    };\n\n    function applyStyle(item, node, isRoot) {\n      var attrs = {},\n          parent = !isRoot && item.getParent(),\n          style = [];\n      if (item._name != null) attrs.id = item._name;\n      Base.each(SvgStyles, function (entry) {\n        var get = entry.get,\n            type = entry.type,\n            value = item[get]();\n\n        if (entry.exportFilter ? entry.exportFilter(item, value) : !parent || !Base.equals(parent[get](), value)) {\n          if (type === 'color' && value != null) {\n            var alpha = value.getAlpha();\n            if (alpha < 1) attrs[entry.attribute + '-opacity'] = alpha;\n          }\n\n          if (type === 'style') {\n            style.push(entry.attribute + ': ' + value);\n          } else {\n            attrs[entry.attribute] = value == null ? 'none' : type === 'color' ? value.gradient ? exportGradient(value, item) : value.toCSS(true) : type === 'array' ? value.join(',') : type === 'lookup' ? entry.toSVG[value] : value;\n          }\n        }\n      });\n      if (style.length) attrs.style = style.join(';');\n      if (attrs.opacity === 1) delete attrs.opacity;\n      if (!item._visible) attrs.visibility = 'hidden';\n      return SvgElement.set(node, attrs, formatter);\n    }\n\n    var definitions;\n\n    function getDefinition(item, type) {\n      if (!definitions) definitions = {\n        ids: {},\n        svgs: {}\n      };\n      return item && definitions.svgs[type + '-' + (item._id || item.__id || (item.__id = UID.get('svg')))];\n    }\n\n    function setDefinition(item, node, type) {\n      if (!definitions) getDefinition();\n      var typeId = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n      node.id = type + '-' + typeId;\n      definitions.svgs[type + '-' + (item._id || item.__id)] = node;\n    }\n\n    function exportDefinitions(node, options) {\n      var svg = node,\n          defs = null;\n\n      if (definitions) {\n        svg = node.nodeName.toLowerCase() === 'svg' && node;\n\n        for (var i in definitions.svgs) {\n          if (!defs) {\n            if (!svg) {\n              svg = SvgElement.create('svg');\n              svg.appendChild(node);\n            }\n\n            defs = svg.insertBefore(SvgElement.create('defs'), svg.firstChild);\n          }\n\n          defs.appendChild(definitions.svgs[i]);\n        }\n\n        definitions = null;\n      }\n\n      return options.asString ? new self.XMLSerializer().serializeToString(svg) : svg;\n    }\n\n    function _exportSVG(item, options, isRoot) {\n      var exporter = exporters[item._class],\n          node = exporter && exporter(item, options);\n\n      if (node) {\n        var onExport = options.onExport;\n        if (onExport) node = onExport(item, node, options) || node;\n        var data = JSON.stringify(item._data);\n        if (data && data !== '{}' && data !== 'null') node.setAttribute('data-paper-data', data);\n      }\n\n      return node && applyStyle(item, node, isRoot);\n    }\n\n    function setOptions(options) {\n      if (!options) options = {};\n      formatter = new Formatter(options.precision);\n      return options;\n    }\n\n    Item.inject({\n      exportSVG: function exportSVG(options) {\n        options = setOptions(options);\n        return exportDefinitions(_exportSVG(this, options, true), options);\n      }\n    });\n    Project.inject({\n      exportSVG: function exportSVG(options) {\n        options = setOptions(options);\n        var children = this._children,\n            view = this.getView(),\n            bounds = Base.pick(options.bounds, 'view'),\n            mx = options.matrix || bounds === 'view' && view._matrix,\n            matrix = mx && Matrix.read([mx]),\n            rect = bounds === 'view' ? new _Rectangle([0, 0], view.getViewSize()) : bounds === 'content' ? Item._getBounds(children, matrix, {\n          stroke: true\n        }).rect : _Rectangle.read([bounds], 0, {\n          readNull: true\n        }),\n            attrs = {\n          version: '1.1',\n          xmlns: SvgElement.svg,\n          'xmlns:xlink': SvgElement.xlink\n        };\n\n        if (rect) {\n          attrs.width = rect.width;\n          attrs.height = rect.height;\n          if (rect.x || rect.x === 0 || rect.y || rect.y === 0) attrs.viewBox = formatter.rectangle(rect);\n        }\n\n        var node = SvgElement.create('svg', attrs, formatter),\n            parent = node;\n\n        if (matrix && !matrix.isIdentity()) {\n          parent = node.appendChild(SvgElement.create('g', getTransform(matrix), formatter));\n        }\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          parent.appendChild(_exportSVG(children[i], options, true));\n        }\n\n        return exportDefinitions(node, options);\n      }\n    });\n  }();\n  new function () {\n    var definitions = {},\n        rootSize;\n\n    function getValue(node, name, isString, allowNull, allowPercent, defaultValue) {\n      var value = SvgElement.get(node, name) || defaultValue,\n          res = value == null ? allowNull ? null : isString ? '' : 0 : isString ? value : parseFloat(value);\n      return /%\\s*$/.test(value) ? res / 100 * (allowPercent ? 1 : rootSize[/x|^width/.test(name) ? 'width' : 'height']) : res;\n    }\n\n    function getPoint(node, x, y, allowNull, allowPercent, defaultX, defaultY) {\n      x = getValue(node, x || 'x', false, allowNull, allowPercent, defaultX);\n      y = getValue(node, y || 'y', false, allowNull, allowPercent, defaultY);\n      return allowNull && (x == null || y == null) ? null : new Point(x, y);\n    }\n\n    function getSize(node, w, h, allowNull, allowPercent) {\n      w = getValue(node, w || 'width', false, allowNull, allowPercent);\n      h = getValue(node, h || 'height', false, allowNull, allowPercent);\n      return allowNull && (w == null || h == null) ? null : new Size(w, h);\n    }\n\n    function convertValue(value, type, lookup) {\n      return value === 'none' ? null : type === 'number' ? parseFloat(value) : type === 'array' ? value ? value.split(/[\\s,]+/g).map(parseFloat) : [] : type === 'color' ? getDefinition(value) || value : type === 'lookup' ? lookup[value] : value;\n    }\n\n    function importGroup(node, type, options, isRoot) {\n      var nodes = node.childNodes,\n          isClip = type === 'clippath',\n          isDefs = type === 'defs',\n          item = new Group(),\n          project = item._project,\n          currentStyle = project._currentStyle,\n          children = [];\n\n      if (!isClip && !isDefs) {\n        item = applyAttributes(item, node, isRoot);\n        project._currentStyle = item._style.clone();\n      }\n\n      if (isRoot) {\n        var defs = node.querySelectorAll('defs');\n\n        for (var i = 0, l = defs.length; i < l; i++) {\n          importNode(defs[i], options, false);\n        }\n      }\n\n      for (var i = 0, l = nodes.length; i < l; i++) {\n        var childNode = nodes[i],\n            child;\n        if (childNode.nodeType === 1 && !/^defs$/i.test(childNode.nodeName) && (child = importNode(childNode, options, false)) && !(child instanceof SymbolDefinition)) children.push(child);\n      }\n\n      item.addChildren(children);\n      if (isClip) item = applyAttributes(item.reduce(), node, isRoot);\n      project._currentStyle = currentStyle;\n\n      if (isClip || isDefs) {\n        item.remove();\n        item = null;\n      }\n\n      return item;\n    }\n\n    function importPoly(node, type) {\n      var coords = node.getAttribute('points').match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n          points = [];\n\n      for (var i = 0, l = coords.length; i < l; i += 2) {\n        points.push(new Point(parseFloat(coords[i]), parseFloat(coords[i + 1])));\n      }\n\n      var path = new Path(points);\n      if (type === 'polygon') path.closePath();\n      return path;\n    }\n\n    function importPath(node) {\n      return PathItem.create(node.getAttribute('d'));\n    }\n\n    function importGradient(node, type) {\n      var id = (getValue(node, 'href', true) || '').substring(1),\n          radial = type === 'radialgradient',\n          gradient;\n\n      if (id) {\n        gradient = definitions[id].getGradient();\n\n        if (gradient._radial ^ radial) {\n          gradient = gradient.clone();\n          gradient._radial = radial;\n        }\n      } else {\n        var nodes = node.childNodes,\n            stops = [];\n\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          var child = nodes[i];\n          if (child.nodeType === 1) stops.push(applyAttributes(new GradientStop(), child));\n        }\n\n        gradient = new Gradient(stops, radial);\n      }\n\n      var origin,\n          destination,\n          highlight,\n          scaleToBounds = getValue(node, 'gradientUnits', true) !== 'userSpaceOnUse';\n\n      if (radial) {\n        origin = getPoint(node, 'cx', 'cy', false, scaleToBounds, '50%', '50%');\n        destination = origin.add(getValue(node, 'r', false, false, scaleToBounds, '50%'), 0);\n        highlight = getPoint(node, 'fx', 'fy', true, scaleToBounds);\n      } else {\n        origin = getPoint(node, 'x1', 'y1', false, scaleToBounds, '0%', '0%');\n        destination = getPoint(node, 'x2', 'y2', false, scaleToBounds, '100%', '0%');\n      }\n\n      var color = applyAttributes(new Color(gradient, origin, destination, highlight), node);\n      color._scaleToBounds = scaleToBounds;\n      return null;\n    }\n\n    var importers = {\n      '#document': function document(node, type, options, isRoot) {\n        var nodes = node.childNodes;\n\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          var child = nodes[i];\n          if (child.nodeType === 1) return importNode(child, options, isRoot);\n        }\n      },\n      g: importGroup,\n      svg: importGroup,\n      clippath: importGroup,\n      polygon: importPoly,\n      polyline: importPoly,\n      path: importPath,\n      lineargradient: importGradient,\n      radialgradient: importGradient,\n      image: function image(node) {\n        var raster = new Raster(getValue(node, 'href', true));\n        raster.on('load', function () {\n          var size = getSize(node);\n          this.setSize(size);\n          var center = getPoint(node).add(size.divide(2));\n\n          this._matrix.append(new Matrix().translate(center));\n        });\n        return raster;\n      },\n      symbol: function symbol(node, type, options, isRoot) {\n        return new SymbolDefinition(importGroup(node, type, options, isRoot), true);\n      },\n      defs: importGroup,\n      use: function use(node) {\n        var id = (getValue(node, 'href', true) || '').substring(1),\n            definition = definitions[id],\n            point = getPoint(node);\n        return definition ? definition instanceof SymbolDefinition ? definition.place(point) : definition.clone().translate(point) : null;\n      },\n      circle: function circle(node) {\n        return new Shape.Circle(getPoint(node, 'cx', 'cy'), getValue(node, 'r'));\n      },\n      ellipse: function ellipse(node) {\n        return new Shape.Ellipse({\n          center: getPoint(node, 'cx', 'cy'),\n          radius: getSize(node, 'rx', 'ry')\n        });\n      },\n      rect: function rect(node) {\n        return new Shape.Rectangle(new _Rectangle(getPoint(node), getSize(node)), getSize(node, 'rx', 'ry'));\n      },\n      line: function line(node) {\n        return new Path.Line(getPoint(node, 'x1', 'y1'), getPoint(node, 'x2', 'y2'));\n      },\n      text: function text(node) {\n        var text = new PointText(getPoint(node).add(getPoint(node, 'dx', 'dy')));\n        text.setContent(node.textContent.trim() || '');\n        return text;\n      },\n      switch: importGroup\n    };\n\n    function applyTransform(item, value, name, node) {\n      if (item.transform) {\n        var transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n            matrix = new Matrix();\n\n        for (var i = 0, l = transforms.length; i < l; i++) {\n          var transform = transforms[i];\n          if (!transform) break;\n          var parts = transform.split(/\\(\\s*/),\n              command = parts[0],\n              v = parts[1].split(/[\\s,]+/g);\n\n          for (var j = 0, m = v.length; j < m; j++) {\n            v[j] = parseFloat(v[j]);\n          }\n\n          switch (command) {\n            case 'matrix':\n              matrix.append(new Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n              break;\n\n            case 'rotate':\n              matrix.rotate(v[0], v[1] || 0, v[2] || 0);\n              break;\n\n            case 'translate':\n              matrix.translate(v[0], v[1] || 0);\n              break;\n\n            case 'scale':\n              matrix.scale(v);\n              break;\n\n            case 'skewX':\n              matrix.skew(v[0], 0);\n              break;\n\n            case 'skewY':\n              matrix.skew(0, v[0]);\n              break;\n          }\n        }\n\n        item.transform(matrix);\n      }\n    }\n\n    function applyOpacity(item, value, name) {\n      var key = name === 'fill-opacity' ? 'getFillColor' : 'getStrokeColor',\n          color = item[key] && item[key]();\n      if (color) color.setAlpha(parseFloat(value));\n    }\n\n    var attributes = Base.set(Base.each(SvgStyles, function (entry) {\n      this[entry.attribute] = function (item, value) {\n        if (item[entry.set]) {\n          item[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\n          if (entry.type === 'color') {\n            var color = item[entry.get]();\n\n            if (color) {\n              if (color._scaleToBounds) {\n                var bounds = item.getBounds();\n                color.transform(new Matrix().translate(bounds.getPoint()).scale(bounds.getSize()));\n              }\n            }\n          }\n        }\n      };\n    }, {}), {\n      id: function id(item, value) {\n        definitions[value] = item;\n        if (item.setName) item.setName(value);\n      },\n      'clip-path': function clipPath(item, value) {\n        var clip = getDefinition(value);\n\n        if (clip) {\n          clip = clip.clone();\n          clip.setClipMask(true);\n\n          if (item instanceof Group) {\n            item.insertChild(0, clip);\n          } else {\n            return new Group(clip, item);\n          }\n        }\n      },\n      gradientTransform: applyTransform,\n      transform: applyTransform,\n      'fill-opacity': applyOpacity,\n      'stroke-opacity': applyOpacity,\n      visibility: function visibility(item, value) {\n        if (item.setVisible) item.setVisible(value === 'visible');\n      },\n      display: function display(item, value) {\n        if (item.setVisible) item.setVisible(value !== null);\n      },\n      'stop-color': function stopColor(item, value) {\n        if (item.setColor) item.setColor(value);\n      },\n      'stop-opacity': function stopOpacity(item, value) {\n        if (item._color) item._color.setAlpha(parseFloat(value));\n      },\n      offset: function offset(item, value) {\n        if (item.setOffset) {\n          var percent = value.match(/(.*)%$/);\n          item.setOffset(percent ? percent[1] / 100 : parseFloat(value));\n        }\n      },\n      viewBox: function viewBox(item, value, name, node, styles) {\n        var rect = new _Rectangle(convertValue(value, 'array')),\n            size = getSize(node, null, null, true),\n            group,\n            matrix;\n\n        if (item instanceof Group) {\n          var scale = size ? size.divide(rect.getSize()) : 1,\n              matrix = new Matrix().scale(scale).translate(rect.getPoint().negate());\n          group = item;\n        } else if (item instanceof SymbolDefinition) {\n          if (size) rect.setSize(size);\n          group = item._item;\n        }\n\n        if (group) {\n          if (getAttribute(node, 'overflow', styles) !== 'visible') {\n            var clip = new Shape.Rectangle(rect);\n            clip.setClipMask(true);\n            group.addChild(clip);\n          }\n\n          if (matrix) group.transform(matrix);\n        }\n      }\n    });\n\n    function getAttribute(node, name, styles) {\n      var attr = node.attributes[name],\n          value = attr && attr.value;\n\n      if (!value && node.style) {\n        var style = Base.camelize(name);\n        value = node.style[style];\n        if (!value && styles.node[style] !== styles.parent[style]) value = styles.node[style];\n      }\n\n      return !value ? undefined : value === 'none' ? null : value;\n    }\n\n    function applyAttributes(item, node, isRoot) {\n      var parent = node.parentNode,\n          styles = {\n        node: DomElement.getStyles(node) || {},\n        parent: !isRoot && !/^defs$/i.test(parent.tagName) && DomElement.getStyles(parent) || {}\n      };\n      Base.each(attributes, function (apply, name) {\n        var value = getAttribute(node, name, styles);\n        item = value !== undefined && apply(item, value, name, node, styles) || item;\n      });\n      return item;\n    }\n\n    function getDefinition(value) {\n      var match = value && value.match(/\\((?:[\"'#]*)([^\"')]+)/),\n          name = match && match[1],\n          res = name && definitions[window ? name.replace(window.location.href.split('#')[0] + '#', '') : name];\n\n      if (res && res._scaleToBounds) {\n        res = res.clone();\n        res._scaleToBounds = true;\n      }\n\n      return res;\n    }\n\n    function importNode(node, options, isRoot) {\n      var type = node.nodeName.toLowerCase(),\n          isElement = type !== '#document',\n          body = document.body,\n          container,\n          parent,\n          next;\n\n      if (isRoot && isElement) {\n        rootSize = paper.getView().getSize();\n        rootSize = getSize(node, null, null, true) || rootSize;\n        container = SvgElement.create('svg', {\n          style: 'stroke-width: 1px; stroke-miterlimit: 10'\n        });\n        parent = node.parentNode;\n        next = node.nextSibling;\n        container.appendChild(node);\n        body.appendChild(container);\n      }\n\n      var settings = paper.settings,\n          applyMatrix = settings.applyMatrix,\n          insertItems = settings.insertItems;\n      settings.applyMatrix = false;\n      settings.insertItems = false;\n      var importer = importers[type],\n          item = importer && importer(node, type, options, isRoot) || null;\n      settings.insertItems = insertItems;\n      settings.applyMatrix = applyMatrix;\n\n      if (item) {\n        if (isElement && !(item instanceof Group)) item = applyAttributes(item, node, isRoot);\n        var onImport = options.onImport,\n            data = isElement && node.getAttribute('data-paper-data');\n        if (onImport) item = onImport(node, item, options) || item;\n\n        if (options.expandShapes && item instanceof Shape) {\n          item.remove();\n          item = item.toPath();\n        }\n\n        if (data) item._data = JSON.parse(data);\n      }\n\n      if (container) {\n        body.removeChild(container);\n\n        if (parent) {\n          if (next) {\n            parent.insertBefore(node, next);\n          } else {\n            parent.appendChild(node);\n          }\n        }\n      }\n\n      if (isRoot) {\n        definitions = {};\n        if (item && Base.pick(options.applyMatrix, applyMatrix)) item.matrix.apply(true, true);\n      }\n\n      return item;\n    }\n\n    function _importSVG(source, options, owner) {\n      if (!source) return null;\n      options = typeof options === 'function' ? {\n        onLoad: options\n      } : options || {};\n      var scope = paper,\n          item = null;\n\n      function onLoad(svg) {\n        try {\n          var node = typeof svg === 'object' ? svg : new self.DOMParser().parseFromString(svg, 'image/svg+xml');\n\n          if (!node.nodeName) {\n            node = null;\n            throw new Error('Unsupported SVG source: ' + source);\n          }\n\n          paper = scope;\n          item = importNode(node, options, true);\n\n          if (!options || options.insert !== false) {\n            owner._insertItem(undefined, item);\n          }\n\n          var onLoad = options.onLoad;\n          if (onLoad) onLoad(item, svg);\n        } catch (e) {\n          onError(e);\n        }\n      }\n\n      function onError(message, status) {\n        var onError = options.onError;\n\n        if (onError) {\n          onError(message, status);\n        } else {\n          throw new Error(message);\n        }\n      }\n\n      if (typeof source === 'string' && !/^.*</.test(source)) {\n        var node = document.getElementById(source);\n\n        if (node) {\n          onLoad(node);\n        } else {\n          Http.request({\n            url: source,\n            async: true,\n            onLoad: onLoad,\n            onError: onError\n          });\n        }\n      } else if (typeof File !== 'undefined' && source instanceof File) {\n        var reader = new FileReader();\n\n        reader.onload = function () {\n          onLoad(reader.result);\n        };\n\n        reader.onerror = function () {\n          onError(reader.error);\n        };\n\n        return reader.readAsText(source);\n      } else {\n        onLoad(source);\n      }\n\n      return item;\n    }\n\n    Item.inject({\n      importSVG: function importSVG(node, options) {\n        return _importSVG(node, options, this);\n      }\n    });\n    Project.inject({\n      importSVG: function importSVG(node, options) {\n        this.activate();\n        return _importSVG(node, options, this);\n      }\n    });\n  }();\n  var paper = new (PaperScope.inject(Base.exports, {\n    Base: Base,\n    Numerical: Numerical,\n    Key: Key,\n    DomEvent: DomEvent,\n    DomElement: DomElement,\n    document: document,\n    window: window,\n    Symbol: SymbolDefinition,\n    PlacedSymbol: SymbolItem\n  }))();\n\n  if (paper.agent.node) {\n    require('./node/extend.js')(paper);\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define('paper', paper);\n  } else if (typeof module === 'object' && module) {\n    module.exports = paper;\n  }\n\n  return paper;\n}.call(this, typeof self === 'object' ? self : null);","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}"],"sourceRoot":""}