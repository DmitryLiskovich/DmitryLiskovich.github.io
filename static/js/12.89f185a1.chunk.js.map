{"version":3,"sources":["components/Tasks/Task.js","components/Tasks/Droptable.js","components/Tasks/FormTask.js","components/Tasks/TaskPage.js"],"names":["Task","props","react_default","a","createElement","className","title","text","getItemStyle","isDragging","draggableStyle","Object","objectSpread2","zIndex","opacity","getListStyle","isDraggingOver","transition","Droptable","react_beautiful_dnd_esm","droppableId","dropId","provided","snapshot","ref","innerRef","style","concat","state","map","item","index","key","id","draggableId","assign","draggableProps","dragHandleProps","content","placeholder","AddTask","document","Fragment","name","type","value","TaskPage","reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","droppable","toDo","droppable2","onHold","droppable3","inProcess","droppable4","pendingPR","_useState","useState","_useState2","setState","id2List","getList","useEffect","localStorage","getItem","setItem","JSON","stringify","parse","onSubmit","event","preventDefault","counter","parseInt","target","newId","newItems","toConsumableArray","onDragEnd","sourceList","elements","filter","items","stateDrop","newStates"],"mappings":"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","file":"static/js/12.89f185a1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Task(props) {\r\n\treturn(\r\n\t\t<div className='toaster'>\r\n\t\t\t<h2>\r\n\t\t\t\t{props.title}\r\n\t\t\t</h2>\r\n\t\t\t<p>\r\n\t\t\t\t{props.text}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Task from './Task';\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => {\r\n\treturn{\r\n\t\t...draggableStyle,\r\n\t\tzIndex: 100,\r\n\t\topacity: 1,\r\n\t}\r\n};\r\n\r\n\r\nconst getListStyle = (isDraggingOver) => {\r\n\tif(isDraggingOver){\r\n\t\treturn {\r\n\t\t\ttransition: 'ease-in-out all 0.5s',\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\ttransition: 'ease-in-out all 0.5s',\r\n\t};\r\n}\r\n\r\nexport default function Droptable(props){\r\n\treturn(\r\n\t\t<Droppable droppableId={props.dropId}>\r\n\t\t\t{(provided, snapshot) => (\r\n\t\t\t<div className='dropable-field' \r\n\t\t\t\tref={provided.innerRef}\r\n\t\t\t\tstyle={getListStyle(snapshot.isDraggingOver)}>\r\n\t\t\t\t<div className='dropable-field-header'>{props.title}</div>\r\n\t\t\t\t\t\t<div className={`dropable-field-drop ${snapshot.isDraggingOver ? 'over' : ''}`}>\r\n\t\t\t\t\t\t\t{props.state.map((item, index) => (\r\n\t\t\t\t\t\t\t\t<Draggable\r\n\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\tdraggableId={item.id}\r\n\t\t\t\t\t\t\t\t\tindex={index}>\r\n\t\t\t\t\t\t\t\t\t{(provided) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={getItemStyle(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsnapshot.isDragging,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprovided.draggableProps.style\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Task title={item.content.title} text={item.content.text}></Task>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Droppable>\r\n\t);\r\n}","import React from 'react';\r\n\r\nexport default function AddTask(){\r\n\tdocument.title = 'Tasks';\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<br></br>\r\n\t\t\t<label>Enter task title</label>\r\n\t\t\t<input name='text'></input>\r\n\t\t\t<label>Enter task text</label>\r\n\t\t\t<input name='text'></input>\r\n\t\t\t<br></br>\r\n\t\t\t<input type='submit' className='submitButton' value='Add Task'></input>\r\n\t\t\t<br></br>\r\n\t\t\t<br></br>\r\n\t\t</>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport Droptable from './Droptable';\r\nimport AddTask from './FormTask';\r\nimport './task.scss'\r\n\r\nexport default function TaskPage() {\r\n\r\n\tconst reorder = (list, startIndex, endIndex) => {\r\n\t\tconst result = Array.from(list);\r\n\t\tconst [removed] = result.splice(startIndex, 1);\r\n\t\tresult.splice(endIndex, 0, removed);\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst move = (source, destination, droppableSource, droppableDestination) => {\r\n\t\tconst sourceClone = Array.from(source);\r\n\t\tconst destClone = Array.from(destination);\r\n\t\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n\t\tdestClone.splice(droppableDestination.index, 0, removed);\r\n\r\n\t\tconst result = {droppable: state.toDo, droppable2: state.onHold, droppable3: state.inProcess, droppable4: state.pendingPR};\r\n\t\tresult[droppableSource.droppableId] = sourceClone;\r\n\t\tresult[droppableDestination.droppableId] = destClone;\r\n\t\treturn result;\r\n\t};\r\n\r\n\r\n\t\r\n\tconst [state, setState] = useState({\r\n\t\ttoDo: [],\r\n\t\tonHold: [],\r\n\t\tinProcess: [],\r\n\t\tpendingPR: [],\r\n\t});\r\n\r\n\tconst id2List = {\r\n\t\tdroppable: 'toDo',\r\n\t\tdroppable2: 'onHold',\r\n\t\tdroppable3: 'inProcess',\r\n\t\tdroppable4: 'pendingPR',\r\n\t};\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(!localStorage.getItem('counter')){\r\n\t\t\tlocalStorage.setItem('counter', '0');\r\n\t\t}\r\n\r\n\t\tif(!localStorage.getItem('data')){\r\n\t\t\tlocalStorage.setItem('data', JSON.stringify(state));\r\n\t\t}\r\n\r\n\t\tsetState(JSON.parse(localStorage.getItem('data')));\r\n\t}, []);\r\n\r\n\tfunction getList(id){ \r\n\t\treturn state[id2List[id]];\r\n\t}\r\n\r\n\tfunction onDragEnd(result) {\r\n\t\tconst { source, destination } = result;\r\n\r\n\t\tif (!destination) {\r\n\t\t\tconst sourceList = id2List[result.source.droppableId];\r\n\t\t\tconst elements = state;\r\n\t\t\telements[sourceList] = elements[sourceList].filter((item) => item.id !== result.draggableId);\r\n\t\t\tlocalStorage.setItem('data', JSON.stringify(elements));\r\n\t\t\tsetState(JSON.parse(localStorage.getItem('data')));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (source.droppableId === destination.droppableId) {\r\n\t\t\tconst items = reorder(\r\n\t\t\t\tgetList(source.droppableId),\r\n\t\t\t\tsource.index,\r\n\t\t\t\tdestination.index\r\n\t\t\t);\r\n\r\n\t\t\tlet stateDrop = {...state ,toDo: items};\r\n\t\t\tif (source.droppableId === 'droppable2' ) {\r\n\t\t\t\tstateDrop = { ...state, onHold: items };\r\n\t\t\t}\r\n\t\t\tif (source.droppableId === 'droppable3' ) {\r\n\t\t\t\tstateDrop = { ...state, inProcess: items };\r\n\t\t\t}\r\n\t\t\tif (source.droppableId === 'droppable4' ) {\r\n\t\t\t\tstateDrop = { ...state, pendingPR: items };\r\n\t\t\t}\r\n\t\t\tlocalStorage.setItem('data', JSON.stringify(stateDrop));\r\n\t\t\tsetState(JSON.parse(localStorage.getItem('data')));\r\n\t\t} else {\r\n\t\t\tconst result = move(\r\n\t\t\t\tgetList(source.droppableId),\r\n\t\t\t\tgetList(destination.droppableId),\r\n\t\t\t\tsource,\r\n\t\t\t\tdestination\r\n\t\t\t);\r\n\t\t\tconst newStates = {\r\n\t\t\t\ttoDo: result.droppable,\r\n\t\t\t\tonHold: result.droppable2,\r\n\t\t\t\tinProcess: result.droppable3,\r\n\t\t\t\tpendingPR: result.droppable4,\r\n\t\t\t};\r\n\t\t\tlocalStorage.setItem('data', JSON.stringify(newStates));\r\n\t\t\tsetState(JSON.parse(localStorage.getItem('data')));\r\n\t\t}\r\n\t};\r\n\r\n\tfunction addNewTask(event){\r\n\t\tevent.preventDefault();\r\n\t\tlet counter = parseInt(localStorage.getItem('counter'));\r\n\t\tif(!event.target[0].value || !event.target[1].value ) return;\r\n\t\tconst newId = 'task-' + counter++;\r\n\t\tlocalStorage.setItem('counter', JSON.stringify(counter));\r\n\t\tconst newItems = [...state.toDo, {id: newId, content: {title: event.target[0].value, text: event.target[1].value}}];\r\n\t\tlocalStorage.setItem('data', JSON.stringify({...state, toDo: newItems}));\r\n\t\tsetState(JSON.parse(localStorage.getItem('data')));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='task-form'>\r\n\t\t\t\t<form onSubmit={addNewTask}>\r\n\t\t\t\t\t<AddTask></AddTask>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t\t<div className='dropable'>\r\n\t\t\t\t\t<Droptable title='To Do' zIndex={1} state={state.toDo} dropId ={'droppable'}></Droptable>\r\n\t\t\t\t\t<Droptable title='On hold' zIndex={2} state={state.onHold} dropId ={'droppable2'}></Droptable>\r\n\t\t\t\t\t<Droptable title='In process' zIndex={3} state={state.inProcess} dropId ={'droppable3'}></Droptable>\r\n\t\t\t\t\t<Droptable title='Pending PR' zIndex={4} state={state.pendingPR} dropId ={'droppable4'}></Droptable>\r\n\t\t\t\t</div>\r\n\t\t\t</DragDropContext>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"sourceRoot":""}